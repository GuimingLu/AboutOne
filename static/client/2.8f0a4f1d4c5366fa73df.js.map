{"version":3,"sources":["webpack:///./mattermost-redux/actions/timezone.js","webpack:///./actions/views/mfa.js","webpack:///./components/audit_table/audit_table.jsx","webpack:///./components/audit_table/index.js","webpack:///./components/activity_log_modal/components/more_info.jsx","webpack:///./components/activity_log_modal/components/activity_log.jsx","webpack:///./components/activity_log_modal/activity_log_modal.jsx","webpack:///./components/activity_log_modal/index.js","webpack:///./components/access_history_modal/access_history_modal.jsx","webpack:///./components/access_history_modal/index.js"],"names":["Object","defineProperty","exports","value","autoUpdateTimezone","require","_users","_timezone","_users2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","configurable","writable","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","err","undefined","deviceTimezone","_ref","regeneratorRuntime","mark","_callee","dispatch","getState","currentUer","currentTimezone","newTimezoneExists","timezone","updatedUser","wrap","_callee$","_context","prev","next","getCurrentUser","getUserTimezone","id","automaticTimezone","useAutomaticTimezone","manualTimezone","updateMe","stop","_x","_x2","activateMfa","code","currentUserId","getCurrentUserId","UserActions","deactivateMfa","generateMfaSecret","holders","defineMessages","sessionRevoked","t","defaultMessage","channelCreated","establishedDM","nameUpdated","headerUpdated","channelDeleted","userAdded","userRemoved","attemptedRegisterApp","attemptedAllowOAuthAccess","successfullOAuthAccess","failedOAuthAccess","attemptedOAuthToken","successfullOAuthToken","oauthTokenFailed","attemptedLogin","authenticated","defauleMessage","successfullLogin","failedLogin","updatePicture","updateGeneral","attemptedPassword","successfullPassword","failedPassword","updatedRol","member","accountActive","accountInactive","by","byAdmin","sentEmail","attemptedReset","successfullReset","updateGlobalNotifications","attemptedWebhookCreate","succcessfullWebhookCreate","failedWebhookCreate","attemptedWebhookDelete","successfullWebhookDelete","failedWebhookDelete","logout","verified","revokedAll","loginAttempt","loginFailure","attemptedLicenseAdd","successfullLicenseAdd","failedExpiredLicenseAdd","failedInvalidLicenseAdd","licenseRemoved","AuditTable","props","accessList","formatMessage","intl","audits","audit","auditInfo","formatAuditInfo","currentUser","getByName","getUser","uContent","showUserId","profile","userId","data","email","iContent","showIp","ip","sContent","showSession","sessionId","descStyle","desc","toLowerCase","indexOf","timestamp","userIdContent","ipContent","sessionContent","propTypes","intlShape","isRequired","PropTypes","array","bool","func","injectIntl","actionURL","action","replace","auditDesc","channelInfo","extra_info","split","channelNameField","channelURL","channelObj","channelName","display_name","username","getDirectTeammate","userIdField","test","url","oauthInfo","clientIdField","oauthTokenFailure","trim","token","userInfo","userRoles","updateType","updateField","actingUserInfo","actingUser","user","isSystemAdmin","roles","webhookInfo","licenseInfo","toTitleCase","actionDesc","lastIndexOf","substring","extraInfoDesc","date","Date","create_at","user_id","ip_address","session_id","mapStateToProps","state","getChannelByName","connect","MoreInfo","locale","currentSession","moreInfo","handleMoreInfo","firstAccessTime","getMonthLong","time","os","browser","string","ActivityLog","React","PureComponent","constructor","setState","e","submitRevoke","session","device_id","includes","deviceTypeId","deviceTypeMessage","devicePicture","deviceTitle","localizeMessage","General","PUSH_NOTIFY_APPLE_REACT_NATIVE","PUSH_NOTIFY_ANDROID_REACT_NATIVE","devicePlatform","render","index","lastAccessTime","last_activity_at","platform","isMobileSession","sessionInfo","mobileSessionInfo","number","ActivityLogModal","altId","preventDefault","modalContent","$","closest","addClass","setTimeout","removeClass","actions","revokeSession","getSessions","isMobile","perfectScrollbar","show","componentDidMount","onShow","content","sessions","loading","activityList","reduce","type","onHide","oneOfType","shape","getUserSessions","getCurrentLocale","mapDispatchToProps","bindActionCreators","AccessHistoryModal","getUserAudits","userAudits","getCurrentUserAudits"],"mappings":";;;;;;AAAa;;AAEbA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,OAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B;;AAEAC,mBAAO,CAAC,EAAD,CAAP;;AAEAA,mBAAO,CAAC,EAAD,CAAP;;AAEAA,mBAAO,CAAC,EAAD,CAAP;;AAEAA,mBAAO,CAAC,EAAD,CAAP;;AAEAA,mBAAO,CAAC,EAAD,CAAP;;AAEAA,mBAAO,CAAC,EAAD,CAAP;;AAEA,IAAIC,MAAM,GAAGD,mBAAO,CAAC,EAAD,CAApB;;AAEA,IAAIE,SAAS,GAAGF,mBAAO,CAAC,GAAD,CAAvB;;AAEA,IAAIG,OAAO,GAAGH,mBAAO,CAAC,EAAD,CAArB;;AAEA,SAASI,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGZ,MAAM,CAACY,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIV,MAAM,CAACa,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGd,MAAM,CAACa,qBAAP,CAA6BH,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBG,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOhB,MAAM,CAACiB,wBAAP,CAAgCP,MAAhC,EAAwCM,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GN,QAAI,CAACO,IAAL,CAAUC,KAAV,CAAgBR,IAAhB,EAAsBE,OAAtB;AAAiC;;AAAC,SAAOF,IAAP;AAAc;;AAErV,SAASS,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEd,aAAO,CAACiB,MAAD,EAAS,IAAT,CAAP,CAAsBC,OAAtB,CAA8B,UAAUC,GAAV,EAAe;AAAEC,uBAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAA3F;AAA+F,KAA5G,MAAkH,IAAI5B,MAAM,CAAC8B,yBAAX,EAAsC;AAAE9B,YAAM,CAAC+B,gBAAP,CAAwBT,MAAxB,EAAgCtB,MAAM,CAAC8B,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAEjB,aAAO,CAACiB,MAAD,CAAP,CAAgBC,OAAhB,CAAwB,UAAUC,GAAV,EAAe;AAAE5B,cAAM,CAACC,cAAP,CAAsBqB,MAAtB,EAA8BM,GAA9B,EAAmC5B,MAAM,CAACiB,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAA5H;AAAgI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEtgB,SAASO,eAAT,CAAyBG,GAAzB,EAA8BJ,GAA9B,EAAmCzB,KAAnC,EAA0C;AAAE,MAAIyB,GAAG,IAAII,GAAX,EAAgB;AAAEhC,UAAM,CAACC,cAAP,CAAsB+B,GAAtB,EAA2BJ,GAA3B,EAAgC;AAAEzB,WAAK,EAAEA,KAAT;AAAgBe,gBAAU,EAAE,IAA5B;AAAkCe,kBAAY,EAAE,IAAhD;AAAsDC,cAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEF,OAAG,CAACJ,GAAD,CAAH,GAAWzB,KAAX;AAAmB;;AAAC,SAAO6B,GAAP;AAAa;;AAEjN,SAASG,kBAAT,CAA4BC,GAA5B,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAkDC,KAAlD,EAAyDC,MAAzD,EAAiEZ,GAAjE,EAAsEa,GAAtE,EAA2E;AAAE,MAAI;AAAE,QAAIC,IAAI,GAAGN,GAAG,CAACR,GAAD,CAAH,CAASa,GAAT,CAAX;AAA0B,QAAItC,KAAK,GAAGuC,IAAI,CAACvC,KAAjB;AAAyB,GAAzD,CAA0D,OAAOwC,KAAP,EAAc;AAAEL,UAAM,CAACK,KAAD,CAAN;AAAe;AAAS;;AAAC,MAAID,IAAI,CAACE,IAAT,EAAe;AAAEP,WAAO,CAAClC,KAAD,CAAP;AAAiB,GAAlC,MAAwC;AAAE0C,WAAO,CAACR,OAAR,CAAgBlC,KAAhB,EAAuB2C,IAAvB,CAA4BP,KAA5B,EAAmCC,MAAnC;AAA6C;AAAE;;AAEzQ,SAASO,iBAAT,CAA2BC,EAA3B,EAA+B;AAAE,SAAO,YAAY;AAAE,QAAIC,IAAI,GAAG,IAAX;AAAA,QAAiBC,IAAI,GAAG1B,SAAxB;AAAmC,WAAO,IAAIqB,OAAJ,CAAY,UAAUR,OAAV,EAAmBC,MAAnB,EAA2B;AAAE,UAAIF,GAAG,GAAGY,EAAE,CAAC5B,KAAH,CAAS6B,IAAT,EAAeC,IAAf,CAAV;;AAAgC,eAASX,KAAT,CAAepC,KAAf,EAAsB;AAAEgC,0BAAkB,CAACC,GAAD,EAAMC,OAAN,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC,MAAtC,EAA8CrC,KAA9C,CAAlB;AAAyE;;AAAC,eAASqC,MAAT,CAAgBW,GAAhB,EAAqB;AAAEhB,0BAAkB,CAACC,GAAD,EAAMC,OAAN,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC,OAAtC,EAA+CW,GAA/C,CAAlB;AAAwE;;AAACZ,WAAK,CAACa,SAAD,CAAL;AAAmB,KAA9R,CAAP;AAAyS,GAAjW;AAAoW;;AAErY,SAAShD,kBAAT,CAA4BiD;AAC5B;AADA,EAEE;AACA;AACE;AACA,gBAAY;AACV,UAAIC,IAAI,GAAGP,iBAAiB;AAC5B;AACAQ,wBAAkB,CAACC,IAAnB,CAAwB,SAASC,OAAT,CAAiBC;AACzC;AADwB,QAEtBC;AACF;AAHwB,QAItB;AACA,YAAIC,UAAJ,EAAgBC,eAAhB,EAAiCC,iBAAjC,EAAoDC,QAApD,EAA8DC,WAA9D;AACA,eAAOT,kBAAkB,CAACU,IAAnB,CAAwB,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AACzD,iBAAO,CAAP,EAAU;AACR,oBAAQA,QAAQ,CAACC,IAAT,GAAgBD,QAAQ,CAACE,IAAjC;AACE,mBAAK,CAAL;AACET,0BAAU,GAAG,CAAC,GAAGtD,MAAM,CAACgE,cAAX,EAA2BX,QAAQ,EAAnC,CAAb;AACAE,+BAAe,GAAG,CAAC,GAAGtD,SAAS,CAACgE,eAAd,EAA+BZ,QAAQ,EAAvC,EAA2CC,UAAU,CAACY,EAAtD,CAAlB;AACAV,iCAAiB,GAAGD,eAAe,CAACY,iBAAhB,KAAsCpB,cAA1D;;AAEA,oBAAIQ,eAAe,CAACa,oBAAhB,IAAwCZ,iBAA5C,EAA+D;AAC7DC,0BAAQ,GAAG;AACTW,wCAAoB,EAAE,MADb;AAETD,qCAAiB,EAAEpB,cAFV;AAGTsB,kCAAc,EAAEd,eAAe,CAACc;AAHvB,mBAAX;AAKAX,6BAAW,GAAG3C,aAAa,CAAC,EAAD,EAAKuC,UAAL,EAAiB;AAC1CG,4BAAQ,EAAEA;AADgC,mBAAjB,CAA3B;AAGA,mBAAC,GAAGvD,OAAO,CAACoE,QAAZ,EAAsBZ,WAAtB,EAAmCN,QAAnC,EAA6CC,QAA7C;AACD;;AAEH,mBAAK,CAAL;AACA,mBAAK,KAAL;AACE,uBAAOQ,QAAQ,CAACU,IAAT,EAAP;AApBJ;AAsBD;AACF,SAzBM,EAyBJpB,OAzBI,CAAP;AA0BD,OAhCD,CAF4B,CAA5B;;AAoCA,aAAO,UAAUqB,EAAV,EAAcC,GAAd,EAAmB;AACxB,eAAOzB,IAAI,CAAClC,KAAL,CAAW,IAAX,EAAiBI,SAAjB,CAAP;AACD,OAFD;AAGD,KAxCD;AAFF;AA4CD,C;;;;;;;;AClFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEO,SAASwD,WAAT,CAAqBC,IAArB,EAA2B;AAC9B,SAAO,CAACvB,QAAD,EAAWC,QAAX,KAAwB;AAC3B,UAAMuB,aAAa,GAAGC,kGAAgB,CAACxB,QAAQ,EAAT,CAAtC;AAEA,WAAOD,QAAQ,CAAC0B,4EAAA,CAA0BF,aAA1B,EAAyC,IAAzC,EAA+CD,IAA/C,CAAD,CAAf;AACH,GAJD;AAKH;AAEM,SAASI,aAAT,GAAyB;AAC5B,SAAO,CAAC3B,QAAD,EAAWC,QAAX,KAAwB;AAC3B,UAAMuB,aAAa,GAAGC,kGAAgB,CAACxB,QAAQ,EAAT,CAAtC;AAEA,WAAOD,QAAQ,CAAC0B,4EAAA,CAA0BF,aAA1B,EAAyC,KAAzC,CAAD,CAAf;AACH,GAJD;AAKH;AAEM,SAASI,iBAAT,GAA6B;AAChC,SAAO,CAAC5B,QAAD,EAAWC,QAAX,KAAwB;AAC3B,UAAMuB,aAAa,GAAGC,kGAAgB,CAACxB,QAAQ,EAAT,CAAtC;AAEA,WAAOD,QAAQ,CAAC0B,gFAAA,CAA8BF,aAA9B,CAAD,CAAf;AACH,GAJD;AAKH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BD;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA,MAAMK,OAAO,GAAGC,0CAAc,CAAC;AAC3BC,gBAAc,EAAE;AACZjB,MAAE,EAAEkB,yBAAC,CAAC,4BAAD,CADO;AAEZC,kBAAc,EAAE;AAFJ,GADW;AAK3BC,gBAAc,EAAE;AACZpB,MAAE,EAAEkB,yBAAC,CAAC,4BAAD,CADO;AAEZC,kBAAc,EAAE;AAFJ,GALW;AAS3BE,eAAa,EAAE;AACXrB,MAAE,EAAEkB,yBAAC,CAAC,2BAAD,CADM;AAEXC,kBAAc,EAAE;AAFL,GATY;AAa3BG,aAAW,EAAE;AACTtB,MAAE,EAAEkB,yBAAC,CAAC,yBAAD,CADI;AAETC,kBAAc,EAAE;AAFP,GAbc;AAiB3BI,eAAa,EAAE;AACXvB,MAAE,EAAEkB,yBAAC,CAAC,2BAAD,CADM;AAEXC,kBAAc,EAAE;AAFL,GAjBY;AAqB3BK,gBAAc,EAAE;AACZxB,MAAE,EAAEkB,yBAAC,CAAC,4BAAD,CADO;AAEZC,kBAAc,EAAE;AAFJ,GArBW;AAyB3BM,WAAS,EAAE;AACPzB,MAAE,EAAEkB,yBAAC,CAAC,uBAAD,CADE;AAEPC,kBAAc,EAAE;AAFT,GAzBgB;AA6B3BO,aAAW,EAAE;AACT1B,MAAE,EAAEkB,yBAAC,CAAC,yBAAD,CADI;AAETC,kBAAc,EAAE;AAFP,GA7Bc;AAiC3BQ,sBAAoB,EAAE;AAClB3B,MAAE,EAAEkB,yBAAC,CAAC,kCAAD,CADa;AAElBC,kBAAc,EAAE;AAFE,GAjCK;AAqC3BS,2BAAyB,EAAE;AACvB5B,MAAE,EAAEkB,yBAAC,CAAC,uCAAD,CADkB;AAEvBC,kBAAc,EAAE;AAFO,GArCA;AAyC3BU,wBAAsB,EAAE;AACpB7B,MAAE,EAAEkB,yBAAC,CAAC,oCAAD,CADe;AAEpBC,kBAAc,EAAE;AAFI,GAzCG;AA6C3BW,mBAAiB,EAAE;AACf9B,MAAE,EAAEkB,yBAAC,CAAC,+BAAD,CADU;AAEfC,kBAAc,EAAE;AAFD,GA7CQ;AAiD3BY,qBAAmB,EAAE;AACjB/B,MAAE,EAAEkB,yBAAC,CAAC,iCAAD,CADY;AAEjBC,kBAAc,EAAE;AAFC,GAjDM;AAqD3Ba,uBAAqB,EAAE;AACnBhC,MAAE,EAAEkB,yBAAC,CAAC,mCAAD,CADc;AAEnBC,kBAAc,EAAE;AAFG,GArDI;AAyD3Bc,kBAAgB,EAAE;AACdjC,MAAE,EAAEkB,yBAAC,CAAC,8BAAD,CADS;AAEdC,kBAAc,EAAE;AAFF,GAzDS;AA6D3Be,gBAAc,EAAE;AACZlC,MAAE,EAAEkB,yBAAC,CAAC,4BAAD,CADO;AAEZC,kBAAc,EAAE;AAFJ,GA7DW;AAiE3BgB,eAAa,EAAE;AACXnC,MAAE,EAAEkB,yBAAC,CAAC,2BAAD,CADM;AAEXkB,kBAAc,EAAE;AAFL,GAjEY;AAqE3BC,kBAAgB,EAAE;AACdrC,MAAE,EAAEkB,yBAAC,CAAC,8BAAD,CADS;AAEdC,kBAAc,EAAE;AAFF,GArES;AAyE3BmB,aAAW,EAAE;AACTtC,MAAE,EAAEkB,yBAAC,CAAC,yBAAD,CADI;AAETC,kBAAc,EAAE;AAFP,GAzEc;AA6E3BoB,eAAa,EAAE;AACXvC,MAAE,EAAEkB,yBAAC,CAAC,2BAAD,CADM;AAEXC,kBAAc,EAAE;AAFL,GA7EY;AAiF3BqB,eAAa,EAAE;AACXxC,MAAE,EAAEkB,yBAAC,CAAC,2BAAD,CADM;AAEXC,kBAAc,EAAE;AAFL,GAjFY;AAqF3BsB,mBAAiB,EAAE;AACfzC,MAAE,EAAEkB,yBAAC,CAAC,+BAAD,CADU;AAEfC,kBAAc,EAAE;AAFD,GArFQ;AAyF3BuB,qBAAmB,EAAE;AACjB1C,MAAE,EAAEkB,yBAAC,CAAC,iCAAD,CADY;AAEjBC,kBAAc,EAAE;AAFC,GAzFM;AA6F3BwB,gBAAc,EAAE;AACZ3C,MAAE,EAAEkB,yBAAC,CAAC,4BAAD,CADO;AAEZC,kBAAc,EAAE;AAFJ,GA7FW;AAiG3ByB,YAAU,EAAE;AACR5C,MAAE,EAAEkB,yBAAC,CAAC,wBAAD,CADG;AAERC,kBAAc,EAAE;AAFR,GAjGe;AAqG3B0B,QAAM,EAAE;AACJ7C,MAAE,EAAEkB,yBAAC,CAAC,oBAAD,CADD;AAEJC,kBAAc,EAAE;AAFZ,GArGmB;AAyG3B2B,eAAa,EAAE;AACX9C,MAAE,EAAEkB,yBAAC,CAAC,2BAAD,CADM;AAEXC,kBAAc,EAAE;AAFL,GAzGY;AA6G3B4B,iBAAe,EAAE;AACb/C,MAAE,EAAEkB,yBAAC,CAAC,6BAAD,CADQ;AAEbC,kBAAc,EAAE;AAFH,GA7GU;AAiH3B6B,IAAE,EAAE;AACAhD,MAAE,EAAEkB,yBAAC,CAAC,gBAAD,CADL;AAEAC,kBAAc,EAAE;AAFhB,GAjHuB;AAqH3B8B,SAAO,EAAE;AACLjD,MAAE,EAAEkB,yBAAC,CAAC,qBAAD,CADA;AAELC,kBAAc,EAAE;AAFX,GArHkB;AAyH3B+B,WAAS,EAAE;AACPlD,MAAE,EAAEkB,yBAAC,CAAC,uBAAD,CADE;AAEPC,kBAAc,EAAE;AAFT,GAzHgB;AA6H3BgC,gBAAc,EAAE;AACZnD,MAAE,EAAEkB,yBAAC,CAAC,4BAAD,CADO;AAEZC,kBAAc,EAAE;AAFJ,GA7HW;AAiI3BiC,kBAAgB,EAAE;AACdpD,MAAE,EAAEkB,yBAAC,CAAC,8BAAD,CADS;AAEdC,kBAAc,EAAE;AAFF,GAjIS;AAqI3BkC,2BAAyB,EAAE;AACvBrD,MAAE,EAAEkB,yBAAC,CAAC,uCAAD,CADkB;AAEvBC,kBAAc,EAAE;AAFO,GArIA;AAyI3BmC,wBAAsB,EAAE;AACpBtD,MAAE,EAAEkB,yBAAC,CAAC,oCAAD,CADe;AAEpBC,kBAAc,EAAE;AAFI,GAzIG;AA6I3BoC,2BAAyB,EAAE;AACvBvD,MAAE,EAAEkB,yBAAC,CAAC,sCAAD,CADkB;AAEvBC,kBAAc,EAAE;AAFO,GA7IA;AAiJ3BqC,qBAAmB,EAAE;AACjBxD,MAAE,EAAEkB,yBAAC,CAAC,iCAAD,CADY;AAEjBC,kBAAc,EAAE;AAFC,GAjJM;AAqJ3BsC,wBAAsB,EAAE;AACpBzD,MAAE,EAAEkB,yBAAC,CAAC,oCAAD,CADe;AAEpBC,kBAAc,EAAE;AAFI,GArJG;AAyJ3BuC,0BAAwB,EAAE;AACtB1D,MAAE,EAAEkB,yBAAC,CAAC,sCAAD,CADiB;AAEtBC,kBAAc,EAAE;AAFM,GAzJC;AA6J3BwC,qBAAmB,EAAE;AACjB3D,MAAE,EAAEkB,yBAAC,CAAC,iCAAD,CADY;AAEjBC,kBAAc,EAAE;AAFC,GA7JM;AAiK3ByC,QAAM,EAAE;AACJ5D,MAAE,EAAEkB,yBAAC,CAAC,oBAAD,CADD;AAEJC,kBAAc,EAAE;AAFZ,GAjKmB;AAqK3B0C,UAAQ,EAAE;AACN7D,MAAE,EAAEkB,yBAAC,CAAC,sBAAD,CADC;AAENC,kBAAc,EAAE;AAFV,GArKiB;AAyK3B2C,YAAU,EAAE;AACR9D,MAAE,EAAEkB,yBAAC,CAAC,wBAAD,CADG;AAERC,kBAAc,EAAE;AAFR,GAzKe;AA6K3B4C,cAAY,EAAE;AACV/D,MAAE,EAAEkB,yBAAC,CAAC,0BAAD,CADK;AAEVC,kBAAc,EAAE;AAFN,GA7Ka;AAiL3B6C,cAAY,EAAE;AACVhE,MAAE,EAAEkB,yBAAC,CAAC,0BAAD,CADK;AAEVC,kBAAc,EAAE;AAFN,GAjLa;AAqL3B8C,qBAAmB,EAAE;AACjBjE,MAAE,EAAEkB,yBAAC,CAAC,iCAAD,CADY;AAEjBC,kBAAc,EAAE;AAFC,GArLM;AAyL3B+C,uBAAqB,EAAE;AACnBlE,MAAE,EAAEkB,yBAAC,CAAC,mCAAD,CADc;AAEnBC,kBAAc,EAAE;AAFG,GAzLI;AA6L3BgD,yBAAuB,EAAE;AACrBnE,MAAE,EAAEkB,yBAAC,CAAC,qCAAD,CADgB;AAErBC,kBAAc,EAAE;AAFK,GA7LE;AAiM3BiD,yBAAuB,EAAE;AACrBpE,MAAE,EAAEkB,yBAAC,CAAC,qCAAD,CADgB;AAErBC,kBAAc,EAAE;AAFK,GAjME;AAqM3BkD,gBAAc,EAAE;AACZrE,MAAE,EAAEkB,yBAAC,CAAC,4BAAD,CADO;AAEZC,kBAAc,EAAE;AAFJ;AArMW,CAAD,CAA9B;;AA2MA,SAASmD,UAAT,CAAoBC,KAApB,EAA2B;AACvB,MAAIC,UAAU,GAAG,EAAjB;AAEA,QAAM;AAACC;AAAD,MAAkBF,KAAK,CAACG,IAA9B;;AACA,OAAK,IAAI3H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwH,KAAK,CAACI,MAAN,CAAa1H,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC1C,UAAM6H,KAAK,GAAGL,KAAK,CAACI,MAAN,CAAa5H,CAAb,CAAd;AACA,UAAM8H,SAAS,GAAGC,eAAe,CAACF,KAAD,EAAQH,aAAR,EAAuBF,KAAK,CAACQ,WAA7B,EAA0CR,KAAK,CAACS,SAAhD,EAA2DT,KAAK,CAACU,OAAjE,CAAjC;AAEA,QAAIC,QAAJ;;AACA,QAAIX,KAAK,CAACY,UAAV,EAAsB;AAClB,YAAMC,OAAO,GAAGb,KAAK,CAACU,OAAN,CAAcJ,SAAS,CAACQ,MAAxB,CAAhB;AACA,YAAMC,IAAI,GAAGF,OAAO,GAAGA,OAAO,CAACG,KAAX,GAAmBV,SAAS,CAACQ,MAAjD;AACAH,cAAQ,GAAG;AAAI,iBAAS,EAAC;AAAd,SAAiCI,IAAjC,CAAX;AACH;;AAED,QAAIE,QAAJ;;AACA,QAAIjB,KAAK,CAACkB,MAAV,EAAkB;AACdD,cAAQ,GAAG;AAAI,iBAAS,EAAC;AAAd,SAAoDX,SAAS,CAACa,EAA9D,CAAX;AACH;;AAED,QAAIC,QAAJ;;AACA,QAAIpB,KAAK,CAACqB,WAAV,EAAuB;AACnBD,cAAQ,GAAG;AAAI,iBAAS,EAAC;AAAd,SAAoDd,SAAS,CAACgB,SAA9D,CAAX;AACH;;AAED,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIjB,SAAS,CAACkB,IAAV,CAAeC,WAAf,GAA6BC,OAA7B,CAAqC,MAArC,MAAiD,CAAC,CAAtD,EAAyD;AACrDH,eAAS,GAAG,eAAZ;AACH;;AAEDtB,cAAU,CAACzH,CAAD,CAAV,GACI;AAAI,SAAG,EAAE6H,KAAK,CAAC5E;AAAf,OACI;AAAI,eAAS,EAAC;AAAd,OAAoD6E,SAAS,CAACqB,SAA9D,CADJ,EAEKhB,QAFL,EAGI;AACI,eAAS,EAAE,oBAAoBY;AADnC,OAGKjB,SAAS,CAACkB,IAHf,CAHJ,EAQKP,QARL,EASKG,QATL,CADJ;AAaH;;AAED,MAAIQ,aAAJ;;AACA,MAAI5B,KAAK,CAACY,UAAV,EAAsB;AAClBgB,iBAAa,GACT,0CACI,8BAAC,oCAAD;AACI,QAAE,EAAC,oBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ;AAQH;;AAED,MAAIC,SAAJ;;AACA,MAAI7B,KAAK,CAACkB,MAAV,EAAkB;AACdW,aAAS,GACL,0CACI,8BAAC,oCAAD;AACI,QAAE,EAAC,gBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ;AAQH;;AAED,MAAIC,cAAJ;;AACA,MAAI9B,KAAK,CAACqB,WAAV,EAAuB;AACnBS,kBAAc,GACV,0CACI,8BAAC,oCAAD;AACI,QAAE,EAAC,qBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ;AAQH;;AAED,SACI;AAAO,aAAS,EAAC;AAAjB,KACI,6CACI,0CACI,0CACI,8BAAC,oCAAD;AACI,MAAE,EAAC,uBADP;AAEI,kBAAc,EAAC;AAFnB,IADJ,CADJ,EAOKF,aAPL,EAQI,0CACI,8BAAC,oCAAD;AACI,MAAE,EAAC,oBADP;AAEI,kBAAc,EAAC;AAFnB,IADJ,CARJ,EAcKC,SAdL,EAeKC,cAfL,CADJ,CADJ,EAoBI,6CACK7B,UADL,CApBJ,CADJ;AA0BH;;AAEDF,UAAU,CAACgC,SAAX,GAAuB;AACnB5B,MAAI,EAAE6B,6BAAS,CAACC,UADG;AAEnB7B,QAAM,EAAE8B,oBAAS,CAACC,KAAV,CAAgBF,UAFL;AAGnBrB,YAAU,EAAEsB,oBAAS,CAACE,IAHH;AAInBlB,QAAM,EAAEgB,oBAAS,CAACE,IAJC;AAKnBf,aAAW,EAAEa,oBAAS,CAACE,IALJ;AAMnB5B,aAAW,EAAE0B,oBAAS,CAACvK,MAAV,CAAiBsK,UANX;AAOnBvB,SAAO,EAAEwB,oBAAS,CAACG,IAAV,CAAeJ,UAPL;AAQnBxB,WAAS,EAAEyB,oBAAS,CAACG,IAAV,CAAeJ;AARP,CAAvB;AAWeK,sFAAU,CAACvC,UAAD,CAAzB;AAEO,SAASQ,eAAT,CAAyBF,KAAzB,EAAgCH,aAAhC,EAA+CM,WAA/C,EAA4DC,SAA5D,EAAuEC,OAAvE,EAAgF;AACnF,QAAM6B,SAAS,GAAGlC,KAAK,CAACmC,MAAN,CAAaC,OAAb,CAAqB,eAArB,EAAsC,EAAtC,CAAlB;AACA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,MAAIH,SAAS,CAACb,OAAV,CAAkB,WAAlB,MAAmC,CAAvC,EAA0C;AACtC,UAAMiB,WAAW,GAAGtC,KAAK,CAACuC,UAAN,CAAiBC,KAAjB,CAAuB,GAAvB,CAApB;AACA,UAAMC,gBAAgB,GAAGH,WAAW,CAAC,CAAD,CAAX,CAAeE,KAAf,CAAqB,GAArB,CAAzB;AAEA,QAAIE,UAAU,GAAG,EAAjB;AACA,QAAIC,UAAJ;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,QAAIH,gBAAgB,CAACpB,OAAjB,CAAyB,MAAzB,KAAoC,CAAxC,EAA2C;AACvCqB,gBAAU,GAAGD,gBAAgB,CAACA,gBAAgB,CAACpB,OAAjB,CAAyB,MAAzB,IAAmC,CAApC,CAA7B;AACAsB,gBAAU,GAAGvC,SAAS,CAACsC,UAAD,CAAtB;;AACA,UAAIC,UAAJ,EAAgB;AACZC,mBAAW,GAAGD,UAAU,CAACE,YAAzB;AACH,OAFD,MAEO;AACHD,mBAAW,GAAGF,UAAd;AACH;AACJ;;AAED,YAAQR,SAAR;AACA,WAAK,kBAAL;AACIG,iBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACK,cAAT,EAAyB;AAACoG;AAAD,SAAzB,CAAzB;AACA;;AACJ,WAAK,yBAAL;AACIP,iBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACM,aAAT,EAAwB;AAACqG,kBAAQ,EAAEC,0CAAiB,CAACJ,UAAU,CAACvH,EAAZ,CAAjB,CAAiC0H;AAA5C,SAAxB,CAAzB;AACA;;AACJ,WAAK,kBAAL;AACIT,iBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACO,WAAT,EAAsB;AAACkG;AAAD,SAAtB,CAAzB;AACA;;AACJ,WAAK,uBAAL,CAVA,CAU8B;;AAC9B,WAAK,yBAAL;AACIP,iBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACQ,aAAT,EAAwB;AAACiG;AAAD,SAAxB,CAAzB;AACA;;AACJ;AAAS;AACL,cAAII,WAAW,GAAG,EAAlB;AACA,cAAIvC,MAAM,GAAG,EAAb;AACA,cAAIqC,QAAQ,GAAG,EAAf;;AAEA,cAAIR,WAAW,CAAC,CAAD,CAAf,EAAoB;AAChBU,uBAAW,GAAGV,WAAW,CAAC,CAAD,CAAX,CAAeE,KAAf,CAAqB,GAArB,CAAd;;AAEA,gBAAIQ,WAAW,CAAC3B,OAAZ,CAAoB,SAApB,KAAkC,CAAtC,EAAyC;AACrCZ,oBAAM,GAAGuC,WAAW,CAACA,WAAW,CAAC3B,OAAZ,CAAoB,SAApB,IAAiC,CAAlC,CAApB;AACA,kBAAIb,OAAO,GAAGH,OAAO,CAACI,MAAD,CAArB;;AACA,kBAAID,OAAJ,EAAa;AACTsC,wBAAQ,GAAGtC,OAAO,CAACsC,QAAnB;AACH;AACJ;AACJ;;AAED,cAAK,kCAAD,CAAqCG,IAArC,CAA0Cf,SAA1C,CAAJ,EAA0D;AACtDG,qBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACS,cAAT,EAAyB;AAACsG,iBAAG,EAAER;AAAN,aAAzB,CAAzB;AACH,WAFD,MAEO,IAAK,+BAAD,CAAkCO,IAAlC,CAAuCf,SAAvC,CAAJ,EAAuD;AAC1DG,qBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACU,SAAT,EAAoB;AAACiG,sBAAD;AAAWF;AAAX,aAApB,CAAzB;AACH,WAFM,MAEA,IAAK,kCAAD,CAAqCK,IAArC,CAA0Cf,SAA1C,CAAJ,EAA0D;AAC7DG,qBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACW,WAAT,EAAsB;AAACgG,sBAAD;AAAWF;AAAX,aAAtB,CAAzB;AACH;;AAED;AACH;AAxCD;AA0CH,GA3DD,MA2DO,IAAIV,SAAS,CAACb,OAAV,CAAkB,QAAlB,MAAgC,CAApC,EAAuC;AAC1C,UAAM8B,SAAS,GAAGnD,KAAK,CAACuC,UAAN,CAAiBC,KAAjB,CAAuB,GAAvB,CAAlB;;AAEA,YAAQN,SAAR;AACA,WAAK,iBAAL;AAAwB;AACpB,gBAAMkB,aAAa,GAAGD,SAAS,CAAC,CAAD,CAAT,CAAaX,KAAb,CAAmB,GAAnB,CAAtB;;AAEA,cAAIY,aAAa,CAAC,CAAD,CAAb,KAAqB,WAAzB,EAAsC;AAClCf,qBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACY,oBAAT,EAA+B;AAAC3B,gBAAE,EAAEgI,aAAa,CAAC,CAAD;AAAlB,aAA/B,CAAzB;AACH;;AAED;AACH;;AACD,WAAK,cAAL;AACI,YAAID,SAAS,CAAC,CAAD,CAAT,KAAiB,SAArB,EAAgC;AAC5Bd,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACa,yBAAT,CAAzB;AACH,SAFD,MAEO,IAAImG,SAAS,CAAC,CAAD,CAAT,KAAiB,SAArB,EAAgC;AACnCd,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACc,sBAAT,CAAzB;AACH,SAFM,MAEA,IAAIkG,SAAS,CAAC,CAAD,CAAT,KAAiB,uDAArB,EAA8E;AACjFd,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACe,iBAAT,CAAzB;AACH;;AAED;;AACJ,WAAK,qBAAL;AACI,YAAIiG,SAAS,CAAC,CAAD,CAAT,KAAiB,SAArB,EAAgC;AAC5Bd,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACgB,mBAAT,CAAzB;AACH,SAFD,MAEO,IAAIgG,SAAS,CAAC,CAAD,CAAT,KAAiB,SAArB,EAAgC;AACnCd,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACiB,qBAAT,CAAzB;AACH,SAFM,MAEA;AACH,gBAAMiG,iBAAiB,GAAGF,SAAS,CAAC,CAAD,CAAT,CAAaX,KAAb,CAAmB,GAAnB,CAA1B;;AAEA,cAAIa,iBAAiB,CAAC,CAAD,CAAjB,CAAqBC,IAArB,OAAgC,MAAhC,IAA0CD,iBAAiB,CAAC,CAAD,CAA/D,EAAoE;AAChEhB,qBAAS,GAAGxC,aAAa,CAACwD,iBAAD,EAAoB;AAACE,mBAAK,EAAEF,iBAAiB,CAAC,CAAD,CAAjB,CAAqBC,IAArB;AAAR,aAApB,CAAzB;AACH;AACJ;;AAED;;AACJ;AACI;AAnCJ;AAqCH,GAxCM,MAwCA,IAAIpB,SAAS,CAACb,OAAV,CAAkB,QAAlB,MAAgC,CAApC,EAAuC;AAC1C,UAAMmC,QAAQ,GAAGxD,KAAK,CAACuC,UAAN,CAAiBC,KAAjB,CAAuB,GAAvB,CAAjB;;AAEA,YAAQN,SAAR;AACA,WAAK,cAAL;AACI,YAAIsB,QAAQ,CAAC,CAAD,CAAR,KAAgB,SAApB,EAA+B;AAC3BnB,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACmB,cAAT,CAAzB;AACH,SAFD,MAEO,IAAIkG,QAAQ,CAAC,CAAD,CAAR,KAAgB,SAApB,EAA+B;AAClCnB,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACsB,gBAAT,CAAzB;AACH,SAFM,MAEA,IAAI+F,QAAQ,CAAC,CAAD,CAAR,KAAgB,eAApB,EAAqC;AACxCnB,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACoB,aAAT,CAAzB;AACH,SAFM,MAEA,IAAIiG,QAAQ,CAAC,CAAD,CAAZ,EAAiB;AACpBnB,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACuB,WAAT,CAAzB;AACH;;AAED;;AACJ,WAAK,uBAAL;AACI2E,iBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACE,cAAT,EAAyB;AAAC4E,mBAAS,EAAEuC,QAAQ,CAAC,CAAD,CAAR,CAAYhB,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB;AAAZ,SAAzB,CAAzB;AACA;;AACJ,WAAK,iBAAL;AACIH,iBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACwB,aAAT,CAAzB;AACA;;AACJ,WAAK,eAAL;AACI0E,iBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACyB,aAAT,CAAzB;AACA;;AACJ,WAAK,oBAAL;AACI,YAAI4F,QAAQ,CAAC,CAAD,CAAR,KAAgB,WAApB,EAAiC;AAC7BnB,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAAC0B,iBAAT,CAAzB;AACH,SAFD,MAEO,IAAI2F,QAAQ,CAAC,CAAD,CAAR,KAAgB,WAApB,EAAiC;AACpCnB,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAAC2B,mBAAT,CAAzB;AACH,SAFM,MAEA,IAAI0F,QAAQ,CAAC,CAAD,CAAR,KAAgB,wEAApB,EAA8F;AACjGnB,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAAC4B,cAAT,CAAzB;AACH;;AAED;;AACJ,WAAK,qBAAL;AAA4B;AACxB,gBAAM0F,SAAS,GAAGD,QAAQ,CAAC,CAAD,CAAR,CAAYhB,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAlB;AAEAH,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAAC6B,UAAT,CAAzB;;AACA,cAAIyF,SAAS,CAACH,IAAV,EAAJ,EAAsB;AAClBjB,qBAAS,IAAIoB,SAAb;AACH,WAFD,MAEO;AACHpB,qBAAS,IAAIxC,aAAa,CAAC1D,OAAO,CAAC8B,MAAT,CAA1B;AACH;;AAED;AACH;;AACD,WAAK,sBAAL;AAA6B;AACzB,gBAAMyF,UAAU,GAAGF,QAAQ,CAAC,CAAD,CAAR,CAAYhB,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAnB;AACA,gBAAMmB,WAAW,GAAGH,QAAQ,CAAC,CAAD,CAAR,CAAYhB,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAApB;AAEA;;AACA,cAAIkB,UAAU,KAAK,QAAnB,EAA6B;AACzB,gBAAIC,WAAW,KAAK,MAApB,EAA4B;AACxBtB,uBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAAC+B,aAAT,CAAzB;AACH,aAFD,MAEO,IAAIyF,WAAW,KAAK,OAApB,EAA6B;AAChCtB,uBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACgC,eAAT,CAAzB;AACH;;AAED,kBAAMyF,cAAc,GAAGJ,QAAQ,CAAC,CAAD,CAAR,CAAYhB,KAAZ,CAAkB,GAAlB,CAAvB;;AACA,gBAAIoB,cAAc,CAAC,CAAD,CAAd,KAAsB,cAA1B,EAA0C;AACtC,oBAAMC,UAAU,GAAGxD,OAAO,CAACuD,cAAc,CAAC,CAAD,CAAf,CAA1B;AACA,oBAAME,IAAI,GAAG3D,WAAb;;AACA,kBAAI2D,IAAI,IAAID,UAAR,IAAsBE,uCAAa,CAACD,IAAI,CAACE,KAAN,CAAvC,EAAqD;AACjD3B,yBAAS,IAAIxC,aAAa,CAAC1D,OAAO,CAACiC,EAAT,EAAa;AAAC0E,0BAAQ,EAAEe,UAAU,CAACf;AAAtB,iBAAb,CAA1B;AACH,eAFD,MAEO,IAAIgB,IAAI,IAAID,UAAZ,EAAwB;AAC3BxB,yBAAS,IAAIxC,aAAa,CAAC1D,OAAO,CAACkC,OAAT,CAA1B;AACH;AACJ;AACJ,WAjBD,MAiBO,IAAIqF,UAAU,KAAK,YAAnB,EAAiC;AACpCrB,qBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACE,cAAT,EAAyB;AAAC4E,uBAAS,EAAE0C;AAAZ,aAAzB,CAAzB;AACH;;AAED;AACH;;AACD,WAAK,4BAAL;AACItB,iBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACmC,SAAT,EAAoB;AAACqC,eAAK,EAAE6C,QAAQ,CAAC,CAAD,CAAR,CAAYhB,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB;AAAR,SAApB,CAAzB;AACA;;AACJ,WAAK,uBAAL;AACI,YAAIgB,QAAQ,CAAC,CAAD,CAAR,KAAgB,SAApB,EAA+B;AAC3BnB,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACoC,cAAT,CAAzB;AACH,SAFD,MAEO,IAAIiF,QAAQ,CAAC,CAAD,CAAR,KAAgB,SAApB,EAA+B;AAClCnB,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACqC,gBAAT,CAAzB;AACH;;AAED;;AACJ,WAAK,sBAAL;AACI6D,iBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACsC,yBAAT,CAAzB;AACA;;AACJ;AACI;AAvFJ;AAyFH,GA5FM,MA4FA,IAAIyD,SAAS,CAACb,OAAV,CAAkB,QAAlB,MAAgC,CAApC,EAAuC;AAC1C,UAAM4C,WAAW,GAAGjE,KAAK,CAACuC,UAA1B;;AAEA,YAAQL,SAAR;AACA,WAAK,wBAAL;AACI,YAAI+B,WAAW,KAAK,SAApB,EAA+B;AAC3B5B,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACuC,sBAAT,CAAzB;AACH,SAFD,MAEO,IAAIuF,WAAW,KAAK,SAApB,EAA+B;AAClC5B,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACwC,yBAAT,CAAzB;AACH,SAFM,MAEA,IAAIsF,WAAW,KAAK,gCAApB,EAAsD;AACzD5B,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACyC,mBAAT,CAAzB;AACH;;AAED;;AACJ,WAAK,wBAAL;AACI,YAAIqF,WAAW,KAAK,SAApB,EAA+B;AAC3B5B,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAAC0C,sBAAT,CAAzB;AACH,SAFD,MAEO,IAAIoF,WAAW,KAAK,SAApB,EAA+B;AAClC5B,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAAC2C,wBAAT,CAAzB;AACH,SAFM,MAEA,IAAImF,WAAW,KAAK,iCAApB,EAAuD;AAC1D5B,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAAC4C,mBAAT,CAAzB;AACH;;AAED;;AACJ;AACI;AAtBJ;AAwBH,GA3BM,MA2BA,IAAImD,SAAS,CAACb,OAAV,CAAkB,UAAlB,MAAkC,CAAtC,EAAyC;AAC5C,UAAM6C,WAAW,GAAGlE,KAAK,CAACuC,UAA1B;;AAEA,YAAQL,SAAR;AACA,WAAK,cAAL;AACI,YAAIgC,WAAW,KAAK,SAApB,EAA+B;AAC3B7B,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACkD,mBAAT,CAAzB;AACH,SAFD,MAEO,IAAI6E,WAAW,KAAK,SAApB,EAA+B;AAClC7B,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACmD,qBAAT,CAAzB;AACH,SAFM,MAEA,IAAI4E,WAAW,KAAK,yCAApB,EAA+D;AAClE7B,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACoD,uBAAT,CAAzB;AACH,SAFM,MAEA,IAAI2E,WAAW,KAAK,0BAApB,EAAgD;AACnD7B,mBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACqD,uBAAT,CAAzB;AACH;;AAED;;AACJ,WAAK,iBAAL;AACI6C,iBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAACsD,cAAT,CAAzB;AACA;;AACJ;AACI;AAjBJ;AAmBH,GAtBM,MAsBA,IAAIyC,SAAS,CAACb,OAAV,CAAkB,mCAAlB,MAA2D,CAA/D,EAAkE;AACrEgB,aAAS,GAAG8B,qCAAW,CAACnE,KAAK,CAACuC,UAAP,CAAvB;AACH,GAFM,MAEA;AACH,YAAQL,SAAR;AACA,WAAK,SAAL;AACIG,iBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAAC6C,MAAT,CAAzB;AACA;;AACJ,WAAK,eAAL;AACIqD,iBAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAAC8C,QAAT,CAAzB;AACA;;AACJ;AACI;AARJ;AAUH;AAED;;;AACA,MAAI,CAACoD,SAAL,EAAgB;AACZ;AACA,QAAIrC,KAAK,CAACuC,UAAN,CAAiBlB,OAAjB,CAAyB,cAAzB,KAA4C,CAAhD,EAAmD;AAC/CgB,eAAS,GAAGxC,aAAa,CAAC1D,OAAO,CAAC+C,UAAT,CAAzB;AACH,KAFD,MAEO;AACH,UAAIkF,UAAU,GAAG,EAAjB;;AACA,UAAIlC,SAAS,IAAIA,SAAS,CAACmC,WAAV,CAAsB,GAAtB,MAA+B,CAAC,CAAjD,EAAoD;AAChDD,kBAAU,GAAGlC,SAAS,CAACoC,SAAV,CAAoBpC,SAAS,CAACmC,WAAV,CAAsB,GAAtB,IAA6B,CAAjD,EAAoDjC,OAApD,CAA4D,GAA5D,EAAiE,GAAjE,CAAb;AACAgC,kBAAU,GAAGD,qCAAW,CAACC,UAAD,CAAxB;AACH;;AAED,UAAIG,aAAa,GAAG,EAApB;;AACA,UAAIvE,KAAK,CAACuC,UAAV,EAAsB;AAClBgC,qBAAa,GAAGvE,KAAK,CAACuC,UAAtB;;AAEA,YAAIgC,aAAa,CAAClD,OAAd,CAAsB,GAAtB,MAA+B,CAAC,CAApC,EAAuC;AACnCkD,uBAAa,GAAGA,aAAa,CAACD,SAAd,CAAwBC,aAAa,CAAClD,OAAd,CAAsB,GAAtB,IAA6B,CAArD,CAAhB;AACH;AACJ;;AACDgB,eAAS,GAAG+B,UAAU,GAAG,GAAb,GAAmBG,aAA/B;AACH;AACJ;;AAED,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASzE,KAAK,CAAC0E,SAAf,CAAb;AACA,QAAMzE,SAAS,GAAG,EAAlB;AACAA,WAAS,CAACqB,SAAV,GACI,2CACI,2CACI,8BAAC,iCAAD;AACI,SAAK,EAAEkD,IADX;AAEI,OAAG,EAAC,SAFR;AAGI,SAAK,EAAC,OAHV;AAII,QAAI,EAAC;AAJT,IADJ,CADJ,EASI,2CACI,8BAAC,iCAAD;AACI,SAAK,EAAEA,IADX;AAEI,QAAI,EAAC,SAFT;AAGI,UAAM,EAAC;AAHX,IADJ,CATJ,CADJ;AAmBAvE,WAAS,CAACQ,MAAV,GAAmBT,KAAK,CAAC2E,OAAzB;AACA1E,WAAS,CAACkB,IAAV,GAAiBkB,SAAjB;AACApC,WAAS,CAACa,EAAV,GAAed,KAAK,CAAC4E,UAArB;AACA3E,WAAS,CAACgB,SAAV,GAAsBjB,KAAK,CAAC6E,UAA5B;AAEA,SAAO5E,SAAP;AACH,C;;ACroBD;AACA;AAEA;AACA;AACA;AAEA;;AAEA,SAAS6E,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACH5E,eAAW,EAAEjF,+BAAc,CAAC6J,KAAD,CADxB;AAEH1E,WAAO,EAAGI,MAAD,IAAYJ,wBAAO,CAAC0E,KAAD,EAAQtE,MAAR,CAFzB;AAGHL,aAAS,EAAGwC,WAAD,IAAiBoC,oCAAgB,CAACD,KAAD,EAAQnC,WAAR;AAHzC,GAAP;AAKH;;AAEcqC,2GAAO,CAACH,eAAD,CAAP,CAAyBpF,WAAzB,CAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AAEA;AACA;AACA;AAEA;AAEe,SAASwF,QAAT,CAAkB;AAC7BC,QAD6B;AAE7BC,gBAF6B;AAG7BC,UAH6B;AAI7BC;AAJ6B,CAAlB,EAKZ;AACC,MAAID,QAAJ,EAAc;AACV,UAAME,eAAe,GAAG,IAAId,IAAJ,CAASW,cAAc,CAACV,SAAxB,CAAxB;AAEA,WACI,2CACI,2CACI,8BAAC,oCAAD;AACI,QAAE,EAAC,wBADP;AAEI,oBAAc,EAAC,mCAFnB;AAGI,YAAM,EAAE;AACJF,YAAI,EACA,8BAAC,iCAAD;AACI,eAAK,EAAEe,eADX;AAEI,aAAG,EAAC,SAFR;AAGI,eAAK,EAAEC,0CAAY,CAACL,MAAD,CAHvB;AAII,cAAI,EAAC;AAJT,UAFA;AASJM,YAAI,EACA,8BAAC,iCAAD;AACI,eAAK,EAAEF,eADX;AAEI,cAAI,EAAC,SAFT;AAGI,gBAAM,EAAC;AAHX;AAVA;AAHZ,MADJ,CADJ,EAwBI,2CACI,8BAAC,oCAAD;AACI,QAAE,EAAC,iBADP;AAEI,oBAAc,EAAC,UAFnB;AAGI,YAAM,EAAE;AACJG,UAAE,EAAEN,cAAc,CAACzF,KAAf,CAAqB+F;AADrB;AAHZ,MADJ,CAxBJ,EAiCI,2CACI,8BAAC,oCAAD;AACI,QAAE,EAAC,sBADP;AAEI,oBAAc,EAAC,oBAFnB;AAGI,YAAM,EAAE;AACJC,eAAO,EAAEP,cAAc,CAACzF,KAAf,CAAqBgG;AAD1B;AAHZ,MADJ,CAjCJ,EA0CI,2CACI,8BAAC,oCAAD;AACI,QAAE,EAAC,wBADP;AAEI,oBAAc,EAAC,kBAFnB;AAGI,YAAM,EAAE;AACJvK,UAAE,EAAEgK,cAAc,CAAChK;AADf;AAHZ,MADJ,CA1CJ,CADJ;AAsDH;;AAED,SACI;AACI,aAAS,EAAC,OADd;AAEI,QAAI,EAAC,GAFT;AAGI,WAAO,EAAEkK;AAHb,KAKI,8BAAC,oCAAD;AACI,MAAE,EAAC,uBADP;AAEI,kBAAc,EAAC;AAFnB,IALJ,CADJ;AAYH;AAEDJ,QAAQ,CAACxD,SAAT,GAAqB;AACjByD,QAAM,EAAEtD,oBAAS,CAAC+D,MAAV,CAAiBhE,UADR;AAEjBwD,gBAAc,EAAEvD,oBAAS,CAACvK,MAAV,CAAiBsK,UAFhB;AAGjB0D,gBAAc,EAAEzD,oBAAS,CAACG,IAAV,CAAeJ,UAHd;AAIjByD,UAAQ,EAAExD,oBAAS,CAACE,IAAV,CAAeH;AAJR,CAArB,C;;;;ACxFA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEe,MAAMiE,wBAAN,SAA0BC,eAAK,CAACC,aAAhC,CAA8C;AAwBzDC,aAAW,CAACrG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,4CAQF,MAAM;AACnB,WAAKsG,QAAL,CAAc;AAACZ,gBAAQ,EAAE;AAAX,OAAd;AACH,KAVkB;;AAAA,0CAYHa,CAAD,IAAO;AAClB,WAAKvG,KAAL,CAAWwG,YAAX,CAAwB,KAAKxG,KAAL,CAAWyF,cAAX,CAA0BhK,EAAlD,EAAsD8K,CAAtD;AACH,KAdkB;;AAAA,6CAgBAE,OAAD,IAAa;AAC3B,aAAOA,OAAO,CAACC,SAAR,KAAsBD,OAAO,CAACC,SAAR,CAAkBC,QAAlB,CAA2B,OAA3B,KAAuCF,OAAO,CAACC,SAAR,CAAkBC,QAAlB,CAA2B,SAA3B,CAA7D,CAAP;AACH,KAlBkB;;AAAA,+CAoBEF,OAAD,IAAa;AAC7B,UAAIG,YAAJ;AACA,UAAIC,iBAAJ;AACA,UAAIC,aAAJ;AACA,UAAIC,WAAJ;;AAEA,UAAIN,OAAO,CAACC,SAAR,CAAkBC,QAAlB,CAA2B,OAA3B,CAAJ,EAAyC;AACrCG,qBAAa,GAAG,aAAhB;AACAC,mBAAW,GAAGC,yCAAe,CAAC,oBAAD,EAAuB,YAAvB,CAA7B;AACAJ,oBAAY,GAAGjK,+BAAC,CAAC,2CAAD,CAAhB;AACAkK,yBAAiB,GAAG,2BAApB;;AAEA,YAAIJ,OAAO,CAACC,SAAR,CAAkBC,QAAlB,CAA2BM,oBAAO,CAACC,8BAAnC,CAAJ,EAAwE;AACpEN,sBAAY,GAAGjK,+BAAC,CAAC,oCAAD,CAAhB;AACAkK,2BAAiB,GAAG,mBAApB;AACH;AACJ,OAVD,MAUO,IAAIJ,OAAO,CAACC,SAAR,CAAkBC,QAAlB,CAA2B,SAA3B,CAAJ,EAA2C;AAC9CG,qBAAa,GAAG,eAAhB;AACAC,mBAAW,GAAGC,yCAAe,CAAC,sBAAD,EAAyB,cAAzB,CAA7B;AACAJ,oBAAY,GAAGjK,+BAAC,CAAC,4CAAD,CAAhB;AACAkK,yBAAiB,GAAG,4BAApB;;AAEA,YAAIJ,OAAO,CAACC,SAAR,CAAkBC,QAAlB,CAA2BM,oBAAO,CAACE,gCAAnC,CAAJ,EAA0E;AACtEP,sBAAY,GAAGjK,+BAAC,CAAC,qCAAD,CAAhB;AACAkK,2BAAiB,GAAG,oBAApB;AACH;AACJ;;AAED,aAAO;AACHC,qBADG;AAEHC,mBAFG;AAGHK,sBAAc,EACV,8BAAC,oCAAD;AACI,YAAE,EAAER,YADR;AAEI,wBAAc,EAAEC;AAFpB;AAJD,OAAP;AAUH,KA1DkB;;AAGf,SAAKzB,KAAL,GAAa;AACTM,cAAQ,EAAE;AADD,KAAb;AAGH;;AAsDD2B,QAAM,GAAG;AACL,UAAM;AACFC,WADE;AAEF9B,YAFE;AAGFC;AAHE,QAIF,KAAKzF,KAJT;AAMA,UAAMuH,cAAc,GAAG,IAAIzC,IAAJ,CAASW,cAAc,CAAC+B,gBAAxB,CAAvB;AACA,QAAIJ,cAAc,GAAG3B,cAAc,CAACzF,KAAf,CAAqByH,QAA1C;AACA,QAAIX,aAAa,GAAG,EAApB;AACA,QAAIC,WAAW,GAAG,EAAlB;;AAEA,QAAItB,cAAc,CAACzF,KAAf,CAAqByH,QAArB,KAAkC,SAAtC,EAAiD;AAC7CX,mBAAa,GAAG,eAAhB;AACAC,iBAAW,GAAGC,yCAAe,CAAC,sBAAD,EAAyB,cAAzB,CAA7B;AACH,KAHD,MAGO,IAAI,KAAKU,eAAL,CAAqBjC,cAArB,CAAJ,EAA0C;AAC7C,YAAMkC,WAAW,GAAG,KAAKC,iBAAL,CAAuBnC,cAAvB,CAApB;AACAqB,mBAAa,GAAGa,WAAW,CAACb,aAA5B;AACAM,oBAAc,GAAGO,WAAW,CAACP,cAA7B;AACH,KAJM,MAIA,IAAI3B,cAAc,CAACzF,KAAf,CAAqByH,QAArB,KAAkC,WAAlC,IACPhC,cAAc,CAACzF,KAAf,CAAqByH,QAArB,KAAkC,QAD/B,EACyC;AAC5CX,mBAAa,GAAG,aAAhB;AACAC,iBAAW,GAAGC,yCAAe,CAAC,oBAAD,EAAuB,YAAvB,CAA7B;AACH,KAJM,MAIA,IAAIvB,cAAc,CAACzF,KAAf,CAAqByH,QAArB,KAAkC,OAAtC,EAA+C;AAClD,UAAIhC,cAAc,CAACzF,KAAf,CAAqB+F,EAArB,CAAwBrE,OAAxB,CAAgC,SAAhC,KAA8C,CAAlD,EAAqD;AACjD0F,sBAAc,GACV,8BAAC,oCAAD;AACI,YAAE,EAAC,4BADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMAN,qBAAa,GAAG,eAAhB;AACAC,mBAAW,GAAGC,yCAAe,CAAC,sBAAD,EAAyB,cAAzB,CAA7B;AACH,OATD,MASO;AACHF,qBAAa,GAAG,aAAhB;AACAC,mBAAW,GAAGC,yCAAe,CAAC,oBAAD,EAAuB,YAAvB,CAA7B;AACH;AACJ,KAdM,MAcA,IAAIvB,cAAc,CAACzF,KAAf,CAAqB+F,EAArB,CAAwBrE,OAAxB,CAAgC,OAAhC,MAA6C,CAAC,CAAlD,EAAqD;AACxDoF,mBAAa,GAAG,aAAhB;AACAC,iBAAW,GAAGC,yCAAe,CAAC,oBAAD,EAAuB,YAAvB,CAA7B;AACH;;AAED,QAAIvB,cAAc,CAACzF,KAAf,CAAqBgG,OAArB,CAA6BtE,OAA7B,CAAqC,aAArC,MAAwD,CAAC,CAA7D,EAAgE;AAC5D0F,oBAAc,GACV,8BAAC,oCAAD;AACI,UAAE,EAAC,4BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH;;AAED,WACI;AACI,SAAG,EAAE,wBAAwBE,KADjC;AAEI,eAAS,EAAC;AAFd,OAII;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAER,aADf;AAEI,WAAK,EAAEC;AAFX,MADJ,EAIOK,cAJP,CADJ,EAOI;AAAK,eAAS,EAAC;AAAf,OACI,2CACI,8BAAC,oCAAD;AACI,QAAE,EAAC,2BADP;AAEI,oBAAc,EAAC,+BAFnB;AAGI,YAAM,EAAE;AACJvC,YAAI,EACA,8BAAC,iCAAD;AACI,eAAK,EAAE0C,cADX;AAEI,aAAG,EAAC,SAFR;AAGI,eAAK,EAAE1B,0CAAY,CAACL,MAAD,CAHvB;AAII,cAAI,EAAC;AAJT,UAFA;AASJM,YAAI,EACA,8BAAC,iCAAD;AACI,eAAK,EAAEyB,cADX;AAEI,cAAI,EAAC,SAFT;AAGI,gBAAM,EAAC;AAHX;AAVA;AAHZ,MADJ,CADJ,EAwBI,8BAAC,QAAD;AACI,YAAM,EAAE/B,MADZ;AAEI,oBAAc,EAAEC,cAFpB;AAGI,cAAQ,EAAE,KAAKL,KAAL,CAAWM,QAHzB;AAII,oBAAc,EAAE,KAAKC;AAJzB,MAxBJ,CAPJ,CAJJ,EA2CI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,aAAO,EAAE,KAAKa,YADlB;AAEI,eAAS,EAAC;AAFd,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,qBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,CA3CJ,CADJ;AAyDH;;AAhMwD;;gBAAxCN,wB,eACE;AAEf;;;AAGAoB,OAAK,EAAEpF,oBAAS,CAAC2F,MAAV,CAAiB5F,UALT;;AAOf;;;AAGAuD,QAAM,EAAEtD,oBAAS,CAAC+D,MAAV,CAAiBhE,UAVV;;AAYf;;;AAGAwD,gBAAc,EAAEvD,oBAAS,CAACvK,MAAV,CAAiBsK,UAflB;;AAiBf;;;AAGAuE,cAAY,EAAEtE,oBAAS,CAACG,IAAV,CAAeJ;AApBd,C;;;;;;;ACdvB;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEe,MAAM6F,mCAAN,SAA+B3B,eAAK,CAACC,aAArC,CAAmD;AAuC9DC,aAAW,CAACrG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,4DAQJ,CAAC+H,KAAD,EAAQxB,CAAR,KAAc;AACzBA,OAAC,CAACyB,cAAF;AACA,UAAIC,YAAY,GAAGC,gBAAC,CAAC3B,CAAC,CAAChO,MAAH,CAAD,CAAY4P,OAAZ,CAAoB,gBAApB,CAAnB;AACAF,kBAAY,CAACG,QAAb,CAAsB,sBAAtB;AACAC,gBAAU,CAAC,MAAM;AACbJ,oBAAY,CAACK,WAAb,CAAyB,sBAAzB;AACH,OAFS,EAEP,IAFO,CAAV;AAGA,WAAKtI,KAAL,CAAWuI,OAAX,CAAmBC,aAAnB,CAAiC,KAAKxI,KAAL,CAAW7D,aAA5C,EAA2D4L,KAA3D,EAAkEhO,IAAlE,CAAuE,MAAM;AACzE,aAAKiG,KAAL,CAAWuI,OAAX,CAAmBE,WAAnB,CAA+B,KAAKzI,KAAL,CAAW7D,aAA1C;AACH,OAFD;AAGH,KAlBkB;;AAAA,sDAoBV,MAAM;AACX,WAAK6D,KAAL,CAAWuI,OAAX,CAAmBE,WAAnB,CAA+B,KAAKzI,KAAL,CAAW7D,aAA1C;;AACA,UAAI,CAACuM,iCAAQ,EAAb,EAAiB;AACbR,wBAAC,CAAC,aAAD,CAAD,CAAiBS,gBAAjB;AACH;AACJ,KAzBkB;;AAAA,sDA2BV,MAAM;AACX,WAAKrC,QAAL,CAAc;AAACsC,YAAI,EAAE;AAAP,OAAd;AACH,KA7BkB;;AAGf,SAAKxD,KAAL,GAAa;AACTwD,UAAI,EAAE;AADG,KAAb;AAGH;;AAyBDC,mBAAiB,GAAG;AAChB,SAAKC,MAAL;AACH;;AAEDzB,QAAM,GAAG;AACL,QAAI0B,OAAJ;;AACA,QAAI,KAAK/I,KAAL,CAAWgJ,QAAX,CAAoBC,OAAxB,EAAiC;AAC7BF,aAAO,GAAG,8BAAC,iCAAD,OAAV;AACH,KAFD,MAEO;AACH,YAAMG,YAAY,GAAG,KAAKlJ,KAAL,CAAWgJ,QAAX,CAAoBG,MAApB,CAA2B,CAAChH,KAAD,EAAQsD,cAAR,EAAwB6B,KAAxB,KAAkC;AAC9E,YAAI7B,cAAc,CAACzF,KAAf,CAAqBoJ,IAArB,KAA8B,iBAAlC,EAAqD;AACjD,iBAAOjH,KAAP;AACH;;AAEDA,aAAK,CAAC/J,IAAN,CACI,8BAAC,wBAAD;AACI,aAAG,EAAEqN,cAAc,CAAChK,EADxB;AAEI,eAAK,EAAE6L,KAFX;AAGI,gBAAM,EAAE,KAAKtH,KAAL,CAAWwF,MAHvB;AAII,wBAAc,EAAEC,cAJpB;AAKI,sBAAY,EAAE,KAAKe;AALvB,UADJ;AASA,eAAOrE,KAAP;AACH,OAfoB,EAelB,EAfkB,CAArB;AAiBA4G,aAAO,GAAG;AAAM,YAAI,EAAC;AAAX,SAAmBG,YAAnB,CAAV;AACH;;AAED,WACI,8BAAC,wBAAD;AACI,qBAAe,EAAC,eADpB;AAEI,UAAI,EAAE,KAAK9D,KAAL,CAAWwD,IAFrB;AAGI,YAAM,EAAE,KAAKS,MAHjB;AAII,cAAQ,EAAE,KAAKrJ,KAAL,CAAWqJ,MAJzB;AAKI,YAAM,EAAC,OALX;AAMI,UAAI,EAAC,QANT;AAOI,yBAAgB;AAPpB,OASI,8BAAC,wBAAD,CAAO,MAAP;AAAc,iBAAW,EAAE;AAA3B,OACI,8BAAC,wBAAD,CAAO,KAAP;AACI,oBAAc,EAAC,IADnB;AAEI,QAAE,EAAC;AAFP,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,6BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,CATJ,EAoBI,8BAAC,wBAAD,CAAO,IAAP;AAAY,SAAG,EAAC;AAAhB,OACI;AAAG,eAAS,EAAC;AAAb,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,kCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,EAOKN,OAPL,CApBJ,EA6BI,8BAAC,wBAAD,CAAO,MAAP;AAAc,eAAS,EAAC;AAAxB,OACI;AACI,QAAE,EAAC,kBADP;AAEI,UAAI,EAAC,QAFT;AAGI,eAAS,EAAC;AAHd,OAKI,8BAAC,oCAAD;AACI,QAAE,EAAC,sBADP;AAEI,oBAAc,EAAC;AAFnB,MALJ,CADJ,CA7BJ,CADJ;AA4CH;;AA/I6D;;kCAA7CjB,mC,eACE;AAEf;;;AAGA3L,eAAa,EAAE+F,oBAAS,CAAC+D,MAAV,CAAiBhE,UALjB;;AAOf;;;AAGA+G,UAAQ,EAAE9G,oBAAS,CAACoH,SAAV,CAAoB,CAC1BpH,oBAAS,CAACC,KADgB,EAE1BD,oBAAS,CAACvK,MAFgB,CAApB,EAGPsK,UAbY;;AAef;;;AAGAuD,QAAM,EAAEtD,oBAAS,CAAC+D,MAAV,CAAiBhE,UAlBV;;AAoBf;;;AAGAoH,QAAM,EAAEnH,oBAAS,CAACG,IAAV,CAAeJ,UAvBR;AAwBfsG,SAAO,EAAErG,oBAAS,CAACqH,KAAV,CAAgB;AAErB;;;AAGAd,eAAW,EAAEvG,oBAAS,CAACG,IAAV,CAAeJ,UALP;;AAOrB;;;AAGAuG,iBAAa,EAAEtG,oBAAS,CAACG,IAAV,CAAeJ;AAVT,GAAhB,EAWNA;AAnCY,C;;ACdvB;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,SAASkD,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHjJ,iBAAa,EAAEC,0CAAgB,CAACgJ,KAAD,CAD5B;AAEH4D,YAAQ,EAAEQ,yCAAe,CAACpE,KAAD,CAFtB;AAGHI,UAAM,EAAEiE,wCAAgB,CAACrE,KAAD;AAHrB,GAAP;AAKH;;AAED,SAASsE,kBAAT,CAA4B/O,QAA5B,EAAsC;AAClC,SAAO;AACH4N,WAAO,EAAEoB,mCAAkB,CAAC;AACxBlB,uCADwB;AAExBD,2CAAaA;AAFW,KAAD,EAGxB7N,QAHwB;AADxB,GAAP;AAMH;;AAEc2K,uGAAO,CAACH,eAAD,EAAkBuE,kBAAlB,CAAP,CAA6C5B,mCAA7C,CAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEe,MAAM8B,uCAAN,SAAiCzD,eAAK,CAACC,aAAvC,CAAqD;AA0BhEC,aAAW,CAACrG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,oCAQV,MAAM;AACX,WAAKA,KAAL,CAAWuI,OAAX,CAAmBsB,aAAnB,CAAiC,KAAK7J,KAAL,CAAW7D,aAA5C,EAA2D,CAA3D,EAA8D,GAA9D;;AACA,UAAI,CAACuM,iCAAQ,EAAb,EAAiB;AACbR,wBAAC,CAAC,aAAD,CAAD,CAAiBS,gBAAjB;AACH;AACJ,KAbkB;;AAAA,oCAeV,MAAM;AACX,WAAKrC,QAAL,CAAc;AAACsC,YAAI,EAAE;AAAP,OAAd;AACH,KAjBkB;;AAGf,SAAKxD,KAAL,GAAa;AACTwD,UAAI,EAAE;AADG,KAAb;AAGH;;AAaDC,mBAAiB,GAAG;AAChB,SAAKC,MAAL;AACH;;AAEDzB,QAAM,GAAG;AACL,QAAI0B,OAAJ;;AACA,QAAI,KAAK/I,KAAL,CAAW8J,UAAX,CAAsBpR,MAAtB,KAAiC,CAArC,EAAwC;AACpCqQ,aAAO,GAAI,8BAAC,iCAAD,OAAX;AACH,KAFD,MAEO;AACHA,aAAO,GACH,8BAAC,8BAAD;AACI,cAAM,EAAE,KAAK/I,KAAL,CAAW8J,UADvB;AAEI,cAAM,EAAE,IAFZ;AAGI,mBAAW,EAAE;AAHjB,QADJ;AAOH;;AAED,WACI,8BAAC,wBAAD;AACI,qBAAe,EAAC,eADpB;AAEI,UAAI,EAAE,KAAK1E,KAAL,CAAWwD,IAFrB;AAGI,YAAM,EAAE,KAAKS,MAHjB;AAII,cAAQ,EAAE,KAAKrJ,KAAL,CAAWqJ,MAJzB;AAKI,YAAM,EAAC,OALX;AAMI,UAAI,EAAC,QANT;AAOI,yBAAgB;AAPpB,OASI,8BAAC,wBAAD,CAAO,MAAP;AAAc,iBAAW,EAAE;AAA3B,OACI,8BAAC,wBAAD,CAAO,KAAP;AACI,oBAAc,EAAC,IADnB;AAEI,QAAE,EAAC;AAFP,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,sBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,CATJ,EAoBI,8BAAC,wBAAD,CAAO,IAAP;AAAY,SAAG,EAAC;AAAhB,OACKN,OADL,CApBJ,EAuBI,8BAAC,wBAAD,CAAO,MAAP;AAAc,eAAS,EAAC;AAAxB,OACI;AACI,QAAE,EAAC,kBADP;AAEI,UAAI,EAAC,QAFT;AAGI,eAAS,EAAC;AAHd,OAKI,8BAAC,oCAAD;AACI,QAAE,EAAC,sBADP;AAEI,oBAAc,EAAC;AAFnB,MALJ,CADJ,CAvBJ,CADJ;AAsCH;;AArG+D;;gBAA/Ca,uC,eACE;AAEf;;;AAGAP,QAAM,EAAEnH,oBAAS,CAACG,IAAV,CAAeJ,UALR;AAMfsG,SAAO,EAAErG,oBAAS,CAACqH,KAAV,CAAgB;AAErB;;;AAGAM,iBAAa,EAAE3H,oBAAS,CAACG,IAAV,CAAeJ;AALT,GAAhB,EAMNA,UAZY;;AAcf;;;AAGA6H,YAAU,EAAE5H,oBAAS,CAACC,KAAV,CAAgBF,UAjBb;;AAmBf;;;AAGA9F,eAAa,EAAE+F,oBAAS,CAAC+D,MAAV,CAAiBhE;AAtBjB,C;;ACdvB;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA,SAASkD,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHjJ,iBAAa,EAAEC,0CAAgB,CAACgJ,KAAD,CAD5B;AAEH0E,cAAU,EAAEC,uCAAoB,CAAC3E,KAAD,CAApB,IAA+B;AAFxC,GAAP;AAIH;;AAED,SAASsE,kBAAT,CAA4B/O,QAA5B,EAAsC;AAClC,SAAO;AACH4N,WAAO,EAAEoB,mCAAkB,CAAC;AACxBE,2CAAaA;AADW,KAAD,EAExBlP,QAFwB;AADxB,GAAP;AAKH;;AAEc2K,yGAAO,CAACH,eAAD,EAAkBuE,kBAAlB,CAAP,CAA6CE,uCAA7C,CAAf,E","file":"2.8f0a4f1d4c5366fa73df.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.autoUpdateTimezone = autoUpdateTimezone;\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _users = require(\"../selectors/entities/users\");\n\nvar _timezone = require(\"../selectors/entities/timezone\");\n\nvar _users2 = require(\"./users\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction autoUpdateTimezone(deviceTimezone\n/*: string*/\n) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(dispatch\n      /*: DispatchFunc*/\n      , getState\n      /*: GetStateFunc*/\n      ) {\n        var currentUer, currentTimezone, newTimezoneExists, timezone, updatedUser;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                currentUer = (0, _users.getCurrentUser)(getState());\n                currentTimezone = (0, _timezone.getUserTimezone)(getState(), currentUer.id);\n                newTimezoneExists = currentTimezone.automaticTimezone !== deviceTimezone;\n\n                if (currentTimezone.useAutomaticTimezone && newTimezoneExists) {\n                  timezone = {\n                    useAutomaticTimezone: 'true',\n                    automaticTimezone: deviceTimezone,\n                    manualTimezone: currentTimezone.manualTimezone\n                  };\n                  updatedUser = _objectSpread({}, currentUer, {\n                    timezone: timezone\n                  });\n                  (0, _users2.updateMe)(updatedUser)(dispatch, getState);\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport * as UserActions from 'mattermost-redux/actions/users';\r\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\r\n\r\nexport function activateMfa(code) {\r\n    return (dispatch, getState) => {\r\n        const currentUserId = getCurrentUserId(getState());\r\n\r\n        return dispatch(UserActions.updateUserMfa(currentUserId, true, code));\r\n    };\r\n}\r\n\r\nexport function deactivateMfa() {\r\n    return (dispatch, getState) => {\r\n        const currentUserId = getCurrentUserId(getState());\r\n\r\n        return dispatch(UserActions.updateUserMfa(currentUserId, false));\r\n    };\r\n}\r\n\r\nexport function generateMfaSecret() {\r\n    return (dispatch, getState) => {\r\n        const currentUserId = getCurrentUserId(getState());\r\n\r\n        return dispatch(UserActions.generateMfaSecret(currentUserId));\r\n    };\r\n}\r\n\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {defineMessages, FormattedDate, FormattedMessage, FormattedTime, injectIntl, intlShape} from 'react-intl';\r\n\r\nimport {getDirectTeammate, isSystemAdmin, toTitleCase} from 'utils/utils.jsx';\r\nimport {t} from 'utils/i18n';\r\n\r\nconst holders = defineMessages({\r\n    sessionRevoked: {\r\n        id: t('audit_table.sessionRevoked'),\r\n        defaultMessage: 'The session with id {sessionId} was revoked',\r\n    },\r\n    channelCreated: {\r\n        id: t('audit_table.channelCreated'),\r\n        defaultMessage: 'Created the {channelName} channel',\r\n    },\r\n    establishedDM: {\r\n        id: t('audit_table.establishedDM'),\r\n        defaultMessage: 'Established a direct message channel with {username}',\r\n    },\r\n    nameUpdated: {\r\n        id: t('audit_table.nameUpdated'),\r\n        defaultMessage: 'Updated the {channelName} channel name',\r\n    },\r\n    headerUpdated: {\r\n        id: t('audit_table.headerUpdated'),\r\n        defaultMessage: 'Updated the {channelName} channel header',\r\n    },\r\n    channelDeleted: {\r\n        id: t('audit_table.channelDeleted'),\r\n        defaultMessage: 'Archived the channel with the URL {url}',\r\n    },\r\n    userAdded: {\r\n        id: t('audit_table.userAdded'),\r\n        defaultMessage: 'Added {username} to the {channelName} channel',\r\n    },\r\n    userRemoved: {\r\n        id: t('audit_table.userRemoved'),\r\n        defaultMessage: 'Removed {username} to the {channelName} channel',\r\n    },\r\n    attemptedRegisterApp: {\r\n        id: t('audit_table.attemptedRegisterApp'),\r\n        defaultMessage: 'Attempted to register a new OAuth Application with ID {id}',\r\n    },\r\n    attemptedAllowOAuthAccess: {\r\n        id: t('audit_table.attemptedAllowOAuthAccess'),\r\n        defaultMessage: 'Attempted to allow a new OAuth service access',\r\n    },\r\n    successfullOAuthAccess: {\r\n        id: t('audit_table.successfullOAuthAccess'),\r\n        defaultMessage: 'Successfully gave a new OAuth service access',\r\n    },\r\n    failedOAuthAccess: {\r\n        id: t('audit_table.failedOAuthAccess'),\r\n        defaultMessage: 'Failed to allow a new OAuth service access - the redirect URI did not match the previously registered callback',\r\n    },\r\n    attemptedOAuthToken: {\r\n        id: t('audit_table.attemptedOAuthToken'),\r\n        defaultMessage: 'Attempted to get an OAuth access token',\r\n    },\r\n    successfullOAuthToken: {\r\n        id: t('audit_table.successfullOAuthToken'),\r\n        defaultMessage: 'Successfully added a new OAuth service',\r\n    },\r\n    oauthTokenFailed: {\r\n        id: t('audit_table.oauthTokenFailed'),\r\n        defaultMessage: 'Failed to get an OAuth access token - {token}',\r\n    },\r\n    attemptedLogin: {\r\n        id: t('audit_table.attemptedLogin'),\r\n        defaultMessage: 'Attempted to login',\r\n    },\r\n    authenticated: {\r\n        id: t('audit_table.authenticated'),\r\n        defauleMessage: 'Successfully authenticated',\r\n    },\r\n    successfullLogin: {\r\n        id: t('audit_table.successfullLogin'),\r\n        defaultMessage: 'Successfully logged in',\r\n    },\r\n    failedLogin: {\r\n        id: t('audit_table.failedLogin'),\r\n        defaultMessage: 'FAILED login attempt',\r\n    },\r\n    updatePicture: {\r\n        id: t('audit_table.updatePicture'),\r\n        defaultMessage: 'Updated your profile picture',\r\n    },\r\n    updateGeneral: {\r\n        id: t('audit_table.updateGeneral'),\r\n        defaultMessage: 'Updated the general settings of your account',\r\n    },\r\n    attemptedPassword: {\r\n        id: t('audit_table.attemptedPassword'),\r\n        defaultMessage: 'Attempted to change password',\r\n    },\r\n    successfullPassword: {\r\n        id: t('audit_table.successfullPassword'),\r\n        defaultMessage: 'Successfully changed password',\r\n    },\r\n    failedPassword: {\r\n        id: t('audit_table.failedPassword'),\r\n        defaultMessage: 'Failed to change password - tried to update user password who was logged in through OAuth',\r\n    },\r\n    updatedRol: {\r\n        id: t('audit_table.updatedRol'),\r\n        defaultMessage: 'Updated user role(s) to ',\r\n    },\r\n    member: {\r\n        id: t('audit_table.member'),\r\n        defaultMessage: 'member',\r\n    },\r\n    accountActive: {\r\n        id: t('audit_table.accountActive'),\r\n        defaultMessage: 'Account activated',\r\n    },\r\n    accountInactive: {\r\n        id: t('audit_table.accountInactive'),\r\n        defaultMessage: 'Account deactivated',\r\n    },\r\n    by: {\r\n        id: t('audit_table.by'),\r\n        defaultMessage: ' by {username}',\r\n    },\r\n    byAdmin: {\r\n        id: t('audit_table.byAdmin'),\r\n        defaultMessage: ' by an admin',\r\n    },\r\n    sentEmail: {\r\n        id: t('audit_table.sentEmail'),\r\n        defaultMessage: 'Sent an email to {email} to reset your password',\r\n    },\r\n    attemptedReset: {\r\n        id: t('audit_table.attemptedReset'),\r\n        defaultMessage: 'Attempted to reset password',\r\n    },\r\n    successfullReset: {\r\n        id: t('audit_table.successfullReset'),\r\n        defaultMessage: 'Successfully reset password',\r\n    },\r\n    updateGlobalNotifications: {\r\n        id: t('audit_table.updateGlobalNotifications'),\r\n        defaultMessage: 'Updated your global notification settings',\r\n    },\r\n    attemptedWebhookCreate: {\r\n        id: t('audit_table.attemptedWebhookCreate'),\r\n        defaultMessage: 'Attempted to create a webhook',\r\n    },\r\n    succcessfullWebhookCreate: {\r\n        id: t('audit_table.successfullWebhookCreate'),\r\n        defaultMessage: 'Successfully created a webhook',\r\n    },\r\n    failedWebhookCreate: {\r\n        id: t('audit_table.failedWebhookCreate'),\r\n        defaultMessage: 'Failed to create a webhook - bad channel permissions',\r\n    },\r\n    attemptedWebhookDelete: {\r\n        id: t('audit_table.attemptedWebhookDelete'),\r\n        defaultMessage: 'Attempted to delete a webhook',\r\n    },\r\n    successfullWebhookDelete: {\r\n        id: t('audit_table.successfullWebhookDelete'),\r\n        defaultMessage: 'Successfully deleted a webhook',\r\n    },\r\n    failedWebhookDelete: {\r\n        id: t('audit_table.failedWebhookDelete'),\r\n        defaultMessage: 'Failed to delete a webhook - inappropriate conditions',\r\n    },\r\n    logout: {\r\n        id: t('audit_table.logout'),\r\n        defaultMessage: 'Logged out of your account',\r\n    },\r\n    verified: {\r\n        id: t('audit_table.verified'),\r\n        defaultMessage: 'Successfully verified your email address',\r\n    },\r\n    revokedAll: {\r\n        id: t('audit_table.revokedAll'),\r\n        defaultMessage: 'Revoked all current sessions for the team',\r\n    },\r\n    loginAttempt: {\r\n        id: t('audit_table.loginAttempt'),\r\n        defaultMessage: ' (Login attempt)',\r\n    },\r\n    loginFailure: {\r\n        id: t('audit_table.loginFailure'),\r\n        defaultMessage: ' (Login failure)',\r\n    },\r\n    attemptedLicenseAdd: {\r\n        id: t('audit_table.attemptedLicenseAdd'),\r\n        defaultMessage: 'Attempted to add new license',\r\n    },\r\n    successfullLicenseAdd: {\r\n        id: t('audit_table.successfullLicenseAdd'),\r\n        defaultMessage: 'Successfully added new license',\r\n    },\r\n    failedExpiredLicenseAdd: {\r\n        id: t('audit_table.failedExpiredLicenseAdd'),\r\n        defaultMessage: 'Failed to add a new license as it has either expired or not yet been started',\r\n    },\r\n    failedInvalidLicenseAdd: {\r\n        id: t('audit_table.failedInvalidLicenseAdd'),\r\n        defaultMessage: 'Failed to add an invalid license',\r\n    },\r\n    licenseRemoved: {\r\n        id: t('audit_table.licenseRemoved'),\r\n        defaultMessage: 'Successfully removed a license',\r\n    },\r\n});\r\n\r\nfunction AuditTable(props) {\r\n    var accessList = [];\r\n\r\n    const {formatMessage} = props.intl;\r\n    for (var i = 0; i < props.audits.length; i++) {\r\n        const audit = props.audits[i];\r\n        const auditInfo = formatAuditInfo(audit, formatMessage, props.currentUser, props.getByName, props.getUser);\r\n\r\n        let uContent;\r\n        if (props.showUserId) {\r\n            const profile = props.getUser(auditInfo.userId);\r\n            const data = profile ? profile.email : auditInfo.userId;\r\n            uContent = <td className='word-break--all'>{data}</td>;\r\n        }\r\n\r\n        let iContent;\r\n        if (props.showIp) {\r\n            iContent = <td className='whitespace--nowrap word-break--all'>{auditInfo.ip}</td>;\r\n        }\r\n\r\n        let sContent;\r\n        if (props.showSession) {\r\n            sContent = <td className='whitespace--nowrap word-break--all'>{auditInfo.sessionId}</td>;\r\n        }\r\n\r\n        let descStyle = '';\r\n        if (auditInfo.desc.toLowerCase().indexOf('fail') !== -1) {\r\n            descStyle = ' color--error';\r\n        }\r\n\r\n        accessList[i] = (\r\n            <tr key={audit.id}>\r\n                <td className='whitespace--nowrap word-break--all'>{auditInfo.timestamp}</td>\r\n                {uContent}\r\n                <td\r\n                    className={'word-break--all' + descStyle}\r\n                >\r\n                    {auditInfo.desc}\r\n                </td>\r\n                {iContent}\r\n                {sContent}\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    let userIdContent;\r\n    if (props.showUserId) {\r\n        userIdContent = (\r\n            <th>\r\n                <FormattedMessage\r\n                    id='audit_table.userId'\r\n                    defaultMessage='User ID'\r\n                />\r\n            </th>\r\n        );\r\n    }\r\n\r\n    let ipContent;\r\n    if (props.showIp) {\r\n        ipContent = (\r\n            <th>\r\n                <FormattedMessage\r\n                    id='audit_table.ip'\r\n                    defaultMessage='IP Address'\r\n                />\r\n            </th>\r\n        );\r\n    }\r\n\r\n    let sessionContent;\r\n    if (props.showSession) {\r\n        sessionContent = (\r\n            <th>\r\n                <FormattedMessage\r\n                    id='audit_table.session'\r\n                    defaultMessage='Session ID'\r\n                />\r\n            </th>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <table className='table'>\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        <FormattedMessage\r\n                            id='audit_table.timestamp'\r\n                            defaultMessage='Timestamp'\r\n                        />\r\n                    </th>\r\n                    {userIdContent}\r\n                    <th>\r\n                        <FormattedMessage\r\n                            id='audit_table.action'\r\n                            defaultMessage='Action'\r\n                        />\r\n                    </th>\r\n                    {ipContent}\r\n                    {sessionContent}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {accessList}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nAuditTable.propTypes = {\r\n    intl: intlShape.isRequired,\r\n    audits: PropTypes.array.isRequired,\r\n    showUserId: PropTypes.bool,\r\n    showIp: PropTypes.bool,\r\n    showSession: PropTypes.bool,\r\n    currentUser: PropTypes.object.isRequired,\r\n    getUser: PropTypes.func.isRequired,\r\n    getByName: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default injectIntl(AuditTable);\r\n\r\nexport function formatAuditInfo(audit, formatMessage, currentUser, getByName, getUser) {\r\n    const actionURL = audit.action.replace(/\\/api\\/v[1-9]/, '');\r\n    let auditDesc = '';\r\n\r\n    if (actionURL.indexOf('/channels') === 0) {\r\n        const channelInfo = audit.extra_info.split(' ');\r\n        const channelNameField = channelInfo[0].split('=');\r\n\r\n        let channelURL = '';\r\n        let channelObj;\r\n        let channelName = '';\r\n        if (channelNameField.indexOf('name') >= 0) {\r\n            channelURL = channelNameField[channelNameField.indexOf('name') + 1];\r\n            channelObj = getByName(channelURL);\r\n            if (channelObj) {\r\n                channelName = channelObj.display_name;\r\n            } else {\r\n                channelName = channelURL;\r\n            }\r\n        }\r\n\r\n        switch (actionURL) {\r\n        case '/channels/create':\r\n            auditDesc = formatMessage(holders.channelCreated, {channelName});\r\n            break;\r\n        case '/channels/create_direct':\r\n            auditDesc = formatMessage(holders.establishedDM, {username: getDirectTeammate(channelObj.id).username});\r\n            break;\r\n        case '/channels/update':\r\n            auditDesc = formatMessage(holders.nameUpdated, {channelName});\r\n            break;\r\n        case '/channels/update_desc': // support the old path\r\n        case '/channels/update_header':\r\n            auditDesc = formatMessage(holders.headerUpdated, {channelName});\r\n            break;\r\n        default: {\r\n            let userIdField = [];\r\n            let userId = '';\r\n            let username = '';\r\n\r\n            if (channelInfo[1]) {\r\n                userIdField = channelInfo[1].split('=');\r\n\r\n                if (userIdField.indexOf('user_id') >= 0) {\r\n                    userId = userIdField[userIdField.indexOf('user_id') + 1];\r\n                    var profile = getUser(userId);\r\n                    if (profile) {\r\n                        username = profile.username;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ((/\\/channels\\/[A-Za-z0-9]+\\/delete/).test(actionURL)) {\r\n                auditDesc = formatMessage(holders.channelDeleted, {url: channelURL});\r\n            } else if ((/\\/channels\\/[A-Za-z0-9]+\\/add/).test(actionURL)) {\r\n                auditDesc = formatMessage(holders.userAdded, {username, channelName});\r\n            } else if ((/\\/channels\\/[A-Za-z0-9]+\\/remove/).test(actionURL)) {\r\n                auditDesc = formatMessage(holders.userRemoved, {username, channelName});\r\n            }\r\n\r\n            break;\r\n        }\r\n        }\r\n    } else if (actionURL.indexOf('/oauth') === 0) {\r\n        const oauthInfo = audit.extra_info.split(' ');\r\n\r\n        switch (actionURL) {\r\n        case '/oauth/register': {\r\n            const clientIdField = oauthInfo[0].split('=');\r\n\r\n            if (clientIdField[0] === 'client_id') {\r\n                auditDesc = formatMessage(holders.attemptedRegisterApp, {id: clientIdField[1]});\r\n            }\r\n\r\n            break;\r\n        }\r\n        case '/oauth/allow':\r\n            if (oauthInfo[0] === 'attempt') {\r\n                auditDesc = formatMessage(holders.attemptedAllowOAuthAccess);\r\n            } else if (oauthInfo[0] === 'success') {\r\n                auditDesc = formatMessage(holders.successfullOAuthAccess);\r\n            } else if (oauthInfo[0] === 'fail - redirect_uri did not match registered callback') {\r\n                auditDesc = formatMessage(holders.failedOAuthAccess);\r\n            }\r\n\r\n            break;\r\n        case '/oauth/access_token':\r\n            if (oauthInfo[0] === 'attempt') {\r\n                auditDesc = formatMessage(holders.attemptedOAuthToken);\r\n            } else if (oauthInfo[0] === 'success') {\r\n                auditDesc = formatMessage(holders.successfullOAuthToken);\r\n            } else {\r\n                const oauthTokenFailure = oauthInfo[0].split('-');\r\n\r\n                if (oauthTokenFailure[0].trim() === 'fail' && oauthTokenFailure[1]) {\r\n                    auditDesc = formatMessage(oauthTokenFailure, {token: oauthTokenFailure[1].trim()});\r\n                }\r\n            }\r\n\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    } else if (actionURL.indexOf('/users') === 0) {\r\n        const userInfo = audit.extra_info.split(' ');\r\n\r\n        switch (actionURL) {\r\n        case '/users/login':\r\n            if (userInfo[0] === 'attempt') {\r\n                auditDesc = formatMessage(holders.attemptedLogin);\r\n            } else if (userInfo[0] === 'success') {\r\n                auditDesc = formatMessage(holders.successfullLogin);\r\n            } else if (userInfo[0] === 'authenticated') {\r\n                auditDesc = formatMessage(holders.authenticated);\r\n            } else if (userInfo[0]) {\r\n                auditDesc = formatMessage(holders.failedLogin);\r\n            }\r\n\r\n            break;\r\n        case '/users/revoke_session':\r\n            auditDesc = formatMessage(holders.sessionRevoked, {sessionId: userInfo[0].split('=')[1]});\r\n            break;\r\n        case '/users/newimage':\r\n            auditDesc = formatMessage(holders.updatePicture);\r\n            break;\r\n        case '/users/update':\r\n            auditDesc = formatMessage(holders.updateGeneral);\r\n            break;\r\n        case '/users/newpassword':\r\n            if (userInfo[0] === 'attempted') {\r\n                auditDesc = formatMessage(holders.attemptedPassword);\r\n            } else if (userInfo[0] === 'completed') {\r\n                auditDesc = formatMessage(holders.successfullPassword);\r\n            } else if (userInfo[0] === 'failed - tried to update user password who was logged in through oauth') {\r\n                auditDesc = formatMessage(holders.failedPassword);\r\n            }\r\n\r\n            break;\r\n        case '/users/update_roles': {\r\n            const userRoles = userInfo[0].split('=')[1];\r\n\r\n            auditDesc = formatMessage(holders.updatedRol);\r\n            if (userRoles.trim()) {\r\n                auditDesc += userRoles;\r\n            } else {\r\n                auditDesc += formatMessage(holders.member);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case '/users/update_active': {\r\n            const updateType = userInfo[0].split('=')[0];\r\n            const updateField = userInfo[0].split('=')[1];\r\n\r\n            /* Either describes account activation/deactivation or a revoked session as part of an account deactivation */\r\n            if (updateType === 'active') {\r\n                if (updateField === 'true') {\r\n                    auditDesc = formatMessage(holders.accountActive);\r\n                } else if (updateField === 'false') {\r\n                    auditDesc = formatMessage(holders.accountInactive);\r\n                }\r\n\r\n                const actingUserInfo = userInfo[1].split('=');\r\n                if (actingUserInfo[0] === 'session_user') {\r\n                    const actingUser = getUser(actingUserInfo[1]);\r\n                    const user = currentUser;\r\n                    if (user && actingUser && isSystemAdmin(user.roles)) {\r\n                        auditDesc += formatMessage(holders.by, {username: actingUser.username});\r\n                    } else if (user && actingUser) {\r\n                        auditDesc += formatMessage(holders.byAdmin);\r\n                    }\r\n                }\r\n            } else if (updateType === 'session_id') {\r\n                auditDesc = formatMessage(holders.sessionRevoked, {sessionId: updateField});\r\n            }\r\n\r\n            break;\r\n        }\r\n        case '/users/send_password_reset':\r\n            auditDesc = formatMessage(holders.sentEmail, {email: userInfo[0].split('=')[1]});\r\n            break;\r\n        case '/users/reset_password':\r\n            if (userInfo[0] === 'attempt') {\r\n                auditDesc = formatMessage(holders.attemptedReset);\r\n            } else if (userInfo[0] === 'success') {\r\n                auditDesc = formatMessage(holders.successfullReset);\r\n            }\r\n\r\n            break;\r\n        case '/users/update_notify':\r\n            auditDesc = formatMessage(holders.updateGlobalNotifications);\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    } else if (actionURL.indexOf('/hooks') === 0) {\r\n        const webhookInfo = audit.extra_info;\r\n\r\n        switch (actionURL) {\r\n        case '/hooks/incoming/create':\r\n            if (webhookInfo === 'attempt') {\r\n                auditDesc = formatMessage(holders.attemptedWebhookCreate);\r\n            } else if (webhookInfo === 'success') {\r\n                auditDesc = formatMessage(holders.succcessfullWebhookCreate);\r\n            } else if (webhookInfo === 'fail - bad channel permissions') {\r\n                auditDesc = formatMessage(holders.failedWebhookCreate);\r\n            }\r\n\r\n            break;\r\n        case '/hooks/incoming/delete':\r\n            if (webhookInfo === 'attempt') {\r\n                auditDesc = formatMessage(holders.attemptedWebhookDelete);\r\n            } else if (webhookInfo === 'success') {\r\n                auditDesc = formatMessage(holders.successfullWebhookDelete);\r\n            } else if (webhookInfo === 'fail - inappropriate conditions') {\r\n                auditDesc = formatMessage(holders.failedWebhookDelete);\r\n            }\r\n\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    } else if (actionURL.indexOf('/license') === 0) {\r\n        const licenseInfo = audit.extra_info;\r\n\r\n        switch (actionURL) {\r\n        case '/license/add':\r\n            if (licenseInfo === 'attempt') {\r\n                auditDesc = formatMessage(holders.attemptedLicenseAdd);\r\n            } else if (licenseInfo === 'success') {\r\n                auditDesc = formatMessage(holders.successfullLicenseAdd);\r\n            } else if (licenseInfo === 'failed - expired or non-started license') {\r\n                auditDesc = formatMessage(holders.failedExpiredLicenseAdd);\r\n            } else if (licenseInfo === 'failed - invalid license') {\r\n                auditDesc = formatMessage(holders.failedInvalidLicenseAdd);\r\n            }\r\n\r\n            break;\r\n        case '/license/remove':\r\n            auditDesc = formatMessage(holders.licenseRemoved);\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    } else if (actionURL.indexOf('/admin/download_compliance_report') === 0) {\r\n        auditDesc = toTitleCase(audit.extra_info);\r\n    } else {\r\n        switch (actionURL) {\r\n        case '/logout':\r\n            auditDesc = formatMessage(holders.logout);\r\n            break;\r\n        case '/verify_email':\r\n            auditDesc = formatMessage(holders.verified);\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    /* If all else fails... */\r\n    if (!auditDesc) {\r\n        /* Currently not called anywhere */\r\n        if (audit.extra_info.indexOf('revoked_all=') >= 0) {\r\n            auditDesc = formatMessage(holders.revokedAll);\r\n        } else {\r\n            let actionDesc = '';\r\n            if (actionURL && actionURL.lastIndexOf('/') !== -1) {\r\n                actionDesc = actionURL.substring(actionURL.lastIndexOf('/') + 1).replace('_', ' ');\r\n                actionDesc = toTitleCase(actionDesc);\r\n            }\r\n\r\n            let extraInfoDesc = '';\r\n            if (audit.extra_info) {\r\n                extraInfoDesc = audit.extra_info;\r\n\r\n                if (extraInfoDesc.indexOf('=') !== -1) {\r\n                    extraInfoDesc = extraInfoDesc.substring(extraInfoDesc.indexOf('=') + 1);\r\n                }\r\n            }\r\n            auditDesc = actionDesc + ' ' + extraInfoDesc;\r\n        }\r\n    }\r\n\r\n    const date = new Date(audit.create_at);\r\n    const auditInfo = {};\r\n    auditInfo.timestamp = (\r\n        <div>\r\n            <div>\r\n                <FormattedDate\r\n                    value={date}\r\n                    day='2-digit'\r\n                    month='short'\r\n                    year='numeric'\r\n                />\r\n            </div>\r\n            <div>\r\n                <FormattedTime\r\n                    value={date}\r\n                    hour='2-digit'\r\n                    minute='2-digit'\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n    auditInfo.userId = audit.user_id;\r\n    auditInfo.desc = auditDesc;\r\n    auditInfo.ip = audit.ip_address;\r\n    auditInfo.sessionId = audit.session_id;\r\n\r\n    return auditInfo;\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getUser, getCurrentUser} from 'mattermost-redux/selectors/entities/users';\r\nimport {getChannelByName} from 'mattermost-redux/selectors/entities/channels';\r\n\r\nimport AuditTable from './audit_table.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        currentUser: getCurrentUser(state),\r\n        getUser: (userId) => getUser(state, userId),\r\n        getByName: (channelName) => getChannelByName(state, channelName),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AuditTable);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedDate, FormattedMessage, FormattedTime} from 'react-intl';\r\n\r\nimport {getMonthLong} from 'utils/i18n';\r\n\r\nexport default function MoreInfo({\r\n    locale,\r\n    currentSession,\r\n    moreInfo,\r\n    handleMoreInfo,\r\n}) {\r\n    if (moreInfo) {\r\n        const firstAccessTime = new Date(currentSession.create_at);\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <FormattedMessage\r\n                        id='activity_log.firstTime'\r\n                        defaultMessage='First time active: {date}, {time}'\r\n                        values={{\r\n                            date: (\r\n                                <FormattedDate\r\n                                    value={firstAccessTime}\r\n                                    day='2-digit'\r\n                                    month={getMonthLong(locale)}\r\n                                    year='numeric'\r\n                                />\r\n                            ),\r\n                            time: (\r\n                                <FormattedTime\r\n                                    value={firstAccessTime}\r\n                                    hour='2-digit'\r\n                                    minute='2-digit'\r\n                                />\r\n                            ),\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <FormattedMessage\r\n                        id='activity_log.os'\r\n                        defaultMessage='OS: {os}'\r\n                        values={{\r\n                            os: currentSession.props.os,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <FormattedMessage\r\n                        id='activity_log.browser'\r\n                        defaultMessage='Browser: {browser}'\r\n                        values={{\r\n                            browser: currentSession.props.browser,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <FormattedMessage\r\n                        id='activity_log.sessionId'\r\n                        defaultMessage='Session ID: {id}'\r\n                        values={{\r\n                            id: currentSession.id,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <a\r\n            className='theme'\r\n            href='#'\r\n            onClick={handleMoreInfo}\r\n        >\r\n            <FormattedMessage\r\n                id='activity_log.moreInfo'\r\n                defaultMessage='More info'\r\n            />\r\n        </a>\r\n    );\r\n}\r\n\r\nMoreInfo.propTypes = {\r\n    locale: PropTypes.string.isRequired,\r\n    currentSession: PropTypes.object.isRequired,\r\n    handleMoreInfo: PropTypes.func.isRequired,\r\n    moreInfo: PropTypes.bool.isRequired,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedDate, FormattedMessage, FormattedTime} from 'react-intl';\r\nimport {General} from 'mattermost-redux/constants';\r\n\r\nimport {localizeMessage} from 'utils/utils.jsx';\r\nimport {getMonthLong, t} from 'utils/i18n';\r\n\r\nimport MoreInfo from './more_info.jsx';\r\n\r\nexport default class ActivityLog extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * The index of this instance within the list\r\n         */\r\n        index: PropTypes.number.isRequired,\r\n\r\n        /**\r\n         * The current locale of the user\r\n         */\r\n        locale: PropTypes.string.isRequired,\r\n\r\n        /**\r\n         * The session that's to be displayed\r\n         */\r\n        currentSession: PropTypes.object.isRequired,\r\n\r\n        /**\r\n         * Function to revoke session\r\n         */\r\n        submitRevoke: PropTypes.func.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            moreInfo: false,\r\n        };\r\n    }\r\n\r\n    handleMoreInfo = () => {\r\n        this.setState({moreInfo: true});\r\n    }\r\n\r\n    submitRevoke = (e) => {\r\n        this.props.submitRevoke(this.props.currentSession.id, e);\r\n    }\r\n\r\n    isMobileSession = (session) => {\r\n        return session.device_id && (session.device_id.includes('apple') || session.device_id.includes('android'));\r\n    };\r\n\r\n    mobileSessionInfo = (session) => {\r\n        let deviceTypeId;\r\n        let deviceTypeMessage;\r\n        let devicePicture;\r\n        let deviceTitle;\r\n\r\n        if (session.device_id.includes('apple')) {\r\n            devicePicture = 'fa fa-apple';\r\n            deviceTitle = localizeMessage('device_icons.apple', 'Apple Icon');\r\n            deviceTypeId = t('activity_log_modal.iphoneNativeClassicApp');\r\n            deviceTypeMessage = 'iPhone Native Classic App';\r\n\r\n            if (session.device_id.includes(General.PUSH_NOTIFY_APPLE_REACT_NATIVE)) {\r\n                deviceTypeId = t('activity_log_modal.iphoneNativeApp');\r\n                deviceTypeMessage = 'iPhone Native App';\r\n            }\r\n        } else if (session.device_id.includes('android')) {\r\n            devicePicture = 'fa fa-android';\r\n            deviceTitle = localizeMessage('device_icons.android', 'Android Icon');\r\n            deviceTypeId = t('activity_log_modal.androidNativeClassicApp');\r\n            deviceTypeMessage = 'Android Native Classic App';\r\n\r\n            if (session.device_id.includes(General.PUSH_NOTIFY_ANDROID_REACT_NATIVE)) {\r\n                deviceTypeId = t('activity_log_modal.androidNativeApp');\r\n                deviceTypeMessage = 'Android Native App';\r\n            }\r\n        }\r\n\r\n        return {\r\n            devicePicture,\r\n            deviceTitle,\r\n            devicePlatform: (\r\n                <FormattedMessage\r\n                    id={deviceTypeId}\r\n                    defaultMessage={deviceTypeMessage}\r\n                />\r\n            ),\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            index,\r\n            locale,\r\n            currentSession,\r\n        } = this.props;\r\n\r\n        const lastAccessTime = new Date(currentSession.last_activity_at);\r\n        let devicePlatform = currentSession.props.platform;\r\n        let devicePicture = '';\r\n        let deviceTitle = '';\r\n\r\n        if (currentSession.props.platform === 'Windows') {\r\n            devicePicture = 'fa fa-windows';\r\n            deviceTitle = localizeMessage('device_icons.windows', 'Windows Icon');\r\n        } else if (this.isMobileSession(currentSession)) {\r\n            const sessionInfo = this.mobileSessionInfo(currentSession);\r\n            devicePicture = sessionInfo.devicePicture;\r\n            devicePlatform = sessionInfo.devicePlatform;\r\n        } else if (currentSession.props.platform === 'Macintosh' ||\r\n            currentSession.props.platform === 'iPhone') {\r\n            devicePicture = 'fa fa-apple';\r\n            deviceTitle = localizeMessage('device_icons.apple', 'Apple Icon');\r\n        } else if (currentSession.props.platform === 'Linux') {\r\n            if (currentSession.props.os.indexOf('Android') >= 0) {\r\n                devicePlatform = (\r\n                    <FormattedMessage\r\n                        id='activity_log_modal.android'\r\n                        defaultMessage='Android'\r\n                    />\r\n                );\r\n                devicePicture = 'fa fa-android';\r\n                deviceTitle = localizeMessage('device_icons.android', 'Android Icon');\r\n            } else {\r\n                devicePicture = 'fa fa-linux';\r\n                deviceTitle = localizeMessage('device_icons.linux', 'Linux Icon');\r\n            }\r\n        } else if (currentSession.props.os.indexOf('Linux') !== -1) {\r\n            devicePicture = 'fa fa-linux';\r\n            deviceTitle = localizeMessage('device_icons.linux', 'Linux Icon');\r\n        }\r\n\r\n        if (currentSession.props.browser.indexOf('Desktop App') !== -1) {\r\n            devicePlatform = (\r\n                <FormattedMessage\r\n                    id='activity_log_modal.desktop'\r\n                    defaultMessage='Native Desktop App'\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div\r\n                key={'activityLogEntryKey' + index}\r\n                className='activity-log__table'\r\n            >\r\n                <div className='activity-log__report'>\r\n                    <div className='report__platform'>\r\n                        <i\r\n                            className={devicePicture}\r\n                            title={deviceTitle}\r\n                        />{devicePlatform}\r\n                    </div>\r\n                    <div className='report__info'>\r\n                        <div>\r\n                            <FormattedMessage\r\n                                id='activity_log.lastActivity'\r\n                                defaultMessage='Last activity: {date}, {time}'\r\n                                values={{\r\n                                    date: (\r\n                                        <FormattedDate\r\n                                            value={lastAccessTime}\r\n                                            day='2-digit'\r\n                                            month={getMonthLong(locale)}\r\n                                            year='numeric'\r\n                                        />\r\n                                    ),\r\n                                    time: (\r\n                                        <FormattedTime\r\n                                            value={lastAccessTime}\r\n                                            hour='2-digit'\r\n                                            minute='2-digit'\r\n                                        />\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <MoreInfo\r\n                            locale={locale}\r\n                            currentSession={currentSession}\r\n                            moreInfo={this.state.moreInfo}\r\n                            handleMoreInfo={this.handleMoreInfo}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='activity-log__action'>\r\n                    <button\r\n                        onClick={this.submitRevoke}\r\n                        className='btn btn-primary'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='activity_log.logout'\r\n                            defaultMessage='Logout'\r\n                        />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport $ from 'jquery';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Modal} from 'react-bootstrap';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {isMobile} from 'utils/utils.jsx';\r\nimport ActivityLog from 'components/activity_log_modal/components/activity_log.jsx';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\n\r\nexport default class ActivityLogModal extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * The current user id\r\n         */\r\n        currentUserId: PropTypes.string.isRequired,\r\n\r\n        /**\r\n         * Current user's sessions\r\n         */\r\n        sessions: PropTypes.oneOfType([\r\n            PropTypes.array,\r\n            PropTypes.object,\r\n        ]).isRequired,\r\n\r\n        /**\r\n         * Current user's locale\r\n         */\r\n        locale: PropTypes.string.isRequired,\r\n\r\n        /**\r\n         * Function that's called when user closes the modal\r\n         */\r\n        onHide: PropTypes.func.isRequired,\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n             * Function to refresh sessions from server\r\n             */\r\n            getSessions: PropTypes.func.isRequired,\r\n\r\n            /**\r\n             * Function to revoke a particular session\r\n             */\r\n            revokeSession: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: true,\r\n        };\r\n    }\r\n\r\n    submitRevoke = (altId, e) => {\r\n        e.preventDefault();\r\n        var modalContent = $(e.target).closest('.modal-content');\r\n        modalContent.addClass('animation--highlight');\r\n        setTimeout(() => {\r\n            modalContent.removeClass('animation--highlight');\r\n        }, 1500);\r\n        this.props.actions.revokeSession(this.props.currentUserId, altId).then(() => {\r\n            this.props.actions.getSessions(this.props.currentUserId);\r\n        });\r\n    }\r\n\r\n    onShow = () => {\r\n        this.props.actions.getSessions(this.props.currentUserId);\r\n        if (!isMobile()) {\r\n            $('.modal-body').perfectScrollbar();\r\n        }\r\n    }\r\n\r\n    onHide = () => {\r\n        this.setState({show: false});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onShow();\r\n    }\r\n\r\n    render() {\r\n        let content;\r\n        if (this.props.sessions.loading) {\r\n            content = <LoadingScreen/>;\r\n        } else {\r\n            const activityList = this.props.sessions.reduce((array, currentSession, index) => {\r\n                if (currentSession.props.type === 'UserAccessToken') {\r\n                    return array;\r\n                }\r\n\r\n                array.push(\r\n                    <ActivityLog\r\n                        key={currentSession.id}\r\n                        index={index}\r\n                        locale={this.props.locale}\r\n                        currentSession={currentSession}\r\n                        submitRevoke={this.submitRevoke}\r\n                    />\r\n                );\r\n                return array;\r\n            }, []);\r\n\r\n            content = <form role='form'>{activityList}</form>;\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                dialogClassName='modal--scroll'\r\n                show={this.state.show}\r\n                onHide={this.onHide}\r\n                onExited={this.props.onHide}\r\n                bsSize='large'\r\n                role='dialog'\r\n                aria-labelledby='activityLogModalLabel'\r\n            >\r\n                <Modal.Header closeButton={true}>\r\n                    <Modal.Title\r\n                        componentClass='h1'\r\n                        id='activityLogModalLabel'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='activity_log.activeSessions'\r\n                            defaultMessage='Active Sessions'\r\n                        />\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body ref='modalBody'>\r\n                    <p className='session-help-text'>\r\n                        <FormattedMessage\r\n                            id='activity_log.sessionsDescription'\r\n                            defaultMessage=\"Sessions are created when you log in to a new browser on a device. Sessions let you use Mattermost without having to log in again for a time period specified by the System Admin. If you want to log out sooner, use the 'Logout' button below to end a session.\"\r\n                        />\r\n                    </p>\r\n                    {content}\r\n                </Modal.Body>\r\n                <Modal.Footer className='modal-footer--invisible'>\r\n                    <button\r\n                        id='closeModalButton'\r\n                        type='button'\r\n                        className='btn btn-link'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='general_button.close'\r\n                            defaultMessage='Close'\r\n                        />\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getSessions, revokeSession} from 'mattermost-redux/actions/users';\r\nimport {getCurrentUserId, getUserSessions} from 'mattermost-redux/selectors/entities/users';\r\n\r\nimport {getCurrentLocale} from 'selectors/i18n';\r\n\r\nimport ActivityLogModal from './activity_log_modal.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        currentUserId: getCurrentUserId(state),\r\n        sessions: getUserSessions(state),\r\n        locale: getCurrentLocale(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getSessions,\r\n            revokeSession,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityLogModal);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport $ from 'jquery';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Modal} from 'react-bootstrap';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {isMobile} from 'utils/utils.jsx';\r\nimport AuditTable from 'components/audit_table';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\n\r\nexport default class AccessHistoryModal extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * Function that's called when modal is closed\r\n         */\r\n        onHide: PropTypes.func.isRequired,\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n             * Function to fetch the user's audits\r\n             */\r\n            getUserAudits: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n\r\n        /**\r\n         * The current user's audits\r\n         */\r\n        userAudits: PropTypes.array.isRequired,\r\n\r\n        /**\r\n         * The current user id\r\n         */\r\n        currentUserId: PropTypes.string.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: true,\r\n        };\r\n    }\r\n\r\n    onShow = () => {\r\n        this.props.actions.getUserAudits(this.props.currentUserId, 0, 200);\r\n        if (!isMobile()) {\r\n            $('.modal-body').perfectScrollbar();\r\n        }\r\n    }\r\n\r\n    onHide = () => {\r\n        this.setState({show: false});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onShow();\r\n    }\r\n\r\n    render() {\r\n        let content;\r\n        if (this.props.userAudits.length === 0) {\r\n            content = (<LoadingScreen/>);\r\n        } else {\r\n            content = (\r\n                <AuditTable\r\n                    audits={this.props.userAudits}\r\n                    showIp={true}\r\n                    showSession={true}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                dialogClassName='modal--scroll'\r\n                show={this.state.show}\r\n                onHide={this.onHide}\r\n                onExited={this.props.onHide}\r\n                bsSize='large'\r\n                role='dialog'\r\n                aria-labelledby='accessHistoryModalLabel'\r\n            >\r\n                <Modal.Header closeButton={true}>\r\n                    <Modal.Title\r\n                        componentClass='h1'\r\n                        id='accessHistoryModalLabel'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='access_history.title'\r\n                            defaultMessage='Access History'\r\n                        />\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body ref='modalBody'>\r\n                    {content}\r\n                </Modal.Body>\r\n                <Modal.Footer className='modal-footer--invisible'>\r\n                    <button\r\n                        id='closeModalButton'\r\n                        type='button'\r\n                        className='btn btn-link'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='general_button.close'\r\n                            defaultMessage='Close'\r\n                        />\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getUserAudits} from 'mattermost-redux/actions/users';\r\nimport {getCurrentUserId, getUserAudits as getCurrentUserAudits} from 'mattermost-redux/selectors/entities/users';\r\n\r\nimport AccessHistoryModal from './access_history_modal.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        currentUserId: getCurrentUserId(state),\r\n        userAudits: getCurrentUserAudits(state) || [],\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getUserAudits,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccessHistoryModal);\r\n"],"sourceRoot":""}