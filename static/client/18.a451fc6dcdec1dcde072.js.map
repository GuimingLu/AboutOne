{"version":3,"sources":["webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png","webpack:///./components/do_verify_email/do_verify_email.jsx","webpack:///./components/do_verify_email/index.js"],"names":["BackButton","React","PureComponent","render","props","onClick","url","title","PropTypes","string","func","DoVerifyEmail","constructor","actions","verifyUserEmail","verify","URLSearchParams","location","search","get","data","handleSuccess","error","handleError","VerifyEmailErrors","FAILED_EMAIL_VERIFICATION","state","verifyStatus","serverError","UNSAFE_componentWillMount","verifyEmail","handleRedirect","isLoggedIn","GlobalActions","browserHistory","push","encodeURIComponent","setState","clearErrors","logError","message","AnnouncementBarMessages","EMAIL_VERIFIED","type","AnnouncementBarTypes","SUCCESS","trackEvent","getMe","then","err","FAILED_USER_STATE_GET","logoImage","siteName","object","isRequired","shape","user","email_verified","bool","defaultProps","mapStateToProps","config","getConfig","SiteName","Boolean","getCurrentUserId","getCurrentUser","mapDispatchToProps","dispatch","bindActionCreators","connect"],"mappings":"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","file":"18.a451fc6dcdec1dcde072.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class BackButton extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * URL to return to\r\n         */\r\n        url: PropTypes.string,\r\n\r\n        /**\r\n         * An optional click handler that will trigger when the user clicks on the back button\r\n         */\r\n        onClick: PropTypes.func,\r\n    };\r\n\r\n    static defaultProps = {\r\n        url: '/',\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                id='back_button'\r\n                className='signup-header'\r\n            >\r\n                <Link\r\n                    onClick={this.props.onClick}\r\n                    to={this.props.url}\r\n                >\r\n                    <FormattedMessage\r\n                        id='generic_icons.back'\r\n                        defaultMessage='Back Icon'\r\n                    >\r\n                        {(title) => (\r\n                            <span\r\n                                id='back_button_icon'\r\n                                className='fa fa-1x fa-angle-left'\r\n                                title={title}\r\n                            />\r\n                        )}\r\n                    </FormattedMessage>\r\n                    <FormattedMessage\r\n                        id='web.header.back'\r\n                        defaultMessage='Back'\r\n                    />\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"files/87b80d01a017833f1357800bfca49cea.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport {AnnouncementBarTypes, AnnouncementBarMessages, VerifyEmailErrors} from 'utils/constants.jsx';\r\nimport logoImage from 'images/logo.png';\r\nimport BackButton from 'components/common/back_button.jsx';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\n\r\nimport * as GlobalActions from 'actions/global_actions.jsx';\r\n\r\nexport default class DoVerifyEmail extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * Object with validation parameters given in link\r\n         */\r\n        location: PropTypes.object.isRequired,\r\n\r\n        /**\r\n         * Title of the app or site.\r\n         */\r\n        siteName: PropTypes.string,\r\n\r\n        /*\r\n         * Object with redux action creators\r\n         */\r\n        actions: PropTypes.shape({\r\n\r\n            /*\r\n             * Action creator to verify the user's email\r\n             */\r\n            verifyUserEmail: PropTypes.func.isRequired,\r\n\r\n            /*\r\n             * Action creator to update the user in the redux store\r\n             */\r\n            getMe: PropTypes.func.isRequired,\r\n            logError: PropTypes.func.isRequired,\r\n            clearErrors: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n\r\n        /**\r\n         * Object reprenseting the current user\r\n         */\r\n        user: PropTypes.shape({\r\n            email_verified: PropTypes.bool,\r\n        }),\r\n\r\n        isLoggedIn: PropTypes.bool.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            verifyStatus: 'pending',\r\n            serverError: '',\r\n        };\r\n    }\r\n\r\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\r\n        this.verifyEmail();\r\n    }\r\n\r\n    handleRedirect() {\r\n        if (this.props.isLoggedIn) {\r\n            GlobalActions.redirectUserToDefaultTeam();\r\n        } else {\r\n            browserHistory.push('/login?extra=verified&email=' + encodeURIComponent((new URLSearchParams(this.props.location.search)).get('email')));\r\n        }\r\n    }\r\n\r\n    handleSuccess() {\r\n        this.setState({verifyStatus: 'success'});\r\n        this.props.actions.clearErrors();\r\n        if (this.props.isLoggedIn) {\r\n            this.props.actions.logError({\r\n                message: AnnouncementBarMessages.EMAIL_VERIFIED,\r\n                type: AnnouncementBarTypes.SUCCESS,\r\n            }, true);\r\n            trackEvent('settings', 'verify_email');\r\n            this.props.actions.getMe().then(({data, error: err}) => {\r\n                if (data) {\r\n                    this.handleRedirect();\r\n                } else if (err) {\r\n                    this.handleError(VerifyEmailErrors.FAILED_USER_STATE_GET);\r\n                }\r\n            });\r\n        } else {\r\n            this.handleRedirect();\r\n        }\r\n    }\r\n\r\n    handleError(type) {\r\n        let serverError = '';\r\n        if (type === VerifyEmailErrors.FAILED_EMAIL_VERIFICATION) {\r\n            serverError = (\r\n                <FormattedMessage\r\n                    id='signup_user_completed.invalid_invite'\r\n                    defaultMessage='The invite link was invalid. Please speak with your Administrator to receive an invitation.'\r\n                />\r\n            );\r\n        } else if (type === VerifyEmailErrors.FAILED_USER_STATE_GET) {\r\n            serverError = (\r\n                <FormattedMessage\r\n                    id='signup_user_completed.failed_update_user_state'\r\n                    defaultMessage='Please clear your cache and try to log in.'\r\n                />\r\n            );\r\n        }\r\n        this.setState({\r\n            verifyStatus: 'failure',\r\n            serverError,\r\n        });\r\n    }\r\n\r\n    verifyEmail = async () => {\r\n        const {actions: {verifyUserEmail}} = this.props;\r\n        const verify = await verifyUserEmail((new URLSearchParams(this.props.location.search)).get('token'));\r\n\r\n        if (verify && verify.data) {\r\n            this.handleSuccess();\r\n        } else if (verify && verify.error) {\r\n            this.handleError(VerifyEmailErrors.FAILED_EMAIL_VERIFICATION);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.verifyStatus !== 'failure') {\r\n            return (<LoadingScreen/>);\r\n        }\r\n\r\n        let serverError = null;\r\n        if (this.state.serverError) {\r\n            serverError = (\r\n                <div className={'form-group has-error'}>\r\n                    <label className='control-label'>{this.state.serverError}</label>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <BackButton/>\r\n                <div className='col-sm-12'>\r\n                    <div className='signup-team__container'>\r\n                        <img\r\n                            alt={'signup team logo'}\r\n                            className='signup-team-logo'\r\n                            src={logoImage}\r\n                        />\r\n                        <div className='signup__content'>\r\n                            <h1>{this.props.siteName}</h1>\r\n                            <h4 className='color--light'>\r\n                                <FormattedMessage\r\n                                    id='web.root.signup_info'\r\n                                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\r\n                                />\r\n                            </h4>\r\n                            {serverError}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDoVerifyEmail.defaultProps = {\r\n    location: {},\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {verifyUserEmail, getMe} from 'mattermost-redux/actions/users';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {getCurrentUserId, getCurrentUser} from 'mattermost-redux/selectors/entities/users';\r\nimport {clearErrors, logError} from 'mattermost-redux/actions/errors';\r\n\r\nimport DoVerifyEmail from './do_verify_email.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n    const siteName = config.SiteName;\r\n    return {\r\n        isLoggedIn: Boolean(getCurrentUserId(state)),\r\n        siteName,\r\n        user: getCurrentUser(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            verifyUserEmail,\r\n            getMe,\r\n            logError,\r\n            clearErrors,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoVerifyEmail);\r\n"],"sourceRoot":""}