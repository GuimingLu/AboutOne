{"version":3,"sources":["webpack:///buffer (ignored)","webpack:///crypto (ignored)","webpack:///./components/error_page/error_title.jsx","webpack:///./components/error_page/error_link.jsx","webpack:///./components/error_page/error_message.jsx","webpack:///./components/error_page/error_page.jsx","webpack:///./components/error_page/index.jsx"],"names":["ErrorTitle","type","title","errorTitle","ErrorPageTypes","LOCAL_STORAGE","PERMALINK_NOT_FOUND","OAUTH_ACCESS_DENIED","OAUTH_MISSING_CODE","TEAM_NOT_FOUND","CHANNEL_NOT_FOUND","PAGE_NOT_FOUND","Utils","propTypes","PropTypes","string","ErrorLink","url","messageId","defaultMessage","isRequired","defaultProps","ErrorMessage","message","service","errorMessage","link","t","ErrorPage","React","PureComponent","componentDidMount","document","body","setAttribute","componentWillUnmount","removeAttribute","render","params","URLSearchParams","props","location","search","signature","get","trustParams","delete","key","asymmetricSigningPublicKey","keyPEM","verify","crypto","createVerify","update","toString","returnTo","backButton","siteName","defaultChannelName","Constants","DEFAULT_CHANNEL_UI_NAME","object","mapStateToProps","state","config","getConfig","SiteName","AsymmetricSigningPublicKey","connect"],"mappings":"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","file":"20.b15ee0facfaf1eb8b4fa.js","sourcesContent":["/* (ignored) */","/* (ignored) */","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {ErrorPageTypes} from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nexport default function ErrorTitle({type, title}) {\r\n    let errorTitle = null;\r\n    if (type) {\r\n        switch (type) {\r\n        case ErrorPageTypes.LOCAL_STORAGE:\r\n            errorTitle = (\r\n                <FormattedMessage\r\n                    id='error.local_storage.title'\r\n                    defaultMessage='Cannot Load Mattermost'\r\n                />\r\n            );\r\n            break;\r\n        case ErrorPageTypes.PERMALINK_NOT_FOUND:\r\n            errorTitle = (\r\n                <FormattedMessage\r\n                    id='permalink.error.title'\r\n                    defaultMessage='Message Not Found'\r\n                />\r\n            );\r\n            break;\r\n        case ErrorPageTypes.OAUTH_ACCESS_DENIED:\r\n            errorTitle = (\r\n                <FormattedMessage\r\n                    id='error.oauth_access_denied.title'\r\n                    defaultMessage='Authorization Error'\r\n                />\r\n            );\r\n            break;\r\n        case ErrorPageTypes.OAUTH_MISSING_CODE:\r\n            errorTitle = (\r\n                <FormattedMessage\r\n                    id='error.oauth_missing_code.title'\r\n                    defaultMessage='Mattermost needs your help'\r\n                />\r\n            );\r\n            break;\r\n        case ErrorPageTypes.TEAM_NOT_FOUND:\r\n            errorTitle = (\r\n                <FormattedMessage\r\n                    id='error.team_not_found.title'\r\n                    defaultMessage='Team Not Found'\r\n                />\r\n            );\r\n            break;\r\n        case ErrorPageTypes.CHANNEL_NOT_FOUND:\r\n            errorTitle = (\r\n                <FormattedMessage\r\n                    id='error.channel_not_found.title'\r\n                    defaultMessage='Channel Not Found'\r\n                />\r\n            );\r\n            break;\r\n        case ErrorPageTypes.PAGE_NOT_FOUND:\r\n        default:\r\n            errorTitle = (\r\n                <FormattedMessage\r\n                    id='error.not_found.title'\r\n                    defaultMessage='Page Not Found'\r\n                />\r\n            );\r\n        }\r\n    } else if (title) {\r\n        errorTitle = title;\r\n    } else {\r\n        errorTitle = Utils.localizeMessage('error.generic.title', 'Error');\r\n    }\r\n\r\n    return errorTitle;\r\n}\r\n\r\nErrorTitle.propTypes = {\r\n\r\n    /*\r\n    * Error type\r\n    */\r\n    type: PropTypes.string,\r\n\r\n    /*\r\n    * Error title\r\n    */\r\n    title: PropTypes.string,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default function ErrorLink({url, messageId, defaultMessage}) {\r\n    return (\r\n        <a\r\n            href={url}\r\n            rel='noopener noreferrer'\r\n            target='_blank'\r\n        >\r\n            <FormattedMessage\r\n                id={messageId}\r\n                defaultMessage={defaultMessage}\r\n            />\r\n        </a>\r\n    );\r\n}\r\n\r\nErrorLink.propTypes = {\r\n    url: PropTypes.string.isRequired,\r\n    messageId: PropTypes.string.isRequired,\r\n    defaultMessage: PropTypes.string.isRequired,\r\n};\r\n\r\nErrorLink.defaultProps = {\r\n    url: '',\r\n    messageId: '',\r\n    defaultMessage: '',\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {ErrorPageTypes} from 'utils/constants.jsx';\r\nimport {t} from 'utils/i18n';\r\n\r\nimport ErrorLink from './error_link.jsx';\r\n\r\nexport default function ErrorMessage({type, message, service}) {\r\n    let errorMessage = null;\r\n    if (type) {\r\n        switch (type) {\r\n        case ErrorPageTypes.LOCAL_STORAGE:\r\n            errorMessage = (\r\n                <div>\r\n                    <FormattedMessage\r\n                        id='error.local_storage.message'\r\n                        defaultMessage='Mattermost was unable to load because a setting in your browser prevents the use of its local storage features. To allow Mattermost to load, try the following actions:'\r\n                    />\r\n                    <ul>\r\n                        <li>\r\n                            <FormattedMessage\r\n                                id='error.local_storage.help1'\r\n                                defaultMessage='Enable cookies'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <FormattedMessage\r\n                                id='error.local_storage.help2'\r\n                                defaultMessage='Turn off private browsing'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <FormattedMessage\r\n                                id='error.local_storage.help3'\r\n                                defaultMessage='Use a supported browser (IE 11, Chrome 61+, Firefox 60+, Safari 12+, Edge 42+)'\r\n                            />\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            );\r\n            break;\r\n        case ErrorPageTypes.PERMALINK_NOT_FOUND:\r\n            errorMessage = (\r\n                <p>\r\n                    <FormattedMessage\r\n                        id='permalink.error.access'\r\n                        defaultMessage='Permalink belongs to a deleted message or to a channel to which you do not have access.'\r\n                    />\r\n                </p>\r\n            );\r\n            break;\r\n        case ErrorPageTypes.TEAM_NOT_FOUND:\r\n            errorMessage = (\r\n                <p>\r\n                    <FormattedMessage\r\n                        id='error.team_not_found.message'\r\n                        defaultMessage=\"The team you're requesting is private or does not exist. Please contact your Administrator for an invitation.\"\r\n                    />\r\n                </p>\r\n            );\r\n            break;\r\n        case ErrorPageTypes.CHANNEL_NOT_FOUND:\r\n            errorMessage = (\r\n                <p>\r\n                    <FormattedMessage\r\n                        id='error.channel_not_found.message'\r\n                        defaultMessage=\"The team you're requesting is private or does not exist. Please contact your Administrator for an invitation.\"\r\n                    />\r\n                </p>\r\n            );\r\n            break;\r\n        case ErrorPageTypes.OAUTH_MISSING_CODE:\r\n            errorMessage = (\r\n                <div>\r\n                    <p>\r\n                        <FormattedMessage\r\n                            id='error.oauth_missing_code'\r\n                            defaultMessage='The service provider {service} did not provide an authorization code in the redirect URL.'\r\n                            values={{\r\n                                service,\r\n                            }}\r\n                        />\r\n                    </p>\r\n                    <p>\r\n                        <FormattedMessage\r\n                            id='error.oauth_missing_code.google'\r\n                            defaultMessage='For {link} make sure your administrator enabled the Google+ API.'\r\n                            values={{\r\n                                link: (\r\n                                    <ErrorLink\r\n                                        url={'https://docs.mattermost.com/deployment/sso-google.html'}\r\n                                        messageId={t('error.oauth_missing_code.google.link')}\r\n                                        defaultMessage={'Google Apps'}\r\n                                    />\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </p>\r\n                    <p>\r\n                        <FormattedMessage\r\n                            id='error.oauth_missing_code.office365'\r\n                            defaultMessage='For {link} make sure the administrator of your Microsoft organization has enabled the Mattermost app.'\r\n                            values={{\r\n                                link: (\r\n                                    <ErrorLink\r\n                                        url={'https://docs.mattermost.com/deployment/sso-office.html'}\r\n                                        messageId={t('error.oauth_missing_code.office365.link')}\r\n                                        defaultMessage={'Office 365'}\r\n                                    />\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </p>\r\n                    <p>\r\n                        <FormattedMessage\r\n                            id='error.oauth_missing_code.gitlab'\r\n                            defaultMessage='For {link} please make sure you followed the setup instructions.'\r\n                            values={{\r\n                                link: (\r\n                                    <ErrorLink\r\n                                        url={'https://docs.mattermost.com/deployment/sso-gitlab.html'}\r\n                                        messageId={t('error.oauth_missing_code.gitlab.link')}\r\n                                        defaultMessage={'GitLab'}\r\n                                    />\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </p>\r\n                    <p>\r\n                        <FormattedMessage\r\n                            id='error.oauth_missing_code.forum'\r\n                            defaultMessage=\"If you reviewed the above and are still having trouble with configuration, you may post in our {link} where we'll be happy to help with issues during setup.\"\r\n                            values={{\r\n                                link: (\r\n                                    <ErrorLink\r\n                                        url={'https://forum.mattermost.org/c/trouble-shoot'}\r\n                                        messageId={t('error.oauth_missing_code.forum.link')}\r\n                                        defaultMessage={'Troubleshooting forum'}\r\n                                    />\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </p>\r\n                </div>\r\n            );\r\n            break;\r\n        case ErrorPageTypes.OAUTH_ACCESS_DENIED:\r\n            errorMessage = (\r\n                <p>\r\n                    <FormattedMessage\r\n                        id='error.oauth_access_denied'\r\n                        defaultMessage='You must authorize Mattermost to log in with {service}.'\r\n                        values={{\r\n                            service,\r\n                        }}\r\n                    />\r\n                </p>\r\n            );\r\n            break;\r\n        case ErrorPageTypes.PAGE_NOT_FOUND:\r\n        default:\r\n            errorMessage = (\r\n                <p>\r\n                    <FormattedMessage\r\n                        id='error.not_found.message'\r\n                        defaultMessage='The page you were trying to reach does not exist'\r\n                    />\r\n                </p>\r\n            );\r\n        }\r\n    } else if (message) {\r\n        errorMessage = (\r\n            <p>\r\n                {message}\r\n            </p>\r\n        );\r\n    } else {\r\n        errorMessage = (\r\n            <p>\r\n                <FormattedMessage\r\n                    id='error.generic.message'\r\n                    defaultMessage='An error has occurred.'\r\n                />\r\n            </p>\r\n        );\r\n    }\r\n\r\n    return errorMessage;\r\n}\r\n\r\nErrorMessage.propTypes = {\r\n\r\n    /*\r\n    * Error type\r\n    */\r\n    type: PropTypes.string,\r\n\r\n    /*\r\n    * Error message\r\n    */\r\n    message: PropTypes.string,\r\n\r\n    /*\r\n    * Service provider\r\n    */\r\n    service: PropTypes.string,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport crypto from 'crypto';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {ErrorPageTypes, Constants} from 'utils/constants.jsx';\r\nimport WarningIcon from 'components/icon/warning_icon';\r\n\r\nimport ErrorTitle from './error_title.jsx';\r\nimport ErrorMessage from './error_message.jsx';\r\n\r\nexport default class ErrorPage extends React.PureComponent {\r\n    static propTypes = {\r\n        location: PropTypes.object.isRequired,\r\n        asymmetricSigningPublicKey: PropTypes.string,\r\n        siteName: PropTypes.string,\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.body.setAttribute('class', 'sticky error');\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.body.removeAttribute('class');\r\n    }\r\n\r\n    render() {\r\n        const params = new URLSearchParams(this.props.location.search);\r\n        const signature = params.get('s');\r\n\r\n        var trustParams = false;\r\n        if (signature) {\r\n            params.delete('s');\r\n\r\n            const key = this.props.asymmetricSigningPublicKey;\r\n            const keyPEM = '-----BEGIN PUBLIC KEY-----\\n' + key + '\\n-----END PUBLIC KEY-----';\r\n\r\n            const verify = crypto.createVerify('sha256');\r\n            verify.update('/error?' + params.toString());\r\n            trustParams = verify.verify(keyPEM, signature, 'base64');\r\n        }\r\n\r\n        const type = params.get('type');\r\n        const title = (trustParams && params.get('title')) || '';\r\n        const message = (trustParams && params.get('message')) || '';\r\n        const service = (trustParams && params.get('service')) || '';\r\n        const returnTo = (trustParams && params.get('returnTo')) || '';\r\n\r\n        let backButton;\r\n        if (type === ErrorPageTypes.PERMALINK_NOT_FOUND && returnTo) {\r\n            backButton = (\r\n                <Link to={returnTo}>\r\n                    <FormattedMessage\r\n                        id='error.generic.link'\r\n                        defaultMessage='Back to Mattermost'\r\n                    />\r\n                </Link>\r\n            );\r\n        } else if (type === ErrorPageTypes.TEAM_NOT_FOUND) {\r\n            backButton = (\r\n                <Link to='/'>\r\n                    <FormattedMessage\r\n                        id='error.generic.link'\r\n                        defaultMessage='Back to {siteName}'\r\n                        values={{\r\n                            siteName: this.props.siteName,\r\n                        }}\r\n                    />\r\n                </Link>\r\n            );\r\n        } else if (type === ErrorPageTypes.CHANNEL_NOT_FOUND) {\r\n            backButton = (\r\n                <Link to={params.get('returnTo')}>\r\n                    <FormattedMessage\r\n                        id='error.channelNotFound.link'\r\n                        defaultMessage='Back to {defaultChannelName}'\r\n                        values={{\r\n                            defaultChannelName: Constants.DEFAULT_CHANNEL_UI_NAME,\r\n                        }}\r\n                    />\r\n                </Link>\r\n            );\r\n        } else if (type === ErrorPageTypes.OAUTH_ACCESS_DENIED || type === ErrorPageTypes.OAUTH_MISSING_CODE) {\r\n            backButton = (\r\n                <Link to='/'>\r\n                    <FormattedMessage\r\n                        id='error.generic.link_login'\r\n                        defaultMessage='Back to login page'\r\n                    />\r\n                </Link>\r\n            );\r\n        } else {\r\n            backButton = (\r\n                <Link to='/'>\r\n                    <FormattedMessage\r\n                        id='error.generic.link'\r\n                        defaultMessage='Back to {siteName}'\r\n                        values={{\r\n                            siteName: this.props.siteName,\r\n                        }}\r\n                    />\r\n                </Link>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='container-fluid'>\r\n                <div className='error__container'>\r\n                    <div className='error__icon'>\r\n                        <WarningIcon/>\r\n                    </div>\r\n                    <h2>\r\n                        <ErrorTitle\r\n                            type={type}\r\n                            title={title}\r\n                        />\r\n                    </h2>\r\n                    <ErrorMessage\r\n                        type={type}\r\n                        message={message}\r\n                        service={service}\r\n                    />\r\n                    {backButton}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport ErrorPage from './error_page.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n\r\n    return {\r\n        siteName: config.SiteName,\r\n        asymmetricSigningPublicKey: config.AsymmetricSigningPublicKey,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ErrorPage);\r\n"],"sourceRoot":""}