{"version":3,"sources":["webpack:///./components/icon/next_icon.jsx","webpack:///./components/icon/previous_icon.jsx","webpack:///./mattermost-redux/selectors/entities/integrations.js","webpack:///./mattermost-redux/selectors/entities/bots.js","webpack:///./mattermost-redux/actions/bots.js","webpack:///./images/bot_default_icon.png","webpack:///./images/oauth_icon.png","webpack:///./images/slash_command_icon.jpg","webpack:///./components/icon/search_icon.jsx","webpack:///./components/backstage/components/backstage_list.jsx","webpack:///./components/integrations/bots/bot.jsx","webpack:///./components/integrations/bots/bots.jsx","webpack:///./components/integrations/bots/index.js","webpack:///./components/backstage/components/backstage_header.jsx","webpack:///./components/integrations/bots/add_bot/add_bot.jsx","webpack:///./components/integrations/bots/add_bot/index.js","webpack:///./components/integrations/integration_option.jsx","webpack:///./components/integrations/integrations.jsx","webpack:///./components/integrations/index.js","webpack:///./components/permissions_gates/any_team_permission_gate/any_team_permission_gate.jsx","webpack:///./components/permissions_gates/any_team_permission_gate/index.js","webpack:///./components/delete_modal_trigger.jsx","webpack:///./components/emoji/delete_emoji_modal.jsx","webpack:///./components/emoji/emoji_list_item/emoji_list_item.jsx","webpack:///./components/emoji/emoji_list_item/index.js","webpack:///./components/emoji/emoji_list/emoji_list.jsx","webpack:///./components/emoji/emoji_list/index.js","webpack:///./components/emoji/emoji_page.jsx","webpack:///./components/emoji/index.js","webpack:///./components/emoji/add_emoji/add_emoji.jsx","webpack:///./components/emoji/add_emoji/index.js","webpack:///./components/copy_text.jsx","webpack:///./components/integrations/delete_integration.jsx","webpack:///./components/integrations/installed_incoming_webhook.jsx","webpack:///./components/integrations/installed_incoming_webhooks/installed_incoming_webhooks.jsx","webpack:///./components/integrations/installed_incoming_webhooks/index.js","webpack:///./components/channel_select/channel_select.jsx","webpack:///./components/channel_select/index.js","webpack:///./components/integrations/abstract_incoming_webhook.jsx","webpack:///./components/integrations/add_incoming_webhook/add_incoming_webhook.jsx","webpack:///./components/integrations/add_incoming_webhook/index.js","webpack:///./components/integrations/edit_incoming_webhook/edit_incoming_webhook.jsx","webpack:///./components/integrations/edit_incoming_webhook/index.js","webpack:///./components/integrations/installed_outgoing_webhook.jsx","webpack:///./components/integrations/installed_outgoing_webhooks/installed_outgoing_webhooks.jsx","webpack:///./components/integrations/installed_outgoing_webhooks/index.js","webpack:///./components/integrations/abstract_outgoing_webhook.jsx","webpack:///./components/integrations/add_outgoing_webhook/add_outgoing_webhook.jsx","webpack:///./components/integrations/add_outgoing_webhook/index.js","webpack:///./components/integrations/edit_outgoing_webhook/edit_outgoing_webhook.jsx","webpack:///./components/integrations/edit_outgoing_webhook/index.js","webpack:///./components/integrations/installed_oauth_app/installed_oauth_app.jsx","webpack:///./components/integrations/installed_oauth_app/index.js","webpack:///./components/integrations/installed_oauth_apps/installed_oauth_apps.jsx","webpack:///./components/integrations/installed_oauth_apps/index.js","webpack:///./components/integrations/abstract_oauth_app.jsx","webpack:///./components/integrations/add_oauth_app/add_oauth_app.jsx","webpack:///./components/integrations/add_oauth_app/index.js","webpack:///./components/integrations/edit_oauth_app/edit_oauth_app.jsx","webpack:///./components/integrations/edit_oauth_app/index.js","webpack:///./components/integrations/installed_command.jsx","webpack:///./components/integrations/installed_commands/installed_commands.jsx","webpack:///./components/integrations/installed_commands/index.js","webpack:///./components/integrations/abstract_command.jsx","webpack:///./components/integrations/add_command/add_command.jsx","webpack:///./components/integrations/add_command/index.js","webpack:///./components/integrations/edit_command/edit_command.jsx","webpack:///./components/integrations/edit_command/index.js","webpack:///./components/integrations/confirm_integration/confirm_integration.jsx","webpack:///./components/integrations/confirm_integration/index.js","webpack:///./components/integrations/commands_container/commands_container.jsx","webpack:///./components/integrations/commands_container/index.js","webpack:///./components/backstage/components/backstage_category.jsx","webpack:///./components/backstage/components/backstage_section.jsx","webpack:///./components/backstage/components/backstage_sidebar.jsx","webpack:///./components/backstage/components/backstage_navbar.jsx","webpack:///./components/backstage/backstage_controller.jsx","webpack:///./components/backstage/index.js"],"names":["NextIcon","React","PureComponent","render","className","props","additionalClassName","title","PropTypes","string","PreviousIcon","Object","defineProperty","exports","value","getIncomingHooks","getOutgoingHooks","getCommands","getOAuthApps","getSystemCommands","getAutocompleteCommandsList","getAllCommands","getOutgoingHooksInCurrentTeam","require","_reselect","_teams","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","configurable","writable","state","entities","integrations","incomingHooks","outgoingHooks","commands","oauthApps","systemCommands","createSelector","getCurrentTeamId","teamId","hooks","values","o","currentTeamId","command","team_id","auto_complete","sort","a","b","display_name","localeCompare","getBotAccounts","bots","accounts","createBot","patchBot","loadBot","loadBots","disableBot","enableBot","assignBot","_client","_action_types","_helpers","BOTS_PER_PAGE_DEFAULT","bot","bindClientFunc","clientFunc","Client4","onSuccess","BotTypes","RECEIVED_BOT_ACCOUNT","params","botUserId","botPatch","getBot","page","undefined","perPage","getBotsIncludeDeleted","RECEIVED_BOT_ACCOUNTS","newOwnerId","SearchIcon","BackstageList","Component","constructor","updateFilter","bind","e","setState","toLowerCase","children","loading","hasChildren","Children","map","child","cloneElement","emptyText","emptyTextSearch","searchTerm","addLink","addText","addButtonId","header","searchPlaceholder","style","search","helpText","oneOfType","node","func","isRequired","bool","Utils","flexGrow","flexShrink","matchesFilter","owner","username","description","displayName","ownerUsername","indexOf","Bot","actions","user_id","id","enableUserAccessToken","disableUserAccessToken","confirmingId","revokeUserAccessToken","closeConfirm","creatingTokenState","token","assign","preventDefault","error","data","createUserAccessToken","message","tokenList","accessTokens","activeLink","disableClass","disabledText","is_active","confirmRevokeToken","options","openCreateToken","team","name","delete_at","handleCreateToken","handleUpdateDescription","closeCreateToken","imageURL","revokeTokenConfirmed","shape","Bots","owners","match","enabledBots","botToJSX","disabledBots","sections","componentDidMount","Constants","Integrations","START_PAGE_NUM","PAGE_SIZE","then","result","promises","getUser","owner_id","getUserAccessTokensForUser","Promise","all","DisabledSection","hasDisabled","botsToDisplay","EnabledSection","createBots","botAccounts","mapStateToProps","config","getConfig","EnableBotAccountCreation","reduce","UserSelectors","admin","userAccessTokensByUser","mapDispatchToProps","dispatch","bindActionCreators","connect","BackstageHeader","propTypes","formatMessage","context","intl","index","defaultMessage","intlShape","roleOptionSystemAdmin","roleOptionMember","AddBot","role","postAll","checked","postChannels","files","pictureFile","previewBlob","URL","createObjectURL","reader","FileReader","onload","e2","orientation","FileUtils","orientationStyles","image","readAsArrayBuffer","BotDefaultIcon","roles","General","SYSTEM_USER_ROLE","SYSTEM_ADMIN_ROLE","SYSTEM_POST_ALL_ROLE","SYSTEM_POST_ALL_PUBLIC_ROLE","rolesResult","updateUserRoles","adding","AcceptedProfileImageTypes","includes","type","size","maxFileSize","imageResult","uploadProfileImage","setDefaultProfileImage","updateRoles","browserHistory","usernameError","tokenResult","UserUtils","subtitle","buttonText","buttonActiveText","removeImageIcon","OVERLAY_TIME_DELAY","setDefault","imageStyles","handleSubmit","updateUsername","updatePicture","updateDisplayName","updateDescription","editingUserHasManageSystem","updateRole","updatePostAll","updatePostChannels","number","ownProps","botId","URLSearchParams","location","get","user","getUsers","parseInt","MaxFileSize","haveISystemPermission","permission","Permissions","MANAGE_SYSTEM","IntegrationOption","link","currentSiteName","siteName","document","enableIncomingWebhooks","enableOutgoingWebhooks","enableCommands","enableOAuthServiceProvider","updateTitle","MANAGE_INCOMING_WEBHOOKS","IncomingWebhookIcon","MANAGE_OUTGOING_WEBHOOKS","OutgoingWebhookIcon","MANAGE_SLASH_COMMANDS","SlashCommandIcon","MANAGE_OAUTH","OAuthIcon","BotAccountsIcon","appDirectory","SiteName","EnableIncomingWebhooks","EnableOutgoingWebhooks","EnableCommands","EnableOAuthServiceProvider","AnyTeamPermissionGate","hasPermission","invert","permissions","arrayOf","teams","getMyTeams","haveITeamPermission","DeleteModalTrigger","showDeleteModal","onDelete","KeyCodes","ENTER","handleConfirm","TypeError","handleOpenModal","triggerTitle","modalTitle","modalMessage","modalConfirmButton","handleCancel","handleKeyDown","DeleteEmoji","EmojiListItem","emoji","deleteCustomEmoji","creatorUsername","creatorDisplayName","deleteButton","creator_id","currentUserId","DELETE_EMOJIS","handleDelete","DELETE_OTHERS_EMOJIS","backgroundImage","getCustomEmojiImageUrl","currentTeam","emojis","customEmoji","emojiId","creator","getDisplayNameByUser","getCurrentUserId","getCurrentTeam","EMOJI_PER_PAGE","EMOJI_SEARCH_DELAY_MILLISECONDS","EmojiList","next","nextLoading","getCustomEmojis","Emoji","SORT_BY_NAME","missingPages","scrollToTop","term","clearTimeout","searchTimeout","setTimeout","trim","searchEmojis","searchCustomEmojis","em","newSearchEmojis","splice","nextButton","previousButton","emojiIds","deleteFromSearch","pageStart","pageEnd","emojisToDisplay","slice","buttonContents","nextPage","previousPage","t","onSearchChange","getCustomEmojiIdsSortedByName","EmojiPage","teamDisplayName","loadRolesIfNeeded","UNSAFE_componentWillReceiveProps","nextProps","CREATE_EMOJIS","teamName","general","AddEmoji","emojiMap","saving","startsWith","endsWith","substring","test","hasSystemEmoji","createCustomEmoji","imageUrl","readAsDataURL","filename","preview","updateName","updateImage","localizeMessage","router","getEmojiMap","CopyText","copyToClipboard","defaultProps","idMessage","queryCommandSupported","tooltip","copyText","DeleteIntegration","messageId","incomingWebhook","channel","channel_id","InstalledIncomingWebhook","canChange","incomingWebhookId","getSiteURL","url","createAt","create_at","InstalledIncomingWebhooks","removeIncomingHook","displayNameA","channelA","channels","displayNameB","incomingWebhooks","incomingWebhookCompare","canManageOthersWebhooks","deleteIncomingWebhook","users","loadIncomingHooksAndProfilesForTeam","buildYourOwn","array","MANAGE_OTHERS_INCOMING_WEBHOOKS","getAllChannels","Actions","ChannelSelect","onChange","selectOpen","selectPrivate","selectDm","channelName","OPEN_CHANNEL","PRIVATE_CHANNEL","DM_CHANNEL","getMyChannelsSorted","getMyChannels","getCurrentUserLocale","locale","sortChannelsByTypeAndDisplayName","AbstractIncomingWebhook","hook","channelId","channelLocked","channel_locked","iconURL","icon_url","serverError","clientError","action","getStateFromHook","initialHook","headerToRender","footerToRender","footer","updateChannelId","updateChannelLocked","enablePostUsernameOverride","enablePostIconOverride","updateIconURL","HEADER","FOOTER","LOADING","AddIncomingWebhook","createIncomingHook","createIncomingHookRequest","addIncomingHook","EnablePostUsernameOverride","EnablePostIconOverride","requests","EditIncomingWebhook","newHook","submitHook","updateIncomingHook","updateIncomingHookRequest","showConfirmModal","getIncomingHook","hookId","editIncomingHook","outgoingWebhook","trigger_words","triggerWords","triggerWord","InstalledOutgoingWebhook","handleRegenToken","onRegenToken","makeDisplayName","triggerWordsFull","triggerWordsStartsWith","join","urls","callback_urls","triggerWhen","trigger_when","contentType","content_type","InstalledOutgoingWebhooks","regenOutgoingHookToken","removeOutgoingHook","outgoingWebhooks","outgoingWebhookCompare","regenOutgoingWebhookToken","loadOutgoingHooksAndProfilesForTeam","channelB","MANAGE_OTHERS_OUTGOING_WEBHOOKS","AbstractOutgoingWebhook","callbackUrls","split","callbackUrl","contentTypeOption1","contentTypeOption2","renderExtra","updateContentType","updateTriggerWords","updateTriggerWhen","updateCallbackUrls","AddOutgoingWebhook","createOutgoingHook","createOutgoingHookRequest","addOutgoingHook","EditOutgoingWebhook","triggerWordsSame","every","v","callbackUrlsSame","handleConfirmModal","updateOutgoingHook","updateOutgoingHookRequest","confirmButton","confirmTitle","confirmMessage","confirmModalDismissed","getOutgoingHook","editOutgoingHook","FAKE_SECRET","oauthApp","InstalledOAuthApp","clientSecret","client_secret","onRegenerateSecret","regenOAuthAppSecretRequest","handleShowClientSecret","creatorName","isTrusted","is_trusted","showHide","handleHideClientSecret","regen","handleRegenerate","icon","clientId","InstalledOAuthApps","app","deleteOAuthApp","oauthAppCompare","regenOAuthAppSecret","loadOAuthAppsAndProfiles","nameA","nameB","integrationsEnabled","canManageOauth","oauthApplications","updateOAuthApp","AbstractOAuthApp","homepage","has_icon","Boolean","refs","src","Image","imageLoaded","getStateFromApp","initialApp","trusted","updateTrusted","updateHomepage","updateIconUrl","AddOAuthApp","addOAuthApp","addOAuthAppRequest","EditOAuthApp","newApp","submitOAuthApp","editOAuthApp","getOAuthApp","oauthAppId","trigger","InstalledCommand","auto_complete_hint","commandToken","InstalledCommands","regenCommandToken","deleteCommand","commandCompare","canManageOthersSlashCommands","MANAGE_OTHERS_SLASH_COMMANDS","REQUEST_POST","REQUEST_GET","REQUEST_NON","AbstractCommand","callback","method","iconUrl","autocomplete","autocompleteHint","autocompleteDescription","auto_complete_desc","cardType","card_type","substr","MIN_TRIGGER_LENGTH","MAX_TRIGGER_LENGTH","min","max","getStateFromCommand","initialCommand","updateAutocompleteHint","updateAutocompleteDescription","updateTrigger","updateUrl","updateCardType","updateMethod","updateAutocomplete","AddCommand","addCommand","EditCommand","newCommand","originalCommand","submitCommand","editCommand","getCustomTeamCommands","commandId","ConfirmIntegration","window","addEventListener","handleKeyPress","componentWillUnmount","removeEventListener","headerText","tokenText","incomingHook","outgoingHook","COMMAND","INCOMING_WEBHOOK","incomingHookToken","OUTGOING_WEBHOOK","outgoingHookToken","OAUTH_APP","oauthAppToken","oauthAppSecret","secret","BOT","botToken","botname","replace","ErrorPageTypes","PAGE_NOT_FOUND","CommandRoute","component","extraProps","rest","CommandsContainer","loadCommandsAndProfilesForTeam","BackstageCategory","parentLink","element","contextTypes","BackstageSection","subsection","getLink","clonedChildren","BackstageSidebar","enableCustomEmoji","canCreateOrDeleteCustomEmoji","renderCustomEmoji","renderIntegrations","BackstageNavbar","BackstageRoute","BackstageController","listRef","scrollTop","ref","setListRef","AddIncomingWehook","InstalledOauthApps","AddOauthApp","EditOauthApp","getCurrentUser","EnableCustomEmoji","withRouter"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AAEe,MAAMA,QAAN,SAAuBC,4CAAK,CAACC,aAA7B,CAA2C;AAStDC,QAAM,GAAG;AACL,UAAMC,SAAS,GAAG,6BAA6B,KAAKC,KAAL,CAAWC,mBAAX,GAAiC,MAAM,KAAKD,KAAL,CAAWC,mBAAlD,GAAwE,EAArG,CAAlB;AACA,WACI,2DAAC,mEAAD;AACI,QAAE,EAAC,oBADP;AAEI,oBAAc,EAAC;AAFnB,OAIMC,KAAD,IACG;AACI,eAAS,EAAEH,SADf;AAEI,WAAK,EAAEG;AAFX,MALR,CADJ;AAaH;;AAxBqD;;gBAArCP,Q,eACE;AACfM,qBAAmB,EAAEE,iDAAS,CAACC;AADhB,C;;gBADFT,Q,kBAKK;AAClBM,qBAAmB,EAAE;AADH,C;;;;;;;;;;;;;;;;ACb1B;AACA;AAEA;AAEA;AACA;AAEe,MAAMI,YAAN,SAA2BT,4CAAK,CAACC,aAAjC,CAA+C;AAS1DC,QAAM,GAAG;AACL,UAAMC,SAAS,GAAG,4BAA4B,KAAKC,KAAL,CAAWC,mBAAX,GAAiC,MAAM,KAAKD,KAAL,CAAWC,mBAAlD,GAAwE,EAApG,CAAlB;AACA,WACI,2DAAC,mEAAD;AACI,QAAE,EAAC,wBADP;AAEI,oBAAc,EAAC;AAFnB,OAIMC,KAAD,IACG;AACI,eAAS,EAAEH,SADf;AAEI,WAAK,EAAEG;AAFX,MALR,CADJ;AAaH;;AAxByD;;gBAAzCG,Y,eACE;AACfJ,qBAAmB,EAAEE,iDAAS,CAACC;AADhB,C;;gBADFC,Y,kBAKK;AAClBJ,qBAAmB,EAAE;AADH,C;;;;;;;;ACbb;;AAEbK,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,OAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B;AACAF,OAAO,CAACG,gBAAR,GAA2BA,gBAA3B;AACAH,OAAO,CAACI,WAAR,GAAsBA,WAAtB;AACAJ,OAAO,CAACK,YAAR,GAAuBA,YAAvB;AACAL,OAAO,CAACM,iBAAR,GAA4BA,iBAA5B;AACAN,OAAO,CAACO,2BAAR,GAAsCP,OAAO,CAACQ,cAAR,GAAyBR,OAAO,CAACS,6BAAR,GAAwC,KAAK,CAA5G;;AAEAC,mBAAO,CAAC,EAAD,CAAP;;AAEAA,mBAAO,CAAC,EAAD,CAAP;;AAEAA,mBAAO,CAAC,EAAD,CAAP;;AAEAA,mBAAO,CAAC,EAAD,CAAP;;AAEAA,mBAAO,CAAC,EAAD,CAAP;;AAEA,IAAIC,SAAS,GAAGD,mBAAO,CAAC,EAAD,CAAvB;;AAEA,IAAIE,MAAM,GAAGF,mBAAO,CAAC,EAAD,CAApB;;AAEA,SAASG,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGlB,MAAM,CAACkB,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIhB,MAAM,CAACmB,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGpB,MAAM,CAACmB,qBAAP,CAA6BH,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBG,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOtB,MAAM,CAACuB,wBAAP,CAAgCP,MAAhC,EAAwCM,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GN,QAAI,CAACO,IAAL,CAAUC,KAAV,CAAgBR,IAAhB,EAAsBE,OAAtB;AAAiC;;AAAC,SAAOF,IAAP;AAAc;;AAErV,SAASS,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEd,aAAO,CAACiB,MAAD,EAAS,IAAT,CAAP,CAAsBC,OAAtB,CAA8B,UAAUC,GAAV,EAAe;AAAEC,uBAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAA3F;AAA+F,KAA5G,MAAkH,IAAIlC,MAAM,CAACoC,yBAAX,EAAsC;AAAEpC,YAAM,CAACqC,gBAAP,CAAwBT,MAAxB,EAAgC5B,MAAM,CAACoC,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAEjB,aAAO,CAACiB,MAAD,CAAP,CAAgBC,OAAhB,CAAwB,UAAUC,GAAV,EAAe;AAAElC,cAAM,CAACC,cAAP,CAAsB2B,MAAtB,EAA8BM,GAA9B,EAAmClC,MAAM,CAACuB,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAA5H;AAAgI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEtgB,SAASO,eAAT,CAAyBG,GAAzB,EAA8BJ,GAA9B,EAAmC/B,KAAnC,EAA0C;AAAE,MAAI+B,GAAG,IAAII,GAAX,EAAgB;AAAEtC,UAAM,CAACC,cAAP,CAAsBqC,GAAtB,EAA2BJ,GAA3B,EAAgC;AAAE/B,WAAK,EAAEA,KAAT;AAAgBqB,gBAAU,EAAE,IAA5B;AAAkCe,kBAAY,EAAE,IAAhD;AAAsDC,cAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEF,OAAG,CAACJ,GAAD,CAAH,GAAW/B,KAAX;AAAmB;;AAAC,SAAOmC,GAAP;AAAa;;AAEjN,SAASlC,gBAAT,CAA0BqC,KAA1B,EAAiC;AAC/B,SAAOA,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BC,aAAnC;AACD;;AAED,SAASvC,gBAAT,CAA0BoC,KAA1B,EAAiC;AAC/B,SAAOA,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BE,aAAnC;AACD;;AAED,SAASvC,WAAT,CAAqBmC,KAArB,EAA4B;AAC1B,SAAOA,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BG,QAAnC;AACD;;AAED,SAASvC,YAAT,CAAsBkC,KAAtB,EAA6B;AAC3B,SAAOA,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BI,SAAnC;AACD;;AAED,SAASvC,iBAAT,CAA2BiC,KAA3B,EAAkC;AAChC,SAAOA,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BK,cAAnC;AACD;AACD;;;;;AAKA,IAAIrC,6BAA6B,GAAG,CAAC,GAAGE,SAAS,CAACoC,cAAd,EAA8BnC,MAAM,CAACoC,gBAArC,EAAuD7C,gBAAvD,EAAyE,UAAU8C,MAAV,EAAkBC,KAAlB,EAAyB;AACpI,SAAOpD,MAAM,CAACqD,MAAP,CAAcD,KAAd,EAAqB/B,MAArB,CAA4B,UAAUiC,CAAV,EAAa;AAC9C,WAAOA,CAAC,CAACH,MAAF,KAAaA,MAApB;AACD,GAFM,CAAP;AAGD,CAJmC,CAApC;AAKAjD,OAAO,CAACS,6BAAR,GAAwCA,6BAAxC;AACA,IAAID,cAAc,GAAG,CAAC,GAAGG,SAAS,CAACoC,cAAd,EAA8B3C,WAA9B,EAA2CE,iBAA3C,EAA8D,UAAUsC,QAAV,EAAoBE,cAApB,EAAoC;AACrH,SAAOrB,aAAa,CAAC,EAAD,EAAKmB,QAAL,EAAe,EAAf,EAAmBE,cAAnB,CAApB;AACD,CAFoB,CAArB;AAGA9C,OAAO,CAACQ,cAAR,GAAyBA,cAAzB;AACA,IAAID,2BAA2B,GAAG,CAAC,GAAGI,SAAS,CAACoC,cAAd,EAA8BvC,cAA9B,EAA8CI,MAAM,CAACoC,gBAArD,EAAuE,UAAUJ,QAAV,EAAoBS,aAApB,EAAmC;AAC1I,SAAOvD,MAAM,CAACqD,MAAP,CAAcP,QAAd,EAAwBzB,MAAxB,CAA+B,UAAUmC,OAAV,EAAmB;AACvD,WAAOA,OAAO,KAAK,CAACA,OAAO,CAACC,OAAT,IAAoBD,OAAO,CAACC,OAAR,KAAoBF,aAA7C,CAAP,IAAsEC,OAAO,CAACE,aAArF;AACD,GAFM,EAEJC,IAFI,CAEC,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACtB,WAAOD,CAAC,CAACE,YAAF,CAAeC,aAAf,CAA6BF,CAAC,CAACC,YAA/B,CAAP;AACD,GAJM,CAAP;AAKD,CANiC,CAAlC;AAOA5D,OAAO,CAACO,2BAAR,GAAsCA,2BAAtC,C;;;;;;;;ACzEa;;AAEbT,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,OAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC8D,cAAR,GAAyBA,cAAzB,C,CAEA;AACA;;AACA,SAASA,cAAT,CAAwBvB,KAAxB,EAA+B;AAC7B,SAAOA,KAAK,CAACC,QAAN,CAAeuB,IAAf,CAAoBC,QAA3B;AACD,C;;;;;;;;ACXY;;AAEblE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,OAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACiE,SAAR,GAAoBA,SAApB;AACAjE,OAAO,CAACkE,QAAR,GAAmBA,QAAnB;AACAlE,OAAO,CAACmE,OAAR,GAAkBA,OAAlB;AACAnE,OAAO,CAACoE,QAAR,GAAmBA,QAAnB;AACApE,OAAO,CAACqE,UAAR,GAAqBA,UAArB;AACArE,OAAO,CAACsE,SAAR,GAAoBA,SAApB;AACAtE,OAAO,CAACuE,SAAR,GAAoBA,SAApB;;AAEA,IAAIC,OAAO,GAAG9D,mBAAO,CAAC,EAAD,CAArB;;AAEA,IAAI+D,aAAa,GAAG/D,mBAAO,CAAC,CAAD,CAA3B;;AAEA,IAAIgE,QAAQ,GAAGhE,mBAAO,CAAC,GAAD,CAAtB,C,CAEA;AACA;;;AACA,IAAIiE,qBAAqB,GAAG,EAA5B;;AAEA,SAASV,SAAT,CAAmBW,GAAnB,EAAwB;AACtB,SAAO,CAAC,GAAGF,QAAQ,CAACG,cAAb,EAA6B;AAClCC,cAAU,EAAEN,OAAO,CAACO,OAAR,CAAgBd,SADM;AAElCe,aAAS,EAAEP,aAAa,CAACQ,QAAd,CAAuBC,oBAFA;AAGlCC,UAAM,EAAE,CAACP,GAAD;AAH0B,GAA7B,CAAP;AAKD;;AAED,SAASV,QAAT,CAAkBkB,SAAlB,EAA6BC,QAA7B,EAAuC;AACrC,SAAO,CAAC,GAAGX,QAAQ,CAACG,cAAb,EAA6B;AAClCC,cAAU,EAAEN,OAAO,CAACO,OAAR,CAAgBb,QADM;AAElCc,aAAS,EAAEP,aAAa,CAACQ,QAAd,CAAuBC,oBAFA;AAGlCC,UAAM,EAAE,CAACC,SAAD,EAAYC,QAAZ;AAH0B,GAA7B,CAAP;AAKD;;AAED,SAASlB,OAAT,CAAiBiB,SAAjB,EAA4B;AAC1B,SAAO,CAAC,GAAGV,QAAQ,CAACG,cAAb,EAA6B;AAClCC,cAAU,EAAEN,OAAO,CAACO,OAAR,CAAgBO,MADM;AAElCN,aAAS,EAAEP,aAAa,CAACQ,QAAd,CAAuBC,oBAFA;AAGlCC,UAAM,EAAE,CAACC,SAAD;AAH0B,GAA7B,CAAP;AAKD;;AAED,SAAShB,QAAT,GAAoB;AAClB,MAAImB,IAAI,GAAG3D,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiB4D,SAAzC,GAAqD5D,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAA/E;AACA,MAAI6D,OAAO,GAAG7D,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiB4D,SAAzC,GAAqD5D,SAAS,CAAC,CAAD,CAA9D,GAAoE+C,qBAAlF;AACA,SAAO,CAAC,GAAGD,QAAQ,CAACG,cAAb,EAA6B;AAClCC,cAAU,EAAEN,OAAO,CAACO,OAAR,CAAgBW,qBADM;AAElCV,aAAS,EAAEP,aAAa,CAACQ,QAAd,CAAuBU,qBAFA;AAGlCR,UAAM,EAAE,CAACI,IAAD,EAAOE,OAAP;AAH0B,GAA7B,CAAP;AAKD;;AAED,SAASpB,UAAT,CAAoBe,SAApB,EAA+B;AAC7B,SAAO,CAAC,GAAGV,QAAQ,CAACG,cAAb,EAA6B;AAClCC,cAAU,EAAEN,OAAO,CAACO,OAAR,CAAgBV,UADM;AAElCW,aAAS,EAAEP,aAAa,CAACQ,QAAd,CAAuBC,oBAFA;AAGlCC,UAAM,EAAE,CAACC,SAAD;AAH0B,GAA7B,CAAP;AAKD;;AAED,SAASd,SAAT,CAAmBc,SAAnB,EAA8B;AAC5B,SAAO,CAAC,GAAGV,QAAQ,CAACG,cAAb,EAA6B;AAClCC,cAAU,EAAEN,OAAO,CAACO,OAAR,CAAgBT,SADM;AAElCU,aAAS,EAAEP,aAAa,CAACQ,QAAd,CAAuBC,oBAFA;AAGlCC,UAAM,EAAE,CAACC,SAAD;AAH0B,GAA7B,CAAP;AAKD;;AAED,SAASb,SAAT,CAAmBa,SAAnB,EAA8BQ,UAA9B,EAA0C;AACxC,SAAO,CAAC,GAAGlB,QAAQ,CAACG,cAAb,EAA6B;AAClCC,cAAU,EAAEN,OAAO,CAACO,OAAR,CAAgBR,SADM;AAElCS,aAAS,EAAEP,aAAa,CAACQ,QAAd,CAAuBC,oBAFA;AAGlCC,UAAM,EAAE,CAACC,SAAD,EAAYQ,UAAZ;AAH0B,GAA7B,CAAP;AAKD,C;;;;;;;AC/ED,iBAAiB,qBAAuB,gD;;;;;;;ACAxC,iBAAiB,qBAAuB,gD;;;;;;;ACAxC,iBAAiB,qBAAuB,gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxC;AACA;AAEA;AAEA;AAEe,MAAMC,sBAAN,SAAyBzG,eAAK,CAACC,aAA/B,CAA6C;AACxDC,QAAM,GAAG;AACL,WACI,8BAAC,oCAAD;AACI,QAAE,EAAC,sBADP;AAEI,oBAAc,EAAC;AAFnB,OAIMI,KAAD,IACG;AACI,eAAS,EAAC,cADd;AAEI,WAAK,EAAEA;AAFX,MALR,CADJ;AAaH;;AAfuD,C;;;;ACP5D;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEe,MAAMoG,4BAAN,SAA4B1G,eAAK,CAAC2G,SAAlC,CAA4C;AAkBvDC,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKyG,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAK3D,KAAL,GAAa;AACTpB,YAAM,EAAE;AADC,KAAb;AAGH;;AAED8E,cAAY,CAACE,CAAD,EAAI;AACZ,SAAKC,QAAL,CAAc;AACVjF,YAAM,EAAEgF,CAAC,CAACzE,MAAF,CAASzB;AADP,KAAd;AAGH;;AAEDX,QAAM,GAAG;AACL,UAAM6B,MAAM,GAAG,KAAKoB,KAAL,CAAWpB,MAAX,CAAkBkF,WAAlB,EAAf;AAEA,QAAIC,QAAJ;;AACA,QAAI,KAAK9G,KAAL,CAAW+G,OAAf,EAAwB;AACpBD,cAAQ,GAAG,8BAAC,iCAAD,OAAX;AACH,KAFD,MAEO;AACHA,cAAQ,GAAG,KAAK9G,KAAL,CAAW8G,QAAtB;AACA,UAAIE,WAAW,GAAG,IAAlB;;AACA,UAAI,OAAOF,QAAP,KAAoB,UAAxB,EAAoC;AAChC,SAACA,QAAD,EAAWE,WAAX,IAA0BF,QAAQ,CAACnF,MAAD,CAAlC;AACH;;AACDmF,cAAQ,GAAGlH,eAAK,CAACqH,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,EAA8BK,KAAD,IAAW;AAC/C,eAAOvH,eAAK,CAACwH,YAAN,CAAmBD,KAAnB,EAA0B;AAACxF;AAAD,SAA1B,CAAP;AACH,OAFU,CAAX;;AAGA,UAAImF,QAAQ,CAACzE,MAAT,KAAoB,CAApB,IAAyB,CAAC2E,WAA9B,EAA2C;AACvC,YAAI,CAACrF,MAAL,EAAa;AACT,cAAI,KAAK3B,KAAL,CAAWqH,SAAf,EAA0B;AACtBP,oBAAQ,GACJ;AAAM,uBAAS,EAAC;AAAhB,eACK,KAAK9G,KAAL,CAAWqH,SADhB,CADJ;AAKH;AACJ,SARD,MAQO,IAAI,KAAKrH,KAAL,CAAWsH,eAAf,EAAgC;AACnCR,kBAAQ,GACJ;AACI,qBAAS,EAAC,4CADd;AAEI,cAAE,EAAC;AAFP,aAIKlH,eAAK,CAACwH,YAAN,CAAmB,KAAKpH,KAAL,CAAWsH,eAA9B,EAA+C;AAAC3D,kBAAM,EAAE;AAAC4D,wBAAU,EAAE5F;AAAb;AAAT,WAA/C,CAJL,CADJ;AAQH;AACJ;AACJ;;AAED,QAAI6F,OAAO,GAAG,IAAd;;AAEA,QAAI,KAAKxH,KAAL,CAAWwH,OAAX,IAAsB,KAAKxH,KAAL,CAAWyH,OAArC,EAA8C;AAC1CD,aAAO,GACH,8BAAC,gCAAD;AACI,iBAAS,EAAC,UADd;AAEI,UAAE,EAAE,KAAKxH,KAAL,CAAWwH;AAFnB,SAII;AACI,YAAI,EAAC,QADT;AAEI,iBAAS,EAAC,iBAFd;AAGI,UAAE,EAAE,KAAKxH,KAAL,CAAW0H;AAHnB,SAKI,4CACK,KAAK1H,KAAL,CAAWyH,OADhB,CALJ,CAJJ,CADJ;AAgBH;;AAED,WACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI,0CACK,KAAKzH,KAAL,CAAW2H,MADhB,CADJ,EAIKH,OAJL,CADJ,EAOI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,sBAAD,OADJ,EAEI;AACI,UAAI,EAAC,QADT;AAEI,eAAS,EAAC,cAFd;AAGI,iBAAW,EAAE,KAAKxH,KAAL,CAAW4H,iBAH5B;AAII,WAAK,EAAE,KAAK7E,KAAL,CAAWpB,MAJtB;AAKI,cAAQ,EAAE,KAAK8E,YALnB;AAMI,WAAK,EAAEoB,KAAK,CAACC,MANjB;AAOI,QAAE,EAAC;AAPP,MAFJ,CADJ,CAPJ,EAqBI;AAAM,eAAS,EAAC;AAAhB,OACK,KAAK9H,KAAL,CAAW+H,QADhB,CArBJ,EAwBI;AAAK,eAAS,EAAC;AAAf,OACKjB,QADL,CAxBJ,CADJ;AA8BH;;AA1HsD;;gBAAtCR,4B,eACE;AACfQ,UAAQ,EAAE3G,oBAAS,CAAC6H,SAAV,CAAoB,CAAC7H,oBAAS,CAAC8H,IAAX,EAAiB9H,oBAAS,CAAC+H,IAA3B,CAApB,CADK;AAEfP,QAAM,EAAExH,oBAAS,CAAC8H,IAAV,CAAeE,UAFR;AAGfX,SAAO,EAAErH,oBAAS,CAACC,MAHJ;AAIfqH,SAAO,EAAEtH,oBAAS,CAAC8H,IAJJ;AAKfP,aAAW,EAAEvH,oBAAS,CAACC,MALR;AAMfiH,WAAS,EAAElH,oBAAS,CAAC8H,IANN;AAOfX,iBAAe,EAAEnH,oBAAS,CAAC8H,IAPZ;AAQfF,UAAQ,EAAE5H,oBAAS,CAAC8H,IARL;AASflB,SAAO,EAAE5G,oBAAS,CAACiI,IAAV,CAAeD,UATT;AAUfP,mBAAiB,EAAEzH,oBAAS,CAACC;AAVd,C;;gBADFkG,4B,kBAcK;AAClBsB,mBAAiB,EAAES,iCAAA,CAAsB,uBAAtB,EAA+C,QAA/C;AADD,C;;AA+G1B,MAAMR,KAAK,GAAG;AACVC,QAAM,EAAE;AAACQ,YAAQ,EAAE,CAAX;AAAcC,cAAU,EAAE;AAA1B;AADE,CAAd,C;;;;;;;;;;;;;;;;;;;;;;ACxIA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEO,SAASC,aAAT,CAAuBpD,GAAvB,EAA4BzD,MAA5B,EAAoC8G,KAApC,EAA2C;AAC9C,MAAI,CAAC9G,MAAL,EAAa;AACT,WAAO,IAAP;AACH;;AACD,QAAM+G,QAAQ,GAAGtD,GAAG,CAACsD,QAAJ,IAAgB,EAAjC;AACA,QAAMC,WAAW,GAAGvD,GAAG,CAACuD,WAAJ,IAAmB,EAAvC;AACA,QAAMC,WAAW,GAAGxD,GAAG,CAAChB,YAAJ,IAAoB,EAAxC;AAEA,MAAIyE,aAAa,GAAG,QAApB;;AACA,MAAIJ,KAAK,IAAIA,KAAK,CAACC,QAAnB,EAA6B;AACzBG,iBAAa,GAAGJ,KAAK,CAACC,QAAtB;AACH;;AACD,SAAO,EAAEA,QAAQ,CAAC7B,WAAT,GAAuBiC,OAAvB,CAA+BnH,MAA/B,MAA2C,CAAC,CAA5C,IACLiH,WAAW,CAAC/B,WAAZ,GAA0BiC,OAA1B,CAAkCnH,MAAlC,MAA8C,CAAC,CAD1C,IAELgH,WAAW,CAAC9B,WAAZ,GAA0BiC,OAA1B,CAAkCnH,MAAlC,MAA8C,CAAC,CAF1C,IAGLkH,aAAa,CAAChC,WAAd,GAA4BiC,OAA5B,CAAoCnH,MAApC,MAAgD,CAAC,CAH9C,CAAP;AAIH;AAEc,MAAMoH,OAAN,SAAkBnJ,eAAK,CAACC,aAAxB,CAAsC;AAkDjD2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,0CAWP,MAAM;AACd,WAAKA,KAAL,CAAWgJ,OAAX,CAAmBlE,SAAnB,CAA6B,KAAK9E,KAAL,CAAWoF,GAAX,CAAe6D,OAA5C;AACH,KAbkB;;AAAA,2CAeN,MAAM;AACf,WAAKjJ,KAAL,CAAWgJ,OAAX,CAAmBnE,UAAnB,CAA8B,KAAK7E,KAAL,CAAWoF,GAAX,CAAe6D,OAA7C;AACH,KAjBkB;;AAAA,sDAmBMC,EAAD,IAAQ;AAC5B,WAAKlJ,KAAL,CAAWgJ,OAAX,CAAmBG,qBAAnB,CAAyCD,EAAzC;AACH,KArBkB;;AAAA,uDAuBOA,EAAD,IAAQ;AAC7B,WAAKlJ,KAAL,CAAWgJ,OAAX,CAAmBI,sBAAnB,CAA0CF,EAA1C;AACH,KAzBkB;;AAAA,mDA2BGA,EAAD,IAAQ;AACzB,WAAKtC,QAAL,CAAc;AAACyC,oBAAY,EAAEH;AAAf,OAAd;AACH,KA7BkB;;AAAA,qDA+BI,MAAM;AACzB,WAAKlJ,KAAL,CAAWgJ,OAAX,CAAmBM,qBAAnB,CAAyC,KAAKvG,KAAL,CAAWsG,YAApD;AACA,WAAKE,YAAL;AACH,KAlCkB;;AAAA,6CAoCJ,MAAM;AACjB,WAAK3C,QAAL,CAAc;AAACyC,oBAAY,EAAE;AAAf,OAAd;AACH,KAtCkB;;AAAA,gDAwCD,MAAM;AACpB,WAAKzC,QAAL,CAAc;AACV4C,0BAAkB,EAAE,MADV;AAEVC,aAAK,EAAE;AACHd,qBAAW,EAAE;AADV;AAFG,OAAd;AAMH,KA/CkB;;AAAA,iDAiDA,MAAM;AACrB,WAAK/B,QAAL,CAAc;AACV4C,0BAAkB,EAAE,QADV;AAEVC,aAAK,EAAE;AACHd,qBAAW,EAAE;AADV;AAFG,OAAd;AAMH,KAxDkB;;AAAA,wDA0DQhC,CAAD,IAAO;AAC7B,WAAKC,QAAL,CAAc;AACV6C,aAAK,EAAEnJ,MAAM,CAACoJ,MAAP,CAAc,EAAd,EAAkB,KAAK3G,KAAL,CAAW0G,KAA7B,EAAoC;AAACd,qBAAW,EAAEhC,CAAC,CAACzE,MAAF,CAASzB;AAAvB,SAApC;AADG,OAAd;AAGH,KA9DkB;;AAAA,kDAgEC,MAAOkG,CAAP,IAAa;AAC7BA,OAAC,CAACgD,cAAF;;AAEA,UAAI,KAAK5G,KAAL,CAAW0G,KAAX,CAAiBd,WAAjB,KAAiC,EAArC,EAAyC;AACrC,aAAK/B,QAAL,CAAc;AAACgD,eAAK,EAChB,8BAAC,oCAAD;AACI,cAAE,EAAC,6BADP;AAEI,0BAAc,EAAC;AAFnB;AADU,SAAd;AAMA;AACH;;AAED,YAAM;AAACC,YAAD;AAAOD;AAAP,UAAgB,MAAM,KAAK5J,KAAL,CAAWgJ,OAAX,CAAmBc,qBAAnB,CAAyC,KAAK9J,KAAL,CAAWoF,GAAX,CAAe6D,OAAxD,EAAiE,KAAKlG,KAAL,CAAW0G,KAAX,CAAiBd,WAAlF,CAA5B;;AACA,UAAIkB,IAAJ,EAAU;AACN,aAAKjD,QAAL,CAAc;AAAC4C,4BAAkB,EAAE,SAArB;AAAgCC,eAAK,EAAEI;AAAvC,SAAd;AACH,OAFD,MAEO,IAAID,KAAJ,EAAW;AACd,aAAKhD,QAAL,CAAc;AAACgD,eAAK,EAAEA,KAAK,CAACG;AAAd,SAAd;AACH;AACJ,KAnFkB;;AAGf,SAAKhH,KAAL,GAAa;AACTsG,kBAAY,EAAE,EADL;AAETG,wBAAkB,EAAE,QAFX;AAGTC,WAAK,EAAE,EAHE;AAITG,WAAK,EAAE;AAJE,KAAb;AAMH;;AA4ED9J,QAAM,GAAG;AACL,UAAM4I,QAAQ,GAAG,KAAK1I,KAAL,CAAWoF,GAAX,CAAesD,QAAf,IAA2B,EAA5C;AACA,UAAMC,WAAW,GAAG,KAAK3I,KAAL,CAAWoF,GAAX,CAAeuD,WAAf,IAA8B,EAAlD;AACA,UAAMC,WAAW,GAAG,KAAK5I,KAAL,CAAWoF,GAAX,CAAehB,YAAf,IAA+B,EAAnD;AAEA,QAAIyE,aAAa,GAAG,QAApB;;AACA,QAAI,KAAK7I,KAAL,CAAWyI,KAAX,IAAoB,KAAKzI,KAAL,CAAWyI,KAAX,CAAiBC,QAAzC,EAAmD;AAC/CG,mBAAa,GAAG,KAAK7I,KAAL,CAAWyI,KAAX,CAAiBC,QAAjC;AACH;;AACD,UAAM/G,MAAM,GAAG,KAAK3B,KAAL,CAAW2B,MAAX,GAAoB,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBkF,WAAlB,EAApB,GAAsD,EAArE;;AACA,QAAI,CAAC2B,aAAa,CAAC,KAAKxI,KAAL,CAAWoF,GAAZ,EAAiBzD,MAAjB,EAAyB,KAAK3B,KAAL,CAAWyI,KAApC,CAAlB,EAA8D;AAC1D,aAAO,IAAP;AACH;;AAED,UAAMuB,SAAS,GAAG,EAAlB;AACA1J,UAAM,CAACqD,MAAP,CAAc,KAAK3D,KAAL,CAAWiK,YAAzB,EAAuC1H,OAAvC,CAAgDkH,KAAD,IAAW;AACtD,UAAIS,UAAJ;AACA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,YAAJ;;AAEA,UAAIX,KAAK,CAACY,SAAV,EAAqB;AACjBH,kBAAU,GACN;AACI,cAAI,EAAET,KAAK,CAACP,EAAN,GAAW,aADrB;AAEI,cAAI,EAAC,GAFT;AAGI,iBAAO,EAAGvC,CAAD,IAAO;AACZA,aAAC,CAACgD,cAAF;AACA,iBAAKP,sBAAL,CAA4BK,KAAK,CAACP,EAAlC;AACH;AANL,WAQI,8BAAC,oCAAD;AACI,YAAE,EAAC,iCADP;AAEI,wBAAc,EAAC;AAFnB,UARJ,CADJ;AAcH,OAfD,MAeO;AACHiB,oBAAY,GAAG,OAAf;AACAC,oBAAY,GACR;AAAM,mBAAS,EAAC;AAAhB,WACI,8BAAC,oCAAD;AACI,YAAE,EAAC,yCADP;AAEI,wBAAc,EAAC;AAFnB,UADJ,CADJ;AAQAF,kBAAU,GACN;AACI,cAAI,EAAET,KAAK,CAACP,EAAN,GAAW,WADrB;AAEI,cAAI,EAAC,GAFT;AAGI,iBAAO,EAAGvC,CAAD,IAAO;AACZA,aAAC,CAACgD,cAAF;AACA,iBAAKR,qBAAL,CAA2BM,KAAK,CAACP,EAAjC;AACH;AANL,WAQI,8BAAC,oCAAD;AACI,YAAE,EAAC,+BADP;AAEI,wBAAc,EAAC;AAFnB,UARJ,CADJ;AAeH;;AAEDc,eAAS,CAACjI,IAAV,CACI;AACI,WAAG,EAAE0H,KAAK,CAACP,EADf;AAEI,iBAAS,EAAC;AAFd,SAII;AAAK,iBAAS,EAAC;AAAf,SACI;AAAK,iBAAS,EAAEiB;AAAhB,SACI;AAAK,iBAAS,EAAC;AAAf,SACI,yCACI,8BAAC,oCAAD;AACI,UAAE,EAAC,gCADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CADJ,EAOKV,KAAK,CAACd,WAPX,CADJ,EAUI;AAAK,iBAAS,EAAC;AAAf,SACI,yCACI,8BAAC,oCAAD;AACI,UAAE,EAAC,8BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CADJ,EAOKc,KAAK,CAACP,EAPX,CAVJ,CADJ,EAqBI,2CACKkB,YADL,EAEKF,UAFL,EAGK,KAHL,EAII;AACI,YAAI,EAAET,KAAK,CAACP,EAAN,GAAW,SADrB;AAEI,YAAI,EAAC,GAFT;AAGI,eAAO,EAAGvC,CAAD,IAAO;AACZA,WAAC,CAACgD,cAAF;AACA,eAAKW,kBAAL,CAAwBb,KAAK,CAACP,EAA9B;AACH;AANL,SAQI,8BAAC,oCAAD;AACI,UAAE,EAAC,6BADP;AAEI,sBAAc,EAAC;AAFnB,QARJ,CAJJ,CArBJ,CAJJ,CADJ;AA+CH,KA9FD;AAgGA,QAAIqB,OAAJ;;AACA,QAAI1B,aAAa,KAAK,QAAtB,EAAgC;AAC5B0B,aAAO,GACH;AAAK,iBAAS,EAAC;AAAf,SACI;AACI,UAAE,EAAC,aADP;AAEI,iBAAS,EAAC,yBAFd;AAGI,eAAO,EAAE,KAAKC;AAHlB,SAKI,8BAAC,oCAAD;AACI,UAAE,EAAC,yBADP;AAEI,sBAAc,EAAC;AAFnB,QALJ,CADJ,EAWK,KAXL,EAYI,8BAAC,gCAAD;AAAM,UAAE,EAAG,IAAG,KAAKxK,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,8BAA6B,KAAK1K,KAAL,CAAWoF,GAAX,CAAe6D,OAAQ;AAAvF,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,kBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CAZJ,EAkBK,KAlBL,EAmBI;AACI,iBAAS,EAAC,yBADd;AAEI,eAAO,EAAE,KAAKpE;AAFlB,SAII,8BAAC,oCAAD;AACI,UAAE,EAAC,oBADP;AAEI,sBAAc,EAAC;AAFnB,QAJJ,CAnBJ,CADJ;AA+BH;;AACD,QAAI,KAAK7E,KAAL,CAAWoF,GAAX,CAAeuF,SAAf,KAA6B,CAAjC,EAAoC;AAChCJ,aAAO,GACH;AAAK,iBAAS,EAAC;AAAf,SACI;AACI,iBAAS,EAAC,yBADd;AAEI,eAAO,EAAE,KAAKzF;AAFlB,SAII,8BAAC,oCAAD;AACI,UAAE,EAAC,mBADP;AAEI,sBAAc,EAAC;AAFnB,QAJJ,CADJ,CADJ;AAaH;;AAED,QAAI,KAAK/B,KAAL,CAAWyG,kBAAX,KAAkC,MAAtC,EAA8C;AAC1CQ,eAAS,CAACjI,IAAV,CACI;AACI,WAAG,EAAE,QADT;AAEI,iBAAS,EAAC;AAFd,SAII;AAAK,WAAG,EAAE;AAAV,SACI;AACI,iBAAS,EAAC,iBADd;AAEI,gBAAQ,EAAE,KAAK6I;AAFnB,SAII;AAAK,iBAAS,EAAC;AAAf,SACI;AAAO,iBAAS,EAAC;AAAjB,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CADJ,EAOI;AAAK,iBAAS,EAAC;AAAf,SACI;AACI,iBAAS,EAAE,IADf;AAEI,iBAAS,EAAC,sBAFd;AAGI,YAAI,EAAC,MAHT;AAII,iBAAS,EAAE,EAJf;AAKI,aAAK,EAAE,KAAK7H,KAAL,CAAW0G,KAAX,CAAiBd,WAL5B;AAMI,gBAAQ,EAAE,KAAKkC;AANnB,QADJ,CAPJ,CAJJ,EAsBI,2CACI;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,+BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CADJ,EAOI;AACI,UAAE,EAAC,aADP;AAEI,iBAAS,EAAC;AAFd,SAIK,KAAK9H,KAAL,CAAW6G,KAJhB,CAPJ,EAaI;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,8BAAD;AACI,gBAAQ,EAAC,oBADb;AAEI,qBAAa,EACT,8BAAC,oCAAD;AACI,YAAE,EAAC,2BADP;AAEI,wBAAc,EAAC;AAFnB,UAHR;AAQI,cAAM,EAAE;AARZ,QADJ,EAWI;AACI,iBAAS,EAAC,qBADd;AAEI,eAAO,EAAE,KAAKkB;AAFlB,SAII,8BAAC,oCAAD;AACI,UAAE,EAAC,6BADP;AAEI,sBAAc,EAAC;AAFnB,QAJJ,CAXJ,CAbJ,CAtBJ,CADJ,CAJJ,CADJ;AAmEH,KApED,MAoEO,IAAI,KAAK/H,KAAL,CAAWyG,kBAAX,KAAkC,SAAtC,EAAiD;AACpDQ,eAAS,CAACjI,IAAV,CACI;AACI,WAAG,EAAE,SADT;AAEI,iBAAS,EAAC;AAFd,SAII;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,+BAAD;AAAa,2BAAmB,EAAC;AAAjC,QADJ,EAEI,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC;AAFnB,QAFJ,CAJJ,EAWI;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,EAKK,KAAKgB,KAAL,CAAW0G,KAAX,CAAiBd,WALtB,CAXJ,EAkBI;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,yBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,EAKK,KAAK5F,KAAL,CAAW0G,KAAX,CAAiBP,EALtB,CAlBJ,EAyBI;AAAQ,iBAAS,EAAC;AAAlB,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,4BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,EAKK,KAAKnG,KAAL,CAAW0G,KAAX,CAAiBA,KALtB,CAzBJ,EAgCI;AAAK,iBAAS,EAAC;AAAf,SACI;AACI,iBAAS,EAAC,wBADd;AAEI,eAAO,EAAE,KAAKqB;AAFlB,SAII,8BAAC,oCAAD;AACI,UAAE,EAAC,wBADP;AAEI,sBAAc,EAAC;AAFnB,QAJJ,CADJ,CAhCJ,CADJ;AA8CH;;AAED,UAAMC,QAAQ,GAAG1C,gCAAA,CAAsB,KAAKrI,KAAL,CAAWoF,GAAX,CAAe6D,OAArC,CAAjB;AAEA,WACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAE;AAAhB,OACI;AACI,eAAS,EAAE,cADf;AAEI,SAAG,EAAE,WAFT;AAGI,SAAG,EAAE8B;AAHT,MADJ,CADJ,EAQI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAQ,eAAS,EAAC;AAAlB,OACKnC,WAAW,GAAG,KAAd,GAAsBF,QAAtB,GAAiC,GADtC,CADJ,EAIK6B,OAJL,CADJ,EAOI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,2BAAD;AAAU,aAAO,EAAE5B;AAAnB,MADJ,CAPJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,iBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,EAKKE,aALL,CAVJ,EAiBI;AAAK,eAAS,EAAC;AAAf,OACKmB,SADL,CAjBJ,CARJ,EA6BI,8BAAC,gCAAD;AACI,WAAK,EACD,8BAAC,oCAAD;AACI,UAAE,EAAC,mBADP;AAEI,sBAAc,EAAC;AAFnB,QAFR;AAOI,aAAO,EACH,8BAAC,oCAAD;AACI,UAAE,EAAC,yBADP;AAEI,sBAAc,EAAC;AAFnB,QARR;AAaI,uBAAiB,EACb,8BAAC,oCAAD;AACI,UAAE,EAAC,oBADP;AAEI,sBAAc,EAAC;AAFnB,QAdR;AAmBI,UAAI,EAAE,KAAKjH,KAAL,CAAWsG,YAAX,KAA4B,EAnBtC;AAoBI,eAAS,EAAE,KAAK2B,oBApBpB;AAqBI,cAAQ,EAAE,KAAKzB;AArBnB,MA7BJ,CADJ;AAuDH;;AAtdgD;;mBAAhCR,O,eACE;AAEf;;;AAGA3D,KAAG,EAAEjF,oBAAS,CAACmB,MAAV,CAAiB6G,UALP;;AAOf;;;AAGAM,OAAK,EAAEtI,oBAAS,CAACmB,MAVF;;AAYf;;;AAGA2I,cAAY,EAAE9J,oBAAS,CAACmB,MAAV,CAAiB6G,UAfhB;;AAiBf;;;AAGAxG,QAAM,EAAExB,oBAAS,CAACC,MApBH;AAsBf4I,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGApG,cAAU,EAAE1E,oBAAS,CAAC+H,IAAV,CAAeC,UALN;;AAOrB;;;AAGArD,aAAS,EAAE3E,oBAAS,CAAC+H,IAAV,CAAeC,UAVL;;AAYrB;;;AAGA2B,yBAAqB,EAAE3J,oBAAS,CAAC+H,IAAV,CAAeC,UAfjB;AAgBrBmB,yBAAqB,EAAEnJ,oBAAS,CAAC+H,IAAV,CAAeC,UAhBjB;AAiBrBgB,yBAAqB,EAAEhJ,oBAAS,CAAC+H,IAAV,CAAeC,UAjBjB;AAkBrBiB,0BAAsB,EAAEjJ,oBAAS,CAAC+H,IAAV,CAAeC;AAlBlB,GAAhB,CAtBM;;AA2Cf;;;AAGAsC,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G;AA9CR,C;;;;AClCvB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEe,MAAM+C,SAAN,SAAmBtL,eAAK,CAACC,aAAzB,CAAuC;AA8DlD2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,0CAmEPoF,GAAD,IAAS;AAChB,aACI,8BAAC,OAAD;AACI,WAAG,EAAEA,GAAG,CAAC6D,OADb;AAEI,WAAG,EAAE7D,GAFT;AAGI,aAAK,EAAE,KAAKpF,KAAL,CAAWmL,MAAX,CAAkB/F,GAAG,CAAC6D,OAAtB,CAHX;AAII,oBAAY,EAAE,KAAKjJ,KAAL,CAAWiK,YAAX,CAAwB7E,GAAG,CAAC6D,OAA5B,KAAwC,EAJ1D;AAKI,eAAO,EAAE,KAAKjJ,KAAL,CAAWgJ,OALxB;AAMI,YAAI,EAAE,KAAKhJ,KAAL,CAAWyK;AANrB,QADJ;AAUH,KA9EkB;;AAAA,sCAgFX9I,MAAD,IAAY;AACf,YAAM4C,IAAI,GAAGjE,MAAM,CAACqD,MAAP,CAAc,KAAK3D,KAAL,CAAWuE,IAAzB,EAA+BN,IAA/B,CAAoC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACwE,QAAF,CAAWrE,aAAX,CAAyBF,CAAC,CAACuE,QAA3B,CAA9C,CAAb;;AACA,YAAM0C,KAAK,GAAIhG,GAAD,IAASoD,aAAa,CAACpD,GAAD,EAAMzD,MAAN,EAAc,KAAK3B,KAAL,CAAWmL,MAAX,CAAkB/F,GAAG,CAAC6D,OAAtB,CAAd,CAApC;;AACA,YAAMoC,WAAW,GAAG9G,IAAI,CAAC5C,MAAL,CAAayD,GAAD,IAASA,GAAG,CAACuF,SAAJ,KAAkB,CAAvC,EAA0ChJ,MAA1C,CAAiDyJ,KAAjD,EAAwDlE,GAAxD,CAA4D,KAAKoE,QAAjE,CAApB;AACA,YAAMC,YAAY,GAAGhH,IAAI,CAAC5C,MAAL,CAAayD,GAAD,IAASA,GAAG,CAACuF,SAAJ,GAAgB,CAArC,EAAwChJ,MAAxC,CAA+CyJ,KAA/C,EAAsDlE,GAAtD,CAA0D,KAAKoE,QAA/D,CAArB;AACA,YAAME,QAAQ,GACV;AAAK,WAAG,EAAC;AAAT,SACI,mCAAM,cAAN;AACI,mBAAW,EAAEH;AADjB,QADJ,EAII,mCAAM,eAAN;AACI,mBAAW,EAAEE,YAAY,CAAClJ,MAAb,GAAsB,CADvC;AAEI,oBAAY,EAAEkJ;AAFlB,QAJJ,CADJ;AAYA,aAAO,CAACC,QAAD,EAAWH,WAAW,CAAChJ,MAAZ,GAAqB,CAArB,IAA0BkJ,YAAY,CAAClJ,MAAb,GAAsB,CAA3D,CAAP;AACH,KAlGkB;;AAGf,SAAKU,KAAL,GAAa;AACTgE,aAAO,EAAE;AADA,KAAb;AAGH;;AAED0E,mBAAiB,GAAG;AAChB,SAAKzL,KAAL,CAAWgJ,OAAX,CAAmBpE,QAAnB,CACI8G,kCAAS,CAACC,YAAV,CAAuBC,cAD3B,EAEIF,kCAAS,CAACC,YAAV,CAAuBE,SAF3B,EAGEC,IAHF,CAIKC,MAAD,IAAY;AACR,UAAIA,MAAM,CAAClC,IAAX,EAAiB;AACb,cAAMmC,QAAQ,GAAG,EAAjB;;AAEA,aAAK,MAAM5G,GAAX,IAAkB2G,MAAM,CAAClC,IAAzB,EAA+B;AAC3B;AACA,eAAK7J,KAAL,CAAWgJ,OAAX,CAAmBiD,OAAnB,CAA2B7G,GAAG,CAAC8G,QAA/B,EAF2B,CAI3B;;AACAF,kBAAQ,CAACjK,IAAT,CAAc,KAAK/B,KAAL,CAAWgJ,OAAX,CAAmBiD,OAAnB,CAA2B7G,GAAG,CAAC6D,OAA/B,CAAd;AACA+C,kBAAQ,CAACjK,IAAT,CAAc,KAAK/B,KAAL,CAAWgJ,OAAX,CAAmBmD,0BAAnB,CAA8C/G,GAAG,CAAC6D,OAAlD,CAAd;AACH;;AAEDmD,eAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsBF,IAAtB,CAA2B,MAAM;AAC7B,eAAKlF,QAAL,CAAc;AAACG,mBAAO,EAAE;AAAV,WAAd;AACH,SAFD;AAGH;AACJ,KArBL;AAuBH;;AAEDuF,iBAAe,CAACtM,KAAD,EAAQ;AACnB,QAAI,CAACA,KAAK,CAACuM,WAAX,EAAwB;AACpB,aAAO,IAAP;AACH;;AACD,UAAMC,aAAa,GAAG5M,eAAK,CAACqH,QAAN,CAAeC,GAAf,CAAmBlH,KAAK,CAACuL,YAAzB,EAAwCpE,KAAD,IAAW;AACpE,aAAOvH,eAAK,CAACwH,YAAN,CAAmBD,KAAnB,EAA0B;AAACxF,cAAM,EAAE3B,KAAK,CAAC2B;AAAf,OAA1B,CAAP;AACH,KAFqB,CAAtB;AAGA,WACI,8BAAC,eAAD,CAAO,QAAP,QACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,eADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,EAOI;AAAK,eAAS,EAAC;AAAf,OACK6K,aADL,CAPJ,CADJ;AAaH;;AAEDC,gBAAc,CAACzM,KAAD,EAAQ;AAClB,UAAMwM,aAAa,GAAG5M,eAAK,CAACqH,QAAN,CAAeC,GAAf,CAAmBlH,KAAK,CAACqL,WAAzB,EAAuClE,KAAD,IAAW;AACnE,aAAOvH,eAAK,CAACwH,YAAN,CAAmBD,KAAnB,EAA0B;AAACxF,cAAM,EAAE3B,KAAK,CAAC2B;AAAf,OAA1B,CAAP;AACH,KAFqB,CAAtB;AAGA,WACI,2CACK6K,aADL,CADJ;AAKH;;AAmCD1M,QAAM,GAAG;AACL,WACI,8BAAC,4BAAD;AACI,YAAM,EACF,8BAAC,oCAAD;AACI,UAAE,EAAC,oBADP;AAEI,sBAAc,EAAC;AAFnB,QAFR;AAOI,aAAO,EAAE,KAAKE,KAAL,CAAW0M,UAAX,IACL,8BAAC,oCAAD;AACI,UAAE,EAAC,iBADP;AAEI,sBAAc,EAAC;AAFnB,QARR;AAaI,aAAO,EAAE,MAAM,KAAK1M,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B,wBAb1C;AAcI,iBAAW,EAAC,eAdhB;AAeI,eAAS,EACL,8BAAC,oCAAD;AACI,UAAE,EAAC,mBADP;AAEI,sBAAc,EAAC;AAFnB,QAhBR;AAqBI,qBAAe,EACX,8BAAC,6CAAD;AACI,UAAE,EAAC,yBADP;AAEI,sBAAc,EAAC;AAFnB,QAtBR;AA2BI,cAAQ,EACJ,8BAAC,oCAAD;AACI,UAAE,EAAC,kBADP;AAEI,sBAAc,EAAC,mIAFnB;AAGI,cAAM,EAAE;AACJiC,qBAAW,EACP;AACI,kBAAM,EAAC,QADX;AAEI,eAAG,EAAC,qBAFR;AAGI,gBAAI,EAAC;AAHT,aAKI,8BAAC,oCAAD;AACI,cAAE,EAAC,0BADP;AAEI,0BAAc,EAAC;AAFnB,YALJ;AAFA;AAHZ,QA5BR;AA+CI,uBAAiB,EAAEtE,iCAAA,CAAsB,oBAAtB,EAA4C,qBAA5C,CA/CvB;AAgDI,aAAO,EAAE,KAAKtF,KAAL,CAAWgE;AAhDxB,OAkDK,KAAKxC,IAlDV,CADJ;AAsDH;;AAzNiD;;oBAAjC2G,S,eACE;AAEf;;;AAGA3G,MAAI,EAAEpE,oBAAS,CAACmB,MAAV,CAAiB6G,UALR;;AAOf;;;AAGA8B,cAAY,EAAE9J,oBAAS,CAACmB,MAAV,CAAiB6G,UAVhB;;AAYf;;;AAGAgD,QAAM,EAAEhL,oBAAS,CAACmB,MAAV,CAAiB6G,UAfV;AAiBfuE,YAAU,EAAEvM,oBAAS,CAACiI,IAjBP;AAmBfY,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGArG,YAAQ,EAAEzE,oBAAS,CAAC+H,IAAV,CAAeC,UALJ;;AAOrB;;;AAGAgE,8BAA0B,EAAEhM,oBAAS,CAAC+H,IAAV,CAAeC,UAVtB;;AAYrB;;;AAGA2B,yBAAqB,EAAE3J,oBAAS,CAAC+H,IAAV,CAAeC,UAfjB;AAgBrBmB,yBAAqB,EAAEnJ,oBAAS,CAAC+H,IAAV,CAAeC,UAhBjB;AAiBrBgB,yBAAqB,EAAEhJ,oBAAS,CAAC+H,IAAV,CAAeC,UAjBjB;AAkBrBiB,0BAAsB,EAAEjJ,oBAAS,CAAC+H,IAAV,CAAeC,UAlBlB;;AAoBrB;;;AAGA8D,WAAO,EAAE9L,oBAAS,CAAC+H,IAAV,CAAeC,UAvBH;;AAyBrB;;;AAGAtD,cAAU,EAAE1E,oBAAS,CAAC+H,IAAV,CAAeC,UA5BN;;AA8BrB;;;AAGArD,aAAS,EAAE3E,oBAAS,CAAC+H,IAAV,CAAeC;AAjCL,GAAhB,CAnBM;;AAuDf;;;AAGAsC,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G;AA1DR,C;;ACfvB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASyE,eAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,QAAM8J,MAAM,GAAGC,4BAAS,CAAC/J,KAAD,CAAxB;AACA,QAAM2J,UAAU,GAAGG,MAAM,CAACE,wBAAP,KAAoC,MAAvD;AACA,QAAMxI,IAAI,GAAGD,uCAAc,CAACvB,KAAD,CAA3B;AACA,QAAMoI,MAAM,GAAG7K,MAAM,CAACqD,MAAP,CAAcY,IAAd,EACXyI,MADW,CACJ,CAACjB,MAAD,EAAS3G,GAAT,KAAiB;AACpB2G,UAAM,CAAC3G,GAAG,CAAC6D,OAAL,CAAN,GAAsBgE,gBAAA,CAAsBlK,KAAtB,EAA6BqC,GAAG,CAAC8G,QAAjC,CAAtB;AACA,WAAOH,MAAP;AACH,GAJU,EAIR,EAJQ,CAAf;AAKA,SAAO;AACHW,cADG;AAEHnI,QAFG;AAGH0F,gBAAY,EAAElH,KAAK,CAACC,QAAN,CAAekK,KAAf,CAAqBC,sBAHhC;AAIHhC;AAJG,GAAP;AAMH;;AAED,SAASiC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxB1I,wCADwB;AAExBuH,6EAFwB;AAGxBrC,mEAHwB;AAIxBR,mEAJwB;AAKxBH,mEALwB;AAMxBC,qEANwB;AAOxB6C,uCAPwB;AAQxBpH,4CARwB;AASxBC,0CAASA;AATe,KAAD,EAUxBuI,QAVwB;AADxB,GAAP;AAaH;;AAEcE,2EAAO,CAACX,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6ClC,SAA7C,CAAf,E;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AAEA;AACA;AACA;AAEe,MAAMsC,gCAAN,SAA8B5N,eAAK,CAAC2G,SAApC,CAA8C;AACzD,aAAWkH,SAAX,GAAuB;AACnB,WAAO;AACH3G,cAAQ,EAAE3G,oBAAS,CAAC8H;AADjB,KAAP;AAGH;;AAKDnI,QAAM,GAAG;AACL,UAAMgH,QAAQ,GAAG,EAAjB;AACA,UAAM;AAAC4G;AAAD,QAAkB,KAAKC,OAAL,CAAaC,IAArC;AAEAhO,mBAAK,CAACqH,QAAN,CAAe1E,OAAf,CAAuB,KAAKvC,KAAL,CAAW8G,QAAlC,EAA4C,CAACK,KAAD,EAAQ0G,KAAR,KAAkB;AAC1D,UAAIA,KAAK,KAAK,CAAd,EAAiB;AACb/G,gBAAQ,CAAC/E,IAAT,CACI;AACI,aAAG,EAAE,YAAY8L,KADrB;AAEI,mBAAS,EAAC;AAFd,WAII;AACI,mBAAS,EAAC,mBADd;AAEI,eAAK,EAAEH,aAAa,CAAC;AAACxE,cAAE,EAAE,0BAAL;AAAiC4E,0BAAc,EAAE;AAAjD,WAAD;AAFxB,UAJJ,CADJ;AAWH;;AAEDhH,cAAQ,CAAC/E,IAAT,CAAcoF,KAAd;AACH,KAhBD;AAkBA,WACI;AAAK,eAAS,EAAC;AAAf,OACI,0CACKL,QADL,CADJ,CADJ;AAOH;;AAvCwD;;gCAAxC0G,gC,kBAMK;AAClBI,MAAI,EAAEG,6BAAS,CAAC5F;AADE,C;;;;;;;;;;;;;ACb1B;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM6F,qBAAqB,GAAG,cAA9B;AACA,MAAMC,gBAAgB,GAAG,QAAzB;AAEe,MAAMC,cAAN,SAAqBtO,eAAK,CAAC2G,SAA3B,CAAqC;AAiEhDC,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,mDAyBD2G,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACV8B,gBAAQ,EAAE/B,CAAC,CAACzE,MAAF,CAASzB;AADT,OAAd;AAGH,KA7BkB;;AAAA,sDA+BEkG,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AACVgC,mBAAW,EAAEjC,CAAC,CAACzE,MAAF,CAASzB;AADZ,OAAd;AAGH,KAnCkB;;AAAA,sDAqCEkG,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AACV+B,mBAAW,EAAEhC,CAAC,CAACzE,MAAF,CAASzB;AADZ,OAAd;AAGH,KAzCkB;;AAAA,+CA2CLkG,CAAD,IAAO;AAChB,WAAKC,QAAL,CAAc;AACVuH,YAAI,EAAExH,CAAC,CAACzE,MAAF,CAASzB;AADL,OAAd;AAGH,KA/CkB;;AAAA,kDAiDFkG,CAAD,IAAO;AACnB,WAAKC,QAAL,CAAc;AACVwH,eAAO,EAAEzH,CAAC,CAACzE,MAAF,CAASmM;AADR,OAAd;AAGH,KArDkB;;AAAA,uDAuDG1H,CAAD,IAAO;AACxB,WAAKC,QAAL,CAAc;AACV0H,oBAAY,EAAE3H,CAAC,CAACzE,MAAF,CAASmM;AADb,OAAd;AAGH,KA3DkB;;AAAA,kDA6DF1H,CAAD,IAAO;AACnB,UAAIA,CAAC,CAACzE,MAAF,CAASqM,KAAT,IAAkB5H,CAAC,CAACzE,MAAF,CAASqM,KAAT,CAAe,CAAf,CAAtB,EAAyC;AACrC,cAAMC,WAAW,GAAG7H,CAAC,CAACzE,MAAF,CAASqM,KAAT,CAAe,CAAf,CAApB;AACA,aAAKE,WAAL,GAAmBC,GAAG,CAACC,eAAJ,CAAoBH,WAApB,CAAnB;AAEA,YAAII,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,cAAM,CAACE,MAAP,GAAiBC,EAAD,IAAQ;AACpB,gBAAMC,WAAW,GAAGC,wCAAA,CAA6BF,EAAE,CAAC7M,MAAH,CAAU6J,MAAvC,CAApB;AACA,gBAAMmD,iBAAiB,GAAGD,0CAAA,CAA+BD,WAA/B,CAA1B;AAEA,eAAKpI,QAAL,CAAc;AACVuI,iBAAK,EAAE,KAAKV,WADF;AAEVS;AAFU,WAAd;AAIH,SARD;;AASAN,cAAM,CAACQ,iBAAP,CAAyBZ,WAAzB;AACA7H,SAAC,CAACzE,MAAF,CAASzB,KAAT,GAAiB,IAAjB;AACA,aAAKmG,QAAL,CAAc;AAAC4H;AAAD,SAAd;AACH,OAjBD,MAiBO;AACH,aAAK5H,QAAL,CAAc;AAAC4H,qBAAW,EAAE,IAAd;AAAoBW,eAAK,EAAE;AAA3B,SAAd;AACH;AACJ,KAlFkB;;AAAA,+CAoFN,MAAM;AACf,WAAKvI,QAAL,CAAc;AAAC4H,mBAAW,EAAE,SAAd;AAAyBW,aAAK,EAAEE,0BAAcA;AAA9C,OAAd;AACH,KAtFkB;;AAAA,gDAwFL,MAAOxF,IAAP,IAAgB;AAC1B,UAAIyF,KAAK,GAAGC,oBAAO,CAACC,gBAApB;;AAEA,UAAI,KAAKzM,KAAL,CAAWoL,IAAX,KAAoBH,qBAAxB,EAA+C;AAC3CsB,aAAK,IAAI,MAAMC,oBAAO,CAACE,iBAAvB;AACH,OAFD,MAEO,IAAI,KAAK1M,KAAL,CAAWqL,OAAf,EAAwB;AAC3BkB,aAAK,IAAI,MAAMC,oBAAO,CAACG,oBAAvB;AACH,OAFM,MAEA,IAAI,KAAK3M,KAAL,CAAWuL,YAAf,EAA6B;AAChCgB,aAAK,IAAI,MAAMC,oBAAO,CAACI,2BAAvB;AACH;;AAED,YAAMC,WAAW,GAAG,MAAM,KAAK5P,KAAL,CAAWgJ,OAAX,CAAmB6G,eAAnB,CAAmChG,IAAI,CAACZ,OAAxC,EAAiDqG,KAAjD,CAA1B;;AACA,UAAIM,WAAJ,EAAiB;AACb,eAAOA,WAAW,CAAChG,KAAnB;AACH;;AAED,aAAO,IAAP;AACH,KAzGkB;;AAAA,iDA2GJ,MAAOjD,CAAP,IAAa;AACxBA,OAAC,CAACgD,cAAF;;AAEA,UAAI,KAAK5G,KAAL,CAAW+M,MAAf,EAAuB;AACnB;AACH;;AAED,UAAI,CAAC,KAAK/M,KAAL,CAAW2F,QAAZ,IAAwB,KAAK3F,KAAL,CAAW2F,QAAX,CAAoBrG,MAApB,GAA6B,CAAzD,EAA4D;AACxD,aAAKuE,QAAL,CAAc;AACVgD,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,kCADP;AAEI,0BAAc,EAAC;AAFnB;AAFM,SAAd;AAQA;AACH;;AAED,UAAI,KAAK7G,KAAL,CAAWyL,WAAf,EAA4B;AACxB,YAAI,CAACuB,oDAAyB,CAACC,QAA1B,CAAmC,KAAKjN,KAAL,CAAWyL,WAAX,CAAuByB,IAA1D,CAAL,EAAsE;AAClE,eAAKrJ,QAAL,CAAc;AACVgD,iBAAK,EACD,8BAAC,oCAAD;AACI,gBAAE,EAAC,kCADP;AAEI,4BAAc,EAAC;AAFnB;AAFM,WAAd;AAQH,SATD,MASO,IAAI,KAAK7G,KAAL,CAAWyL,WAAX,CAAuB0B,IAAvB,GAA8B,KAAKlQ,KAAL,CAAWmQ,WAA7C,EAA0D;AAC7D,eAAKvJ,QAAL,CAAc;AACVgD,iBAAK,EACD,8BAAC,oCAAD;AACI,gBAAE,EAAC,qCADP;AAEI,4BAAc,EAAC;AAFnB;AAFM,WAAd;AAQH;AACJ;;AAED,WAAKhD,QAAL,CAAc;AACVkJ,cAAM,EAAE,IADE;AAEVlG,aAAK,EAAE;AAFG,OAAd;AAKA,YAAMxE,GAAG,GAAG;AACRsD,gBAAQ,EAAE,KAAK3F,KAAL,CAAW2F,QAAX,CAAoB7B,WAApB,EADF;AAERzC,oBAAY,EAAE,KAAKrB,KAAL,CAAW6F,WAFjB;AAGRD,mBAAW,EAAE,KAAK5F,KAAL,CAAW4F;AAHhB,OAAZ;AAMA,UAAIkB,IAAJ;AACA,UAAID,KAAJ;;AACA,UAAI,KAAK5J,KAAL,CAAWoF,GAAf,EAAoB;AAChB,cAAM2G,MAAM,GAAG,MAAM,KAAK/L,KAAL,CAAWgJ,OAAX,CAAmBtE,QAAnB,CAA4B,KAAK1E,KAAL,CAAWoF,GAAX,CAAe6D,OAA3C,EAAoD7D,GAApD,CAArB;;AACA,YAAI2G,MAAJ,EAAY;AACRlC,cAAI,GAAGkC,MAAM,CAAClC,IAAd;AACAD,eAAK,GAAGmC,MAAM,CAACnC,KAAf;AACH,SAHD,MAGO;AACHA,eAAK,GAAGvB,iCAAA,CAAsB,iBAAtB,EAAyC,oBAAzC,CAAR;AACH;;AAED,YAAI,CAACuB,KAAL,EAAY;AACR,cAAI,KAAK7G,KAAL,CAAWyL,WAAX,IAA0B,KAAKzL,KAAL,CAAWyL,WAAX,KAA2B,SAAzD,EAAoE;AAChE,kBAAM4B,WAAW,GAAG,MAAM,KAAKpQ,KAAL,CAAWgJ,OAAX,CAAmBqH,kBAAnB,CAAsCxG,IAAI,CAACZ,OAA3C,EAAoD,KAAKlG,KAAL,CAAWyL,WAA/D,CAA1B;AACA5E,iBAAK,GAAGwG,WAAW,CAACxG,KAApB;AACH,WAHD,MAGO;AACH,kBAAM,KAAK5J,KAAL,CAAWgJ,OAAX,CAAmBsH,sBAAnB,CAA0CzG,IAAI,CAACZ,OAA/C,CAAN;AACH;AACJ;;AAED,YAAI,CAACW,KAAD,IAAUC,IAAd,EAAoB;AAChBD,eAAK,GAAG,KAAK2G,WAAL,CAAiB1G,IAAjB,CAAR;AACH;;AAED,YAAIA,IAAJ,EAAU;AACN2G,mDAAc,CAACzO,IAAf,CAAqB,IAAG,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,oBAA7C;AACA;AACH;AACJ,OA1BD,MA0BO;AACH,cAAM+F,aAAa,GAAGpI,iCAAA,CAAsBjD,GAAG,CAACsD,QAA1B,CAAtB;;AACA,YAAI+H,aAAJ,EAAmB;AACf,eAAK7J,QAAL,CAAc;AACVkJ,kBAAM,EAAE,KADE;AAEVlG,iBAAK,EAAE6G;AAFG,WAAd;AAIA;AACH;;AAED,cAAM1E,MAAM,GAAG,MAAM,KAAK/L,KAAL,CAAWgJ,OAAX,CAAmBvE,SAAnB,CAA6BW,GAA7B,CAArB;;AACA,YAAI2G,MAAJ,EAAY;AACRlC,cAAI,GAAGkC,MAAM,CAAClC,IAAd;AACAD,eAAK,GAAGmC,MAAM,CAACnC,KAAf;AACH,SAHD,MAGO;AACHA,eAAK,GAAGvB,iCAAA,CAAsB,mBAAtB,EAA2C,sBAA3C,CAAR;AACH;;AAED,YAAIoB,KAAK,GAAG,EAAZ;;AACA,YAAI,CAACG,KAAL,EAAY;AACR,cAAI,KAAK7G,KAAL,CAAWyL,WAAX,IAA0B,KAAKzL,KAAL,CAAWyL,WAAX,KAA2B,SAAzD,EAAoE;AAChE,kBAAM,KAAKxO,KAAL,CAAWgJ,OAAX,CAAmBqH,kBAAnB,CAAsCxG,IAAI,CAACZ,OAA3C,EAAoD,KAAKlG,KAAL,CAAWyL,WAA/D,CAAN;AACH,WAFD,MAEO;AACH,kBAAM,KAAKxO,KAAL,CAAWgJ,OAAX,CAAmBsH,sBAAnB,CAA0CzG,IAAI,CAACZ,OAA/C,CAAN;AACH;;AACD,gBAAMyH,WAAW,GAAG,MAAM,KAAK1Q,KAAL,CAAWgJ,OAAX,CAAmBc,qBAAnB,CAAyCD,IAAI,CAACZ,OAA9C,EACtBZ,iCAAA,CAAsB,+BAAtB,EAAuD,eAAvD,CADsB,CAA1B,CANQ,CAUR;;AACA,cAAI,CAACqI,WAAD,IAAgBA,WAAW,CAAC9G,KAAhC,EAAuC;AACnC4G,qDAAc,CAACzO,IAAf,CAAqB,IAAG,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,oBAA7C;AACA;AACH;;AAEDjB,eAAK,GAAGiH,WAAW,CAAC7G,IAAZ,CAAiBJ,KAAzB;AACH;;AAED,YAAI,CAACG,KAAD,IAAUC,IAAd,EAAoB;AAChBD,eAAK,GAAG,KAAK2G,WAAL,CAAiB1G,IAAjB,CAAR;AACH;;AAED,YAAIA,IAAJ,EAAU;AACN2G,mDAAc,CAACzO,IAAf,CAAqB,IAAG,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,sCAAqCb,IAAI,CAACZ,OAAQ,UAASQ,KAAM,EAA9G;AACA;AACH;AACJ;;AAED,WAAK7C,QAAL,CAAc;AACVkJ,cAAM,EAAE;AADE,OAAd;;AAIA,UAAIlG,KAAJ,EAAW;AACP,aAAKhD,QAAL,CAAc;AACVgD,eAAK,EAAEA,KAAK,CAACG;AADH,SAAd;AAGH;AACJ,KApPkB;;AAGf,SAAKhH,KAAL,GAAa;AACT6G,WAAK,EAAE,EADE;AAETlB,cAAQ,EAAE,EAFD;AAGTE,iBAAW,EAAE,EAHJ;AAITD,iBAAW,EAAE,EAJJ;AAKTmH,YAAM,EAAE,KALC;AAMTX,WAAK,EAAEE,0BANE;AAOTlB,UAAI,EAAEF,gBAPG;AAQTG,aAAO,EAAE,KARA;AASTE,kBAAY,EAAE;AATL,KAAb;;AAYA,QAAI,KAAKtO,KAAL,CAAWoF,GAAf,EAAoB;AAChB,WAAKrC,KAAL,CAAW2F,QAAX,GAAsB,KAAK1I,KAAL,CAAWoF,GAAX,CAAesD,QAArC;AACA,WAAK3F,KAAL,CAAW6F,WAAX,GAAyB,KAAK5I,KAAL,CAAWoF,GAAX,CAAehB,YAAxC;AACA,WAAKrB,KAAL,CAAW4F,WAAX,GAAyB,KAAK3I,KAAL,CAAWoF,GAAX,CAAeuD,WAAxC;AACA,WAAK5F,KAAL,CAAWoL,IAAX,GAAkBwC,2BAAA,CAAwB,KAAK3Q,KAAL,CAAWsP,KAAX,IAAoB,EAA5C,IAAkDtB,qBAAlD,GAA0EC,gBAA5F;AACA,WAAKlL,KAAL,CAAWqL,OAAX,GAAqBuC,4BAAA,CAAyB,KAAK3Q,KAAL,CAAWsP,KAAX,IAAoB,EAA7C,CAArB;AACA,WAAKvM,KAAL,CAAWuL,YAAX,GAA0BqC,kCAAA,CAA+B,KAAK3Q,KAAL,CAAWsP,KAAX,IAAoB,EAAnD,CAA1B;AACH;AACJ;;AA+NDxP,QAAM,GAAG;AACL,QAAI8Q,QAAQ,GACR,8BAAC,oCAAD;AACI,QAAE,EAAC,iBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ;AAMA,QAAIC,UAAU,GACV,8BAAC,oCAAD;AACI,QAAE,EAAC,wBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ;AAMA,QAAIC,gBAAgB,GAChB,8BAAC,oCAAD;AACI,QAAE,EAAC,0BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAbK,CAoBL;;AACA,QAAI,KAAK9Q,KAAL,CAAWoF,GAAf,EAAoB;AAChBwL,cAAQ,GACJ,8BAAC,oCAAD;AACI,UAAE,EAAC,kBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMAC,gBAAU,GACN,8BAAC,oCAAD;AACI,UAAE,EAAC,wBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMAC,sBAAgB,GACZ,8BAAC,oCAAD;AACI,UAAE,EAAC,0BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH;;AAED,QAAI/F,QAAQ,GAAG,EAAf;AACA,QAAIgG,eAAe,GACf,8BAAC,iCAAD;AACI,aAAO,EAAE,CAAC,OAAD,EAAU,OAAV,CADb;AAEI,eAAS,EAAEC,qCAFf;AAGI,eAAS,EAAC,OAHd;AAII,aAAO,EACH,8BAAC,0BAAD;AAAS,UAAE,EAAC;AAAZ,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,4BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AALR,OAaI;AACI,eAAS,EAAE,qBADf;AAEI,aAAO,EAAE,KAAKC;AAFlB,OAII,4CAAO,GAAP,CAJJ,CAbJ,CADJ;AAsBA,QAAIC,WAAW,GAAG,IAAlB;;AACA,QAAI,KAAKlR,KAAL,CAAWoF,GAAX,IAAkB,CAAC,KAAKrC,KAAL,CAAWyL,WAAlC,EAA+C;AAC3CzD,cAAQ,GAAG1C,gCAAA,CAAsB,KAAKrI,KAAL,CAAWoF,GAAX,CAAe6D,OAArC,CAAX;AACH,KAFD,MAEO;AACH8B,cAAQ,GAAG,KAAKhI,KAAL,CAAWoM,KAAtB;AACA+B,iBAAW,GAAG,KAAKnO,KAAL,CAAWmM,iBAAzB;;AACA,UAAI,KAAKnM,KAAL,CAAWoM,KAAX,KAAqBE,0BAAzB,EAAyC;AACrC0B,uBAAe,GAAG,IAAlB;AACH;AACJ;;AAED,WACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,gCAAD,QACI,8BAAC,gCAAD;AAAM,QAAE,EAAG,IAAG,KAAK/Q,KAAL,CAAWyK,IAAX,CAAgBC,IAAK;AAAnC,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,oBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,EAOKkG,QAPL,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,iBADd;AAEI,cAAQ,EAAE,KAAKO;AAFnB,OAII;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,mBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,UADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,IAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKpO,KAAL,CAAW2F,QALtB;AAMI,cAAQ,EAAE,KAAK0I;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,uBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CAJJ,EA+BI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,eADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAE;AAAhB,OACI;AACI,eAAS,EAAE,SADf;AAEI,SAAG,EAAE,WAFT;AAGI,SAAG,EAAErG,QAHT;AAII,WAAK,EAAEmG;AAJX,MADJ,EAOKH,eAPL,CADJ,EAUI;AACI,eAAS,EAAC;AADd,OAGI,8BAAC,oCAAD;AACI,QAAE,EAAC,mBADP;AAEI,oBAAc,EAAC;AAFnB,MAHJ,EAOI;AACI,YAAM,EAAC,gBADX;AAEI,UAAI,EAAC,MAFT;AAGI,cAAQ,EAAE,KAAKM;AAHnB,MAPJ,CAVJ,CAVJ,CA/BJ,EAkEI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,sBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,aADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,IAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKtO,KAAL,CAAW6F,WALtB;AAMI,cAAQ,EAAE,KAAK0I;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,2BADP;AAEI,oBAAc,EAAE;AAFpB,MADJ,CATJ,CAVJ,CAlEJ,EA6FI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,qBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,aADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,MAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKvO,KAAL,CAAW4F,WALtB;AAMI,cAAQ,EAAE,KAAK4I;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,0BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CA7FJ,EAwHI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,cADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,cADd;AAEI,WAAK,EAAE,KAAKxO,KAAL,CAAWoL,IAFtB;AAGI,cAAQ,EAAE,CAAC,KAAKnO,KAAL,CAAWwR,0BAH1B;AAII,cAAQ,EAAE,KAAKC;AAJnB,OAMI;AACI,WAAK,EAAExD;AADX,OAGKA,gBAHL,CANJ,EAWI;AACI,WAAK,EAAED;AADX,OAGKA,qBAHL,CAXJ,CADJ,EAkBI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,mBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAlBJ,CAVJ,CAxHJ,EA4JI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,6CAAD;AACI,QAAE,EAAC,oCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,CA5JJ,EAoKI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,kBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAO,aAAO,EAAC;AAAf,OACI;AACI,QAAE,EAAC,SADP;AAEI,UAAI,EAAC,UAFT;AAGI,aAAO,EAAE,KAAKjL,KAAL,CAAWqL,OAAX,IAAsB,KAAKrL,KAAL,CAAWoL,IAAX,KAAoBH,qBAHvD;AAII,cAAQ,EAAE,KAAK0D,aAJnB;AAKI,cAAQ,EAAE,CAAC,KAAK1R,KAAL,CAAWwR,0BAAZ,IAA0C,KAAKzO,KAAL,CAAWoL,IAAX,KAAoBH;AAL5E,MADJ,EAQI,8BAAC,oCAAD;AACI,QAAE,EAAC,0BADP;AAEI,oBAAc,EAAC;AAFnB,MARJ,CADJ,CADJ,EAgBI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,uBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAhBJ,CAVJ,CApKJ,EAsMI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,uBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAO,aAAO,EAAC;AAAf,OACI;AACI,QAAE,EAAC,cADP;AAEI,UAAI,EAAC,UAFT;AAGI,aAAO,EAAE,KAAKjL,KAAL,CAAWuL,YAAX,IAA2B,KAAKvL,KAAL,CAAWoL,IAAX,KAAoBH,qBAA/C,IAAwE,KAAKjL,KAAL,CAAWqL,OAHhG;AAII,cAAQ,EAAE,KAAKuD,kBAJnB;AAKI,cAAQ,EAAE,CAAC,KAAK3R,KAAL,CAAWwR,0BAAZ,IAA0C,KAAKzO,KAAL,CAAWoL,IAAX,KAAoBH,qBAA9D,IAAuF,KAAKjL,KAAL,CAAWqL;AALhH,MADJ,EAQI,8BAAC,oCAAD;AACI,QAAE,EAAC,+BADP;AAEI,oBAAc,EAAC;AAFnB,MARJ,CADJ,CADJ,EAgBI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,4BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAhBJ,CAVJ,CAtMJ,EAwOI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,6BAAD;AACI,UAAI,EAAC,WADT;AAEI,YAAM,EAAE,CAAC,KAAKrL,KAAL,CAAW6G,KAAZ;AAFZ,MADJ,EAKI,8BAAC,gCAAD;AACI,eAAS,EAAC,qBADd;AAEI,QAAE,EAAG,IAAG,KAAK5J,KAAL,CAAWyK,IAAX,CAAgBC,IAAK;AAFjC,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,wBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CALJ,EAcI,8BAAC,iCAAD;AACI,eAAS,EAAC,iBADd;AAEI,UAAI,EAAC,QAFT;AAGI,cAAQ,EAAE,KAAK3H,KAAL,CAAW+M,MAHzB;AAII,kBAAY,EAAEgB,gBAJlB;AAKI,aAAO,EAAE,KAAKK,YALlB;AAMI,QAAE,EAAC;AANP,OAQKN,UARL,CAdJ,CAxOJ,CADJ,CAVJ,CADJ;AAiRH;;AAppB+C;;uBAA/B3C,c,eACE;AAEf;;;AAGAzD,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UALR;;AAOf;;;AAGA/C,KAAG,EAAEjF,oBAAS,CAACmB,MAVA;;AAYf;;;AAGAgO,OAAK,EAAEnP,oBAAS,CAACC,MAfF;;AAiBf;;;AAGA+P,aAAW,EAAEhQ,oBAAS,CAACyR,MAAV,CAAiBzJ,UApBf;;AAsBf;;;AAGAqJ,4BAA0B,EAAErR,oBAAS,CAACiI,IAAV,CAAeD,UAzB5B;;AA2Bf;;;AAGAa,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGAxG,aAAS,EAAEtE,oBAAS,CAAC+H,IAAV,CAAeC,UALL;;AAOrB;;;AAGAzD,YAAQ,EAAEvE,oBAAS,CAAC+H,IAAV,CAAeC,UAVJ;;AAYrB;;;AAGAkI,sBAAkB,EAAElQ,oBAAS,CAAC+H,IAAV,CAAeC,UAfd;;AAiBrB;;;AAGAmI,0BAAsB,EAAEnQ,oBAAS,CAAC+H,IAAV,CAAeC,UApBlB;;AAsBrB;;;AAGA2B,yBAAqB,EAAE3J,oBAAS,CAAC+H,IAAV,CAAeC,UAzBjB;;AA2BrB;;;AAGA0H,mBAAe,EAAE1P,oBAAS,CAAC+H,IAAV,CAAeC;AA9BX,GAAhB;AA9BM,C;;AC3BvB;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASyE,uBAAT,CAAyB7J,KAAzB,EAAgC8O,QAAhC,EAA0C;AACtC,QAAMhF,MAAM,GAAGC,4BAAS,CAAC/J,KAAD,CAAxB;AACA,QAAM+O,KAAK,GAAI,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,QAAT,CAAkBlK,MAAtC,CAAD,CAAgDmK,GAAhD,CAAoD,IAApD,CAAd;AACA,QAAM1N,IAAI,GAAGD,uCAAc,CAACvB,KAAD,CAA3B;AACA,QAAMqC,GAAG,GAAGb,IAAI,GAAGA,IAAI,CAACuN,KAAD,CAAP,GAAiB,IAAjC;AACA,QAAMI,IAAI,GAAG9M,GAAG,GAAG+M,0BAAQ,CAACpP,KAAD,CAAR,CAAgBqC,GAAG,CAAC6D,OAApB,CAAH,GAAkC,IAAlD;AACA,QAAMqG,KAAK,GAAG4C,IAAI,GAAGA,IAAI,CAAC5C,KAAR,GAAgB,IAAlC;AACA,SAAO;AACHa,eAAW,EAAEiC,QAAQ,CAACvF,MAAM,CAACwF,WAAR,EAAqB,EAArB,CADlB;AAEHjN,OAFG;AAGHkK,SAHG;AAIHkC,8BAA0B,EAAEc,+CAAqB,CAACvP,KAAD,EAAQ;AAACwP,gBAAU,EAAEC,wBAAW,CAACC;AAAzB,KAAR;AAJ9C,GAAP;AAMH;;AAED,SAASrF,0BAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxB7I,0CADwB;AAExBC,wCAFwB;AAGxB2L,6DAHwB;AAIxBC,qEAJwB;AAKxBxG,mEALwB;AAMxB+F,uDAAeA;AANS,KAAD,EAOxBxC,QAPwB;AADxB,GAAP;AAUH;;AAEcE,iEAAO,CAACX,uBAAD,EAAkBQ,0BAAlB,CAAP,CAA6Cc,cAA7C,CAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AAEA;AACA;AACA;AAEe,MAAMwE,oCAAN,SAAgC9S,eAAK,CAAC2G,SAAtC,CAAgD;AAC3D,aAAWkH,SAAX,GAAuB;AACnB,WAAO;AACH0B,WAAK,EAAEhP,oBAAS,CAACC,MAAV,CAAiB+H,UADrB;AAEHjI,WAAK,EAAEC,oBAAS,CAAC8H,IAAV,CAAeE,UAFnB;AAGHQ,iBAAW,EAAExI,oBAAS,CAAC8H,IAAV,CAAeE,UAHzB;AAIHwK,UAAI,EAAExS,oBAAS,CAACC,MAAV,CAAiB+H;AAJpB,KAAP;AAMH;;AAEDrI,QAAM,GAAG;AACL,UAAM;AAACqP,WAAD;AAAQjP,WAAR;AAAeyI,iBAAf;AAA4BgK;AAA5B,QAAoC,KAAK3S,KAA/C;AAEA,WACI,8BAAC,gCAAD;AACI,QAAE,EAAE2S,IADR;AAEI,eAAS,EAAC;AAFd,OAII;AACI,SAAG,EAAE,mBADT;AAEI,eAAS,EAAC,2BAFd;AAGI,SAAG,EAAExD;AAHT,MAJJ,EASI;AAAK,eAAS,EAAC;AAAf,OACKjP,KADL,CATJ,EAYI;AAAK,eAAS,EAAC;AAAf,OACKyI,WADL,CAZJ,CADJ;AAkBH;;AA/B0D,C;;;;ACP/D;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEe,MAAMgD,yBAAN,SAA2B/L,eAAK,CAAC2G,SAAjC,CAA2C;AAAA;AAAA;;AAAA,qDAiBxC,MAAM;AAChB,YAAMqM,eAAe,GAAG,KAAK5S,KAAL,CAAW6S,QAAX,IAAuB,EAA/C;AACAC,cAAQ,CAAC5S,KAAT,GAAiBmI,iCAAA,CAAsB,4BAAtB,EAAoD,cAApD,IAAsE,KAAtE,GAA8E,KAAKrI,KAAL,CAAWyK,IAAX,CAAgBrG,YAA9F,GAA6G,GAA7G,GAAmHwO,eAApI;AACH,KApBqD;AAAA;;AACtD,aAAWnF,SAAX,GAAuB;AACnB,WAAO;AACHhD,UAAI,EAAEtK,oBAAS,CAACmB,MADb;AAEH4Q,UAAI,EAAE/R,oBAAS,CAACmB,MAFb;AAGHuR,cAAQ,EAAE1S,oBAAS,CAACC,MAHjB;AAIH2S,4BAAsB,EAAE5S,oBAAS,CAACiI,IAJ/B;AAKH4K,4BAAsB,EAAE7S,oBAAS,CAACiI,IAL/B;AAMH6K,oBAAc,EAAE9S,oBAAS,CAACiI,IANvB;AAOH8K,gCAA0B,EAAE/S,oBAAS,CAACiI;AAPnC,KAAP;AASH;;AAEDqD,mBAAiB,GAAG;AAChB,SAAK0H,WAAL;AACH;;AAODrT,QAAM,GAAG;AACL,UAAMyK,OAAO,GAAG,EAAhB;;AAEA,QAAI,KAAKvK,KAAL,CAAW+S,sBAAf,EAAuC;AACnCxI,aAAO,CAACxI,IAAR,CACI,8BAAC,uCAAD;AACI,cAAM,EAAE,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBvB,EAD5B;AAEI,mBAAW,EAAE,CAACsJ,wBAAW,CAACY,wBAAb,CAFjB;AAGI,WAAG,EAAC;AAHR,SAKI,8BAAC,oCAAD;AACI,WAAG,EAAC,iBADR;AAEI,aAAK,EAAEC,yBAFX;AAGI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,oCADP;AAEI,wBAAc,EAAC;AAFnB,UAJR;AASI,mBAAW,EACP,8BAAC,oCAAD;AACI,YAAE,EAAC,0CADP;AAEI,wBAAc,EAAC;AAFnB,UAVR;AAeI,YAAI,EAAE,MAAM,KAAKrT,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B;AAfvC,QALJ,CADJ;AAyBH;;AAED,QAAI,KAAK1K,KAAL,CAAWgT,sBAAf,EAAuC;AACnCzI,aAAO,CAACxI,IAAR,CACI,8BAAC,uCAAD;AACI,cAAM,EAAE,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBvB,EAD5B;AAEI,mBAAW,EAAE,CAACsJ,wBAAW,CAACc,wBAAb,CAFjB;AAGI,WAAG,EAAC;AAHR,SAKI,8BAAC,oCAAD;AACI,WAAG,EAAC,iBADR;AAEI,aAAK,EAAEC,yBAFX;AAGI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,oCADP;AAEI,wBAAc,EAAC;AAFnB,UAJR;AASI,mBAAW,EACP,8BAAC,oCAAD;AACI,YAAE,EAAC,0CADP;AAEI,wBAAc,EAAC;AAFnB,UAVR;AAeI,YAAI,EAAE,MAAM,KAAKvT,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B;AAfvC,QALJ,CADJ;AAyBH;;AAED,QAAI,KAAK1K,KAAL,CAAWiT,cAAf,EAA+B;AAC3B1I,aAAO,CAACxI,IAAR,CACI,8BAAC,uCAAD;AACI,cAAM,EAAE,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBvB,EAD5B;AAEI,mBAAW,EAAE,CAACsJ,wBAAW,CAACgB,qBAAb,CAFjB;AAGI,WAAG,EAAC;AAHR,SAKI,8BAAC,oCAAD;AACI,WAAG,EAAC,SADR;AAEI,aAAK,EAAEC,4BAFX;AAGI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,4BADP;AAEI,wBAAc,EAAC;AAFnB,UAJR;AASI,mBAAW,EACP,8BAAC,oCAAD;AACI,YAAE,EAAC,kCADP;AAEI,wBAAc,EAAC;AAFnB,UAVR;AAeI,YAAI,EAAE,MAAM,KAAKzT,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B;AAfvC,QALJ,CADJ;AAyBH;;AAED,QAAI,KAAK1K,KAAL,CAAWkT,0BAAf,EAA2C;AACvC3I,aAAO,CAACxI,IAAR,CACI,8BAAC,yCAAD;AACI,mBAAW,EAAE,CAACyQ,wBAAW,CAACkB,YAAb,CADjB;AAEI,WAAG,EAAC;AAFR,SAII,8BAAC,oCAAD;AACI,WAAG,EAAC,YADR;AAEI,aAAK,EAAEC,oBAFX;AAGI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,8BADP;AAEI,wBAAc,EAAC;AAFnB,UAJR;AASI,mBAAW,EACP,8BAAC,oCAAD;AACI,YAAE,EAAC,oCADP;AAEI,wBAAc,EAAC;AAFnB,UAVR;AAeI,YAAI,EAAE,MAAM,KAAK3T,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B;AAfvC,QAJJ,CADJ;AAwBH;;AAEDH,WAAO,CAACxI,IAAR,CACI,8BAAC,yCAAD;AACI,iBAAW,EAAE,CAAC,aAAD,CADjB;AAEI,SAAG,EAAC;AAFR,OAII,8BAAC,oCAAD;AACI,WAAK,EAAE6R,0BADX;AAEI,WAAK,EACD,8BAAC,oCAAD;AACI,UAAE,EAAC,oBADP;AAEI,sBAAc,EAAC;AAFnB,QAHR;AAQI,iBAAW,EACP,8BAAC,oCAAD;AACI,UAAE,EAAC,yBADP;AAEI,sBAAc,EAAC;AAFnB,QATR;AAcI,UAAI,EAAE,MAAM,KAAK5T,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B;AAdvC,MAJJ,CADJ;AAwBA,WACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI,0CACI,8BAAC,oCAAD;AACI,QAAE,EAAC,qBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,CADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,mBADP;AAEI,oBAAc,EAAC,iGAFnB;AAGI,YAAM,EAAE;AACJmJ,oBAAY,EACR;AACI,gBAAM,EAAC,QADX;AAEI,aAAG,EAAC,qBAFR;AAGI,cAAI,EAAC;AAHT,WAKI,8BAAC,oCAAD;AACI,YAAE,EAAC,gCADP;AAEI,wBAAc,EAAC;AAFnB,UALJ;AAFA;AAHZ,MADJ,CATJ,EA6BI;AAAK,eAAS,EAAC;AAAf,OACKtJ,OADL,CA7BJ,CADJ;AAmCH;;AAnMqD,C;;ACtB1D;AACA;AAEA;AACA;AAEA;;AAEA,SAASqC,4BAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,QAAM8J,MAAM,GAAGC,4BAAS,CAAC/J,KAAD,CAAxB;AACA,QAAM8P,QAAQ,GAAGhG,MAAM,CAACiH,QAAxB;AACA,QAAMf,sBAAsB,GAAGlG,MAAM,CAACkH,sBAAP,KAAkC,MAAjE;AACA,QAAMf,sBAAsB,GAAGnG,MAAM,CAACmH,sBAAP,KAAkC,MAAjE;AACA,QAAMf,cAAc,GAAGpG,MAAM,CAACoH,cAAP,KAA0B,MAAjD;AACA,QAAMf,0BAA0B,GAAGrG,MAAM,CAACqH,0BAAP,KAAsC,MAAzE;AAEA,SAAO;AACHrB,YADG;AAEHE,0BAFG;AAGHC,0BAHG;AAIHC,kBAJG;AAKHC;AALG,GAAP;AAOH;;AAEc3F,sEAAO,CAACX,4BAAD,CAAP,CAAyBjB,yBAAzB,CAAf,E;;;;;;;;;;;ACzBA;AACA;AAEA;AACA;AAEe,MAAMwI,8CAAN,SAAoCvU,eAAK,CAAC2G,SAA1C,CAAoD;AA4B/DzG,QAAM,GAAG;AACL,QAAI,KAAKE,KAAL,CAAWoU,aAAX,IAA4B,CAAC,KAAKpU,KAAL,CAAWqU,MAA5C,EAAoD;AAChD,aAAO,KAAKrU,KAAL,CAAW8G,QAAlB;AACH;;AACD,QAAI,CAAC,KAAK9G,KAAL,CAAWoU,aAAZ,IAA6B,KAAKpU,KAAL,CAAWqU,MAA5C,EAAoD;AAChD,aAAO,KAAKrU,KAAL,CAAW8G,QAAlB;AACH;;AACD,WAAO,IAAP;AACH;;AApC8D;;wCAA9CqN,8C,kBACK;AAClBE,QAAM,EAAE;AADU,C;;wCADLF,8C,eAKE;AAEf;;;AAGAG,aAAW,EAAEnU,oBAAS,CAACoU,OAAV,CAAkBpU,oBAAS,CAACC,MAA5B,EAAoC+H,UALlC;;AAOf;;;AAGAiM,eAAa,EAAEjU,oBAAS,CAACiI,IAAV,CAAeD,UAVf;;AAYf;;;AAGAkM,QAAM,EAAElU,oBAAS,CAACiI,IAAV,CAAeD,UAfR;;AAiBf;;;AAGArB,UAAQ,EAAE3G,oBAAS,CAAC8H,IAAV,CAAeE;AApBV,C;;ACXvB;AACA;AAEA;AAEA;AACA;AAEA;;AAEA,SAASyE,wCAAT,CAAyB7J,KAAzB,EAAgC8O,QAAhC,EAA0C;AACtC,QAAM2C,KAAK,GAAGC,oCAAU,CAAC1R,KAAD,CAAxB;;AACA,OAAK,MAAM0H,IAAX,IAAmB+J,KAAnB,EAA0B;AACtB,SAAK,MAAMjC,UAAX,IAAyBV,QAAQ,CAACyC,WAAlC,EAA+C;AAC3C,UAAII,6CAAmB,CAAC3R,KAAD,EAAQ;AAAC0H,YAAI,EAAEA,IAAI,CAACvB,EAAZ;AAAgBqJ;AAAhB,OAAR,CAAvB,EAA6D;AACzD,eAAO;AAAC6B,uBAAa,EAAE;AAAhB,SAAP;AACH;AACJ;AACJ;;AAED,SAAO;AAACA,iBAAa,EAAE;AAAhB,GAAP;AACH;;AAEc7G,kFAAO,CAACX,wCAAD,CAAP,CAAyBuH,8CAAzB,CAAf,E;;;;;;;;;;;;;ACvBA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEe,MAAMQ,uCAAN,SAAiC/U,eAAK,CAACC,aAAvC,CAAqD;AAKhE2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,iEAWA2G,CAAD,IAAO;AACrBA,OAAC,CAACgD,cAAF;AAEA,WAAK/C,QAAL,CAAc;AACVgO,uBAAe,EAAE;AADP,OAAd;AAGH,KAjBkB;;AAAA,+DAmBH,MAAM;AAClB,WAAK5U,KAAL,CAAW6U,QAAX;AACH,KArBkB;;AAAA,8DAuBJ,MAAM;AACjB,WAAKjO,QAAL,CAAc;AACVgO,uBAAe,EAAE;AADP,OAAd;AAGH,KA3BkB;;AAAA,+DA6BFjO,CAAD,IAAO;AACnB,UAAI0B,6BAAA,CAAmB1B,CAAnB,EAAsB+E,kCAAS,CAACoJ,QAAV,CAAmBC,KAAzC,CAAJ,EAAqD;AACjD,aAAKC,aAAL,CAAmBrO,CAAnB;AACH;AACJ,KAjCkB;;AAEf,QAAI,KAAKH,WAAL,KAAqBmO,uCAAzB,EAA6C;AACzC,YAAM,IAAIM,SAAJ,CAAc,mCAAd,CAAN;AACH;;AAED,SAAKlS,KAAL,GAAa;AACT6R,qBAAe,EAAE;AADR,KAAb;AAGH;;AA0BD9U,QAAM,GAAG;AACL,WACI,4CACI;AACI,eAAS,EAAC,yBADd;AAEI,aAAO,EAAE,KAAKoV;AAFlB,OAIM,KAAKC,YAJX,CADJ,EAOI,8BAAC,gCAAD;AACI,UAAI,EAAE,KAAKpS,KAAL,CAAW6R,eADrB;AAEI,WAAK,EAAE,KAAKQ,UAFhB;AAGI,aAAO,EAAE,KAAKC,YAHlB;AAII,uBAAiB,EAAE,KAAKC,kBAJ5B;AAKI,eAAS,EAAE,KAAKN,aALpB;AAMI,cAAQ,EAAE,KAAKO,YANnB;AAOI,eAAS,EAAE,KAAKC;AAPpB,MAPJ,CADJ;AAmBH;;AA5D+D;;oCAA/Cb,uC,eACE;AACfE,UAAQ,EAAE1U,oBAAS,CAAC+H,IAAV,CAAeC;AADV,C;;;;ACZvB;AACA;AACA;AACA;AACA;AAEA;AACA;AAEe,MAAMsN,8BAAN,SAA0Bd,uCAA1B,CAA6C;AAKxD,MAAIQ,YAAJ,GAAmB;AACf,WACI,8BAAC,oCAAD;AACI,QAAE,EAAC,mBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ;AAMH;;AAED,MAAIC,UAAJ,GAAiB;AACb,WACI,8BAAC,oCAAD;AACI,QAAE,EAAC,iCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ;AAMH;;AAED,MAAIC,YAAJ,GAAmB;AACf,WACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,+BAAD;AAAa,yBAAmB,EAAC;AAAjC,MADJ,EAEI,8BAAC,oCAAD;AACI,QAAE,EAAC,+BADP;AAEI,oBAAc,EAAC;AAFnB,MAFJ,CADJ;AASH;;AAED,MAAIC,kBAAJ,GAAyB;AACrB,WACI,8BAAC,oCAAD;AACI,QAAE,EAAC,kCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ;AAMH;;AA1CuD;;kCAAvCG,8B,eACE;AACfZ,UAAQ,EAAE1U,oBAAS,CAAC+H,IAAV,CAAeC;AADV,C;;;;ACVvB;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEe,MAAMuN,6BAAN,SAA4B9V,eAAK,CAAC2G,SAAlC,CAA4C;AAAA;AAAA;;AAAA,yDAoBxC,MAAM;AACjB,UAAI,KAAKvG,KAAL,CAAW6U,QAAf,EAAyB;AACrB,aAAK7U,KAAL,CAAW6U,QAAX,CAAoB,KAAK7U,KAAL,CAAW2V,KAAX,CAAiBzM,EAArC;AACH;;AAED,WAAKlJ,KAAL,CAAWgJ,OAAX,CAAmB4M,iBAAnB,CAAqC,KAAK5V,KAAL,CAAW2V,KAAX,CAAiBzM,EAAtD;AACH,KA1BsD;AAAA;;AA4BvDpJ,QAAM,GAAG;AACL,UAAM6V,KAAK,GAAG,KAAK3V,KAAL,CAAW2V,KAAzB;AACA,UAAME,eAAe,GAAG,KAAK7V,KAAL,CAAW6V,eAAnC;AACA,QAAIC,kBAAkB,GAAG,KAAK9V,KAAL,CAAW8V,kBAApC;;AAEA,QAAID,eAAe,IAAIA,eAAe,KAAKC,kBAA3C,EAA+D;AAC3DA,wBAAkB,IAAI,QAAQD,eAAR,GAA0B,GAAhD;AACH;;AAED,QAAIE,YAAY,GAAG,IAAnB;;AACA,QAAIJ,KAAK,CAACK,UAAN,KAAqB,KAAKhW,KAAL,CAAWiW,aAApC,EAAmD;AAC/CF,kBAAY,GACR,8BAAC,wBAAD;AAAuB,mBAAW,EAAE,CAACvD,qBAAW,CAAC0D,aAAb;AAApC,SACI,8BAAC,8BAAD;AAAa,gBAAQ,EAAE,KAAKC;AAA5B,QADJ,CADJ;AAKH,KAND,MAMO;AACHJ,kBAAY,GACR,8BAAC,wBAAD;AAAuB,mBAAW,EAAE,CAACvD,qBAAW,CAAC0D,aAAb;AAApC,SACI,8BAAC,wBAAD;AAAuB,mBAAW,EAAE,CAAC1D,qBAAW,CAAC4D,oBAAb;AAApC,SACI,8BAAC,8BAAD;AAAa,gBAAQ,EAAE,KAAKD;AAA5B,QADJ,CADJ,CADJ;AAOH;;AAED,WACI;AAAI,eAAS,EAAC;AAAd,OACI;AAAI,eAAS,EAAC;AAAd,OACK,MAAMR,KAAK,CAACjL,IAAZ,GAAmB,GADxB,CADJ,EAII;AAAI,eAAS,EAAC;AAAd,OACI;AACI,eAAS,EAAC,UADd;AAEI,WAAK,EAAE;AAAC2L,uBAAe,EAAE,SAAS9Q,iBAAO,CAAC+Q,sBAAR,CAA+BX,KAAK,CAACzM,EAArC,CAAT,GAAoD;AAAtE;AAFX,MADJ,CAJJ,EAUI;AAAI,eAAS,EAAC;AAAd,OACK4M,kBADL,CAVJ,EAaI;AAAI,eAAS,EAAC;AAAd,OACKC,YADL,CAbJ,CADJ;AAmBH;;AAzEsD;;+BAAtCL,6B,eACE;AACfC,OAAK,EAAExV,oBAAS,CAACmB,MAAV,CAAiB6G,UADT;AAEf8N,eAAa,EAAE9V,oBAAS,CAACC,MAAV,CAAiB+H,UAFjB;AAGf2N,oBAAkB,EAAE3V,oBAAS,CAACC,MAAV,CAAiB+H,UAHtB;AAIf0N,iBAAe,EAAE1V,oBAAS,CAACC,MAJZ;AAKfmW,aAAW,EAAEpW,oBAAS,CAACmB,MALR;AAMfuT,UAAQ,EAAE1U,oBAAS,CAAC+H,IANL;AAOfc,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AACrB2K,qBAAiB,EAAEzV,oBAAS,CAAC+H,IAAV,CAAeC;AADb,GAAhB,EAENA;AATY,C;;+BADFuN,6B,kBAaK;AAClBC,OAAK,EAAE,EADW;AAElBM,eAAa,EAAE,EAFG;AAGlBM,aAAW,EAAE,EAHK;AAIlBT,oBAAkB,EAAE;AAJF,C;;ACzB1B;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;;AAEA,SAASlJ,+BAAT,CAAyB7J,KAAzB,EAAgC8O,QAAhC,EAA0C;AACtC,QAAM8D,KAAK,GAAG5S,KAAK,CAACC,QAAN,CAAewT,MAAf,CAAsBC,WAAtB,CAAkC5E,QAAQ,CAAC6E,OAA3C,CAAd;AACA,QAAMC,OAAO,GAAG1K,wBAAO,CAAClJ,KAAD,EAAQ4S,KAAK,CAACK,UAAd,CAAvB;AAEA,SAAO;AACHL,SADG;AAEHG,sBAAkB,EAAEc,6CAAoB,CAACD,OAAD,CAFrC;AAGHd,mBAAe,EAAEc,OAAO,GAAGA,OAAO,CAACjO,QAAX,GAAsB,EAH3C;AAIHuN,iBAAa,EAAEY,iCAAgB,CAAC9T,KAAD,CAJ5B;AAKHwT,eAAW,EAAEO,wCAAc,CAAC/T,KAAD;AALxB,GAAP;AAOH;;AAED,SAASqK,kCAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxBsI,4DAAiBA;AADO,KAAD,EAExBvI,QAFwB;AADxB,GAAP;AAKH;;AAEcE,yEAAO,CAACX,+BAAD,EAAkBQ,kCAAlB,CAAP,CAA6CsI,6BAA7C,CAAf,E;;;;;;;;;;;;;;;;ACpCA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAMqB,cAAc,GAAG,EAAvB;AACA,MAAMC,+BAA+B,GAAG,GAAxC;AAEe,MAAMC,oBAAN,SAAwBrX,eAAK,CAAC2G,SAA9B,CAAwC;AA2BnDC,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,gDAuBP2G,CAAD,IAAO;AACd,UAAIA,CAAJ,EAAO;AACHA,SAAC,CAACgD,cAAF;AACH;;AAED,YAAMuN,IAAI,GAAG,KAAKnU,KAAL,CAAWgD,IAAX,GAAkB,CAA/B;AACA,WAAKa,QAAL,CAAc;AAACuQ,mBAAW,EAAE;AAAd,OAAd;AACA,WAAKnX,KAAL,CAAWgJ,OAAX,CAAmBoO,eAAnB,CAAmCF,IAAnC,EAAyCH,cAAzC,EAAyDM,kBAAK,CAACC,YAA/D,EAA6E,IAA7E,EAAmFxL,IAAnF,CAAwF,CAAC;AAACjC;AAAD,OAAD,KAAY;AAChG,aAAKjD,QAAL,CAAc;AAACb,cAAI,EAAEmR,IAAP;AAAaC,qBAAW,EAAE;AAA1B,SAAd;;AACA,YAAItN,IAAI,IAAIA,IAAI,CAACxH,MAAL,GAAc0U,cAA1B,EAA0C;AACtC,eAAKnQ,QAAL,CAAc;AAAC2Q,wBAAY,EAAE;AAAf,WAAd;AACH;;AAED,aAAKvX,KAAL,CAAWwX,WAAX;AACH,OAPD;AAQH,KAtCkB;;AAAA,oDAwCH7Q,CAAD,IAAO;AAClB,UAAIA,CAAJ,EAAO;AACHA,SAAC,CAACgD,cAAF;AACH;;AAED,WAAK/C,QAAL,CAAc;AAACb,YAAI,EAAE,KAAKhD,KAAL,CAAWgD,IAAX,GAAkB,CAAzB;AAA4BoR,mBAAW,EAAE;AAAzC,OAAd;AACA,WAAKnX,KAAL,CAAWwX,WAAX;AACH,KA/CkB;;AAAA,sDAiDD7Q,CAAD,IAAO;AACpB,UAAI,CAACA,CAAD,IAAM,CAACA,CAAC,CAACzE,MAAb,EAAqB;AACjB;AACH;;AAED,YAAMuV,IAAI,GAAG9Q,CAAC,CAACzE,MAAF,CAASzB,KAAT,IAAkB,EAA/B;AAEAiX,kBAAY,CAAC,KAAKC,aAAN,CAAZ;AAEA,WAAKA,aAAL,GAAqBC,UAAU,CAAC,YAAY;AACxC,YAAIH,IAAI,CAACI,IAAL,OAAgB,EAApB,EAAwB;AACpB,eAAKjR,QAAL,CAAc;AAACkR,wBAAY,EAAE,IAAf;AAAqB/R,gBAAI,EAAE;AAA3B,WAAd;AACA;AACH;;AAED,aAAKa,QAAL,CAAc;AAACG,iBAAO,EAAE;AAAV,SAAd;AAEA,cAAM;AAAC8C;AAAD,YAAS,MAAM,KAAK7J,KAAL,CAAWgJ,OAAX,CAAmB+O,kBAAnB,CAAsCN,IAAtC,EAA4C,EAA5C,EAAgD,IAAhD,CAArB;;AAEA,YAAI5N,IAAJ,EAAU;AACN,eAAKjD,QAAL,CAAc;AAACkR,wBAAY,EAAEjO,IAAI,CAAC3C,GAAL,CAAU8Q,EAAD,IAAQA,EAAE,CAAC9O,EAApB,CAAf;AAAwCnC,mBAAO,EAAE;AAAjD,WAAd;AACH,SAFD,MAEO;AACH,eAAKH,QAAL,CAAc;AAACkR,wBAAY,EAAE,EAAf;AAAmB/Q,mBAAO,EAAE;AAA5B,WAAd;AACH;AACJ,OAf8B,EAe5BiQ,+BAf4B,CAA/B;AAgBH,KA1EkB;;AAAA,wDA4ECN,OAAD,IAAa;AAC5B,UAAI,CAAC,KAAK3T,KAAL,CAAW+U,YAAhB,EAA8B;AAC1B;AACH;;AAED,YAAMjK,KAAK,GAAG,KAAK9K,KAAL,CAAW+U,YAAX,CAAwBhP,OAAxB,CAAgC4N,OAAhC,CAAd;;AAEA,UAAI7I,KAAK,GAAG,CAAZ,EAAe;AACX;AACH;;AAED,YAAMoK,eAAe,GAAG,CAAC,GAAG,KAAKlV,KAAL,CAAW+U,YAAf,CAAxB;AACAG,qBAAe,CAACC,MAAhB,CAAuBrK,KAAvB,EAA8B,CAA9B;AACA,WAAKjH,QAAL,CAAc;AAACkR,oBAAY,EAAEG;AAAf,OAAd;AACH,KA1FkB;;AAGf,SAAKN,aAAL,GAAqB,IAArB;AAEA,SAAK5U,KAAL,GAAa;AACTgE,aAAO,EAAE,IADA;AAEThB,UAAI,EAAE,CAFG;AAGToR,iBAAW,EAAE,KAHJ;AAITW,kBAAY,EAAE,IAJL;AAKTP,kBAAY,EAAE;AALL,KAAb;AAOH;;AAED9L,mBAAiB,GAAG;AAChB,SAAKzL,KAAL,CAAWgJ,OAAX,CAAmBoO,eAAnB,CAAmC,CAAnC,EAAsCL,cAAc,GAAG,CAAvD,EAA0DM,kBAAK,CAACC,YAAhE,EAA8E,IAA9E,EAAoFxL,IAApF,CAAyF,CAAC;AAACjC;AAAD,KAAD,KAAY;AACjG,WAAKjD,QAAL,CAAc;AAACG,eAAO,EAAE;AAAV,OAAd;;AACA,UAAI8C,IAAI,IAAIA,IAAI,CAACxH,MAAL,GAAc0U,cAA1B,EAA0C;AACtC,aAAKnQ,QAAL,CAAc;AAAC2Q,sBAAY,EAAE;AAAf,SAAd;AACH;AACJ,KALD;AAMH;;AAuEDzX,QAAM,GAAG;AACL,UAAMgY,YAAY,GAAG,KAAK/U,KAAL,CAAW+U,YAAhC;AACA,UAAMtB,MAAM,GAAG,EAAf;AACA,QAAI2B,UAAJ;AACA,QAAIC,cAAJ;;AAEA,QAAI,KAAKrV,KAAL,CAAWgE,OAAf,EAAwB;AACpByP,YAAM,CAACzU,IAAP,CACI;AACI,WAAG,EAAC,SADR;AAEI,iBAAS,EAAC;AAFd,SAII;AAAI,eAAO,EAAC;AAAZ,SACI,8BAAC,iCAAD;AAAe,WAAG,EAAC;AAAnB,QADJ,CAJJ,CADJ;AAUH,KAXD,MAWO,IAAI,KAAK/B,KAAL,CAAWqY,QAAX,CAAoBhW,MAApB,KAA+B,CAA/B,IAAqCyV,YAAY,IAAIA,YAAY,CAACzV,MAAb,KAAwB,CAAjF,EAAqF;AACxFmU,YAAM,CAACzU,IAAP,CACI;AACI,WAAG,EAAC,OADR;AAEI,iBAAS,EAAC;AAFd,SAII;AAAI,eAAO,EAAC;AAAZ,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,kBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CAJJ,CADJ;AAaH,KAdM,MAcA,IAAI+V,YAAJ,EAAkB;AACrBA,kBAAY,CAACvV,OAAb,CAAsBmU,OAAD,IAAa;AAC9BF,cAAM,CAACzU,IAAP,CACI,8BAAC,eAAD;AACI,aAAG,EAAE,sBAAsB2U,OAD/B;AAEI,iBAAO,EAAEA,OAFb;AAGI,kBAAQ,EAAE,KAAK4B;AAHnB,UADJ;AAOH,OARD;AASH,KAVM,MAUA;AACH,YAAMC,SAAS,GAAG,KAAKxV,KAAL,CAAWgD,IAAX,GAAkBgR,cAApC;AACA,YAAMyB,OAAO,GAAGD,SAAS,GAAGxB,cAA5B;AACA,YAAM0B,eAAe,GAAG,KAAKzY,KAAL,CAAWqY,QAAX,CAAoBK,KAApB,CAA0BH,SAA1B,EAAqCC,OAArC,CAAxB;AAEAC,qBAAe,CAAClW,OAAhB,CAAyBmU,OAAD,IAAa;AACjCF,cAAM,CAACzU,IAAP,CACI,8BAAC,eAAD;AACI,aAAG,EAAE,oBAAoB2U,OAD7B;AAEI,iBAAO,EAAEA;AAFb,UADJ;AAMH,OAPD;;AASA,UAAI,KAAK3T,KAAL,CAAWwU,YAAf,EAA6B;AACzB,cAAMoB,cAAc,GAChB,4CACI,8BAAC,oCAAD;AACI,YAAE,EAAC,yBADP;AAEI,wBAAc,EAAC;AAFnB,UADJ,EAKI,8BAAC,4BAAD;AAAU,6BAAmB,EAAC;AAA9B,UALJ,CADJ;AAUAR,kBAAU,GACN,8BAAC,8BAAD;AACI,kBAAQ,EAAC,UADb;AAEI,sBAAY,EAAC,YAFjB;AAGI,iBAAO,EAAE,KAAKS,QAHlB;AAII,gBAAM,EAAE,KAAK7V,KAAL,CAAWoU,WAJvB;AAKI,kBAAQ,EAAE,KAAKpU,KAAL,CAAWoU,WALzB;AAMI,wBAAc,EAAEwB,cANpB;AAOI,uBAAa,EAAEA;AAPnB,UADJ;AAWH;;AAED,UAAI,KAAK5V,KAAL,CAAWgD,IAAX,GAAkB,CAAtB,EAAyB;AACrBqS,sBAAc,GACV;AACI,mBAAS,EAAC,cADd;AAEI,iBAAO,EAAE,KAAKS;AAFlB,WAII,8BAAC,gCAAD;AAAc,6BAAmB,EAAC;AAAlC,UAJJ,EAKI,8BAAC,oCAAD;AACI,YAAE,EAAC,yBADP;AAEI,wBAAc,EAAC;AAFnB,UALJ,CADJ;AAYH;AACJ;;AAED,WACI,2CACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,sBAAD,OADJ,EAEI,8BAAC,kCAAD;AACI,UAAI,EAAC,QADT;AAEI,eAAS,EAAC,cAFd;AAGI,iBAAW,EAAE;AAAC3P,UAAE,EAAE4P,yBAAC,CAAC,mBAAD,CAAN;AAA6BhL,sBAAc,EAAE;AAA7C,OAHjB;AAII,cAAQ,EAAE,KAAKiL,cAJnB;AAKI,WAAK,EAAElR,gBAAK,CAACC;AALjB,MAFJ,CADJ,CADJ,EAaI;AAAM,eAAS,EAAC;AAAhB,OACI,yCACI,8BAAC,oCAAD;AACI,QAAE,EAAC,iBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,EAOI,yCACI,8BAAC,oCAAD;AACI,QAAE,EAAC,kBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAPJ,CAbJ,EA2BI;AAAK,eAAS,EAAC;AAAf,OACI;AAAO,eAAS,EAAC;AAAjB,OACI,6CACI;AAAI,eAAS,EAAC;AAAd,OACI;AAAI,eAAS,EAAC;AAAd,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,iBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,EAOI;AAAI,eAAS,EAAC;AAAd,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,kBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAPJ,EAaI;AAAI,eAAS,EAAC;AAAd,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,oBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAbJ,EAmBI;AAAI,eAAS,EAAC;AAAd,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,oBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAnBJ,CADJ,CADJ,EA6BI,6CACK0O,MADL,CA7BJ,CADJ,CA3BJ,EA8DI;AAAK,eAAS,EAAC;AAAf,OACK4B,cADL,EAEKD,UAFL,CA9DJ,CADJ;AAqEH;;AA3RkD;;0BAAlClB,oB,eACE;AAEf;;;AAGAoB,UAAQ,EAAElY,oBAAS,CAACoU,OAAV,CAAkBpU,oBAAS,CAACC,MAA5B,EAAoC+H,UAL/B;;AAOf;;;AAGAqP,aAAW,EAAErX,oBAAS,CAAC+H,IAAV,CAAeC,UAVb;AAYfa,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGAmM,mBAAe,EAAEjX,oBAAS,CAAC+H,IAAV,CAAeC,UALX;;AAOrB;;;AAGA4P,sBAAkB,EAAE5X,oBAAS,CAAC+H,IAAV,CAAeC;AAVd,GAAhB,EAWNA;AAvBY,C;;AA6RvB,MAAMN,gBAAK,GAAG;AACVC,QAAM,EAAE;AAACQ,YAAQ,EAAE,CAAX;AAAcC,cAAU,EAAE;AAA1B;AADE,CAAd,C;;ACpTA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;;AAEA,SAASqE,0BAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,SAAO;AACHsV,YAAQ,EAAEW,wDAA6B,CAACjW,KAAD,CAA7B,IAAwC;AAD/C,GAAP;AAGH;;AAED,SAASqK,6BAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxB8J,wDADwB;AAExBW,8DAAkBA;AAFM,KAAD,EAGxB1K,QAHwB;AADxB,GAAP;AAMH;;AAEcE,oEAAO,CAACX,0BAAD,EAAkBQ,6BAAlB,CAAP,CAA6C6J,oBAA7C,CAAf,E;;;;AC3BA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEe,MAAMgC,oBAAN,SAAwBrZ,eAAK,CAAC2G,SAA9B,CAAwC;AAAA;AAAA;;AAAA,mDAuBrC,CAACvG,KAAK,GAAG,KAAKA,KAAd,KAAwB;AAClC8S,cAAQ,CAAC5S,KAAT,GAAiBmI,iCAAA,CAAsB,qBAAtB,EAA6C,cAA7C,IAA+D,KAA/D,GAAuErI,KAAK,CAACkZ,eAA7E,GAA+F,GAA/F,GAAqGlZ,KAAK,CAAC6S,QAA5H;AACH,KAzBkD;AAAA;;AAkBnDpH,mBAAiB,GAAG;AAChB,SAAK0H,WAAL;AACA,SAAKnT,KAAL,CAAWgJ,OAAX,CAAmBmQ,iBAAnB,CAAqC,CAAC,cAAD,EAAiB,YAAjB,EAA+B,aAA/B,EAA8C,WAA9C,CAArC;AACH;;AAMDC,kCAAgC,CAACC,SAAD,EAAY;AAAE;AAC1C,QAAI,KAAKrZ,KAAL,CAAW6S,QAAX,KAAwBwG,SAAS,CAACxG,QAAtC,EAAgD;AAC5C,WAAKM,WAAL,CAAiBkG,SAAjB;AACH;AACJ;;AAEDvZ,QAAM,GAAG;AACL,WACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI,0CACI,8BAAC,oCAAD;AACI,QAAE,EAAC,mBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,EAOI,8BAAC,wBAAD;AAAuB,iBAAW,EAAE,CAAC0S,qBAAW,CAAC8G,aAAb;AAApC,OACI,8BAAC,gCAAD;AACI,eAAS,EAAC,UADd;AAEI,QAAE,EAAE,MAAM,KAAKtZ,KAAL,CAAWuZ,QAAjB,GAA4B;AAFpC,OAII;AACI,UAAI,EAAC,QADT;AAEI,eAAS,EAAC;AAFd,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,gBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CAJJ,CADJ,CAPJ,CADJ,EAyBI,8BAAC,UAAD;AAAW,iBAAW,EAAE,KAAKvZ,KAAL,CAAWwX;AAAnC,MAzBJ,CADJ;AA6BH;;AA/DkD;;0BAAlCyB,oB,eACE;AACfxV,QAAM,EAAEtD,oBAAS,CAACC,MAAV,CAAiB+H,UADV;AAEfoR,UAAQ,EAAEpZ,oBAAS,CAACC,MAAV,CAAiB+H,UAFZ;AAGf+Q,iBAAe,EAAE/Y,oBAAS,CAACC,MAAV,CAAiB+H,UAHnB;AAIf0K,UAAQ,EAAE1S,oBAAS,CAACC,MAJL;AAKfoX,aAAW,EAAErX,oBAAS,CAAC+H,IAAV,CAAeC,UALb;AAMfa,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AACrBkO,qBAAiB,EAAEhZ,oBAAS,CAAC+H,IAAV,CAAeC;AADb,GAAhB,EAENA;AARY,C;;0BADF8Q,oB,kBAYK;AAClBM,UAAQ,EAAE,EADQ;AAElBL,iBAAe,EAAE,EAFC;AAGlBrG,UAAQ,EAAE;AAHQ,C;;AC3B1B;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AAEA,SAASjG,qBAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,QAAM0H,IAAI,GAAGqM,wCAAc,CAAC/T,KAAD,CAAd,IAAyB,EAAtC;AAEA,SAAO;AACHU,UAAM,EAAEgH,IAAI,CAACvB,EADV;AAEHqQ,YAAQ,EAAE9O,IAAI,CAACC,IAFZ;AAGHwO,mBAAe,EAAEzO,IAAI,CAACrG,YAHnB;AAIHyO,YAAQ,EAAE9P,KAAK,CAACC,QAAN,CAAewW,OAAf,CAAuB3M,MAAvB,CAA8BiH;AAJrC,GAAP;AAMH;;AAED,SAAS1G,wBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxB6L,2DAAiBA;AADO,KAAD,EAExB9L,QAFwB;AADxB,GAAP;AAKH;;AAEcE,0EAAO,CAACX,qBAAD,EAAkBQ,wBAAlB,CAAP,CAA6C6L,oBAA7C,CAAf,E;;;;;;;AC9BA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEe,MAAMQ,kBAAN,SAAuB7Z,eAAK,CAAC2G,SAA7B,CAAuC;AAclDC,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,mDAYJ,MAAO2G,CAAP,IAAa;AACxB,YAAM;AAACqC,eAAD;AAAU0Q,gBAAV;AAAoBxH,YAApB;AAA0BzH;AAA1B,UAAkC,KAAKzK,KAA7C;AACA,YAAM;AAACmP,aAAD;AAAQzE,YAAR;AAAciP;AAAd,UAAwB,KAAK5W,KAAnC;AAEA4D,OAAC,CAACgD,cAAF;;AAEA,UAAIgQ,MAAJ,EAAY;AACR;AACH;;AAED,WAAK/S,QAAL,CAAc;AACV+S,cAAM,EAAE,IADE;AAEV/P,aAAK,EAAE;AAFG,OAAd;AAKA,YAAM+L,KAAK,GAAG;AACVK,kBAAU,EAAE9D,IAAI,CAAChJ,EADP;AAEVwB,YAAI,EAAEA,IAAI,CAACmN,IAAL,GAAYhR,WAAZ;AAFI,OAAd,CAfwB,CAoBxB;;AACA,UAAI8O,KAAK,CAACjL,IAAN,CAAWkP,UAAX,CAAsB,GAAtB,KAA8BjE,KAAK,CAACjL,IAAN,CAAWmP,QAAX,CAAoB,GAApB,CAAlC,EAA4D;AACxDlE,aAAK,CAACjL,IAAN,GAAaiL,KAAK,CAACjL,IAAN,CAAWoP,SAAX,CAAqB,CAArB,EAAwBnE,KAAK,CAACjL,IAAN,CAAWrI,MAAX,GAAoB,CAA5C,CAAb;AACH;;AAED,UAAI,CAACsT,KAAK,CAACjL,IAAX,EAAiB;AACb,aAAK9D,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV/P,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,wBADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AAUA;AACH,OAZD,MAYO,IAAK,aAAD,CAAgBmQ,IAAhB,CAAqBpE,KAAK,CAACjL,IAA3B,CAAJ,EAAsC;AACzC,aAAK9D,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV/P,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,uBADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AAUA;AACH,OAZM,MAYA,IAAI8P,QAAQ,CAACM,cAAT,CAAwBrE,KAAK,CAACjL,IAA9B,CAAJ,EAAyC;AAC5C,aAAK9D,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV/P,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,qBADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AAUA;AACH;;AAED,UAAI,CAACuF,KAAL,EAAY;AACR,aAAKvI,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV/P,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,yBADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AAUA;AACH;;AAED,YAAM;AAACA;AAAD,UAAU,MAAMZ,OAAO,CAACiR,iBAAR,CAA0BtE,KAA1B,EAAiCxG,KAAjC,CAAtB;;AACA,UAAIvF,KAAJ,EAAW;AACP,aAAKhD,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV/P,eAAK,EAAEA,KAAK,CAACG;AAFH,SAAd;AAIA;AACH;;AAEDyG,+CAAc,CAACzO,IAAf,CAAoB,MAAM0I,IAAI,CAACC,IAAX,GAAkB,QAAtC;AACH,KAnGkB;;AAAA,iDAqGL/D,CAAD,IAAO;AAChB,WAAKC,QAAL,CAAc;AACV8D,YAAI,EAAE/D,CAAC,CAACzE,MAAF,CAASzB;AADL,OAAd;AAGH,KAzGkB;;AAAA,kDA2GJkG,CAAD,IAAO;AACjB,UAAIA,CAAC,CAACzE,MAAF,CAASqM,KAAT,CAAelM,MAAf,KAA0B,CAA9B,EAAiC;AAC7B,aAAKuE,QAAL,CAAc;AACVuI,eAAK,EAAE,IADG;AAEV+K,kBAAQ,EAAE;AAFA,SAAd;AAKA;AACH;;AAED,YAAM/K,KAAK,GAAGxI,CAAC,CAACzE,MAAF,CAASqM,KAAT,CAAe,CAAf,CAAd;AAEA,YAAMK,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,YAAM,CAACE,MAAP,GAAgB,MAAM;AAClB,aAAKlI,QAAL,CAAc;AACVuI,eADU;AAEV+K,kBAAQ,EAAEtL,MAAM,CAAC7C;AAFP,SAAd;AAIH,OALD;;AAMA6C,YAAM,CAACuL,aAAP,CAAqBhL,KAArB;AACH,KA/HkB;;AAGf,SAAKpM,KAAL,GAAa;AACT2H,UAAI,EAAE,EADG;AAETyE,WAAK,EAAE,IAFE;AAGT+K,cAAQ,EAAE,EAHD;AAITP,YAAM,EAAE,KAJC;AAKT/P,WAAK,EAAE;AALE,KAAb;AAOH;;AAuHD9J,QAAM,GAAG;AACL,QAAIsa,QAAQ,GAAG,IAAf;;AACA,QAAI,KAAKrX,KAAL,CAAWoM,KAAf,EAAsB;AAClBiL,cAAQ,GACJ;AAAM,iBAAS,EAAC;AAAhB,SACK,KAAKrX,KAAL,CAAWoM,KAAX,CAAiBzE,IADtB,CADJ;AAKH;;AAED,QAAI2P,OAAO,GAAG,IAAd;;AACA,QAAI,KAAKtX,KAAL,CAAWmX,QAAf,EAAyB;AACrBG,aAAO,GACH;AAAK,iBAAS,EAAC;AAAf,SACI;AACI,iBAAS,EAAC,wBADd;AAEI,eAAO,EAAC;AAFZ,SAII,8BAAC,oCAAD;AACI,UAAE,EAAC,mBADP;AAEI,sBAAc,EAAC;AAFnB,QAJJ,CADJ,EAUI;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,4BADP;AAEI,sBAAc,EAAC,wCAFnB;AAGI,cAAM,EAAE;AACJlL,eAAK,EACD;AACI,qBAAS,EAAC,UADd;AAEI,iBAAK,EAAE;AAACkH,6BAAe,EAAE,SAAS,KAAKtT,KAAL,CAAWmX,QAApB,GAA+B;AAAjD;AAFX;AAFA;AAHZ,QADJ,CAVJ,CADJ;AA2BH;;AAED,WACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,gCAAD,QACI,8BAAC,gCAAD;AAAM,QAAE,EAAE,MAAM,KAAKla,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B;AAAvC,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,mBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,EAOI,8BAAC,oCAAD;AACI,QAAE,EAAC,kBADP;AAEI,oBAAc,EAAC;AAFnB,MAPJ,CADJ,EAaI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,iBADd;AAEI,cAAQ,EAAE,KAAKyG;AAFnB,OAII;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,gBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,MADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,IAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKpO,KAAL,CAAW2H,IALtB;AAMI,cAAQ,EAAE,KAAK4P;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,qBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CAJJ,EA+BI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,iBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI,2CACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAQ,eAAS,EAAC;AAAlB,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,wBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,EAOI;AACI,QAAE,EAAC,cADP;AAEI,UAAI,EAAC,MAFT;AAGI,YAAM,EAAC,gBAHX;AAII,cAAQ,EAAE,KAJd;AAKI,cAAQ,EAAE,KAAKC;AALnB,MAPJ,CADJ,EAgBKH,QAhBL,EAiBI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,sBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAjBJ,CADJ,CAVJ,CA/BJ,EAoEKC,OApEL,EAqEI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,6BAAD;AACI,UAAI,EAAC,WADT;AAEI,WAAK,EAAE,KAAKtX,KAAL,CAAW6G;AAFtB,MADJ,EAKI,8BAAC,gCAAD;AACI,eAAS,EAAC,qBADd;AAEI,QAAE,EAAE,MAAM,KAAK5J,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B;AAFrC,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,kBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CALJ,EAcI,8BAAC,iCAAD;AACI,eAAS,EAAC,iBADd;AAEI,UAAI,EAAC,QAFT;AAGI,cAAQ,EAAE,KAAK3H,KAAL,CAAW4W,MAHzB;AAII,kBAAY,EAAEa,yCAAe,CAAC,kBAAD,EAAqB,WAArB,CAJjC;AAKI,aAAO,EAAE,KAAKrJ;AALlB,OAOI,8BAAC,oCAAD;AACI,QAAE,EAAC,gBADP;AAEI,oBAAc,EAAC;AAFnB,MAPJ,CAdJ,CArEJ,CADJ,CAbJ,CADJ;AAmHH;;AA3SiD;;yBAAjCsI,kB,eACE;AACfzQ,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AACrBgP,qBAAiB,EAAE9Z,oBAAS,CAAC+H,IAAV,CAAeC;AADb,GAAhB,EAENA,UAHY;AAIfuR,UAAQ,EAAEvZ,oBAAS,CAACmB,MAAV,CAAiB6G,UAJZ;AAKfsC,MAAI,EAAEtK,oBAAS,CAACmB,MALD;AAMf4Q,MAAI,EAAE/R,oBAAS,CAACmB;AAND,C;;yBADFmY,kB,kBAUK;AAClBgB,QAAM,EAAEta,oBAAS,CAACmB,MAAV,CAAiB6G;AADP,C;;ACxB1B;AACA;AAEA;AACA;AAEA;AAEA;AAEA;;AAEA,SAASyE,yBAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,SAAO;AACH2W,YAAQ,EAAEgB,+CAAW,CAAC3X,KAAD;AADlB,GAAP;AAGH;;AAED,SAASqK,4BAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxB2M,4DAAiBA;AADO,KAAD,EAExB5M,QAFwB;AADxB,GAAP;AAKH;;AAEcE,mEAAO,CAACX,yBAAD,EAAkBQ,4BAAlB,CAAP,CAA6CqM,kBAA7C,CAAf,E;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEe,MAAMkB,kBAAN,SAAuB/a,eAAK,CAACC,aAA7B,CAA2C;AAAA;AAAA;;AAAA,+CAgB1C8G,CAAD,IAAO;AACdA,OAAC,CAACgD,cAAF;AACAiR,8CAAe,CAAC,KAAK5a,KAAL,CAAWS,KAAZ,CAAf;AACH,KAnBqD;AAAA;;AAStD,aAAWoa,YAAX,GAA0B;AACtB,WAAO;AACHC,eAAS,EAAE,mBADR;AAEHhN,oBAAc,EAAE;AAFb,KAAP;AAIH;;AAODhO,QAAM,GAAG;AACL,QAAI,CAACgT,QAAQ,CAACiI,qBAAT,CAA+B,MAA/B,CAAL,EAA6C;AACzC,aAAO,IAAP;AACH;;AAED,UAAMC,OAAO,GACT,8BAAC,0BAAD;AAAS,QAAE,EAAC;AAAZ,OACI,8BAAC,oCAAD;AACI,QAAE,EAAE,KAAKhb,KAAL,CAAW8a,SADnB;AAEI,oBAAc,EAAE,KAAK9a,KAAL,CAAW8N;AAF/B,MADJ,CADJ;AASA,WACI,8BAAC,iCAAD;AACI,aAAO,EAAE,CAAC,OAAD,EAAU,OAAV,CADb;AAEI,eAAS,EAAEpC,kCAAS,CAACsF,kBAFzB;AAGI,eAAS,EAAC,KAHd;AAII,aAAO,EAAEgK;AAJb,OAMI;AACI,UAAI,EAAC,GADT;AAEI,eAAS,EAAC,wBAFd;AAGI,aAAO,EAAE,KAAKC;AAHlB,MANJ,CADJ;AAcH;;AAjDqD;;yBAArCN,kB,eACE;AACfla,OAAK,EAAEN,oBAAS,CAACC,MAAV,CAAiB+H,UADT;AAGf2F,gBAAc,EAAE3N,oBAAS,CAACC,MAHX;AAKf0a,WAAS,EAAE3a,oBAAS,CAACC;AALN,C;;ACbvB;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEe,MAAM8a,oCAAN,SAAgCvG,uCAAhC,CAAmD;AAC9D,MAAIQ,YAAJ,GAAmB;AACf,WACI,8BAAC,oCAAD;AACI,QAAE,EAAC,+BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ;AAMH;;AAED,MAAIC,UAAJ,GAAiB;AACb,WACI,8BAAC,oCAAD;AACI,QAAE,EAAC,mCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ;AAMH;;AAED,MAAIC,YAAJ,GAAmB;AACf,WACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,+BAAD;AAAa,yBAAmB,EAAC;AAAjC,MADJ,EAEI,8BAAC,oCAAD;AACI,QAAE,EAAE,KAAKrV,KAAL,CAAWmb,SADnB;AAEI,oBAAc,EAAC;AAFnB,MAFJ,CADJ;AASH;;AAED,MAAI7F,kBAAJ,GAAyB;AACrB,WACI,8BAAC,oCAAD;AACI,QAAE,EAAC,oCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ;AAMH;;AAtC6D;AAyClE4F,oCAAiB,CAACzN,SAAlB,GAA8B;AAC1B0N,WAAS,EAAEhb,oBAAS,CAACC,MAAV,CAAiB+H,UADF;AAE1B0M,UAAQ,EAAE1U,oBAAS,CAAC+H,IAAV,CAAeC;AAFC,CAA9B,C;;;;ACnDA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEO,SAASK,wCAAT,CAAuB4S,eAAvB,EAAwCC,OAAxC,EAAiD1Z,MAAjD,EAAyD;AAC5D,MAAI,CAACA,MAAL,EAAa;AACT,WAAO,IAAP;AACH;;AAED,MAAIyZ,eAAe,CAAChX,YAAhB,CAA6ByC,WAA7B,GAA2CiC,OAA3C,CAAmDnH,MAAnD,MAA+D,CAAC,CAAhE,IACAyZ,eAAe,CAACzS,WAAhB,CAA4B9B,WAA5B,GAA0CiC,OAA1C,CAAkDnH,MAAlD,MAA8D,CAAC,CADnE,EACsE;AAClE,WAAO,IAAP;AACH;;AAED,MAAIyZ,eAAe,CAACE,UAApB,EAAgC;AAC5B,QAAID,OAAO,IAAIA,OAAO,CAAC3Q,IAAR,CAAa7D,WAAb,GAA2BiC,OAA3B,CAAmCnH,MAAnC,MAA+C,CAAC,CAA/D,EAAkE;AAC9D,aAAO,IAAP;AACH;AACJ;;AAED,SAAO,KAAP;AACH;AAEc,MAAM4Z,mDAAN,SAAuC3b,eAAK,CAACC,aAA7C,CAA2D;AAuCtE2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKmW,YAAL,GAAoB,KAAKA,YAAL,CAAkBzP,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDyP,cAAY,GAAG;AACX,SAAKnW,KAAL,CAAW6U,QAAX,CAAoB,KAAK7U,KAAL,CAAWob,eAA/B;AACH;;AAEDtb,QAAM,GAAG;AACL,UAAMsb,eAAe,GAAG,KAAKpb,KAAL,CAAWob,eAAnC;AACA,UAAMC,OAAO,GAAG,KAAKrb,KAAL,CAAWqb,OAA3B;AACA,UAAM1Z,MAAM,GAAG,KAAK3B,KAAL,CAAW2B,MAAX,GAAoB,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBkF,WAAlB,EAApB,GAAsD,EAArE;;AAEA,QAAI,CAAC2B,wCAAa,CAAC4S,eAAD,EAAkBC,OAAlB,EAA2B1Z,MAA3B,CAAlB,EAAsD;AAClD,aAAO,IAAP;AACH;;AAED,QAAIiH,WAAJ;;AACA,QAAIwS,eAAe,CAAChX,YAApB,EAAkC;AAC9BwE,iBAAW,GAAGwS,eAAe,CAAChX,YAA9B;AACH,KAFD,MAEO,IAAIiX,OAAJ,EAAa;AAChBzS,iBAAW,GAAGyS,OAAO,CAACjX,YAAtB;AACH,KAFM,MAEA;AACHwE,iBAAW,GACP,8BAAC,oCAAD;AACI,UAAE,EAAC,6CADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH;;AAED,QAAID,WAAW,GAAG,IAAlB;;AACA,QAAIyS,eAAe,CAACzS,WAApB,EAAiC;AAC7BA,iBAAW,GACP;AAAK,iBAAS,EAAC;AAAf,SACI;AAAM,iBAAS,EAAC;AAAhB,SACKyS,eAAe,CAACzS,WADrB,CADJ,CADJ;AAOH;;AAED,QAAIK,OAAO,GAAG,IAAd;;AACA,QAAI,KAAKhJ,KAAL,CAAWwb,SAAf,EAA0B;AACtBxS,aAAO,GACH;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,gCAAD;AAAM,UAAE,EAAG,IAAG,KAAKhJ,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,2CAA0C0Q,eAAe,CAAClS,EAAG;AAAhG,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,6BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CADJ,EAOK,KAPL,EAQI,8BAAC,oCAAD;AACI,iBAAS,EAAE4P,yBAAC,CAAC,4CAAD,CADhB;AAEI,gBAAQ,EAAE,KAAK3C;AAFnB,QARJ,CADJ;AAeH;;AAED,UAAMsF,iBAAiB,GAAGC,iCAAU,KAAK,SAAf,GAA2BN,eAAe,CAAClS,EAArE;AAEA,WACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACKN,WADL,CADJ,CADJ,EAMKD,WANL,EAOI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,4BADP;AAEI,oBAAc,EAAC,YAFnB;AAGI,YAAM,EAAE;AACJgT,WAAG,EAAEF;AADD;AAHZ,MADJ,EAQI,4CACI,8BAAC,kBAAD;AACI,WAAK,EAAEA;AADX,MADJ,CARJ,CADJ,CAPJ,EAuBI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,iCADP;AAEI,oBAAc,EAAC,gDAFnB;AAGI,YAAM,EAAE;AACJ9E,eAAO,EAAE,KAAK3W,KAAL,CAAW2W,OAAX,CAAmBjO,QADxB;AAEJkT,gBAAQ,EAAER,eAAe,CAACS;AAFtB;AAHZ,MADJ,CADJ,CAvBJ,CADJ,EAqCK7S,OArCL,CADJ;AAyCH;;AAjJqE;;0CAArDuS,mD,eACE;AAEf;;;AAGAH,iBAAe,EAAEjb,oBAAS,CAACmB,MAAV,CAAiB6G,UALnB;;AAOf;;;AAGA0M,UAAQ,EAAE1U,oBAAS,CAAC+H,IAAV,CAAeC,UAVV;;AAYf;;;AAGAxG,QAAM,EAAExB,oBAAS,CAACC,MAfH;;AAiBf;;;AAGAuW,SAAO,EAAExW,oBAAS,CAACmB,MAAV,CAAiB6G,UApBX;;AAsBf;;;AAGAqT,WAAS,EAAErb,oBAAS,CAACiI,IAAV,CAAeD,UAzBX;;AA2Bf;;;AAGAsC,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UA9BR;;AAgCf;;;AAGAkT,SAAO,EAAElb,oBAAS,CAACmB;AAnCJ,C;;;;ACnCvB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEe,MAAMwa,qDAAN,SAAwClc,eAAK,CAACC,aAA9C,CAA4D;AAyDvE2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,8EAoBMob,eAAD,IAAqB;AACzC,WAAKpb,KAAL,CAAWgJ,OAAX,CAAmB+S,kBAAnB,CAAsCX,eAAe,CAAClS,EAAtD;AACH,KAtBkB;;AAAA,+EAwBM,CAAChF,CAAD,EAAIC,CAAJ,KAAU;AAC/B,UAAI6X,YAAY,GAAG9X,CAAC,CAACE,YAArB;;AACA,UAAI,CAAC4X,YAAL,EAAmB;AACf,cAAMC,QAAQ,GAAG,KAAKjc,KAAL,CAAWkc,QAAX,CAAoBhY,CAAC,CAACoX,UAAtB,CAAjB;;AACA,YAAIW,QAAJ,EAAc;AACVD,sBAAY,GAAGC,QAAQ,CAAC7X,YAAxB;AACH,SAFD,MAEO;AACH4X,sBAAY,GAAG3T,iCAAA,CAAsB,6CAAtB,EAAqE,mBAArE,CAAf;AACH;AACJ;;AAED,YAAM8T,YAAY,GAAGhY,CAAC,CAACC,YAAvB;AAEA,aAAO4X,YAAY,CAAC3X,aAAb,CAA2B8X,YAA3B,CAAP;AACH,KAtCkB;;AAAA,yEAwCCxa,MAAD,IAAY,KAAK3B,KAAL,CAAWoc,gBAAX,CAC3BnY,IAD2B,CACtB,KAAKoY,sBADiB,EAE3B1a,MAF2B,CAEnByZ,eAAD,IAAqB5S,wCAAa,CAAC4S,eAAD,EAAkB,KAAKpb,KAAL,CAAWkc,QAAX,CAAoBd,eAAe,CAACE,UAApC,CAAlB,EAAmE3Z,MAAnE,CAFd,EAG3BuF,GAH2B,CAGtBkU,eAAD,IAAqB;AACrB,YAAMI,SAAS,GAAG,KAAKxb,KAAL,CAAWsc,uBAAX,IAAsC,KAAKtc,KAAL,CAAWkS,IAAX,CAAgBhJ,EAAhB,KAAuBkS,eAAe,CAACnS,OAA/F;AACA,YAAMoS,OAAO,GAAG,KAAKrb,KAAL,CAAWkc,QAAX,CAAoBd,eAAe,CAACE,UAApC,CAAhB;AACA,aACI,8BAAC,mDAAD;AACI,WAAG,EAAEF,eAAe,CAAClS,EADzB;AAEI,uBAAe,EAAEkS,eAFrB;AAGI,gBAAQ,EAAE,KAAKmB,qBAHnB;AAII,eAAO,EAAE,KAAKvc,KAAL,CAAWwc,KAAX,CAAiBpB,eAAe,CAACnS,OAAjC,KAA6C,EAJ1D;AAKI,iBAAS,EAAEuS,SALf;AAMI,YAAI,EAAE,KAAKxb,KAAL,CAAWyK,IANrB;AAOI,eAAO,EAAE4Q;AAPb,QADJ;AAWH,KAjB0B,CAxCZ;;AAGf,SAAKtY,KAAL,GAAa;AACTgE,aAAO,EAAE;AADA,KAAb;AAGH;;AAED0E,mBAAiB,GAAG;AAChB,QAAI,KAAKzL,KAAL,CAAW+S,sBAAf,EAAuC;AACnC,WAAK/S,KAAL,CAAWgJ,OAAX,CAAmByT,mCAAnB,CACI,KAAKzc,KAAL,CAAWyD,MADf,EAEIiI,kCAAS,CAACC,YAAV,CAAuBC,cAF3B,EAGIF,kCAAS,CAACC,YAAV,CAAuBE,SAH3B,EAIEC,IAJF,CAKI,MAAM,KAAKlF,QAAL,CAAc;AAACG,eAAO,EAAE;AAAV,OAAd,CALV;AAOH;AACJ;;AAyCDjH,QAAM,GAAG;AACL,WACI,8BAAC,4BAAD;AACI,YAAM,EACF,8BAAC,oCAAD;AACI,UAAE,EAAC,oCADP;AAEI,sBAAc,EAAC;AAFnB,QAFR;AAOI,aAAO,EACH,8BAAC,oCAAD;AACI,UAAE,EAAC,iCADP;AAEI,sBAAc,EAAC;AAFnB,QARR;AAaI,aAAO,EAAE,MAAM,KAAKE,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B,qCAb1C;AAcI,iBAAW,EAAC,oBAdhB;AAeI,eAAS,EACL,8BAAC,oCAAD;AACI,UAAE,EAAC,mCADP;AAEI,sBAAc,EAAC;AAFnB,QAhBR;AAqBI,qBAAe,EACX,8BAAC,6CAAD;AACI,UAAE,EAAC,yCADP;AAEI,sBAAc,EAAC;AAFnB,QAtBR;AA2BI,cAAQ,EACJ,8BAAC,oCAAD;AACI,UAAE,EAAC,kCADP;AAEI,sBAAc,EAAC,mKAFnB;AAGI,cAAM,EAAE;AACJgS,sBAAY,EACR;AACI,kBAAM,EAAC,QADX;AAEI,eAAG,EAAC,qBAFR;AAGI,gBAAI,EAAC;AAHT,aAKI,8BAAC,oCAAD;AACI,cAAE,EAAC,+CADP;AAEI,0BAAc,EAAC;AAFnB,YALJ,CAFA;AAaJ7I,sBAAY,EACR;AACI,kBAAM,EAAC,QADX;AAEI,eAAG,EAAC,qBAFR;AAGI,gBAAI,EAAC;AAHT,aAKI,8BAAC,oCAAD;AACI,cAAE,EAAC,+CADP;AAEI,0BAAc,EAAC;AAFnB,YALJ;AAdA;AAHZ,QA5BR;AA2DI,uBAAiB,EAAExL,iCAAA,CAAsB,oCAAtB,EAA4D,0BAA5D,CA3DvB;AA4DI,aAAO,EAAE,KAAKtF,KAAL,CAAWgE;AA5DxB,OA8DMpF,MAAD,IAAY;AACT,YAAMmF,QAAQ,GAAG,KAAKsV,gBAAL,CAAsBza,MAAtB,CAAjB;AACA,aAAO,CAACmF,QAAD,EAAWA,QAAQ,CAACzE,MAAT,GAAkB,CAA7B,CAAP;AACH,KAjEL,CADJ;AAqEH;;AA1LsE;;2CAAtDyZ,qD,eACE;AAEf;;;AAGArR,MAAI,EAAEtK,oBAAS,CAACmB,MALD;;AAOf;;;AAGA4Q,MAAI,EAAE/R,oBAAS,CAACmB,MAVD;;AAYf;;;AAGAgb,yBAAuB,EAAEnc,oBAAS,CAACiI,IAfpB;;AAiBf;;;AAGAgU,kBAAgB,EAAEjc,oBAAS,CAACwc,KApBb;;AAsBf;;;AAGAT,UAAQ,EAAE/b,oBAAS,CAACmB,MAzBL;;AA2Bf;;;AAGAkb,OAAK,EAAErc,oBAAS,CAACmB,MA9BF;;AAgCf;;;AAIAmC,QAAM,EAAEtD,oBAAS,CAACC,MApCH;AAqCf4I,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGA8Q,sBAAkB,EAAE5b,oBAAS,CAAC+H,IALT;;AAOrB;;;AAGAuU,uCAAmC,EAAEtc,oBAAS,CAAC+H;AAV1B,GAAhB,CArCM;;AAkDf;;;AAGA6K,wBAAsB,EAAE5S,oBAAS,CAACiI;AArDnB,C;;ACdvB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,SAASwE,2CAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,QAAM8J,MAAM,GAAGC,4BAAS,CAAC/J,KAAD,CAAxB;AACA,QAAMU,MAAM,GAAGD,0CAAgB,CAACT,KAAD,CAA/B;AACA,QAAMuZ,uBAAuB,GAAG5H,6CAAmB,CAAC3R,KAAD,EAAQ;AAAC0H,QAAI,EAAEhH,MAAP;AAAe8O,cAAU,EAAEC,wBAAW,CAACoK;AAAvC,GAAR,CAAnD;AACA,QAAM1Z,aAAa,GAAGxC,iDAAgB,CAACqC,KAAD,CAAtC;AACA,QAAMqZ,gBAAgB,GAAG9b,MAAM,CAACkB,IAAP,CAAY0B,aAAZ,EACrBgE,GADqB,CAChB1E,GAAD,IAASU,aAAa,CAACV,GAAD,CADL,EAErBb,MAFqB,CAEbyZ,eAAD,IAAqBA,eAAe,CAACrX,OAAhB,KAA4BN,MAFnC,CAAzB;AAGA,QAAMsP,sBAAsB,GAAGlG,MAAM,CAACkH,sBAAP,KAAkC,MAAjE;AAEA,SAAO;AACHqI,oBADG;AAEHF,YAAQ,EAAEW,2CAAc,CAAC9Z,KAAD,CAFrB;AAGHyZ,SAAK,EAAErK,yBAAQ,CAACpP,KAAD,CAHZ;AAIHU,UAJG;AAKH6Y,2BALG;AAMHvJ;AANG,GAAP;AAQH;;AAED,SAAS3F,8CAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxBmP,6GADwB;AAExBV,wBAAkB,EAAEe,0CAA0Bf;AAFtB,KAAD,EAGxB1O,QAHwB;AADxB,GAAP;AAMH;;AAEcE,qFAAO,CAACX,2CAAD,EAAkBQ,8CAAlB,CAAP,CAA6C0O,qDAA7C,CAAf,E;;;;;;;;;;;AC/CA;AACA;AAEA;AACA;AAEA;AACA;AAEe,MAAMiB,4BAAN,SAA4Bnd,eAAK,CAACC,aAAlC,CAAgD;AAC3D,aAAW4N,SAAX,GAAuB;AACnB,WAAO;AACHyO,cAAQ,EAAE/b,oBAAS,CAACwc,KAAV,CAAgBxU,UADvB;AAEH6U,cAAQ,EAAE7c,oBAAS,CAAC+H,IAFjB;AAGHzH,WAAK,EAAEN,oBAAS,CAACC,MAHd;AAIH6c,gBAAU,EAAE9c,oBAAS,CAACiI,IAAV,CAAeD,UAJxB;AAKH+U,mBAAa,EAAE/c,oBAAS,CAACiI,IAAV,CAAeD,UAL3B;AAMHgV,cAAQ,EAAEhd,oBAAS,CAACiI,IAAV,CAAeD;AANtB,KAAP;AAQH;;AAED,aAAW0S,YAAX,GAA0B;AACtB,WAAO;AACHoC,gBAAU,EAAE,KADT;AAEHC,mBAAa,EAAE,KAFZ;AAGHC,cAAQ,EAAE;AAHP,KAAP;AAKH;;AAEDrd,QAAM,GAAG;AACL,UAAMyK,OAAO,GAAG,CACZ;AACI,SAAG,EAAC,EADR;AAEI,WAAK,EAAC;AAFV,OAIKlC,iCAAA,CAAsB,4BAAtB,EAAoD,0BAApD,CAJL,CADY,CAAhB;AASA,SAAKrI,KAAL,CAAWkc,QAAX,CAAoB3Z,OAApB,CAA6B8Y,OAAD,IAAa;AACrC,YAAM+B,WAAW,GAAG/B,OAAO,CAACjX,YAAR,IAAwBiX,OAAO,CAAC3Q,IAApD;;AACA,UAAI2Q,OAAO,CAACpL,IAAR,KAAiBvE,kCAAS,CAAC2R,YAA3B,IAA2C,KAAKrd,KAAL,CAAWid,UAA1D,EAAsE;AAClE1S,eAAO,CAACxI,IAAR,CACI;AACI,aAAG,EAAEsZ,OAAO,CAACnS,EADjB;AAEI,eAAK,EAAEmS,OAAO,CAACnS;AAFnB,WAIKkU,WAJL,CADJ;AAQH,OATD,MASO,IAAI/B,OAAO,CAACpL,IAAR,KAAiBvE,kCAAS,CAAC4R,eAA3B,IAA8C,KAAKtd,KAAL,CAAWkd,aAA7D,EAA4E;AAC/E3S,eAAO,CAACxI,IAAR,CACI;AACI,aAAG,EAAEsZ,OAAO,CAACnS,EADjB;AAEI,eAAK,EAAEmS,OAAO,CAACnS;AAFnB,WAIKkU,WAJL,CADJ;AAQH,OATM,MASA,IAAI/B,OAAO,CAACpL,IAAR,KAAiBvE,kCAAS,CAAC6R,UAA3B,IAAyC,KAAKvd,KAAL,CAAWmd,QAAxD,EAAkE;AACrE5S,eAAO,CAACxI,IAAR,CACI;AACI,aAAG,EAAEsZ,OAAO,CAACnS,EADjB;AAEI,eAAK,EAAEmS,OAAO,CAACnS;AAFnB,WAIKkU,WAJL,CADJ;AAQH;AACJ,KA9BD;AAgCA,WACI;AACI,eAAS,EAAC,cADd;AAEI,WAAK,EAAE,KAAKpd,KAAL,CAAWS,KAFtB;AAGI,cAAQ,EAAE,KAAKT,KAAL,CAAWgd,QAHzB;AAII,QAAE,EAAC;AAJP,OAMKzS,OANL,CADJ;AAUH;;AAxE0D,C;;ACT/D;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA,MAAMiT,mBAAmB,GAAGja,6CAAc,CACtCka,kCADsC,EAEtCC,qCAFsC,EAGtC,CAACxB,QAAD,EAAWyB,MAAX,KAAsB;AAClB,SAAO,CAAC,GAAGzB,QAAJ,EAAcjY,IAAd,CAAmB2Z,iDAAgC,CAAClX,IAAjC,CAAsC,IAAtC,EAA4CiX,MAA5C,CAAnB,CAAP;AACH,CALqC,CAA1C;;AAQA,SAAS/Q,8BAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,SAAO;AACHmZ,YAAQ,EAAEsB,mBAAmB,CAACza,KAAD;AAD1B,GAAP;AAGH;;AAEcwK,wEAAO,CAACX,8BAAD,CAAP,CAAyBmQ,4BAAzB,CAAf,E;;;;AC1BA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEe,MAAMc,iDAAN,SAAsCje,eAAK,CAAC2G,SAA5C,CAAsD;AAiDjEC,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,uEAMC8d,IAAD,IAAU;AACzB,aAAO;AACHlV,mBAAW,EAAEkV,IAAI,CAAC1Z,YAAL,IAAqB,EAD/B;AAEHuE,mBAAW,EAAEmV,IAAI,CAACnV,WAAL,IAAoB,EAF9B;AAGHoV,iBAAS,EAAED,IAAI,CAACxC,UAAL,IAAmB,EAH3B;AAIH0C,qBAAa,EAAEF,IAAI,CAACG,cAAL,IAAuB,KAJnC;AAKHvV,gBAAQ,EAAEoV,IAAI,CAACpV,QAAL,IAAiB,EALxB;AAMHwV,eAAO,EAAEJ,IAAI,CAACK,QAAL,IAAiB,EANvB;AAOHxE,cAAM,EAAE,KAPL;AAQHyE,mBAAW,EAAE,EARV;AASHC,mBAAW,EAAE;AATV,OAAP;AAWH,KAlBkB;;AAAA,mEAoBH1X,CAAD,IAAO;AAClBA,OAAC,CAACgD,cAAF;;AAEA,UAAI,KAAK5G,KAAL,CAAW4W,MAAf,EAAuB;AACnB;AACH;;AAED,WAAK/S,QAAL,CAAc;AACV+S,cAAM,EAAE,IADE;AAEVyE,mBAAW,EAAE,EAFH;AAGVC,mBAAW,EAAE;AAHH,OAAd;;AAMA,UAAI,CAAC,KAAKtb,KAAL,CAAWgb,SAAhB,EAA2B;AACvB,aAAKnX,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV0E,qBAAW,EACP,8BAAC,oCAAD;AACI,cAAE,EAAC,sCADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AAUA;AACH;;AAED,YAAMP,IAAI,GAAG;AACTxC,kBAAU,EAAE,KAAKvY,KAAL,CAAWgb,SADd;AAETE,sBAAc,EAAE,KAAKlb,KAAL,CAAWib,aAFlB;AAGT5Z,oBAAY,EAAE,KAAKrB,KAAL,CAAW6F,WAHhB;AAITD,mBAAW,EAAE,KAAK5F,KAAL,CAAW4F,WAJf;AAKTD,gBAAQ,EAAE,KAAK3F,KAAL,CAAW2F,QALZ;AAMTyV,gBAAQ,EAAE,KAAKpb,KAAL,CAAWmb;AANZ,OAAb;AASA,WAAKle,KAAL,CAAWse,MAAX,CAAkBR,IAAlB,EAAwBhS,IAAxB,CAA6B,MAAM,KAAKlF,QAAL,CAAc;AAAC+S,cAAM,EAAE;AAAT,OAAd,CAAnC;AACH,KAzDkB;;AAAA,wEA2DEhT,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AACVgC,mBAAW,EAAEjC,CAAC,CAACzE,MAAF,CAASzB;AADZ,OAAd;AAGH,KA/DkB;;AAAA,wEAiEEkG,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AACV+B,mBAAW,EAAEhC,CAAC,CAACzE,MAAF,CAASzB;AADZ,OAAd;AAGH,KArEkB;;AAAA,sEAuEAkG,CAAD,IAAO;AACrB,WAAKC,QAAL,CAAc;AACVmX,iBAAS,EAAEpX,CAAC,CAACzE,MAAF,CAASzB;AADV,OAAd;AAGH,KA3EkB;;AAAA,0EA6EIkG,CAAD,IAAO;AACzB,WAAKC,QAAL,CAAc;AACVoX,qBAAa,EAAErX,CAAC,CAACzE,MAAF,CAASmM;AADd,OAAd;AAGH,KAjFkB;;AAAA,qEAmFD1H,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACV8B,gBAAQ,EAAE/B,CAAC,CAACzE,MAAF,CAASzB;AADT,OAAd;AAGH,KAvFkB;;AAAA,oEAyFFkG,CAAD,IAAO;AACnB,WAAKC,QAAL,CAAc;AACVsX,eAAO,EAAEvX,CAAC,CAACzE,MAAF,CAASzB;AADR,OAAd;AAGH,KA7FkB;;AAGf,SAAKsC,KAAL,GAAa,KAAKwb,gBAAL,CAAsB,KAAKve,KAAL,CAAWwe,WAAX,IAA0B,EAAhD,CAAb;AACH;;AA2FD1e,QAAM,GAAG;AACL,QAAI2e,cAAc,GAAG,KAAKze,KAAL,CAAW2H,MAAhC;AACA,QAAI+W,cAAc,GAAG,KAAK1e,KAAL,CAAW2e,MAAhC;AAEA,WACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,gCAAD,QACI,8BAAC,gCAAD;AAAM,QAAE,EAAG,IAAG,KAAK3e,KAAL,CAAWyK,IAAX,CAAgBC,IAAK;AAAnC,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,oCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,EAOI,8BAAC,oCAAD;AACI,QAAE,EAAE+T,cAAc,CAACvV,EADvB;AAEI,oBAAc,EAAEuV,cAAc,CAAC3Q;AAFnC,MAPJ,CADJ,EAaI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,iBADd;AAEI,cAAQ,EAAE,KAAKqD;AAFnB,OAII;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,kCADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,aADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,IAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKpO,KAAL,CAAW6F,WALtB;AAMI,cAAQ,EAAE,KAAK0I;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,uCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CAJJ,EA+BI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,kCADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,aADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,KAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKvO,KAAL,CAAW4F,WALtB;AAMI,cAAQ,EAAE,KAAK4I;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,uCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CA/BJ,EA0DI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,8BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,cAAD;AACI,QAAE,EAAC,WADP;AAEI,WAAK,EAAE,KAAKxO,KAAL,CAAWgb,SAFtB;AAGI,cAAQ,EAAE,KAAKa,eAHnB;AAII,gBAAU,EAAE,IAJhB;AAKI,mBAAa,EAAE;AALnB,MADJ,EAQI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,mCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CARJ,CAVJ,CA1DJ,EAoFI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,oCADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,eADP;AAEI,UAAI,EAAC,UAFT;AAGI,aAAO,EAAE,KAAK7b,KAAL,CAAWib,aAHxB;AAII,cAAQ,EAAE,KAAKa;AAJnB,MADJ,EAOI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,yCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAPJ,CAVJ,CApFJ,EA6GM,KAAK7e,KAAL,CAAW8e,0BAAX,IACE;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,+BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,UADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,IAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAK/b,KAAL,CAAW2F,QALtB;AAMI,cAAQ,EAAE,KAAK0I;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,oCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CA9GR,EA0IM,KAAKpR,KAAL,CAAW+e,sBAAX,IACE;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,+BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,SADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,MAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKhc,KAAL,CAAWmb,OALtB;AAMI,cAAQ,EAAE,KAAKc;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,oCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CA3IR,EAuKI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,6BAAD;AACI,UAAI,EAAC,WADT;AAEI,YAAM,EAAE,CAAC,KAAKhf,KAAL,CAAWoe,WAAZ,EAAyB,KAAKrb,KAAL,CAAWsb,WAApC;AAFZ,MADJ,EAKI,8BAAC,gCAAD;AACI,eAAS,EAAC,qBADd;AAEI,QAAE,EAAG,IAAG,KAAKre,KAAL,CAAWyK,IAAX,CAAgBC,IAAK;AAFjC,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,6BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CALJ,EAcI,8BAAC,iCAAD;AACI,eAAS,EAAC,iBADd;AAEI,UAAI,EAAC,QAFT;AAGI,cAAQ,EAAE,KAAK3H,KAAL,CAAW4W,MAHzB;AAII,kBAAY,EAAEa,yCAAe,CAAC,KAAKxa,KAAL,CAAW+G,OAAX,CAAmBmC,EAApB,EAAwB,KAAKlJ,KAAL,CAAW+G,OAAX,CAAmB+G,cAA3C,CAJjC;AAKI,aAAO,EAAE,KAAKqD,YALlB;AAMI,QAAE,EAAC;AANP,OAQI,8BAAC,oCAAD;AACI,QAAE,EAAEuN,cAAc,CAACxV,EADvB;AAEI,oBAAc,EAAEwV,cAAc,CAAC5Q;AAFnC,MARJ,CAdJ,CAvKJ,CADJ,CAbJ,CADJ;AAsNH;;AA1WgE;;yCAAhD+P,iD,eACE;AAEf;;;AAGApT,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UALR;;AAOf;;;AAGAR,QAAM,EAAExH,oBAAS,CAACmB,MAAV,CAAiB6G,UAVV;;AAYf;;;AAGAwW,QAAM,EAAExe,oBAAS,CAACmB,MAAV,CAAiB6G,UAfV;;AAiBf;;;AAGApB,SAAO,EAAE5G,oBAAS,CAACmB,MAAV,CAAiB6G,UApBX;;AAsBf;;;AAGAiW,aAAW,EAAEje,oBAAS,CAACC,MAAV,CAAiB+H,UAzBf;;AA2Bf;;;AAGAqW,aAAW,EAAEre,oBAAS,CAACmB,MA9BR;;AAgCf;;;AAGAwd,4BAA0B,EAAE3e,oBAAS,CAACiI,IAAV,CAAeD,UAnC5B;;AAqCf;;;AAGA4W,wBAAsB,EAAE5e,oBAAS,CAACiI,IAAV,CAAeD,UAxCxB;;AA0Cf;;;AAGAmW,QAAM,EAAEne,oBAAS,CAAC+H,IAAV,CAAeC;AA7CR,C;;;;ACfvB;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA,MAAM8W,MAAM,GAAG;AAAC/V,IAAE,EAAE4P,yBAAC,CAAC,kBAAD,CAAN;AAA4BhL,gBAAc,EAAE;AAA5C,CAAf;AACA,MAAMoR,MAAM,GAAG;AAAChW,IAAE,EAAE4P,yBAAC,CAAC,2BAAD,CAAN;AAAqChL,gBAAc,EAAE;AAArD,CAAf;AACA,MAAMqR,OAAO,GAAG;AAACjW,IAAE,EAAE4P,yBAAC,CAAC,6BAAD,CAAN;AAAuChL,gBAAc,EAAE;AAAvD,CAAhB;AAEe,MAAMsR,uCAAN,SAAiCxf,eAAK,CAACC,aAAvC,CAAqD;AAgChE2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,iEAQD,MAAO8d,IAAP,IAAgB;AAC9B,WAAKlX,QAAL,CAAc;AAACwX,mBAAW,EAAE;AAAd,OAAd;AAEA,YAAM;AAACvU;AAAD,UAAS,MAAM,KAAK7J,KAAL,CAAWgJ,OAAX,CAAmBqW,kBAAnB,CAAsCvB,IAAtC,CAArB;;AACA,UAAIjU,IAAJ,EAAU;AACN2G,iDAAc,CAACzO,IAAf,CAAqB,IAAG,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,mDAAkDb,IAAI,CAACX,EAAG,EAAvG;AACA;AACH;;AAED,UAAI,KAAKlJ,KAAL,CAAWsf,yBAAX,CAAqC1V,KAAzC,EAAgD;AAC5C,aAAKhD,QAAL,CAAc;AAACwX,qBAAW,EAAE,KAAKpe,KAAL,CAAWsf,yBAAX,CAAqC1V,KAArC,CAA2CG;AAAzD,SAAd;AACH;AACJ,KApBkB;;AAGf,SAAKhH,KAAL,GAAa;AACTqb,iBAAW,EAAE;AADJ,KAAb;AAGH;;AAgBDte,QAAM,GAAG;AACL,WACI,8BAAC,iDAAD;AACI,UAAI,EAAE,KAAKE,KAAL,CAAWyK,IADrB;AAEI,YAAM,EAAEwU,MAFZ;AAGI,YAAM,EAAEC,MAHZ;AAII,aAAO,EAAEC,OAJb;AAKI,gCAA0B,EAAE,KAAKnf,KAAL,CAAW8e,0BAL3C;AAMI,4BAAsB,EAAE,KAAK9e,KAAL,CAAW+e,sBANvC;AAOI,YAAM,EAAE,KAAKQ,eAPjB;AAQI,iBAAW,EAAE,KAAKxc,KAAL,CAAWqb;AAR5B,MADJ;AAYH;;AAnE+D;;oCAA/CgB,uC,eACE;AAEf;;;AAGA3U,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UALR;;AAOf;;;AAGAmX,2BAAyB,EAAEnf,oBAAS,CAACmB,MAAV,CAAiB6G,UAV7B;;AAYf;;;AAGA2W,4BAA0B,EAAE3e,oBAAS,CAACiI,IAAV,CAAeD,UAf5B;;AAiBf;;;AAGA4W,wBAAsB,EAAE5e,oBAAS,CAACiI,IAAV,CAAeD,UApBxB;AAsBfa,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGAoU,sBAAkB,EAAElf,oBAAS,CAAC+H,IAAV,CAAeC;AALd,GAAhB,EAMNA;AA5BY,C;;ACfvB;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA,SAASyE,oCAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,QAAM8J,MAAM,GAAGC,4BAAS,CAAC/J,KAAD,CAAxB;AACA,QAAM+b,0BAA0B,GAAGjS,MAAM,CAAC2S,0BAAP,KAAsC,MAAzE;AACA,QAAMT,sBAAsB,GAAGlS,MAAM,CAAC4S,sBAAP,KAAkC,MAAjE;AAEA,SAAO;AACHH,6BAAyB,EAAEvc,KAAK,CAAC2c,QAAN,CAAezc,YAAf,CAA4Boc,kBADpD;AAEHP,8BAFG;AAGHC;AAHG,GAAP;AAKH;;AAED,SAAS3R,uCAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxB+R,oEAAkBA;AADM,KAAD,EAExBhS,QAFwB;AADxB,GAAP;AAKH;;AAEcE,8EAAO,CAACX,oCAAD,EAAkBQ,uCAAlB,CAAP,CAA6CgS,uCAA7C,CAAf,E;;;;AC9BA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA,MAAMH,4BAAM,GAAG;AAAC/V,IAAE,EAAE4P,yBAAC,CAAC,mBAAD,CAAN;AAA6BhL,gBAAc,EAAE;AAA7C,CAAf;AACA,MAAMoR,4BAAM,GAAG;AAAChW,IAAE,EAAE4P,yBAAC,CAAC,gCAAD,CAAN;AAA0ChL,gBAAc,EAAE;AAA1D,CAAf;AACA,MAAMqR,6BAAO,GAAG;AAACjW,IAAE,EAAE4P,yBAAC,CAAC,kCAAD,CAAN;AAA4ChL,gBAAc,EAAE;AAA5D,CAAhB;AAEe,MAAM6R,yCAAN,SAAkC/f,eAAK,CAACC,aAAxC,CAAsD;AAoDjE2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,mEAeA,MAAO8d,IAAP,IAAgB;AAC/B,WAAK8B,OAAL,GAAe9B,IAAf;;AAEA,UAAI,KAAK9d,KAAL,CAAW8d,IAAX,CAAgB5U,EAApB,EAAwB;AACpB4U,YAAI,CAAC5U,EAAL,GAAU,KAAKlJ,KAAL,CAAW8d,IAAX,CAAgB5U,EAA1B;AACH;;AAED,UAAI,KAAKlJ,KAAL,CAAW8d,IAAX,CAAgBrU,KAApB,EAA2B;AACvBqU,YAAI,CAACrU,KAAL,GAAa,KAAKzJ,KAAL,CAAW8d,IAAX,CAAgBrU,KAA7B;AACH;;AAED,YAAM,KAAKoW,UAAL,EAAN;AACH,KA3BkB;;AAAA,6DA6BN,YAAY;AACrB,WAAKjZ,QAAL,CAAc;AAACwX,mBAAW,EAAE;AAAd,OAAd;AAEA,YAAM;AAACvU;AAAD,UAAS,MAAM,KAAK7J,KAAL,CAAWgJ,OAAX,CAAmB8W,kBAAnB,CAAsC,KAAKF,OAA3C,CAArB;;AAEA,UAAI/V,IAAJ,EAAU;AACN2G,iDAAc,CAACzO,IAAf,CAAqB,IAAG,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,iCAA7C;AACA;AACH;;AAED,UAAI,KAAK1K,KAAL,CAAW+f,yBAAX,CAAqCnW,KAAzC,EAAgD;AAC5C,aAAKhD,QAAL,CAAc;AAACwX,qBAAW,EAAE,KAAKpe,KAAL,CAAW+f,yBAAX,CAAqCnW,KAArC,CAA2CG;AAAzD,SAAd;AACH;AACJ,KA1CkB;;AAGf,SAAKhH,KAAL,GAAa;AACTid,sBAAgB,EAAE,KADT;AAET5B,iBAAW,EAAE;AAFJ,KAAb;AAIH;;AAED3S,mBAAiB,GAAG;AAChB,QAAI,KAAKzL,KAAL,CAAW+S,sBAAf,EAAuC;AACnC,WAAK/S,KAAL,CAAWgJ,OAAX,CAAmBiX,eAAnB,CAAmC,KAAKjgB,KAAL,CAAWkgB,MAA9C;AACH;AACJ;;AA+BDpgB,QAAM,GAAG;AACL,QAAI,CAAC,KAAKE,KAAL,CAAW8d,IAAhB,EAAsB;AAClB,aAAO,8BAAC,iCAAD,OAAP;AACH;;AAED,WACI,8BAAC,iDAAD;AACI,UAAI,EAAE,KAAK9d,KAAL,CAAWyK,IADrB;AAEI,YAAM,EAAEwU,4BAFZ;AAGI,YAAM,EAAEC,4BAHZ;AAII,aAAO,EAAEC,6BAJb;AAKI,gCAA0B,EAAE,KAAKnf,KAAL,CAAW8e,0BAL3C;AAMI,4BAAsB,EAAE,KAAK9e,KAAL,CAAW+e,sBANvC;AAOI,YAAM,EAAE,KAAKoB,gBAPjB;AAQI,iBAAW,EAAE,KAAKpd,KAAL,CAAWqb,WAR5B;AASI,iBAAW,EAAE,KAAKpe,KAAL,CAAW8d;AAT5B,MADJ;AAaH;;AAlHgE;;qCAAhD6B,yC,eACE;AAEf;;;AAGAlV,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UALR;;AAOf;;;AAGA2V,MAAI,EAAE3d,oBAAS,CAACmB,MAVD;;AAYf;;;AAGA4e,QAAM,EAAE/f,oBAAS,CAACC,MAAV,CAAiB+H,UAfV;;AAiBf;;;AAGA4X,2BAAyB,EAAE5f,oBAAS,CAACmB,MAAV,CAAiB6G,UApB7B;;AAsBf;;;AAGA4K,wBAAsB,EAAE5S,oBAAS,CAACiI,IAAV,CAAeD,UAzBxB;;AA2Bf;;;AAGA2W,4BAA0B,EAAE3e,oBAAS,CAACiI,IAAV,CAAeD,UA9B5B;;AAgCf;;;AAGA4W,wBAAsB,EAAE5e,oBAAS,CAACiI,IAAV,CAAeD,UAnCxB;AAqCfa,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGA6U,sBAAkB,EAAE3f,oBAAS,CAAC+H,IAAV,CAAeC,UALd;;AAOrB;;;AAGA8X,mBAAe,EAAE9f,oBAAS,CAAC+H,IAAV,CAAeC;AAVX,GAAhB,EAWNA;AAhDY,C;;AChBvB;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA,SAASyE,qCAAT,CAAyB7J,KAAzB,EAAgC8O,QAAhC,EAA0C;AACtC,QAAMhF,MAAM,GAAGC,4BAAS,CAAC/J,KAAD,CAAxB;AACA,QAAMgQ,sBAAsB,GAAGlG,MAAM,CAACkH,sBAAP,KAAkC,MAAjE;AACA,QAAM+K,0BAA0B,GAAGjS,MAAM,CAAC2S,0BAAP,KAAsC,MAAzE;AACA,QAAMT,sBAAsB,GAAGlS,MAAM,CAAC4S,sBAAP,KAAkC,MAAjE;AACA,QAAMS,MAAM,GAAI,IAAInO,eAAJ,CAAoBF,QAAQ,CAACG,QAAT,CAAkBlK,MAAtC,CAAD,CAAgDmK,GAAhD,CAAoD,IAApD,CAAf;AAEA,SAAO;AACHiO,UADG;AAEHpC,QAAI,EAAE/a,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BC,aAA5B,CAA0Cgd,MAA1C,CAFH;AAGHH,6BAAyB,EAAEhd,KAAK,CAAC2c,QAAN,CAAezc,YAAf,CAA4B6c,kBAHpD;AAIH/M,0BAJG;AAKH+L,8BALG;AAMHC;AANG,GAAP;AAQH;;AAED,SAAS3R,wCAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxBwS,oEADwB;AAExBG,8DAAeA;AAFS,KAAD,EAGxB5S,QAHwB;AADxB,GAAP;AAMH;;AAEcE,+EAAO,CAACX,qCAAD,EAAkBQ,wCAAlB,CAAP,CAA6CuS,yCAA7C,CAAf,E;;;;ACpCA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEO,SAASnX,wCAAT,CAAuB4X,eAAvB,EAAwC/E,OAAxC,EAAiD1Z,MAAjD,EAAyD;AAC5D,MAAI,CAACA,MAAL,EAAa;AACT,WAAO,IAAP;AACH;;AAED,QAAM;AACFyC,gBAAY,EAAEwE,WADZ;AAEFD,eAFE;AAGF0X,iBAAa,EAAEC;AAHb,MAIFF,eAJJ;;AAMA,MACKxX,WAAW,IAAIA,WAAW,CAAC/B,WAAZ,GAA0BiC,OAA1B,CAAkCnH,MAAlC,MAA8C,CAAC,CAA/D,IACCgH,WAAW,IAAIA,WAAW,CAAC9B,WAAZ,GAA0BiC,OAA1B,CAAkCnH,MAAlC,MAA8C,CAAC,CAFnE,EAGE;AACE,WAAO,IAAP;AACH;;AAED,MAAI2e,YAAJ,EAAkB;AACd,SAAK,MAAMC,WAAX,IAA0BD,YAA1B,EAAwC;AACpC,UAAIC,WAAW,CAAC1Z,WAAZ,GAA0BiC,OAA1B,CAAkCnH,MAAlC,MAA8C,CAAC,CAAnD,EAAsD;AAClD,eAAO,IAAP;AACH;AACJ;AACJ;;AAED,MAAI0Z,OAAO,IAAIA,OAAO,CAAC3Q,IAAvB,EAA6B;AACzB,QAAI2Q,OAAO,CAAC3Q,IAAR,CAAa7D,WAAb,GAA2BiC,OAA3B,CAAmCnH,MAAnC,MAA+C,CAAC,CAApD,EAAuD;AACnD,aAAO,IAAP;AACH;AACJ;;AAED,SAAO,KAAP;AACH;AAEc,MAAM6e,mDAAN,SAAuC5gB,eAAK,CAACC,aAA7C,CAA2D;AA4CtE2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKygB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsB/Z,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKyP,YAAL,GAAoB,KAAKA,YAAL,CAAkBzP,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAED+Z,kBAAgB,CAAC9Z,CAAD,EAAI;AAChBA,KAAC,CAACgD,cAAF;AAEA,SAAK3J,KAAL,CAAW0gB,YAAX,CAAwB,KAAK1gB,KAAL,CAAWogB,eAAnC;AACH;;AAEDjK,cAAY,GAAG;AACX,SAAKnW,KAAL,CAAW6U,QAAX,CAAoB,KAAK7U,KAAL,CAAWogB,eAA/B;AACH;;AAEDO,iBAAe,CAACP,eAAD,EAAkB/E,OAAlB,EAA2B;AACtC,QAAI+E,eAAe,CAAChc,YAApB,EAAkC;AAC9B,aAAOgc,eAAe,CAAChc,YAAvB;AACH,KAFD,MAEO,IAAIiX,OAAJ,EAAa;AAChB,aAAOA,OAAO,CAACjX,YAAf;AACH;;AACD,WACI,8BAAC,oCAAD;AACI,QAAE,EAAC,6CADP;AAEI,oBAAc,EAAC;AAFnB,MADJ;AAMH;;AAEDtE,QAAM,GAAG;AACL,UAAMsgB,eAAe,GAAG,KAAKpgB,KAAL,CAAWogB,eAAnC;AACA,UAAM/E,OAAO,GAAG,KAAKrb,KAAL,CAAWqb,OAA3B;AACA,UAAM1Z,MAAM,GAAG,KAAK3B,KAAL,CAAW2B,MAAX,GAAoB,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBkF,WAAlB,EAApB,GAAsD,EAArE;AACA,UAAM+Z,gBAAgB,GAAG,CAAzB;AACA,UAAMC,sBAAsB,GAAG,CAA/B;;AAEA,QAAIT,eAAe,IAAI,CAAC5X,wCAAa,CAAC4X,eAAD,EAAkB/E,OAAlB,EAA2B1Z,MAA3B,CAArC,EAAyE;AACrE,aAAO,IAAP;AACH;;AAED,UAAMiH,WAAW,GAAG,KAAK+X,eAAL,CAAqBP,eAArB,EAAsC/E,OAAtC,CAApB;AAEA,QAAI1S,WAAW,GAAG,IAAlB;;AACA,QAAIyX,eAAe,CAACzX,WAApB,EAAiC;AAC7BA,iBAAW,GACP;AAAK,iBAAS,EAAC;AAAf,SACI;AAAM,iBAAS,EAAC;AAAhB,SACKyX,eAAe,CAACzX,WADrB,CADJ,CADJ;AAOH;;AAED,QAAI2X,YAAY,GAAG,IAAnB;;AACA,QAAIF,eAAe,CAACC,aAAhB,IAAiCD,eAAe,CAACC,aAAhB,CAA8Bhe,MAA9B,GAAuC,CAA5E,EAA+E;AAC3Eie,kBAAY,GACR;AAAK,iBAAS,EAAC;AAAf,SACI;AAAM,iBAAS,EAAC;AAAhB,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,qCADP;AAEI,sBAAc,EAAC,+BAFnB;AAGI,cAAM,EAAE;AACJA,sBAAY,EAAEF,eAAe,CAACC,aAAhB,CAA8BS,IAA9B,CAAmC,IAAnC;AADV;AAHZ,QADJ,CADJ,CADJ;AAaH;;AAED,UAAMC,IAAI,GACN;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,sCADP;AAEI,oBAAc,EAAC,uBAFnB;AAGI,YAAM,EAAE;AACJA,YAAI,EAAEX,eAAe,CAACY,aAAhB,CAA8BF,IAA9B,CAAmC,IAAnC;AADF;AAHZ,MADJ,CADJ,CADJ;AAcA,QAAIG,WAAJ;;AACA,QAAIb,eAAe,CAACc,YAAhB,KAAiCN,gBAArC,EAAuD;AACnDK,iBAAW,GACP,8BAAC,oCAAD;AACI,UAAE,EAAC,sDADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH,KAPD,MAOO,IAAIb,eAAe,CAACc,YAAhB,KAAiCL,sBAArC,EAA6D;AAChEI,iBAAW,GACP,8BAAC,oCAAD;AACI,UAAE,EAAC,wDADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH;;AAED,QAAIjY,OAAO,GAAG,IAAd;;AACA,QAAI,KAAKhJ,KAAL,CAAWwb,SAAf,EAA0B;AACtBxS,aAAO,GACH;AAAK,iBAAS,EAAC;AAAf,SACI;AACI,iBAAS,EAAC,yBADd;AAEI,eAAO,EAAE,KAAKyX;AAFlB,SAII,8BAAC,oCAAD;AACI,UAAE,EAAC,mCADP;AAEI,sBAAc,EAAC;AAFnB,QAJJ,CADJ,EAUK,KAVL,EAWI,8BAAC,gCAAD;AAAM,UAAE,EAAG,IAAG,KAAKzgB,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,2CAA0C0V,eAAe,CAAClX,EAAG;AAAhG,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,6BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CAXJ,EAiBK,KAjBL,EAkBI,8BAAC,oCAAD;AACI,iBAAS,EAAE4P,yBAAC,CAAC,4CAAD,CADhB;AAEI,gBAAQ,EAAE,KAAK3C;AAFnB,QAlBJ,CADJ;AAyBH;;AAED,WACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACKvN,WADL,CADJ,CADJ,EAMKD,WANL,EAOI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,qCADP;AAEI,oBAAc,EAAC,6BAFnB;AAGI,YAAM,EAAE;AACJwY,mBAAW,EAAEf,eAAe,CAACgB,YAAhB,IAAgC;AADzC;AAHZ,MADJ,CADJ,CAPJ,EAkBKd,YAlBL,EAmBI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,oCADP;AAEI,oBAAc,EAAC,6BAFnB;AAGI,YAAM,EAAE;AACJW;AADI;AAHZ,MADJ,CADJ,CAnBJ,EA8BI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,8BADP;AAEI,oBAAc,EAAC,gBAFnB;AAGI,YAAM,EAAE;AACJxX,aAAK,EAAE2W,eAAe,CAAC3W;AADnB;AAHZ,MADJ,EAQI,8BAAC,kBAAD;AACI,WAAK,EAAE2W,eAAe,CAAC3W;AAD3B,MARJ,CADJ,CA9BJ,EA4CI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,iCADP;AAEI,oBAAc,EAAC,gDAFnB;AAGI,YAAM,EAAE;AACJkN,eAAO,EAAE,KAAK3W,KAAL,CAAW2W,OAAX,CAAmBjO,QADxB;AAEJkT,gBAAQ,EAAEwE,eAAe,CAACvE;AAFtB;AAHZ,MADJ,CADJ,CA5CJ,EAwDKkF,IAxDL,CADJ,EA2DK/X,OA3DL,CADJ;AA+DH;;AA/OqE;;0CAArDwX,mD,eACE;AAEf;;;AAGAJ,iBAAe,EAAEjgB,oBAAS,CAACmB,MAAV,CAAiB6G,UALnB;;AAOf;;;AAGAuY,cAAY,EAAEvgB,oBAAS,CAAC+H,IAAV,CAAeC,UAVd;;AAYf;;;AAGA0M,UAAQ,EAAE1U,oBAAS,CAAC+H,IAAV,CAAeC,UAfV;;AAiBf;;;AAGAxG,QAAM,EAAExB,oBAAS,CAACC,MApBH;;AAsBf;;;AAGAuW,SAAO,EAAExW,oBAAS,CAACmB,MAAV,CAAiB6G,UAzBX;;AA2Bf;;;AAGAqT,WAAS,EAAErb,oBAAS,CAACiI,IAAV,CAAeD,UA9BX;;AAgCf;;;AAGAsC,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UAnCR;;AAqCf;;;AAGAkT,SAAO,EAAElb,oBAAS,CAACmB;AAxCJ,C;;;;ACjDvB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEe,MAAM+f,qDAAN,SAAwCzhB,eAAK,CAACC,aAA9C,CAA4D;AA8DvE2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,kFAsBUogB,eAAD,IAAqB;AAC7C,WAAKpgB,KAAL,CAAWgJ,OAAX,CAAmBsY,sBAAnB,CAA0ClB,eAAe,CAAClX,EAA1D;AACH,KAxBkB;;AAAA,2EA0BGkX,eAAD,IAAqB;AACtC,WAAKpgB,KAAL,CAAWgJ,OAAX,CAAmBuY,kBAAnB,CAAsCnB,eAAe,CAAClX,EAAtD;AACH,KA5BkB;;AAAA,yEAqDCvH,MAAD,IAAY,KAAK3B,KAAL,CAAWwhB,gBAAX,CAC3Bvd,IAD2B,CACtB,KAAKwd,sBADiB,EAE3B9f,MAF2B,CAEnBye,eAAD,IAAqB5X,wCAAa,CAAC4X,eAAD,EAAkB,KAAKpgB,KAAL,CAAWkc,QAAX,CAAoBkE,eAAe,CAAC9E,UAApC,CAAlB,EAAmE3Z,MAAnE,CAFd,EAG3BuF,GAH2B,CAGtBkZ,eAAD,IAAqB;AACrB,YAAM5E,SAAS,GAAG,KAAKxb,KAAL,CAAWsc,uBAAX,IAAsC,KAAKtc,KAAL,CAAWkS,IAAX,CAAgBhJ,EAAhB,KAAuBkX,eAAe,CAACpK,UAA/F;AACA,YAAMqF,OAAO,GAAG,KAAKrb,KAAL,CAAWkc,QAAX,CAAoBkE,eAAe,CAAC9E,UAApC,CAAhB;AACA,aACI,8BAAC,mDAAD;AACI,WAAG,EAAE8E,eAAe,CAAClX,EADzB;AAEI,uBAAe,EAAEkX,eAFrB;AAGI,oBAAY,EAAE,KAAKsB,yBAHvB;AAII,gBAAQ,EAAE,KAAKH,kBAJnB;AAKI,eAAO,EAAE,KAAKvhB,KAAL,CAAWwc,KAAX,CAAiB4D,eAAe,CAACpK,UAAjC,KAAgD,EAL7D;AAMI,iBAAS,EAAEwF,SANf;AAOI,YAAI,EAAE,KAAKxb,KAAL,CAAWyK,IAPrB;AAQI,eAAO,EAAE4Q;AARb,QADJ;AAYH,KAlB0B,CArDZ;;AAGf,SAAKoG,sBAAL,GAA8B,KAAKA,sBAAL,CAA4B/a,IAA5B,CAAiC,IAAjC,CAA9B;AAEA,SAAK3D,KAAL,GAAa;AACTgE,aAAO,EAAE;AADA,KAAb;AAGH;;AAED0E,mBAAiB,GAAG;AAChB,QAAI,KAAKzL,KAAL,CAAWgT,sBAAf,EAAuC;AACnC,WAAKhT,KAAL,CAAWgJ,OAAX,CAAmB2Y,mCAAnB,CACI,KAAK3hB,KAAL,CAAWyD,MADf,EAEIiI,kCAAS,CAACC,YAAV,CAAuBC,cAF3B,EAGIF,kCAAS,CAACC,YAAV,CAAuBE,SAH3B,EAIEC,IAJF,CAKI,MAAM,KAAKlF,QAAL,CAAc;AAACG,eAAO,EAAE;AAAV,OAAd,CALV;AAOH;AACJ;;AAUD0a,wBAAsB,CAACvd,CAAD,EAAIC,CAAJ,EAAO;AACzB,QAAI6X,YAAY,GAAG9X,CAAC,CAACE,YAArB;;AACA,QAAI,CAAC4X,YAAL,EAAmB;AACf,YAAMC,QAAQ,GAAG,KAAKjc,KAAL,CAAWkc,QAAX,CAAoBhY,CAAC,CAACoX,UAAtB,CAAjB;;AACA,UAAIW,QAAJ,EAAc;AACVD,oBAAY,GAAGC,QAAQ,CAAC7X,YAAxB;AACH,OAFD,MAEO;AACH4X,oBAAY,GAAG3T,iCAAA,CAAsB,6CAAtB,EAAqE,mBAArE,CAAf;AACH;AACJ;;AAED,QAAI8T,YAAY,GAAGhY,CAAC,CAACC,YAArB;;AACA,QAAI,CAAC+X,YAAL,EAAmB;AACf,YAAMyF,QAAQ,GAAG,KAAK5hB,KAAL,CAAWkc,QAAX,CAAoB/X,CAAC,CAACmX,UAAtB,CAAjB;;AACA,UAAIsG,QAAJ,EAAc;AACVzF,oBAAY,GAAGyF,QAAQ,CAACxd,YAAxB;AACH,OAFD,MAEO;AACH+X,oBAAY,GAAG9T,iCAAA,CAAsB,6CAAtB,EAAqE,mBAArE,CAAf;AACH;AACJ;;AACD,WAAO2T,YAAY,CAAC3X,aAAb,CAA2B8X,YAA3B,CAAP;AACH;;AAsBDrc,QAAM,GAAG;AACL,WACI,8BAAC,4BAAD;AACI,YAAM,EACF,8BAAC,oCAAD;AACI,UAAE,EAAC,oCADP;AAEI,sBAAc,EAAC;AAFnB,QAFR;AAOI,aAAO,EACH,8BAAC,oCAAD;AACI,UAAE,EAAC,iCADP;AAEI,sBAAc,EAAC;AAFnB,QARR;AAaI,aAAO,EAAE,MAAM,KAAKE,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B,qCAb1C;AAcI,iBAAW,EAAC,oBAdhB;AAeI,eAAS,EACL,8BAAC,oCAAD;AACI,UAAE,EAAC,mCADP;AAEI,sBAAc,EAAC;AAFnB,QAhBR;AAqBI,qBAAe,EACX,8BAAC,6CAAD;AACI,UAAE,EAAC,yCADP;AAEI,sBAAc,EAAC;AAFnB,QAtBR;AA2BI,cAAQ,EACJ,8BAAC,oCAAD;AACI,UAAE,EAAC,kCADP;AAEI,sBAAc,EAAC,mKAFnB;AAGI,cAAM,EAAE;AACJgS,sBAAY,EACR;AACI,kBAAM,EAAC,QADX;AAEI,eAAG,EAAC,qBAFR;AAGI,gBAAI,EAAC;AAHT,aAKI,8BAAC,oCAAD;AACI,cAAE,EAAC,+CADP;AAEI,0BAAc,EAAC;AAFnB,YALJ,CAFA;AAaJ7I,sBAAY,EACR;AACI,kBAAM,EAAC,QADX;AAEI,eAAG,EAAC,qBAFR;AAGI,gBAAI,EAAC;AAHT,aAKI,8BAAC,oCAAD;AACI,cAAE,EAAC,+CADP;AAEI,0BAAc,EAAC;AAFnB,YALJ;AAdA;AAHZ,QA5BR;AA2DI,uBAAiB,EAAExL,iCAAA,CAAsB,oCAAtB,EAA4D,0BAA5D,CA3DvB;AA4DI,aAAO,EAAE,KAAKtF,KAAL,CAAWgE;AA5DxB,OA8DMpF,MAAD,IAAY;AACT,YAAMmF,QAAQ,GAAG,KAAK0a,gBAAL,CAAsB7f,MAAtB,CAAjB;AACA,aAAO,CAACmF,QAAD,EAAWA,QAAQ,CAACzE,MAAT,GAAkB,CAA7B,CAAP;AACH,KAjEL,CADJ;AAqEH;;AA7MsE;;2CAAtDgf,qD,eACE;AAEf;;;AAGA5W,MAAI,EAAEtK,oBAAS,CAACmB,MALD;;AAOf;;;AAGA4Q,MAAI,EAAE/R,oBAAS,CAACmB,MAVD;;AAYf;;;AAGAgb,yBAAuB,EAAEnc,oBAAS,CAACiI,IAfpB;;AAiBf;;;AAGAoZ,kBAAgB,EAAErhB,oBAAS,CAACwc,KApBb;;AAsBf;;;AAGAT,UAAQ,EAAE/b,oBAAS,CAACmB,MAzBL;;AA2Bf;;;AAGAkb,OAAK,EAAErc,oBAAS,CAACmB,MA9BF;;AAgCf;;;AAGAmC,QAAM,EAAEtD,oBAAS,CAACC,MAnCH;AAqCf4I,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGAsW,sBAAkB,EAAEphB,oBAAS,CAAC+H,IALT;;AAOrB;;;AAGAyZ,uCAAmC,EAAExhB,oBAAS,CAAC+H,IAV1B;;AAYrB;;;AAGAoZ,0BAAsB,EAAEnhB,oBAAS,CAAC+H;AAfb,GAAhB,CArCM;;AAuDf;;;AAGA8K,wBAAsB,EAAE7S,oBAAS,CAACiI;AA1DnB,C;;ACdvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,SAASwE,2CAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,QAAM8J,MAAM,GAAGC,4BAAS,CAAC/J,KAAD,CAAxB;AACA,QAAMU,MAAM,GAAGD,0CAAgB,CAACT,KAAD,CAA/B;AACA,QAAMuZ,uBAAuB,GAAG5H,6CAAmB,CAAC3R,KAAD,EAAQ;AAAC0H,QAAI,EAAEhH,MAAP;AAAe8O,cAAU,EAAEC,wBAAW,CAACqP;AAAvC,GAAR,CAAnD;AACA,QAAM1e,aAAa,GAAGxC,iDAAgB,CAACoC,KAAD,CAAtC;AACA,QAAMye,gBAAgB,GAAGlhB,MAAM,CAACkB,IAAP,CAAY2B,aAAZ,EACrB+D,GADqB,CAChB1E,GAAD,IAASW,aAAa,CAACX,GAAD,CADL,EAErBb,MAFqB,CAEbye,eAAD,IAAqBA,eAAe,CAACrc,OAAhB,KAA4BN,MAFnC,CAAzB;AAGA,QAAMuP,sBAAsB,GAAGnG,MAAM,CAACmH,sBAAP,KAAkC,MAAjE;AAEA,SAAO;AACHwN,oBADG;AAEHtF,YAAQ,EAAEW,2CAAc,CAAC9Z,KAAD,CAFrB;AAGHyZ,SAAK,EAAErK,yBAAQ,CAACpP,KAAD,CAHZ;AAIHU,UAJG;AAKH6Y,2BALG;AAMHtJ;AANG,GAAP;AAQH;;AAED,SAAS5F,8CAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxBqU,6GADwB;AAExBJ,wBAAkB,EAAEzE,0CAFI;AAGxBwE,4BAAsB,EAAExE,8CAA8BwE;AAH9B,KAAD,EAIxBjU,QAJwB;AADxB,GAAP;AAOH;;AAEcE,qFAAO,CAACX,2CAAD,EAAkBQ,8CAAlB,CAAP,CAA6CoT,qDAA7C,CAAf,E;;;;AC/CA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEe,MAAMsB,iDAAN,SAAsCliB,eAAK,CAAC2G,SAA5C,CAAsD;AAsDjEC,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,uEAMC8d,IAAD,IAAU;AACzB,UAAIwC,YAAY,GAAG,EAAnB;;AACA,UAAIxC,IAAI,CAACuC,aAAT,EAAwB;AACpB,YAAIle,CAAC,GAAG,CAAR;;AACA,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2b,IAAI,CAACuC,aAAL,CAAmBhe,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC5Cme,sBAAY,IAAIxC,IAAI,CAACuC,aAAL,CAAmBle,CAAnB,IAAwB,IAAxC;AACH;AACJ;;AAED,UAAI4f,YAAY,GAAG,EAAnB;;AACA,UAAIjE,IAAI,CAACkD,aAAT,EAAwB;AACpB,YAAI7e,CAAC,GAAG,CAAR;;AACA,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2b,IAAI,CAACkD,aAAL,CAAmB3e,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC5C4f,sBAAY,IAAIjE,IAAI,CAACkD,aAAL,CAAmB7e,CAAnB,IAAwB,IAAxC;AACH;AACJ;;AAED,aAAO;AACHyG,mBAAW,EAAEkV,IAAI,CAAC1Z,YAAL,IAAqB,EAD/B;AAEHuE,mBAAW,EAAEmV,IAAI,CAACnV,WAAL,IAAoB,EAF9B;AAGHwY,mBAAW,EAAErD,IAAI,CAACsD,YAAL,IAAqB,mCAH/B;AAIHrD,iBAAS,EAAED,IAAI,CAACxC,UAAL,IAAmB,EAJ3B;AAKHgF,oBALG;AAMHW,mBAAW,EAAEnD,IAAI,CAACoD,YAAL,IAAqB,CAN/B;AAOHa,oBAPG;AAQHpI,cAAM,EAAE,KARL;AASH0E,mBAAW,EAAE,IATV;AAUH3V,gBAAQ,EAAEoV,IAAI,CAACpV,QAAL,IAAiB,EAVxB;AAWHwV,eAAO,EAAEJ,IAAI,CAACK,QAAL,IAAiB;AAXvB,OAAP;AAaH,KApCkB;;AAAA,mEAsCHxX,CAAD,IAAO;AAClBA,OAAC,CAACgD,cAAF;;AAEA,UAAI,KAAK5G,KAAL,CAAW4W,MAAf,EAAuB;AACnB;AACH;;AAED,WAAK/S,QAAL,CAAc;AACV+S,cAAM,EAAE,IADE;AAEV0E,mBAAW,EAAE;AAFH,OAAd;AAKA,YAAMiC,YAAY,GAAG,EAArB;;AACA,UAAI,KAAKvd,KAAL,CAAWud,YAAf,EAA6B;AACzB,aAAK,IAAIC,WAAT,IAAwB,KAAKxd,KAAL,CAAWud,YAAX,CAAwB0B,KAAxB,CAA8B,IAA9B,CAAxB,EAA6D;AACzDzB,qBAAW,GAAGA,WAAW,CAAC1I,IAAZ,EAAd;;AAEA,cAAI0I,WAAW,CAACle,MAAZ,GAAqB,CAAzB,EAA4B;AACxBie,wBAAY,CAACve,IAAb,CAAkBwe,WAAlB;AACH;AACJ;AACJ;;AAED,UAAI,CAAC,KAAKxd,KAAL,CAAWgb,SAAZ,IAAyBuC,YAAY,CAACje,MAAb,KAAwB,CAArD,EAAwD;AACpD,aAAKuE,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV0E,qBAAW,EACP,8BAAC,oCAAD;AACI,cAAE,EAAC,oDADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AAUA;AACH;;AAED,YAAM0D,YAAY,GAAG,EAArB;;AACA,WAAK,IAAIE,WAAT,IAAwB,KAAKlf,KAAL,CAAWgf,YAAX,CAAwBC,KAAxB,CAA8B,IAA9B,CAAxB,EAA6D;AACzDC,mBAAW,GAAGA,WAAW,CAACpK,IAAZ,EAAd;;AAEA,YAAIoK,WAAW,CAAC5f,MAAZ,GAAqB,CAAzB,EAA4B;AACxB0f,sBAAY,CAAChgB,IAAb,CAAkBkgB,WAAlB;AACH;AACJ;;AAED,UAAIF,YAAY,CAAC1f,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,aAAKuE,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV0E,qBAAW,EACP,8BAAC,oCAAD;AACI,cAAE,EAAC,2CADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AAUA;AACH;;AAED,YAAMP,IAAI,GAAG;AACT/Z,eAAO,EAAE,KAAK/D,KAAL,CAAWyK,IAAX,CAAgBvB,EADhB;AAEToS,kBAAU,EAAE,KAAKvY,KAAL,CAAWgb,SAFd;AAGTsC,qBAAa,EAAEC,YAHN;AAITY,oBAAY,EAAE9O,QAAQ,CAAC,KAAKrP,KAAL,CAAWke,WAAZ,EAAyB,EAAzB,CAJb;AAKTD,qBAAa,EAAEe,YALN;AAMT3d,oBAAY,EAAE,KAAKrB,KAAL,CAAW6F,WANhB;AAOTwY,oBAAY,EAAE,KAAKre,KAAL,CAAWoe,WAPhB;AAQTxY,mBAAW,EAAE,KAAK5F,KAAL,CAAW4F,WARf;AASTD,gBAAQ,EAAE,KAAK3F,KAAL,CAAW2F,QATZ;AAUTyV,gBAAQ,EAAE,KAAKpb,KAAL,CAAWmb;AAVZ,OAAb;AAaA,WAAKle,KAAL,CAAWse,MAAX,CAAkBR,IAAlB,EAAwBhS,IAAxB,CAA6B,MAAM,KAAKlF,QAAL,CAAc;AAAC+S,cAAM,EAAE;AAAT,OAAd,CAAnC;AACH,KAhHkB;;AAAA,wEAkHEhT,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AACVgC,mBAAW,EAAEjC,CAAC,CAACzE,MAAF,CAASzB;AADZ,OAAd;AAGH,KAtHkB;;AAAA,wEAwHEkG,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AACV+B,mBAAW,EAAEhC,CAAC,CAACzE,MAAF,CAASzB;AADZ,OAAd;AAGH,KA5HkB;;AAAA,wEA8HEkG,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AACVua,mBAAW,EAAExa,CAAC,CAACzE,MAAF,CAASzB;AADZ,OAAd;AAGH,KAlIkB;;AAAA,sEAoIAkG,CAAD,IAAO;AACrB,WAAKC,QAAL,CAAc;AACVmX,iBAAS,EAAEpX,CAAC,CAACzE,MAAF,CAASzB;AADV,OAAd;AAGH,KAxIkB;;AAAA,yEA0IGkG,CAAD,IAAO;AACxB,WAAKC,QAAL,CAAc;AACV0Z,oBAAY,EAAE3Z,CAAC,CAACzE,MAAF,CAASzB;AADb,OAAd;AAGH,KA9IkB;;AAAA,wEAgJEkG,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AACVqa,mBAAW,EAAEta,CAAC,CAACzE,MAAF,CAASzB;AADZ,OAAd;AAGH,KApJkB;;AAAA,yEAsJGkG,CAAD,IAAO;AACxB,WAAKC,QAAL,CAAc;AACVmb,oBAAY,EAAEpb,CAAC,CAACzE,MAAF,CAASzB;AADb,OAAd;AAGH,KA1JkB;;AAAA,qEA4JDkG,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACV8B,gBAAQ,EAAE/B,CAAC,CAACzE,MAAF,CAASzB;AADT,OAAd;AAGH,KAhKkB;;AAAA,oEAkKFkG,CAAD,IAAO;AACnB,WAAKC,QAAL,CAAc;AACVsX,eAAO,EAAEvX,CAAC,CAACzE,MAAF,CAASzB;AADR,OAAd;AAGH,KAtKkB;;AAGf,SAAKsC,KAAL,GAAa,KAAKwb,gBAAL,CAAsB,KAAKve,KAAL,CAAWwe,WAAX,IAA0B,EAAhD,CAAb;AACH;;AAoKD1e,QAAM,GAAG;AACL,UAAMoiB,kBAAkB,GAAG,mCAA3B;AACA,UAAMC,kBAAkB,GAAG,kBAA3B;AAEA,QAAI1D,cAAc,GAAG,KAAKze,KAAL,CAAW2H,MAAhC;AACA,QAAI+W,cAAc,GAAG,KAAK1e,KAAL,CAAW2e,MAAhC;AACA,QAAIyD,WAAW,GAAG,KAAKpiB,KAAL,CAAWoiB,WAA7B;AAEA,WACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,gCAAD,QACI,8BAAC,gCAAD;AAAM,QAAE,EAAG,IAAG,KAAKpiB,KAAL,CAAWyK,IAAX,CAAgBC,IAAK;AAAnC,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,oCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,EAOI,8BAAC,oCAAD;AACI,QAAE,EAAE+T,cAAc,CAACvV,EADvB;AAEI,oBAAc,EAAEuV,cAAc,CAAC3Q;AAFnC,MAPJ,CADJ,EAaI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,iBADd;AAEI,cAAQ,EAAE,KAAKqD;AAFnB,OAII;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,kCADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,aADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,IAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKpO,KAAL,CAAW6F,WALtB;AAMI,cAAQ,EAAE,KAAK0I;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,uCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CAJJ,EA+BI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,kCADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,aADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,KAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKvO,KAAL,CAAW4F,WALtB;AAMI,cAAQ,EAAE,KAAK4I;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,uCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CA/BJ,EA0DI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,mCADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,cADd;AAEI,WAAK,EAAE,KAAKxO,KAAL,CAAWoe,WAFtB;AAGI,cAAQ,EAAE,KAAKkB;AAHnB,OAKI;AACI,WAAK,EAAEH;AADX,OAGKA,kBAHL,CALJ,EAUI;AACI,WAAK,EAAEC;AADX,OAGKA,kBAHL,CAVJ,CADJ,EAiBI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,wCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAjBJ,EAuBI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,wCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAvBJ,EA6BI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,wCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CA7BJ,CAVJ,CA1DJ,EAyGI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,8BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,cAAD;AACI,QAAE,EAAC,WADP;AAEI,WAAK,EAAE,KAAKpf,KAAL,CAAWgb,SAFtB;AAGI,cAAQ,EAAE,KAAKa,eAHnB;AAII,gBAAU,EAAE;AAJhB,MADJ,EAOI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,mCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAPJ,CAVJ,CAzGJ,EAkII;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,mCADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,cADP;AAEI,UAAI,EAAC,GAFT;AAGI,eAAS,EAAC,MAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAK7b,KAAL,CAAWud,YALtB;AAMI,cAAQ,EAAE,KAAKgC;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,wCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CAlIJ,EA6JI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,8CADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,cADd;AAEI,WAAK,EAAE,KAAKvf,KAAL,CAAWke,WAFtB;AAGI,cAAQ,EAAE,KAAKsB;AAHnB,OAKI;AACI,WAAK,EAAC;AADV,OAGK/H,yCAAe,CAAC,sDAAD,EAAyD,2CAAzD,CAHpB,CALJ,EAUI;AACI,WAAK,EAAC;AADV,OAGKA,yCAAe,CAAC,wDAAD,EAA2D,uCAA3D,CAHpB,CAVJ,CADJ,EAiBI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,mDADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAjBJ,CAVJ,CA7JJ,EAgMI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,mCADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,cADP;AAEI,UAAI,EAAC,GAFT;AAGI,eAAS,EAAC,MAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKzX,KAAL,CAAWgf,YALtB;AAMI,cAAQ,EAAE,KAAKS;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,wCADP;AAEI,oBAAc,EAAC,mFAFnB;AAGI,YAAM,EAAE;AACJ7P,YAAI,EACA;AACI,cAAI,EAAC,yFADT;AAEI,gBAAM,EAAC,QAFX;AAGI,aAAG,EAAC;AAHR,WAKI,8BAAC,oCAAD;AACI,YAAE,EAAC,gDADP;AAEI,wBAAc,EAAC;AAFnB,UALJ;AAFA;AAHZ,MADJ,CATJ,CAVJ,CAhMJ,EAyOK,KAAK3S,KAAL,CAAW8e,0BAAX,IACG;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,+BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,UADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,IAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAK/b,KAAL,CAAW2F,QALtB;AAMI,cAAQ,EAAE,KAAK0I;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,oCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CA1OR,EAsQK,KAAKpR,KAAL,CAAW+e,sBAAX,IACG;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,+BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,SADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,MAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKhc,KAAL,CAAWmb,OALtB;AAMI,cAAQ,EAAE,KAAKc;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,oCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CAvQR,EAmSI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,6BAAD;AACI,UAAI,EAAC,WADT;AAEI,YAAM,EAAE,CAAC,KAAKhf,KAAL,CAAWoe,WAAZ,EAAyB,KAAKrb,KAAL,CAAWsb,WAApC;AAFZ,MADJ,EAKI,8BAAC,gCAAD;AACI,eAAS,EAAC,qBADd;AAEI,QAAE,EAAG,IAAG,KAAKre,KAAL,CAAWyK,IAAX,CAAgBC,IAAK;AAFjC,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,6BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CALJ,EAcI,8BAAC,iCAAD;AACI,eAAS,EAAC,iBADd;AAEI,UAAI,EAAC,QAFT;AAGI,cAAQ,EAAE,KAAK3H,KAAL,CAAW4W,MAHzB;AAII,kBAAY,EAAEa,yCAAe,CAAC,KAAKxa,KAAL,CAAW+G,OAAX,CAAmBmC,EAApB,EAAwB,KAAKlJ,KAAL,CAAW+G,OAAX,CAAmB+G,cAA3C,CAJjC;AAKI,aAAO,EAAE,KAAKqD,YALlB;AAMI,QAAE,EAAC;AANP,OAQI,8BAAC,oCAAD;AACI,QAAE,EAAEuN,cAAc,CAACxV,EADvB;AAEI,oBAAc,EAAEwV,cAAc,CAAC5Q;AAFnC,MARJ,CAdJ,EA2BKsU,WA3BL,CAnSJ,CADJ,CAbJ,CADJ;AAmVH;;AAzjBgE;;yCAAhDN,iD,eACE;AAEf;;;AAGArX,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UALR;;AAOf;;;AAGAR,QAAM,EAAExH,oBAAS,CAACmB,MAAV,CAAiB6G,UAVV;;AAYf;;;AAGAwW,QAAM,EAAExe,oBAAS,CAACmB,MAAV,CAAiB6G,UAfV;;AAiBf;;;AAGApB,SAAO,EAAE5G,oBAAS,CAACmB,MAAV,CAAiB6G,UApBX;;AAsBf;;;AAGAia,aAAW,EAAEjiB,oBAAS,CAAC8H,IAAV,CAAeE,UAzBb;;AA2Bf;;;AAGAiW,aAAW,EAAEje,oBAAS,CAACC,MAAV,CAAiB+H,UA9Bf;;AAgCf;;;AAGAqW,aAAW,EAAEre,oBAAS,CAACmB,MAnCR;;AAqCf;;;AAGAgd,QAAM,EAAEne,oBAAS,CAAC+H,IAAV,CAAeC,UAxCR;;AA0Cf;;;AAGA2W,4BAA0B,EAAE3e,oBAAS,CAACiI,IAAV,CAAeD,UA7C5B;;AA+Cf;;;AAGA4W,wBAAsB,EAAE5e,oBAAS,CAACiI,IAAV,CAAeD;AAlDxB,C;;;;ACfvB;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA,MAAM8W,2BAAM,GAAG;AAAC/V,IAAE,EAAE4P,yBAAC,CAAC,kBAAD,CAAN;AAA4BhL,gBAAc,EAAE;AAA5C,CAAf;AACA,MAAMoR,2BAAM,GAAG;AAAChW,IAAE,EAAE4P,yBAAC,CAAC,2BAAD,CAAN;AAAqChL,gBAAc,EAAE;AAArD,CAAf;AACA,MAAMqR,4BAAO,GAAG;AAACjW,IAAE,EAAE4P,yBAAC,CAAC,6BAAD,CAAN;AAAuChL,gBAAc,EAAE;AAAvD,CAAhB;AAEe,MAAM2U,uCAAN,SAAiC7iB,eAAK,CAACC,aAAvC,CAAqD;AAgChE2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,iEAQD,MAAO8d,IAAP,IAAgB;AAC9B,WAAKlX,QAAL,CAAc;AAACwX,mBAAW,EAAE;AAAd,OAAd;AAEA,YAAM;AAACvU;AAAD,UAAS,MAAM,KAAK7J,KAAL,CAAWgJ,OAAX,CAAmB0Z,kBAAnB,CAAsC5E,IAAtC,CAArB;;AACA,UAAIjU,IAAJ,EAAU;AACN2G,iDAAc,CAACzO,IAAf,CAAqB,IAAG,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,mDAAkDb,IAAI,CAACX,EAAG,EAAvG;AACA;AACH;;AAED,UAAI,KAAKlJ,KAAL,CAAW2iB,yBAAX,CAAqC/Y,KAAzC,EAAgD;AAC5C,aAAKhD,QAAL,CAAc;AAACwX,qBAAW,EAAE,KAAKpe,KAAL,CAAW2iB,yBAAX,CAAqC/Y,KAArC,CAA2CG;AAAzD,SAAd;AACH;AACJ,KApBkB;;AAGf,SAAKhH,KAAL,GAAa;AACTqb,iBAAW,EAAE;AADJ,KAAb;AAGH;;AAgBDte,QAAM,GAAG;AACL,WACI,8BAAC,iDAAD;AACI,UAAI,EAAE,KAAKE,KAAL,CAAWyK,IADrB;AAEI,YAAM,EAAEwU,2BAFZ;AAGI,YAAM,EAAEC,2BAHZ;AAII,aAAO,EAAEC,4BAJb;AAKI,iBAAW,EAAE,EALjB;AAMI,YAAM,EAAE,KAAKyD,eANjB;AAOI,iBAAW,EAAE,KAAK7f,KAAL,CAAWqb,WAP5B;AAQI,gCAA0B,EAAE,KAAKpe,KAAL,CAAW8e,0BAR3C;AASI,4BAAsB,EAAE,KAAK9e,KAAL,CAAW+e;AATvC,MADJ;AAaH;;AApE+D;;oCAA/C0D,uC,eACE;AAEf;;;AAGAhY,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UALR;;AAOf;;;AAGAwa,2BAAyB,EAAExiB,oBAAS,CAACmB,MAAV,CAAiB6G,UAV7B;AAYfa,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGAyX,sBAAkB,EAAEviB,oBAAS,CAAC+H,IAAV,CAAeC;AALd,GAAhB,EAMNA,UAlBY;;AAoBf;;;AAGA2W,4BAA0B,EAAE3e,oBAAS,CAACiI,IAAV,CAAeD,UAvB5B;;AAyBf;;;AAGA4W,wBAAsB,EAAE5e,oBAAS,CAACiI,IAAV,CAAeD;AA5BxB,C;;ACfvB;AACA;AAEA;AACA;AACA;AAEA;AAEA;;AAEA,SAASyE,oCAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,QAAM8J,MAAM,GAAGC,4BAAS,CAAC/J,KAAD,CAAxB;AACA,QAAM+b,0BAA0B,GAAGjS,MAAM,CAAC2S,0BAAP,KAAsC,MAAzE;AACA,QAAMT,sBAAsB,GAAGlS,MAAM,CAAC4S,sBAAP,KAAkC,MAAjE;AACA,SAAO;AACHkD,6BAAyB,EAAE5f,KAAK,CAAC2c,QAAN,CAAezc,YAAf,CAA4Byf,kBADpD;AAEH5D,8BAFG;AAGHC;AAHG,GAAP;AAKH;;AAED,SAAS3R,uCAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxBoV,oEAAkBA;AADM,KAAD,EAExBrV,QAFwB;AADxB,GAAP;AAKH;;AAEcE,8EAAO,CAACX,oCAAD,EAAkBQ,uCAAlB,CAAP,CAA6CqV,uCAA7C,CAAf,E;;;;AC9BA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,MAAMxD,4BAAM,GAAG;AAAC/V,IAAE,EAAE,mBAAL;AAA0B4E,gBAAc,EAAE;AAA1C,CAAf;AACA,MAAMoR,4BAAM,GAAG;AAAChW,IAAE,EAAE,gCAAL;AAAuC4E,gBAAc,EAAE;AAAvD,CAAf;AACA,MAAMqR,6BAAO,GAAG;AAACjW,IAAE,EAAE,kCAAL;AAAyC4E,gBAAc,EAAE;AAAzD,CAAhB;AAEe,MAAM+U,yCAAN,SAAkCjjB,eAAK,CAACC,aAAxC,CAAsD;AAoDjE2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,mEAeA,MAAO8d,IAAP,IAAgB;AAC/B,WAAK8B,OAAL,GAAe9B,IAAf;;AAEA,UAAI,KAAK9d,KAAL,CAAW8d,IAAX,CAAgB5U,EAApB,EAAwB;AACpB4U,YAAI,CAAC5U,EAAL,GAAU,KAAKlJ,KAAL,CAAW8d,IAAX,CAAgB5U,EAA1B;AACH;;AAED,UAAI,KAAKlJ,KAAL,CAAW8d,IAAX,CAAgBrU,KAApB,EAA2B;AACvBqU,YAAI,CAACrU,KAAL,GAAa,KAAKzJ,KAAL,CAAW8d,IAAX,CAAgBrU,KAA7B;AACH;;AAED,YAAMqZ,gBAAgB,GAAI,KAAK9iB,KAAL,CAAW8d,IAAX,CAAgBuC,aAAhB,CAA8Bhe,MAA9B,KAAyCyb,IAAI,CAACuC,aAAL,CAAmBhe,MAA7D,IACrB,KAAKrC,KAAL,CAAW8d,IAAX,CAAgBuC,aAAhB,CAA8B0C,KAA9B,CAAoC,CAACC,CAAD,EAAI7gB,CAAJ,KAAU6gB,CAAC,KAAKlF,IAAI,CAACuC,aAAL,CAAmBle,CAAnB,CAApD,CADJ;AAGA,YAAM8gB,gBAAgB,GAAI,KAAKjjB,KAAL,CAAW8d,IAAX,CAAgBkD,aAAhB,CAA8B3e,MAA9B,KAAyCyb,IAAI,CAACkD,aAAL,CAAmB3e,MAA7D,IACrB,KAAKrC,KAAL,CAAW8d,IAAX,CAAgBkD,aAAhB,CAA8B+B,KAA9B,CAAoC,CAACC,CAAD,EAAI7gB,CAAJ,KAAU6gB,CAAC,KAAKlF,IAAI,CAACkD,aAAL,CAAmB7e,CAAnB,CAApD,CADJ;;AAGA,UAAI,KAAKnC,KAAL,CAAW8d,IAAX,CAAgBsD,YAAhB,KAAiCtD,IAAI,CAACsD,YAAtC,IACA,CAAC0B,gBADD,IACqB,CAACG,gBAD1B,EAC4C;AACxC,aAAKC,kBAAL;AACH,OAHD,MAGO;AACH,cAAM,KAAKrD,UAAL,EAAN;AACH;AACJ,KAtCkB;;AAAA,qEAwCE,MAAM;AACvB,WAAKjZ,QAAL,CAAc;AAACoZ,wBAAgB,EAAE;AAAnB,OAAd;AACH,KA1CkB;;AAAA,wEA4CK,MAAM;AAC1B,WAAKpZ,QAAL,CAAc;AAACoZ,wBAAgB,EAAE;AAAnB,OAAd;AACH,KA9CkB;;AAAA,6DAgDN,YAAY;AACrB,WAAKpZ,QAAL,CAAc;AAACwX,mBAAW,EAAE;AAAd,OAAd;AAEA,YAAM;AAACvU;AAAD,UAAS,MAAM,KAAK7J,KAAL,CAAWgJ,OAAX,CAAmBma,kBAAnB,CAAsC,KAAKvD,OAA3C,CAArB;;AAEA,UAAI/V,IAAJ,EAAU;AACN2G,iDAAc,CAACzO,IAAf,CAAqB,IAAG,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,iCAA7C;AACA;AACH;;AAED,WAAK9D,QAAL,CAAc;AAACoZ,wBAAgB,EAAE;AAAnB,OAAd;;AAEA,UAAI,KAAKhgB,KAAL,CAAWojB,yBAAX,CAAqCxZ,KAAzC,EAAgD;AAC5C,aAAKhD,QAAL,CAAc;AAACwX,qBAAW,EAAE,KAAKpe,KAAL,CAAWojB,yBAAX,CAAqCxZ,KAArC,CAA2CG;AAAzD,SAAd;AACH;AACJ,KA/DkB;;AAAA,8DAiEL,MAAM;AAChB,YAAMsZ,aAAa,GACf,8BAAC,oCAAD;AACI,UAAE,EAAC,gCADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAOA,YAAMC,YAAY,GACd,8BAAC,oCAAD;AACI,UAAE,EAAC,iCADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAOA,YAAMC,cAAc,GAChB,8BAAC,oCAAD;AACI,UAAE,EAAC,kCADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAOA,aACI,8BAAC,gCAAD;AACI,aAAK,EAAED,YADX;AAEI,eAAO,EAAEC,cAFb;AAGI,yBAAiB,EAAEF,aAHvB;AAII,YAAI,EAAE,KAAKtgB,KAAL,CAAWid,gBAJrB;AAKI,iBAAS,EAAE,KAAKH,UALpB;AAMI,gBAAQ,EAAE,KAAK2D;AANnB,QADJ;AAUH,KAjGkB;;AAGf,SAAKzgB,KAAL,GAAa;AACTid,sBAAgB,EAAE,KADT;AAET5B,iBAAW,EAAE;AAFJ,KAAb;AAIH;;AAED3S,mBAAiB,GAAG;AAChB,QAAI,KAAKzL,KAAL,CAAWgT,sBAAf,EAAuC;AACnC,WAAKhT,KAAL,CAAWgJ,OAAX,CAAmBya,eAAnB,CAAmC,KAAKzjB,KAAL,CAAWkgB,MAA9C;AACH;AACJ;;AAsFDpgB,QAAM,GAAG;AACL,QAAI,CAAC,KAAKE,KAAL,CAAW8d,IAAhB,EAAsB;AAClB,aAAO,8BAAC,iCAAD,OAAP;AACH;;AAED,WACI,8BAAC,iDAAD;AACI,UAAI,EAAE,KAAK9d,KAAL,CAAWyK,IADrB;AAEI,YAAM,EAAEwU,4BAFZ;AAGI,YAAM,EAAEC,4BAHZ;AAII,aAAO,EAAEC,6BAJb;AAKI,iBAAW,EAAE,KAAKiD,WAAL,EALjB;AAMI,YAAM,EAAE,KAAKsB,gBANjB;AAOI,iBAAW,EAAE,KAAK3gB,KAAL,CAAWqb,WAP5B;AAQI,iBAAW,EAAE,KAAKpe,KAAL,CAAW8d,IAR5B;AASI,gCAA0B,EAAE,KAAK9d,KAAL,CAAW8e,0BAT3C;AAUI,4BAAsB,EAAE,KAAK9e,KAAL,CAAW+e;AAVvC,MADJ;AAcH;;AA1KgE;;qCAAhD8D,yC,eACE;AAEf;;;AAGApY,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UALR;;AAOf;;;AAGA2V,MAAI,EAAE3d,oBAAS,CAACmB,MAVD;;AAYf;;;AAGA4e,QAAM,EAAE/f,oBAAS,CAACC,MAAV,CAAiB+H,UAfV;;AAiBf;;;AAGAib,2BAAyB,EAAEjjB,oBAAS,CAACmB,MAAV,CAAiB6G,UApB7B;AAsBfa,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGAkY,sBAAkB,EAAEhjB,oBAAS,CAAC+H,IAAV,CAAeC,UALd;;AAOrB;;;AAGAsb,mBAAe,EAAEtjB,oBAAS,CAAC+H,IAAV,CAAeC;AAVX,GAAhB,EAWNA,UAjCY;;AAmCf;;;AAGA6K,wBAAsB,EAAE7S,oBAAS,CAACiI,IAtCnB;;AAwCf;;;AAGA0W,4BAA0B,EAAE3e,oBAAS,CAACiI,IAAV,CAAeD,UA3C5B;;AA6Cf;;;AAGA4W,wBAAsB,EAAE5e,oBAAS,CAACiI,IAAV,CAAeD;AAhDxB,C;;ACjBvB;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA,SAASyE,qCAAT,CAAyB7J,KAAzB,EAAgC8O,QAAhC,EAA0C;AACtC,QAAMhF,MAAM,GAAGC,4BAAS,CAAC/J,KAAD,CAAxB;AACA,QAAMmd,MAAM,GAAI,IAAInO,eAAJ,CAAoBF,QAAQ,CAACG,QAAT,CAAkBlK,MAAtC,CAAD,CAAgDmK,GAAhD,CAAoD,IAApD,CAAf;AACA,QAAMe,sBAAsB,GAAGnG,MAAM,CAACmH,sBAAP,KAAkC,MAAjE;AACA,QAAM8K,0BAA0B,GAAGjS,MAAM,CAAC2S,0BAAP,KAAsC,MAAzE;AACA,QAAMT,sBAAsB,GAAGlS,MAAM,CAAC4S,sBAAP,KAAkC,MAAjE;AAEA,SAAO;AACHS,UADG;AAEHpC,QAAI,EAAE/a,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BE,aAA5B,CAA0C+c,MAA1C,CAFH;AAGHkD,6BAAyB,EAAErgB,KAAK,CAAC2c,QAAN,CAAezc,YAAf,CAA4Byf,kBAHpD;AAIH1P,0BAJG;AAKH8L,8BALG;AAMHC;AANG,GAAP;AAQH;;AAED,SAAS3R,wCAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxB6V,oEADwB;AAExBM,8DAAeA;AAFS,KAAD,EAGxBpW,QAHwB;AADxB,GAAP;AAMH;;AAEcE,+EAAO,CAACX,qCAAD,EAAkBQ,wCAAlB,CAAP,CAA6CyV,yCAA7C,CAAf,E;;;;ACpCA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAMc,WAAW,GAAG,iBAApB;AAEO,SAASnb,iCAAT,CAAuBob,QAAvB,EAAiCjiB,MAAjC,EAAyC;AAC5C,MAAI,CAACA,MAAL,EAAa;AACT,WAAO,IAAP;AACH;;AAED,SAAOiiB,QAAQ,CAAClZ,IAAT,CAAc7D,WAAd,GAA4BiC,OAA5B,CAAoCnH,MAApC,MAAgD,CAAC,CAAxD;AACH;AAEc,MAAMkiB,qCAAN,SAAgCjkB,eAAK,CAACC,aAAtC,CAAoD;AAoC/D2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,uEAQO2G,CAAD,IAAO;AAC5B,UAAIA,CAAC,IAAIA,CAAC,CAACgD,cAAX,EAA2B;AACvBhD,SAAC,CAACgD,cAAF;AACH;;AACD,WAAK/C,QAAL,CAAc;AAACkd,oBAAY,EAAE,KAAK9jB,KAAL,CAAW4jB,QAAX,CAAoBG;AAAnC,OAAd;AACH,KAbkB;;AAAA,uEAeOpd,CAAD,IAAO;AAC5BA,OAAC,CAACgD,cAAF;AACA,WAAK/C,QAAL,CAAc;AAACkd,oBAAY,EAAEH;AAAf,OAAd;AACH,KAlBkB;;AAAA,iEAoBChd,CAAD,IAAO;AACtBA,OAAC,CAACgD,cAAF;AACA,WAAK3J,KAAL,CAAWgkB,kBAAX,CAA8B,KAAKhkB,KAAL,CAAW4jB,QAAX,CAAoB1a,EAAlD,EAAsD4C,IAAtD,CACI,MAAM;AACF,cAAM;AAAClC;AAAD,YAAU,KAAK5J,KAAL,CAAWikB,0BAA3B;;AACA,YAAIra,KAAJ,EAAW;AACP,eAAKhD,QAAL,CAAc;AAACgD,iBAAK,EAAEA,KAAK,CAACG;AAAd,WAAd;AACH,SAFD,MAEO;AACH,eAAKnD,QAAL,CAAc;AAACgD,iBAAK,EAAE;AAAR,WAAd;AACA,eAAKsa,sBAAL;AACH;AACJ,OATL;AAWH,KAjCkB;;AAAA,6DAmCJ,MAAM;AACjB,WAAKlkB,KAAL,CAAW6U,QAAX,CAAoB,KAAK7U,KAAL,CAAW4jB,QAA/B;AACH,KArCkB;;AAGf,SAAK7gB,KAAL,GAAa;AACT+gB,kBAAY,EAAEH;AADL,KAAb;AAGH;;AAiCD7jB,QAAM,GAAG;AACL,UAAM;AAAC8jB,cAAD;AAAWO;AAAX,QAA0B,KAAKnkB,KAArC;AACA,QAAI4J,KAAJ;;AAEA,QAAI,KAAK7G,KAAL,CAAW6G,KAAf,EAAsB;AAClBA,WAAK,GACD,8BAAC,6BAAD;AACI,aAAK,EAAE,KAAK7G,KAAL,CAAW6G;AADtB,QADJ;AAKH;;AAED,QAAI,CAACpB,iCAAa,CAACob,QAAD,EAAW,KAAK5jB,KAAL,CAAW2B,MAAtB,CAAlB,EAAiD;AAC7C,aAAO,IAAP;AACH;;AAED,QAAI+I,IAAJ;;AACA,QAAIkZ,QAAQ,CAAClZ,IAAb,EAAmB;AACfA,UAAI,GAAGkZ,QAAQ,CAAClZ,IAAhB;AACH,KAFD,MAEO;AACHA,UAAI,GACA,8BAAC,oCAAD;AACI,UAAE,EAAC,0CADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH;;AAED,QAAI/B,WAAJ;;AACA,QAAIib,QAAQ,CAACjb,WAAb,EAA0B;AACtBA,iBAAW,GACP;AAAK,iBAAS,EAAC;AAAf,SACI;AAAM,iBAAS,EAAC;AAAhB,SACKib,QAAQ,CAACjb,WADd,CADJ,CADJ;AAOH;;AAED,UAAMoY,IAAI,GACN;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,sCADP;AAEI,oBAAc,EAAC,uBAFnB;AAGI,YAAM,EAAE;AACJA,YAAI,EAAE6C,QAAQ,CAAC5C,aAAT,CAAuBF,IAAvB,CAA4B,IAA5B;AADF;AAHZ,MADJ,CADJ,CADJ;AAcA,QAAIsD,SAAJ;;AACA,QAAIR,QAAQ,CAACS,UAAb,EAAyB;AACrBD,eAAS,GAAG/b,iCAAA,CAAsB,kCAAtB,EAA0D,KAA1D,CAAZ;AACH,KAFD,MAEO;AACH+b,eAAS,GAAG/b,iCAAA,CAAsB,iCAAtB,EAAyD,IAAzD,CAAZ;AACH;;AAED,QAAIic,QAAJ;AACA,QAAIR,YAAJ;;AACA,QAAI,KAAK/gB,KAAL,CAAW+gB,YAAX,KAA4BH,WAAhC,EAA6C;AACzCW,cAAQ,GACJ;AACI,UAAE,EAAC,kBADP;AAEI,iBAAS,EAAC,yBAFd;AAGI,eAAO,EAAE,KAAKJ;AAHlB,SAKI,8BAAC,oCAAD;AACI,UAAE,EAAC,mCADP;AAEI,sBAAc,EAAC;AAFnB,QALJ,CADJ;AAYAJ,kBAAY,GACR;AAAM,iBAAS,EAAC;AAAhB,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,sCADP;AAEI,sBAAc,EAAC,mCAFnB;AAGI,cAAM,EAAE;AACJA,sBAAY,EAAE,KAAK/gB,KAAL,CAAW+gB;AADrB;AAHZ,QADJ,CADJ;AAWH,KAxBD,MAwBO;AACHQ,cAAQ,GACJ;AACI,UAAE,EAAC,kBADP;AAEI,iBAAS,EAAC,yBAFd;AAGI,eAAO,EAAE,KAAKC;AAHlB,SAKI,8BAAC,oCAAD;AACI,UAAE,EAAC,mCADP;AAEI,sBAAc,EAAC;AAFnB,QALJ,CADJ;AAYAT,kBAAY,GACR;AAAM,iBAAS,EAAC;AAAhB,SACI,8BAAC,6CAAD;AACI,UAAE,EAAC,sCADP;AAEI,sBAAc,EAAC,mCAFnB;AAGI,cAAM,EAAE;AACJA,sBAAY,EAAE,KAAK/gB,KAAL,CAAW+gB;AADrB;AAHZ,QADJ,EAQI,8BAAC,kBAAD;AACI,iBAAS,EAAC,iCADd;AAEI,sBAAc,EAAC,oBAFnB;AAGI,aAAK,EAAE,KAAK/gB,KAAL,CAAW+gB;AAHtB,QARJ,CADJ;AAgBH;;AAED,UAAMU,KAAK,GACP;AACI,QAAE,EAAC,wBADP;AAEI,eAAS,EAAC,yBAFd;AAGI,aAAO,EAAE,KAAKC;AAHlB,OAKI,8BAAC,oCAAD;AACI,QAAE,EAAC,oCADP;AAEI,oBAAc,EAAC;AAFnB,MALJ,CADJ;AAaA,QAAIC,IAAJ;;AACA,QAAId,QAAQ,CAACzF,QAAb,EAAuB;AACnBuG,UAAI,GACA;AAAK,iBAAS,EAAC;AAAf,SACI;AACI,WAAG,EAAE,oBADT;AAEI,WAAG,EAAEd,QAAQ,CAACzF;AAFlB,QADJ,CADJ;AAQH;;AAED,WACI;AAAK,eAAS,EAAC;AAAf,OACKuG,IADL,EAEI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACKha,IADL,CADJ,CADJ,EAMKd,KANL,EAOKjB,WAPL,EAQI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACI,8BAAC,6CAAD;AACI,QAAE,EAAC,iCADP;AAEI,oBAAc,EAAC,6BAFnB;AAGI,YAAM,EAAE;AACJyb;AADI;AAHZ,MADJ,CADJ,CARJ,EAmBI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACI,8BAAC,6CAAD;AACI,QAAE,EAAC,kCADP;AAEI,oBAAc,EAAC,2BAFnB;AAGI,YAAM,EAAE;AACJO,gBAAQ,EAAEf,QAAQ,CAAC1a;AADf;AAHZ,MADJ,EAQI,8BAAC,kBAAD;AACI,eAAS,EAAC,6BADd;AAEI,oBAAc,EAAC,gBAFnB;AAGI,WAAK,EAAE0a,QAAQ,CAAC1a;AAHpB,MARJ,CADJ,CAnBJ,EAmCI;AAAK,eAAS,EAAC;AAAf,OACK4a,YADL,CAnCJ,EAsCK/C,IAtCL,EAuCI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,iCADP;AAEI,oBAAc,EAAC,gDAFnB;AAGI,YAAM,EAAE;AACJpK,eAAO,EAAEwN,WADL;AAEJvI,gBAAQ,EAAEgI,QAAQ,CAAC/H;AAFf;AAHZ,MADJ,CADJ,CAvCJ,CAFJ,EAsDI;AAAK,eAAS,EAAC;AAAf,OACKyI,QADL,EAEK,KAFL,EAGKE,KAHL,EAIK,KAJL,EAKI,8BAAC,gCAAD;AAAM,QAAE,EAAG,IAAG,KAAKxkB,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,qCAAoCkZ,QAAQ,CAAC1a,EAAG;AAAnF,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,6BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CALJ,EAWK,KAXL,EAYI,8BAAC,oCAAD;AACI,eAAS,EAAE4P,yBAAC,CAAC,qCAAD,CADhB;AAEI,cAAQ,EAAE,KAAK3C;AAFnB,MAZJ,CAtDJ,CADJ;AA0EH;;AAnS8D;;mCAA9C0N,qC,eACE;AAEf;;;AAGApZ,MAAI,EAAEtK,oBAAS,CAACmB,MALD;;AAOf;;;AAGAsiB,UAAQ,EAAEzjB,oBAAS,CAACmB,MAAV,CAAiB6G,UAVZ;AAYfgc,aAAW,EAAEhkB,oBAAS,CAACC,MAAV,CAAiB+H,UAZf;;AAcf;;;AAGA8b,4BAA0B,EAAE9jB,oBAAS,CAACmB,MAAV,CAAiB6G,UAjB9B;;AAmBf;;;AAGA6b,oBAAkB,EAAE7jB,oBAAS,CAAC+H,IAAV,CAAeC,UAtBpB;;AAwBf;;;AAGA0M,UAAQ,EAAE1U,oBAAS,CAAC+H,IAAV,CAAeC,UA3BV;;AA6Bf;;;AAGAxG,QAAM,EAAExB,oBAAS,CAACC;AAhCH,C;;AC3BvB;AACA;AAEA;AACA;AAEA;AAEA;;AAEA,SAASwM,mCAAT,CAAyB7J,KAAzB,EAAgC8O,QAAhC,EAA0C;AACtC,QAAM+R,QAAQ,GAAG/R,QAAQ,CAAC+R,QAAT,IAAqB,EAAtC;AACA,SAAO;AACHO,eAAW,EAAEvN,6CAAoB,CAAC3K,wBAAO,CAAClJ,KAAD,EAAQ6gB,QAAQ,CAAC5N,UAAjB,CAAR;AAD9B,GAAP;AAGH;;AAEczI,6EAAO,CAACX,mCAAD,CAAP,CAAyBiX,qCAAzB,CAAf,E;;;;;;ACjBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEe,MAAMe,uCAAN,SAAiChlB,eAAK,CAACC,aAAvC,CAAqD;AA+ChE2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,gEAeD6kB,GAAD,IAAS;AACtB,UAAIA,GAAG,IAAIA,GAAG,CAAC3b,EAAf,EAAmB;AACf,aAAKlJ,KAAL,CAAWgJ,OAAX,CAAmB8b,cAAnB,CAAkCD,GAAG,CAAC3b,EAAtC;AACH;AACJ,KAnBkB;;AAAA,2DAmCNvH,MAAD,IAAYrB,MAAM,CAACqD,MAAP,CAAc,KAAK3D,KAAL,CAAWqD,SAAzB,EACpB1B,MADoB,CACZkjB,GAAD,IAASrc,iCAAa,CAACqc,GAAD,EAAMljB,MAAN,CADT,EAEpBsC,IAFoB,CAEf,KAAK8gB,eAFU,EAGpB7d,GAHoB,CAGf2d,GAAD,IAAS;AACT,aACI,8BAAC,mBAAD;AACI,WAAG,EAAEA,GAAG,CAAC3b,EADb;AAEI,YAAI,EAAE,KAAKlJ,KAAL,CAAWyK,IAFrB;AAGI,gBAAQ,EAAEoa,GAHd;AAII,kCAA0B,EAAE,KAAK7kB,KAAL,CAAWikB,0BAJ3C;AAKI,0BAAkB,EAAE,KAAKjkB,KAAL,CAAWgJ,OAAX,CAAmBgc,mBAL3C;AAMI,gBAAQ,EAAE,KAAKF;AANnB,QADJ;AAUH,KAdmB,CAnCL;;AAEf,SAAK/hB,KAAL,GAAa;AACTgE,aAAO,EAAE;AADA,KAAb;AAGH;;AAED0E,mBAAiB,GAAG;AAChB,QAAI,KAAKzL,KAAL,CAAWkT,0BAAf,EAA2C;AACvC,WAAKlT,KAAL,CAAWgJ,OAAX,CAAmBic,wBAAnB,GAA8CnZ,IAA9C,CACI,MAAM,KAAKlF,QAAL,CAAc;AAACG,eAAO,EAAE;AAAV,OAAd,CADV;AAGH;AACJ;;AAQDge,iBAAe,CAAC7gB,CAAD,EAAIC,CAAJ,EAAO;AAClB,QAAI+gB,KAAK,GAAGhhB,CAAC,CAACwG,IAAd;;AACA,QAAI,CAACwa,KAAL,EAAY;AACRA,WAAK,GAAG1K,yCAAe,CAAC,0CAAD,EAA6C,+BAA7C,CAAvB;AACH;;AAED,QAAI2K,KAAK,GAAGhhB,CAAC,CAACuG,IAAd;;AACA,QAAI,CAACya,KAAL,EAAY;AACRA,WAAK,GAAG3K,yCAAe,CAAC,0CAAD,EAA6C,+BAA7C,CAAvB;AACH;;AAED,WAAO0K,KAAK,CAAC7gB,aAAN,CAAoB8gB,KAApB,CAAP;AACH;;AAkBDrlB,QAAM,GAAG;AACL,UAAMslB,mBAAmB,GAAG,KAAKplB,KAAL,CAAWkT,0BAAX,IAAyC,KAAKlT,KAAL,CAAWqlB,cAAhF;AACA,QAAIrlB,KAAJ;;AACA,QAAIolB,mBAAJ,EAAyB;AACrBplB,WAAK,GAAG;AACJwH,eAAO,EAAE,MAAM,KAAKxH,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B,+BADlC;AAEJjD,eAAO,EAAE+S,yCAAe,CAAC,0BAAD,EAA6B,2BAA7B,CAFpB;AAGJ9S,mBAAW,EAAE;AAHT,OAAR;AAKH;;AAED,WACI,8BAAC,4BAAD;AACI,YAAM,EACF,8BAAC,oCAAD;AACI,UAAE,EAAC,6BADP;AAEI,sBAAc,EAAC;AAFnB,QAFR;AAOI,cAAQ,EACJ,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC,0JAFnB;AAGI,cAAM,EAAE;AACJ4d,2BAAiB,EACb;AACI,kBAAM,EAAC,QADX;AAEI,eAAG,EAAC,qBAFR;AAGI,gBAAI,EAAC;AAHT,aAKI,8BAAC,oCAAD;AACI,cAAE,EAAC,6CADP;AAEI,0BAAc,EAAC;AAFnB,YALJ,CAFA;AAaJzR,sBAAY,EACR;AACI,kBAAM,EAAC,QADX;AAEI,eAAG,EAAC,qBAFR;AAGI,gBAAI,EAAC;AAHT,aAKI,8BAAC,oCAAD;AACI,cAAE,EAAC,wCADP;AAEI,0BAAc,EAAC;AAFnB,YALJ;AAdA;AAHZ,QARR;AAuCI,eAAS,EACL,8BAAC,oCAAD;AACI,UAAE,EAAC,4BADP;AAEI,sBAAc,EAAC;AAFnB,QAxCR;AA6CI,qBAAe,EACX,8BAAC,6CAAD;AACI,UAAE,EAAC,kCADP;AAEI,sBAAc,EAAC;AAFnB,QA9CR;AAmDI,uBAAiB,EAAE2G,yCAAe,CAAC,6BAAD,EAAgC,+BAAhC,CAnDtC;AAoDI,aAAO,EAAE,KAAKzX,KAAL,CAAWgE;AApDxB,OAqDQ/G,KArDR,GAuDM2B,MAAD,IAAY;AACT,YAAMmF,QAAQ,GAAG,KAAKzD,SAAL,CAAe1B,MAAf,CAAjB;AACA,aAAO,CAACmF,QAAD,EAAWA,QAAQ,CAACzE,MAAT,GAAkB,CAA7B,CAAP;AACH,KA1DL,CADJ;AA8DH;;AA3K+D;;oCAA/CuiB,uC,eACE;AAEf;;;AAGAna,MAAI,EAAEtK,oBAAS,CAACmB,MALD;;AAOf;;;AAGA+B,WAAS,EAAElD,oBAAS,CAACmB,MAVN;;AAYf;;;AAGA+jB,gBAAc,EAAEllB,oBAAS,CAACiI,IAfX;;AAiBf;;;AAGA6b,4BAA0B,EAAE9jB,oBAAS,CAACmB,MAAV,CAAiB6G,UApB9B;AAsBfa,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGAga,4BAAwB,EAAE9kB,oBAAS,CAAC+H,IAAV,CAAeC,UALpB;;AAOrB;;;AAGA6c,uBAAmB,EAAE7kB,oBAAS,CAAC+H,IAAV,CAAeC,UAVf;;AAYrB;;;AAGA2c,kBAAc,EAAE3kB,oBAAS,CAAC+H,IAAV,CAAeC;AAfV,GAAhB,EAgBNA,UAtCY;;AAwCf;;;AAGA+K,4BAA0B,EAAE/S,oBAAS,CAACiI;AA3CvB,C;;ACdvB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,SAASwE,oCAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,QAAM8J,MAAM,GAAGC,4BAAS,CAAC/J,KAAD,CAAxB;AACA,QAAMmQ,0BAA0B,GAAGrG,MAAM,CAACqH,0BAAP,KAAsC,MAAzE;AAEA,SAAO;AACHmR,kBAAc,EAAE/S,+CAAqB,CAACvP,KAAD,EAAQ;AAACwP,gBAAU,EAAEC,wBAAW,CAACkB;AAAzB,KAAR,CADlC;AAEHrQ,aAAS,EAAExC,6CAAY,CAACkC,KAAD,CAFpB;AAGHkhB,8BAA0B,EAAElhB,KAAK,CAAC2c,QAAN,CAAezc,YAAf,CAA4BsiB,cAHrD;AAIHrS;AAJG,GAAP;AAMH;;AAED,SAAS9F,uCAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxB2X,uFADwB;AAExBD,yBAAmB,EAAElI,2CAFG;AAGxBgI,oBAAc,EAAEhI,sCAAsBgI;AAHd,KAAD,EAIxBzX,QAJwB;AADxB,GAAP;AAOH;;AAEcE,8EAAO,CAACX,oCAAD,EAAkBQ,uCAAlB,CAAP,CAA6CwX,uCAA7C,CAAf,E;;;;ACrCA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEe,MAAMY,mCAAN,SAA+B5lB,eAAK,CAACC,aAArC,CAAmD;AA4C9D2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,+DAQA6kB,GAAD,IAAS;AACvB,aAAO;AACHna,YAAI,EAAEma,GAAG,CAACna,IAAJ,IAAY,EADf;AAEH/B,mBAAW,EAAEkc,GAAG,CAAClc,WAAJ,IAAmB,EAF7B;AAGH8c,gBAAQ,EAAEZ,GAAG,CAACY,QAAJ,IAAgB,EAHvB;AAIHtH,gBAAQ,EAAE0G,GAAG,CAAC1G,QAAJ,IAAgB,EAJvB;AAKH4D,oBAAY,EAAE8C,GAAG,CAAC7D,aAAJ,GAAoB6D,GAAG,CAAC7D,aAAJ,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB,GAAmD,EAL9D;AAMHuD,kBAAU,EAAEQ,GAAG,CAACR,UAAJ,IAAkB,KAN3B;AAOHqB,gBAAQ,EAAEC,OAAO,CAACd,GAAG,CAAC1G,QAAL,CAPd;AAQHxE,cAAM,EAAE,KARL;AASH0E,mBAAW,EAAE;AATV,OAAP;AAWH,KApBkB;;AAAA,2DAsBL,MAAM;AAChB,WAAKzX,QAAL,CAAc;AACV8e,gBAAQ,EAAE,IADA;AAEVvH,gBAAQ,EAAE,KAAKyH,IAAL,CAAUzH,QAAV,CAAmB1d;AAFnB,OAAd;AAIH,KA3BkB;;AAAA,4DA6BHkG,CAAD,IAAO;AAClBA,OAAC,CAACgD,cAAF;;AAEA,UAAI,KAAK5G,KAAL,CAAW4W,MAAf,EAAuB;AACnB;AACH;;AAED,WAAK/S,QAAL,CAAc;AACV+S,cAAM,EAAE,IADE;AAEV0E,mBAAW,EAAE;AAFH,OAAd;;AAKA,UAAI,CAAC,KAAKtb,KAAL,CAAW2H,IAAhB,EAAsB;AAClB,aAAK9D,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV0E,qBAAW,EACP,8BAAC,oCAAD;AACI,cAAE,EAAC,4BADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AAUA;AACH;;AAED,UAAI,CAAC,KAAKtb,KAAL,CAAW4F,WAAhB,EAA6B;AACzB,aAAK/B,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV0E,qBAAW,EACP,8BAAC,oCAAD;AACI,cAAE,EAAC,mCADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AAUA;AACH;;AAED,UAAI,CAAC,KAAKtb,KAAL,CAAW0iB,QAAhB,EAA0B;AACtB,aAAK7e,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV0E,qBAAW,EACP,8BAAC,oCAAD;AACI,cAAE,EAAC,gCADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AAUA;AACH;;AAED,YAAM0D,YAAY,GAAG,EAArB;;AACA,WAAK,IAAIE,WAAT,IAAwB,KAAKlf,KAAL,CAAWgf,YAAX,CAAwBC,KAAxB,CAA8B,IAA9B,CAAxB,EAA6D;AACzDC,mBAAW,GAAGA,WAAW,CAACpK,IAAZ,EAAd;;AAEA,YAAIoK,WAAW,CAAC5f,MAAZ,GAAqB,CAAzB,EAA4B;AACxB0f,sBAAY,CAAChgB,IAAb,CAAkBkgB,WAAlB;AACH;AACJ;;AAED,UAAIF,YAAY,CAAC1f,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,aAAKuE,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV0E,qBAAW,EACP,8BAAC,oCAAD;AACI,cAAE,EAAC,oCADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AAUA;AACH;;AAED,YAAMwG,GAAG,GAAG;AACRna,YAAI,EAAE,KAAK3H,KAAL,CAAW2H,IADT;AAERsW,qBAAa,EAAEe,YAFP;AAGR0D,gBAAQ,EAAE,KAAK1iB,KAAL,CAAW0iB,QAHb;AAIR9c,mBAAW,EAAE,KAAK5F,KAAL,CAAW4F,WAJhB;AAKR0b,kBAAU,EAAE,KAAKthB,KAAL,CAAWshB,UALf;AAMRlG,gBAAQ,EAAE,KAAKpb,KAAL,CAAWob;AANb,OAAZ;AASA,WAAKne,KAAL,CAAWse,MAAX,CAAkBuG,GAAlB,EAAuB/Y,IAAvB,CAA4B,MAAM,KAAKlF,QAAL,CAAc;AAAC+S,cAAM,EAAE;AAAT,OAAd,CAAlC;AACH,KApHkB;;AAAA,0DAsHLhT,CAAD,IAAO;AAChB,WAAKC,QAAL,CAAc;AACV8D,YAAI,EAAE/D,CAAC,CAACzE,MAAF,CAASzB;AADL,OAAd;AAGH,KA1HkB;;AAAA,6DA4HFkG,CAAD,IAAO;AACnB,WAAKC,QAAL,CAAc;AACVyd,kBAAU,EAAE1d,CAAC,CAACzE,MAAF,CAASzB,KAAT,KAAmB;AADrB,OAAd;AAGH,KAhIkB;;AAAA,iEAkIEkG,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AACV+B,mBAAW,EAAEhC,CAAC,CAACzE,MAAF,CAASzB;AADZ,OAAd;AAGH,KAtIkB;;AAAA,8DAwIDkG,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACV6e,gBAAQ,EAAE9e,CAAC,CAACzE,MAAF,CAASzB;AADT,OAAd;AAGH,KA5IkB;;AAAA,6DA8IFkG,CAAD,IAAO;AACnB,WAAKC,QAAL,CAAc;AACV8e,gBAAQ,EAAE,KADA;AAEVvH,gBAAQ,EAAExX,CAAC,CAACzE,MAAF,CAASzB;AAFT,OAAd;AAIA,WAAK0O,KAAL,CAAW0W,GAAX,GAAiBlf,CAAC,CAACzE,MAAF,CAASzB,KAA1B;AACH,KApJkB;;AAAA,kEAsJGkG,CAAD,IAAO;AACxB,WAAKC,QAAL,CAAc;AACVmb,oBAAY,EAAEpb,CAAC,CAACzE,MAAF,CAASzB;AADb,OAAd;AAGH,KA1JkB;;AAGf,SAAK0O,KAAL,GAAa,IAAI2W,KAAJ,EAAb;AACA,SAAK3W,KAAL,CAAWL,MAAX,GAAoB,KAAKiX,WAAzB;AACA,SAAKhjB,KAAL,GAAa,KAAKijB,eAAL,CAAqB,KAAKhmB,KAAL,CAAWimB,UAAX,IAAyB,EAA9C,CAAb;AACH;;AAsJDnmB,QAAM,GAAG;AACL,UAAM2e,cAAc,GAAG,KAAKze,KAAL,CAAW2H,MAAlC;AACA,UAAM+W,cAAc,GAAG,KAAK1e,KAAL,CAAW2e,MAAlC;AACA,UAAMyD,WAAW,GAAG,KAAKpiB,KAAL,CAAWoiB,WAA/B;AAEA,QAAIsC,IAAJ;;AACA,QAAI,KAAK3hB,KAAL,CAAW2iB,QAAf,EAAyB;AACrBhB,UAAI,GACA;AAAK,iBAAS,EAAC;AAAf,SACI;AACI,WAAG,EAAE,kBADT;AAEI,WAAG,EAAE,KAAK3hB,KAAL,CAAWob;AAFpB,QADJ,CADJ;AAQH;;AAED,UAAM+H,OAAO,GACT,8BAAC,yCAAD;AAAsB,iBAAW,EAAE,CAAC1T,wBAAW,CAACC,aAAb;AAAnC,OACI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,8BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AAAO,eAAS,EAAC;AAAjB,OACI;AACI,UAAI,EAAC,OADT;AAEI,WAAK,EAAC,MAFV;AAGI,UAAI,EAAC,YAHT;AAII,aAAO,EAAE,KAAK1P,KAAL,CAAWshB,UAJxB;AAKI,cAAQ,EAAE,KAAK8B;AALnB,MADJ,EAQI,8BAAC,oCAAD;AACI,QAAE,EAAC,kCADP;AAEI,oBAAc,EAAC;AAFnB,MARJ,CADJ,EAcI;AAAO,eAAS,EAAC;AAAjB,OACI;AACI,UAAI,EAAC,OADT;AAEI,WAAK,EAAC,OAFV;AAGI,UAAI,EAAC,YAHT;AAII,aAAO,EAAE,CAAC,KAAKpjB,KAAL,CAAWshB,UAJzB;AAKI,cAAQ,EAAE,KAAK8B;AALnB,MADJ,EAQI,8BAAC,oCAAD;AACI,QAAE,EAAC,iCADP;AAEI,oBAAc,EAAC;AAFnB,MARJ,CAdJ,EA2BI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,4BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CA3BJ,CAVJ,CADJ,CADJ;AAkDA,WACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,gCAAD,QACI,8BAAC,gCAAD;AAAM,QAAE,EAAG,IAAG,KAAKnmB,KAAL,CAAWyK,IAAX,CAAgBC,IAAK;AAAnC,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,6BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,EAOI,8BAAC,oCAAD;AACI,QAAE,EAAE+T,cAAc,CAACvV,EADvB;AAEI,oBAAc,EAAEuV,cAAc,CAAC3Q;AAFnC,MAPJ,CADJ,EAaI;AAAK,eAAS,EAAC;AAAf,OACK4W,IADL,EAEI;AAAM,eAAS,EAAC;AAAhB,OACKwB,OADL,EAEI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,2BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,MADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,IAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKnjB,KAAL,CAAW2H,IALtB;AAMI,cAAQ,EAAE,KAAK4P;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,yBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CAFJ,EA6BI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,kCADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,aADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,KAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKvX,KAAL,CAAW4F,WALtB;AAMI,cAAQ,EAAE,KAAK4I;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,gCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CA7BJ,EAwDI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,+BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,UADP;AAEI,UAAI,EAAC,KAFT;AAGI,eAAS,EAAC,KAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKxO,KAAL,CAAW0iB,QALtB;AAMI,cAAQ,EAAE,KAAKW;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,6BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CAxDJ,EAmFI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,8BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,UADP;AAEI,SAAG,EAAC,UAFR;AAGI,UAAI,EAAC,KAHT;AAII,eAAS,EAAC,KAJd;AAKI,eAAS,EAAC,cALd;AAMI,WAAK,EAAE,KAAKrjB,KAAL,CAAWob,QANtB;AAOI,cAAQ,EAAE,KAAKkI;AAPnB,MADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,yBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAVJ,CAVJ,CAnFJ,EA+GI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,mCADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,cADP;AAEI,UAAI,EAAC,GAFT;AAGI,eAAS,EAAC,MAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKtjB,KAAL,CAAWgf,YALtB;AAMI,cAAQ,EAAE,KAAKS;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,iCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CA/GJ,EA0II;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,6BAAD;AACI,UAAI,EAAC,WADT;AAEI,YAAM,EAAE,CAAC,KAAKxiB,KAAL,CAAWoe,WAAZ,EAAyB,KAAKrb,KAAL,CAAWsb,WAApC;AAFZ,MADJ,EAKI,8BAAC,gCAAD;AACI,eAAS,EAAC,qBADd;AAEI,QAAE,EAAG,IAAG,KAAKre,KAAL,CAAWyK,IAAX,CAAgBC,IAAK;AAFjC,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,6BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CALJ,EAcI,8BAAC,iCAAD;AACI,eAAS,EAAC,iBADd;AAEI,UAAI,EAAC,QAFT;AAGI,cAAQ,EAAE,KAAK3H,KAAL,CAAW4W,MAHzB;AAII,kBAAY,EAAEa,yCAAe,CAAC,KAAKxa,KAAL,CAAW+G,OAAX,CAAmBmC,EAApB,EAAwB,KAAKlJ,KAAL,CAAW+G,OAAX,CAAmB+G,cAA3C,CAJjC;AAKI,aAAO,EAAE,KAAKqD,YALlB;AAMI,QAAE,EAAC;AANP,OAQI,8BAAC,oCAAD;AACI,QAAE,EAAEuN,cAAc,CAACxV,EADvB;AAEI,oBAAc,EAAEwV,cAAc,CAAC5Q;AAFnC,MARJ,CAdJ,EA2BKsU,WA3BL,CA1IJ,CAFJ,CAbJ,CADJ;AA2LH;;AAtc6D;;kCAA7CoD,mC,eACE;AAEf;;;AAGA/a,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UALR;;AAOf;;;AAGAR,QAAM,EAAExH,oBAAS,CAACmB,MAAV,CAAiB6G,UAVV;;AAYf;;;AAGAwW,QAAM,EAAExe,oBAAS,CAACmB,MAAV,CAAiB6G,UAfV;;AAiBf;;;AAGApB,SAAO,EAAE5G,oBAAS,CAACmB,MAAV,CAAiB6G,UApBX;;AAsBf;;;AAGAia,aAAW,EAAEjiB,oBAAS,CAAC8H,IAAV,CAAeE,UAzBb;;AA2Bf;;;AAGAiW,aAAW,EAAEje,oBAAS,CAACC,MAAV,CAAiB+H,UA9Bf;;AAgCf;;;AAGA8d,YAAU,EAAE9lB,oBAAS,CAACmB,MAnCP;;AAqCf;;;AAGAgd,QAAM,EAAEne,oBAAS,CAAC+H,IAAV,CAAeC;AAxCR,C;;;;AChBvB;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA,MAAM8W,oBAAM,GAAG;AAAC/V,IAAE,EAAE4P,yBAAC,CAAC,sBAAD,CAAN;AAAgChL,gBAAc,EAAE;AAAhD,CAAf;AACA,MAAMoR,oBAAM,GAAG;AAAChW,IAAE,EAAE4P,yBAAC,CAAC,2BAAD,CAAN;AAAqChL,gBAAc,EAAE;AAArD,CAAf;AACA,MAAMqR,qBAAO,GAAG;AAACjW,IAAE,EAAE4P,yBAAC,CAAC,6BAAD,CAAN;AAAuChL,gBAAc,EAAE;AAAvD,CAAhB;AAEe,MAAMwY,yBAAN,SAA0B1mB,eAAK,CAACC,aAAhC,CAA8C;AAsBzD2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,sDAQL,MAAO6kB,GAAP,IAAe;AACzB,WAAKje,QAAL,CAAc;AAACwX,mBAAW,EAAE;AAAd,OAAd;AAEA,YAAM;AAACvU;AAAD,UAAS,MAAM,KAAK7J,KAAL,CAAWgJ,OAAX,CAAmBud,WAAnB,CAA+B1B,GAA/B,CAArB;;AACA,UAAIhb,IAAJ,EAAU;AACN2G,iDAAc,CAACzO,IAAf,CAAqB,IAAG,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,6CAA4Cb,IAAI,CAACX,EAAG,EAAjG;AACA;AACH;;AAED,UAAI,KAAKlJ,KAAL,CAAWwmB,kBAAX,CAA8B5c,KAAlC,EAAyC;AACrC,aAAKhD,QAAL,CAAc;AAACwX,qBAAW,EAAE,KAAKpe,KAAL,CAAWwmB,kBAAX,CAA8B5c,KAA9B,CAAoCG;AAAlD,SAAd;AACH;AACJ,KApBkB;;AAGf,SAAKhH,KAAL,GAAa;AACTqb,iBAAW,EAAE;AADJ,KAAb;AAGH;;AAgBDte,QAAM,GAAG;AACL,WACI,8BAAC,mCAAD;AACI,UAAI,EAAE,KAAKE,KAAL,CAAWyK,IADrB;AAEI,YAAM,EAAEwU,oBAFZ;AAGI,YAAM,EAAEC,oBAHZ;AAII,aAAO,EAAEC,qBAJb;AAKI,iBAAW,EAAE,EALjB;AAMI,YAAM,EAAE,KAAKoH,WANjB;AAOI,iBAAW,EAAE,KAAKxjB,KAAL,CAAWqb;AAP5B,MADJ;AAWH;;AAxDwD;;6BAAxCkI,yB,eACE;AAEf;;;AAGA7b,MAAI,EAAEtK,oBAAS,CAACmB,MALD;;AAOf;;;AAGAklB,oBAAkB,EAAErmB,oBAAS,CAACmB,MAAV,CAAiB6G,UAVtB;AAYfa,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGAsb,eAAW,EAAEpmB,oBAAS,CAAC+H,IAAV,CAAeC;AALP,GAAhB,EAMNA;AAlBY,C;;ACfvB;AACA;AAEA;AACA;AACA;AAEA;;AAEA,SAASyE,6BAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,SAAO;AACHyjB,sBAAkB,EAAEzjB,KAAK,CAAC2c,QAAN,CAAezc,YAAf,CAA4BsjB;AAD7C,GAAP;AAGH;;AAED,SAASnZ,gCAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxBiZ,sDAAWA;AADa,KAAD,EAExBlZ,QAFwB;AADxB,GAAP;AAKH;;AAEcE,uEAAO,CAACX,6BAAD,EAAkBQ,gCAAlB,CAAP,CAA6CkZ,yBAA7C,CAAf,E;;;;ACvBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,MAAMrH,qBAAM,GAAG;AAAC/V,IAAE,EAAE,mBAAL;AAA0B4E,gBAAc,EAAE;AAA1C,CAAf;AACA,MAAMoR,qBAAM,GAAG;AAAChW,IAAE,EAAE,gCAAL;AAAuC4E,gBAAc,EAAE;AAAvD,CAAf;AACA,MAAMqR,sBAAO,GAAG;AAACjW,IAAE,EAAE,kCAAL;AAAyC4E,gBAAc,EAAE;AAAzD,CAAhB;AAEe,MAAM2Y,2BAAN,SAA2B7mB,eAAK,CAACC,aAAjC,CAA+C;AAqC1D2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,wDAeJ,MAAO6kB,GAAP,IAAe;AAC1B,WAAK6B,MAAL,GAAc7B,GAAd;;AAEA,UAAI,KAAK7kB,KAAL,CAAW4jB,QAAX,CAAoB1a,EAAxB,EAA4B;AACxB2b,WAAG,CAAC3b,EAAJ,GAAS,KAAKlJ,KAAL,CAAW4jB,QAAX,CAAoB1a,EAA7B;AACH;;AAED,UAAI,KAAKlJ,KAAL,CAAW4jB,QAAX,CAAoBna,KAAxB,EAA+B;AAC3Bob,WAAG,CAACpb,KAAJ,GAAY,KAAKzJ,KAAL,CAAW4jB,QAAX,CAAoBna,KAAhC;AACH;;AAED,YAAMwZ,gBAAgB,GAAI,KAAKjjB,KAAL,CAAW4jB,QAAX,CAAoB5C,aAApB,CAAkC3e,MAAlC,KAA6CwiB,GAAG,CAAC7D,aAAJ,CAAkB3e,MAAhE,IACrB,KAAKrC,KAAL,CAAW4jB,QAAX,CAAoB5C,aAApB,CAAkC+B,KAAlC,CAAwC,CAACC,CAAD,EAAI7gB,CAAJ,KAAU6gB,CAAC,KAAK6B,GAAG,CAAC7D,aAAJ,CAAkB7e,CAAlB,CAAxD,CADJ;;AAGA,UAAI8gB,gBAAgB,KAAK,KAAzB,EAAgC;AAC5B,aAAKC,kBAAL;AACH,OAFD,MAEO;AACH,cAAM,KAAKyD,cAAL,EAAN;AACH;AACJ,KAlCkB;;AAAA,8DAoCE,MAAM;AACvB,WAAK/f,QAAL,CAAc;AAACoZ,wBAAgB,EAAE;AAAnB,OAAd;AACH,KAtCkB;;AAAA,iEAwCK,MAAM;AAC1B,WAAKpZ,QAAL,CAAc;AAACoZ,wBAAgB,EAAE;AAAnB,OAAd;AACH,KA1CkB;;AAAA,0DA4CF,YAAY;AACzB,WAAKpZ,QAAL,CAAc;AAACwX,mBAAW,EAAE;AAAd,OAAd;AAEA,YAAM;AAACvU,YAAD;AAAOD;AAAP,UAAgB,MAAM,KAAK5J,KAAL,CAAWgJ,OAAX,CAAmB4d,YAAnB,CAAgC,KAAKF,MAArC,CAA5B;;AAEA,UAAI7c,IAAJ,EAAU;AACN2G,iDAAc,CAACzO,IAAf,CAAqB,IAAG,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,2BAA7C;AACA;AACH;;AAED,WAAK9D,QAAL,CAAc;AAACoZ,wBAAgB,EAAE;AAAnB,OAAd;;AAEA,UAAIpW,KAAJ,EAAW;AACP,aAAKhD,QAAL,CAAc;AAACwX,qBAAW,EAAExU,KAAK,CAACG;AAApB,SAAd;AACH;AACJ,KA3DkB;;AAAA,uDA6DL,MAAM;AAChB,YAAMsZ,aAAa,GACf,8BAAC,oCAAD;AACI,UAAE,EAAC,uBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAOA,YAAMC,YAAY,GACd,8BAAC,oCAAD;AACI,UAAE,EAAC,0BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAOA,YAAMC,cAAc,GAChB,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAOA,aACI,8BAAC,gCAAD;AACI,aAAK,EAAED,YADX;AAEI,eAAO,EAAEC,cAFb;AAGI,yBAAiB,EAAEF,aAHvB;AAII,YAAI,EAAE,KAAKtgB,KAAL,CAAWid,gBAJrB;AAKI,iBAAS,EAAE,KAAK2G,cALpB;AAMI,gBAAQ,EAAE,KAAKnD;AANnB,QADJ;AAUH,KA7FkB;;AAGf,SAAKzgB,KAAL,GAAa;AACTid,sBAAgB,EAAE,KADT;AAET5B,iBAAW,EAAE;AAFJ,KAAb;AAIH;;AAED3S,mBAAiB,GAAG;AAChB,QAAI,KAAKzL,KAAL,CAAWkT,0BAAf,EAA2C;AACvC,WAAKlT,KAAL,CAAWgJ,OAAX,CAAmB6d,WAAnB,CAA+B,KAAK7mB,KAAL,CAAW8mB,UAA1C;AACH;AACJ;;AAkFDhnB,QAAM,GAAG;AACL,QAAI,CAAC,KAAKE,KAAL,CAAW4jB,QAAhB,EAA0B;AACtB,aAAO,8BAAC,iCAAD,OAAP;AACH;;AAED,WACI,8BAAC,mCAAD;AACI,UAAI,EAAE,KAAK5jB,KAAL,CAAWyK,IADrB;AAEI,YAAM,EAAEwU,qBAFZ;AAGI,YAAM,EAAEC,qBAHZ;AAII,aAAO,EAAEC,sBAJb;AAKI,iBAAW,EAAE,KAAKiD,WAAL,EALjB;AAMI,YAAM,EAAE,KAAKwE,YANjB;AAOI,iBAAW,EAAE,KAAK7jB,KAAL,CAAWqb,WAP5B;AAQI,gBAAU,EAAE,KAAKpe,KAAL,CAAW4jB;AAR3B,MADJ;AAYH;;AArJyD;;8BAAzC6C,2B,eACE;AAEf;;;AAGAhc,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UALR;;AAOf;;;AAGA2e,YAAU,EAAE3mB,oBAAS,CAACC,MAAV,CAAiB+H,UAVd;;AAYf;;;AAGAyb,UAAQ,EAAEzjB,oBAAS,CAACmB,MAfL;AAiBf0H,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGA4b,eAAW,EAAE1mB,oBAAS,CAAC+H,IAAV,CAAeC,UALP;;AAOrB;;;AAGAye,gBAAY,EAAEzmB,oBAAS,CAAC+H,IAAV,CAAeC;AAVR,GAAhB,EAWNA,UA5BY;;AA8Bf;;;AAGA+K,4BAA0B,EAAE/S,oBAAS,CAACiI;AAjCvB,C;;ACjBvB;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA,SAASwE,8BAAT,CAAyB7J,KAAzB,EAAgC8O,QAAhC,EAA0C;AACtC,QAAMhF,MAAM,GAAGC,4BAAS,CAAC/J,KAAD,CAAxB;AACA,QAAM+jB,UAAU,GAAI,IAAI/U,eAAJ,CAAoBF,QAAQ,CAACG,QAAT,CAAkBlK,MAAtC,CAAD,CAAgDmK,GAAhD,CAAoD,IAApD,CAAnB;AACA,QAAMiB,0BAA0B,GAAGrG,MAAM,CAACqH,0BAAP,KAAsC,MAAzE;AAEA,SAAO;AACH4S,cADG;AAEHlD,YAAQ,EAAE7gB,KAAK,CAACC,QAAN,CAAeC,YAAf,CAA4BI,SAA5B,CAAsCyjB,UAAtC,CAFP;AAGH5T;AAHG,GAAP;AAKH;;AAED,SAAS9F,iCAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxBuZ,sDADwB;AAExBD,wDAAYA;AAFY,KAAD,EAGxBvZ,QAHwB;AADxB,GAAP;AAMH;;AAEcE,wEAAO,CAACX,8BAAD,EAAkBQ,iCAAlB,CAAP,CAA6CqZ,2BAA7C,CAAf,E;;;;AC/BA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEO,SAASje,+BAAT,CAAuB1E,OAAvB,EAAgCnC,MAAhC,EAAwC;AAC3C,MAAI,CAACA,MAAL,EAAa;AACT,WAAO,IAAP;AACH;;AAED,SAAOmC,OAAO,CAACM,YAAR,CAAqByC,WAArB,GAAmCiC,OAAnC,CAA2CnH,MAA3C,MAAuD,CAAC,CAAxD,IACHmC,OAAO,CAAC6E,WAAR,CAAoB9B,WAApB,GAAkCiC,OAAlC,CAA0CnH,MAA1C,MAAsD,CAAC,CADpD,IAEHmC,OAAO,CAACijB,OAAR,CAAgBlgB,WAAhB,GAA8BiC,OAA9B,CAAsCnH,MAAtC,MAAkD,CAAC,CAFvD;AAGH;AAEc,MAAMqlB,kCAAN,SAA+BpnB,eAAK,CAACC,aAArC,CAAmD;AAAA;AAAA;;AAAA,+DAuC1C8G,CAAD,IAAO;AACtBA,OAAC,CAACgD,cAAF;AAEA,WAAK3J,KAAL,CAAW0gB,YAAX,CAAwB,KAAK1gB,KAAL,CAAW8D,OAAnC;AACH,KA3C6D;;AAAA,2DA6C/C,MAAM;AACjB,WAAK9D,KAAL,CAAW6U,QAAX,CAAoB,KAAK7U,KAAL,CAAW8D,OAA/B;AACH,KA/C6D;AAAA;;AAiD9DhE,QAAM,GAAG;AACL,UAAMgE,OAAO,GAAG,KAAK9D,KAAL,CAAW8D,OAA3B;AACA,UAAMnC,MAAM,GAAG,KAAK3B,KAAL,CAAW2B,MAAX,GAAoB,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBkF,WAAlB,EAApB,GAAsD,EAArE;;AAEA,QAAI,CAAC2B,+BAAa,CAAC1E,OAAD,EAAUnC,MAAV,CAAlB,EAAqC;AACjC,aAAO,IAAP;AACH;;AAED,QAAI+I,IAAJ;;AAEA,QAAI5G,OAAO,CAACM,YAAZ,EAA0B;AACtBsG,UAAI,GAAG5G,OAAO,CAACM,YAAf;AACH,KAFD,MAEO;AACHsG,UAAI,GACA,8BAAC,oCAAD;AACI,UAAE,EAAC,oCADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH;;AAED,QAAI/B,WAAW,GAAG,IAAlB;;AACA,QAAI7E,OAAO,CAAC6E,WAAZ,EAAyB;AACrBA,iBAAW,GACP;AAAK,iBAAS,EAAC;AAAf,SACI;AAAM,iBAAS,EAAC;AAAhB,SACK7E,OAAO,CAAC6E,WADb,CADJ,CADJ;AAOH;;AAED,QAAIoe,OAAO,GAAG,QAAQjjB,OAAO,CAACijB,OAA9B;;AACA,QAAIjjB,OAAO,CAACE,aAAR,IAAyBF,OAAO,CAACmjB,kBAArC,EAAyD;AACrDF,aAAO,IAAI,MAAMjjB,OAAO,CAACmjB,kBAAzB;AACH;;AAED,QAAIje,OAAO,GAAG,IAAd;;AACA,QAAI,KAAKhJ,KAAL,CAAWwb,SAAf,EAA0B;AACtBxS,aAAO,GACH;AAAK,iBAAS,EAAC;AAAf,SACI;AACI,iBAAS,EAAC,yBADd;AAEI,eAAO,EAAE,KAAKyX;AAFlB,SAII,8BAAC,oCAAD;AACI,UAAE,EAAC,mCADP;AAEI,sBAAc,EAAC;AAFnB,QAJJ,CADJ,EAUK,KAVL,EAWI,8BAAC,gCAAD;AAAM,UAAE,EAAG,IAAG,KAAKzgB,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,kCAAiC5G,OAAO,CAACoF,EAAG;AAA/E,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,6BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CAXJ,EAiBK,KAjBL,EAkBI,8BAAC,oCAAD;AACI,iBAAS,EAAE4P,yBAAC,CAAC,mCAAD,CADhB;AAEI,gBAAQ,EAAE,KAAK3C;AAFnB,QAlBJ,CADJ;AAyBH;;AAED,UAAM+Q,YAAY,GAAGpjB,OAAO,CAAC2F,KAA7B;AAEA,WACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACKiB,IADL,CADJ,EAII;AAAM,eAAS,EAAC;AAAhB,OACKqc,OADL,CAJJ,CADJ,EASKpe,WATL,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,8BADP;AAEI,oBAAc,EAAC,gBAFnB;AAGI,YAAM,EAAE;AACJc,aAAK,EAAEyd;AADH;AAHZ,MADJ,EAQI,8BAAC,kBAAD;AACI,WAAK,EAAEA;AADX,MARJ,CADJ,CAVJ,EAwBI;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,eAAS,EAAC;AAAhB,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,iCADP;AAEI,oBAAc,EAAC,gDAFnB;AAGI,YAAM,EAAE;AACJvQ,eAAO,EAAE,KAAK3W,KAAL,CAAW2W,OAAX,CAAmBjO,QADxB;AAEJkT,gBAAQ,EAAE9X,OAAO,CAAC+X;AAFd;AAHZ,MADJ,CADJ,CAxBJ,CADJ,EAsCK7S,OAtCL,CADJ;AA0CH;;AA/J6D;;iCAA7Cge,kC,eACE;AAEf;;;AAGAvc,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UALR;;AAOf;;;AAGArE,SAAO,EAAE3D,oBAAS,CAACmB,MAAV,CAAiB6G,UAVX;;AAYf;;;AAGAuY,cAAY,EAAEvgB,oBAAS,CAAC+H,IAAV,CAAeC,UAfd;;AAiBf;;;AAGA0M,UAAQ,EAAE1U,oBAAS,CAAC+H,IAAV,CAAeC,UApBV;;AAsBf;;;AAGAxG,QAAM,EAAExB,oBAAS,CAACC,MAzBH;;AA2Bf;;;AAGAuW,SAAO,EAAExW,oBAAS,CAACmB,MAAV,CAAiB6G,UA9BX;;AAgCf;;;AAGAqT,WAAS,EAAErb,oBAAS,CAACiI,IAAV,CAAeD;AAnCX,C;;;;ACxBvB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEe,MAAMgf,oCAAN,SAAgCvnB,eAAK,CAACC,aAAtC,CAAoD;AAAA;AAAA;;AAAA,iEA+C1CiE,OAAD,IAAa;AAC7B,WAAK9D,KAAL,CAAWgJ,OAAX,CAAmBoe,iBAAnB,CAAqCtjB,OAAO,CAACoF,EAA7C;AACH,KAjD8D;;AAAA,6DAmD9CpF,OAAD,IAAa;AACzB,WAAK9D,KAAL,CAAWgJ,OAAX,CAAmBqe,aAAnB,CAAiCvjB,OAAO,CAACoF,EAAzC;AACH,KArD8D;AAAA;;AAuD/Doe,gBAAc,CAACpjB,CAAD,EAAIC,CAAJ,EAAO;AACjB,QAAI+gB,KAAK,GAAGhhB,CAAC,CAACE,YAAd;;AACA,QAAI,CAAC8gB,KAAL,EAAY;AACRA,WAAK,GAAG7c,iCAAA,CAAsB,oCAAtB,EAA4D,uBAA5D,CAAR;AACH;;AAED,QAAI8c,KAAK,GAAGhhB,CAAC,CAACC,YAAd;;AACA,QAAI,CAAC+gB,KAAL,EAAY;AACRA,WAAK,GAAG9c,iCAAA,CAAsB,oCAAtB,EAA4D,uBAA5D,CAAR;AACH;;AAED,WAAO6c,KAAK,CAAC7gB,aAAN,CAAoB8gB,KAApB,CAAP;AACH;;AAEDrlB,QAAM,GAAG;AACL,UAAMsD,QAAQ,GAAIzB,MAAD,IAAY,KAAK3B,KAAL,CAAWoD,QAAX,CACzBzB,MADyB,CACjBmC,OAAD,IAAaA,OAAO,CAACC,OAAR,KAAoB,KAAK/D,KAAL,CAAWyK,IAAX,CAAgBvB,EAD/B,EAEzBvH,MAFyB,CAEjBmC,OAAD,IAAa0E,+BAAa,CAAC1E,OAAD,EAAUnC,MAAV,CAFR,EAGzBsC,IAHyB,CAGpB,KAAKqjB,cAHe,EAGCpgB,GAHD,CAGMpD,OAAD,IAAa;AACvC,YAAM0X,SAAS,GAAG,KAAKxb,KAAL,CAAWunB,4BAAX,IAA2C,KAAKvnB,KAAL,CAAWkS,IAAX,CAAgBhJ,EAAhB,KAAuBpF,OAAO,CAACkS,UAA5F;AAEA,aACI,8BAAC,kCAAD;AACI,WAAG,EAAElS,OAAO,CAACoF,EADjB;AAEI,YAAI,EAAE,KAAKlJ,KAAL,CAAWyK,IAFrB;AAGI,eAAO,EAAE3G,OAHb;AAII,oBAAY,EAAE,KAAKsjB,iBAJvB;AAKI,gBAAQ,EAAE,KAAKC,aALnB;AAMI,eAAO,EAAE,KAAKrnB,KAAL,CAAWwc,KAAX,CAAiB1Y,OAAO,CAACkS,UAAzB,KAAwC,EANrD;AAOI,iBAAS,EAAEwF;AAPf,QADJ;AAWH,KAjBwB,CAA7B;;AAmBA,WACI,8BAAC,4BAAD;AACI,YAAM,EACF,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC;AAFnB,QAFR;AAOI,aAAO,EACH,8BAAC,oCAAD;AACI,UAAE,EAAC,wBADP;AAEI,sBAAc,EAAC;AAFnB,QARR;AAaI,aAAO,EAAE,MAAM,KAAKxb,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B,4BAb1C;AAcI,iBAAW,EAAC,iBAdhB;AAeI,eAAS,EACL,8BAAC,oCAAD;AACI,UAAE,EAAC,0BADP;AAEI,sBAAc,EAAC;AAFnB,QAhBR;AAqBI,qBAAe,EACX,8BAAC,6CAAD;AACI,UAAE,EAAC,gCADP;AAEI,sBAAc,EAAC;AAFnB,QAtBR;AA2BI,cAAQ,EACJ,8BAAC,oCAAD;AACI,UAAE,EAAC,yBADP;AAEI,sBAAc,EAAC,gKAFnB;AAGI,cAAM,EAAE;AACJgS,sBAAY,EACR;AACI,kBAAM,EAAC,QADX;AAEI,eAAG,EAAC,qBAFR;AAGI,gBAAI,EAAC;AAHT,aAKI,8BAAC,oCAAD;AACI,cAAE,EAAC,sCADP;AAEI,0BAAc,EAAC;AAFnB,YALJ,CAFA;AAaJ7I,sBAAY,EACR;AACI,kBAAM,EAAC,QADX;AAEI,eAAG,EAAC,qBAFR;AAGI,gBAAI,EAAC;AAHT,aAKI,8BAAC,oCAAD;AACI,cAAE,EAAC,sCADP;AAEI,0BAAc,EAAC;AAFnB,YALJ;AAdA;AAHZ,QA5BR;AA2DI,uBAAiB,EAAExL,iCAAA,CAAsB,2BAAtB,EAAmD,uBAAnD,CA3DvB;AA4DI,aAAO,EAAE,KAAKrI,KAAL,CAAW+G;AA5DxB,OA8DMpF,MAAD,IAAY;AACT,YAAMmF,QAAQ,GAAG1D,QAAQ,CAACzB,MAAD,CAAzB;AACA,aAAO,CAACmF,QAAD,EAAWA,QAAQ,CAACzE,MAAT,GAAkB,CAA7B,CAAP;AACH,KAjEL,CADJ;AAqEH;;AA9J8D;;kCAA9C8kB,oC,eACE;AAEf;;;AAGA1c,MAAI,EAAEtK,oBAAS,CAACmB,MALD;;AAOf;;;AAGA4Q,MAAI,EAAE/R,oBAAS,CAACmB,MAVD;;AAYf;;;AAGAkb,OAAK,EAAErc,oBAAS,CAACmB,MAfF;;AAiBf;;;AAGA8B,UAAQ,EAAEjD,oBAAS,CAACwc,KApBL;;AAsBf;;;AAGA5V,SAAO,EAAE5G,oBAAS,CAACiI,IAzBJ;;AA2Bf;;;AAGAmf,8BAA4B,EAAEpnB,oBAAS,CAACiI,IA9BzB;AAgCfY,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGAmc,qBAAiB,EAAEjnB,oBAAS,CAAC+H,IAAV,CAAeC,UALb;;AAOrB;;;AAGAkf,iBAAa,EAAElnB,oBAAS,CAAC+H,IAAV,CAAeC;AAVT,GAAhB,EAWNA;AA3CY,C;;ACbvB;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASyE,kCAAT,CAAyB7J,KAAzB,EAAgC8O,QAAhC,EAA0C;AACtC,QAAM0V,4BAA4B,GAAG7S,6CAAmB,CAAC3R,KAAD,EAAQ;AAAC0H,QAAI,EAAEoH,QAAQ,CAACpH,IAAT,CAAcvB,EAArB;AAAyBqJ,cAAU,EAAEC,wBAAW,CAACgV;AAAjD,GAAR,CAAxD;AAEA,SAAO;AACHD;AADG,GAAP;AAGH;;AAED,SAASna,qCAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxB8Z,kEADwB;AAExBC,0DAAaA;AAFW,KAAD,EAGxBha,QAHwB;AADxB,GAAP;AAMH;;AAEcE,4EAAO,CAACX,kCAAD,EAAkBQ,qCAAlB,CAAP,CAA6C+Z,oCAA7C,CAAf,E;;;;AC5BA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAMM,YAAY,GAAG,GAArB;AACA,MAAMC,WAAW,GAAG,GAApB;AACA,MAAMC,WAAW,GAAG,GAApB;AAEe,MAAMC,gCAAN,SAA8BhoB,eAAK,CAACC,aAApC,CAAkD;AA4C7D2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,kEAMI,MAAM;AACzB,WAAK4G,QAAL,GAAgB,CAAC7D,KAAD,EAAO8kB,QAAP,KAAkB;AAChC;AACD,OAFD;AAGH,KAVkB;;AAAA,iEAYI/jB,OAAD,IAAa;AAC/B,aAAO;AACH8E,mBAAW,EAAE9E,OAAO,CAACM,YAAR,IAAwB,EADlC;AAEHuE,mBAAW,EAAE7E,OAAO,CAAC6E,WAAR,IAAuB,EAFjC;AAGHoe,eAAO,EAAEjjB,OAAO,CAACijB,OAAR,IAAmB,EAHzB;AAIHpL,WAAG,EAAE7X,OAAO,CAAC6X,GAAR,IAAe,EAJjB;AAKHmM,cAAM,EAAEhkB,OAAO,CAACgkB,MAAR,IAAkBL,YALvB;AAMH/e,gBAAQ,EAAE5E,OAAO,CAAC4E,QAAR,IAAoB,EAN3B;AAOHqf,eAAO,EAAEjkB,OAAO,CAACqa,QAAR,IAAoB,EAP1B;AAQH6J,oBAAY,EAAElkB,OAAO,CAACE,aAAR,IAAyB,KARpC;AASHikB,wBAAgB,EAAEnkB,OAAO,CAACmjB,kBAAR,IAA8B,EAT7C;AAUHiB,+BAAuB,EAAEpkB,OAAO,CAACqkB,kBAAR,IAA8B,EAVpD;AAWHxO,cAAM,EAAE,KAXL;AAYH0E,mBAAW,EAAE,IAZV;AAaH+J,gBAAQ,EAACtkB,OAAO,CAACukB,SAAR,IAAqB;AAb3B,OAAP;AAeH,KA5BkB;;AAAA,0DA8BH1hB,CAAD,IAAO;AAClBA,OAAC,CAACgD,cAAF;;AAEA,UAAI,KAAK5G,KAAL,CAAW4W,MAAf,EAAuB;AACnB;AACH;;AAED,WAAK/S,QAAL,CAAc;AACV+S,cAAM,EAAE,IADE;AAEV0E,mBAAW,EAAE;AAFH,OAAd;AAKA,UAAIkC,WAAW,GAAG,KAAKxd,KAAL,CAAWgkB,OAAX,CAAmBlP,IAAnB,GAA0BhR,WAA1B,EAAlB;;AACA,UAAI0Z,WAAW,CAACzX,OAAZ,CAAoB,GAApB,MAA6B,CAAjC,EAAoC;AAChCyX,mBAAW,GAAGA,WAAW,CAAC+H,MAAZ,CAAmB,CAAnB,CAAd;AACH;;AAED,YAAMxkB,OAAO,GAAG;AACZM,oBAAY,EAAE,KAAKrB,KAAL,CAAW6F,WADb;AAEZD,mBAAW,EAAE,KAAK5F,KAAL,CAAW4F,WAFZ;AAGZoe,eAAO,EAAExG,WAHG;AAIZ5E,WAAG,EAAE,KAAK5Y,KAAL,CAAW4Y,GAAX,CAAe9D,IAAf,EAJO;AAKZiQ,cAAM,EAAE,KAAK/kB,KAAL,CAAW+kB,MALP;AAMZO,iBAAS,EAAE,KAAKtlB,KAAL,CAAWqlB,QANV;AAOZ1f,gBAAQ,EAAE,KAAK3F,KAAL,CAAW2F,QAPT;AAQZyV,gBAAQ,EAAE,KAAKpb,KAAL,CAAWglB,OART;AASZ/jB,qBAAa,EAAE,KAAKjB,KAAL,CAAWilB,YATd;AAUZjkB,eAAO,EAAE,KAAK/D,KAAL,CAAWyK,IAAX,CAAgBvB;AAVb,OAAhB;;AAaA,UAAIpF,OAAO,CAACE,aAAZ,EAA2B;AACvBF,eAAO,CAACqkB,kBAAR,GAA6B,KAAKplB,KAAL,CAAWmlB,uBAAxC;AACApkB,eAAO,CAACmjB,kBAAR,GAA6B,KAAKlkB,KAAL,CAAWklB,gBAAxC;AACH;;AAED,UAAI,CAACnkB,OAAO,CAACijB,OAAb,EAAsB;AAClB,aAAKngB,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV0E,qBAAW,EACP,8BAAC,oCAAD;AACI,cAAE,EAAC,6BADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AAUA;AACH;;AAED,UAAIva,OAAO,CAACijB,OAAR,CAAgBje,OAAhB,CAAwB,GAAxB,MAAiC,CAArC,EAAwC;AACpC,aAAKlC,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV0E,qBAAW,EACP,8BAAC,oCAAD;AACI,cAAE,EAAC,iCADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AAUA;AACH;;AAED,UAAIva,OAAO,CAACijB,OAAR,CAAgBje,OAAhB,CAAwB,GAAxB,MAAiC,CAAC,CAAtC,EAAyC;AACrC,aAAKlC,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV0E,qBAAW,EACP,8BAAC,oCAAD;AACI,cAAE,EAAC,iCADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AASA;AACH;;AAED,UAAIva,OAAO,CAACijB,OAAR,CAAgB1kB,MAAhB,GAAyBqJ,kCAAS,CAAC6c,kBAAnC,IACAzkB,OAAO,CAACijB,OAAR,CAAgB1kB,MAAhB,GAAyBqJ,kCAAS,CAAC8c,kBADvC,EAC2D;AACvD,aAAK5hB,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV0E,qBAAW,EACP,8BAAC,oCAAD;AACI,cAAE,EAAC,kCADP;AAEI,0BAAc,EAAC,gEAFnB;AAGI,kBAAM,EAAE;AACJoK,iBAAG,EAAE/c,kCAAS,CAAC6c,kBADX;AAEJG,iBAAG,EAAEhd,kCAAS,CAAC8c;AAFX;AAHZ;AAHM,SAAd;AAcA;AACH;;AAED,UAAI,CAAC1kB,OAAO,CAAC6X,GAAb,EAAkB;AACd,aAAK/U,QAAL,CAAc;AACV+S,gBAAM,EAAE,KADE;AAEV0E,qBAAW,EACP,8BAAC,oCAAD;AACI,cAAE,EAAC,yBADP;AAEI,0BAAc,EAAC;AAFnB;AAHM,SAAd;AAUA;AACH;;AAED,WAAKre,KAAL,CAAWse,MAAX,CAAkBxa,OAAlB,EAA2BgI,IAA3B,CAAgC,MAAM,KAAKlF,QAAL,CAAc;AAAC+S,cAAM,EAAE;AAAT,OAAd,CAAtC;AACH,KA5IkB;;AAAA,+DA8IEhT,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AACVgC,mBAAW,EAAEjC,CAAC,CAACzE,MAAF,CAASzB;AADZ,OAAd;AAGH,KAlJkB;;AAAA,+DAoJEkG,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AACV+B,mBAAW,EAAEhC,CAAC,CAACzE,MAAF,CAASzB;AADZ,OAAd;AAGH,KAxJkB;;AAAA,2DA0JFkG,CAAD,IAAO;AACnB,WAAKC,QAAL,CAAc;AACVmgB,eAAO,EAAEpgB,CAAC,CAACzE,MAAF,CAASzB;AADR,OAAd;AAGH,KA9JkB;;AAAA,uDAgKNkG,CAAD,IAAO;AACf,WAAKC,QAAL,CAAc;AACV+U,WAAG,EAAEhV,CAAC,CAACzE,MAAF,CAASzB;AADJ,OAAd;AAGH,KApKkB;;AAAA,0DAsKHkG,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AACVkhB,cAAM,EAAEnhB,CAAC,CAACzE,MAAF,CAASzB;AADP,OAAd;AAGH,KA1KkB;;AAAA,4DA4KDkG,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACVwhB,gBAAQ,EAAEzhB,CAAC,CAACzE,MAAF,CAASzB;AADT,OAAd;AAGH,KAhLkB;;AAAA,4DAkLDkG,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACV8B,gBAAQ,EAAE/B,CAAC,CAACzE,MAAF,CAASzB;AADT,OAAd;AAGH,KAtLkB;;AAAA,2DAwLFkG,CAAD,IAAO;AACnB,WAAKC,QAAL,CAAc;AACVmhB,eAAO,EAAEphB,CAAC,CAACzE,MAAF,CAASzB;AADR,OAAd;AAGH,KA5LkB;;AAAA,gEA8LGkG,CAAD,IAAO;AACxB,WAAKC,QAAL,CAAc;AACVohB,oBAAY,EAAErhB,CAAC,CAACzE,MAAF,CAASmM;AADb,OAAd;AAGH,KAlMkB;;AAAA,oEAoMO1H,CAAD,IAAO;AAC5B,WAAKC,QAAL,CAAc;AACVqhB,wBAAgB,EAAEthB,CAAC,CAACzE,MAAF,CAASzB;AADjB,OAAd;AAGH,KAxMkB;;AAAA,2EA0MckG,CAAD,IAAO;AACnC,WAAKC,QAAL,CAAc;AACVshB,+BAAuB,EAAEvhB,CAAC,CAACzE,MAAF,CAASzB;AADxB,OAAd;AAGH,KA9MkB;;AAGf,SAAKsC,KAAL,GAAa,KAAK4lB,mBAAL,CAAyB,KAAK3oB,KAAL,CAAW4oB,cAAX,IAA6B,EAAtD,CAAb;AACH;;AA4MD9oB,QAAM,GAAG;AACL,QAAImoB,gBAAgB,GAAG,IAAvB;AACA,QAAIC,uBAAuB,GAAG,IAA9B;;AAEA,QAAI,KAAKnlB,KAAL,CAAWilB,YAAf,EAA6B;AACzBC,sBAAgB,GACZ;AAAK,iBAAS,EAAC;AAAf,SACI;AACI,iBAAS,EAAC,wBADd;AAEI,eAAO,EAAC;AAFZ,SAII,8BAAC,oCAAD;AACI,UAAE,EAAC,8BADP;AAEI,sBAAc,EAAC;AAFnB,QAJJ,CADJ,EAUI;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,kCAAD;AACI,UAAE,EAAC,kBADP;AAEI,YAAI,EAAC,MAFT;AAGI,iBAAS,EAAC,MAHd;AAII,iBAAS,EAAC,cAJd;AAKI,aAAK,EAAE,KAAKllB,KAAL,CAAWklB,gBALtB;AAMI,gBAAQ,EAAE,KAAKY,sBANnB;AAOI,mBAAW,EAAE;AAAC3f,YAAE,EAAE4P,yBAAC,CAAC,0CAAD,CAAN;AAAoDhL,wBAAc,EAAE;AAApE;AAPjB,QADJ,EAUI;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,mCADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CAVJ,CAVJ,CADJ;AA+BAoa,6BAAuB,GACnB;AAAK,iBAAS,EAAC;AAAf,SACI;AACI,iBAAS,EAAC,wBADd;AAEI,eAAO,EAAC;AAFZ,SAII,8BAAC,oCAAD;AACI,UAAE,EAAC,qCADP;AAEI,sBAAc,EAAC;AAFnB,QAJJ,CADJ,EAUI;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,kCAAD;AACI,UAAE,EAAC,aADP;AAEI,YAAI,EAAC,MAFT;AAGI,iBAAS,EAAC,KAHd;AAII,iBAAS,EAAC,cAJd;AAKI,aAAK,EAAE,KAAKnlB,KAAL,CAAWmlB,uBALtB;AAMI,gBAAQ,EAAE,KAAKY,6BANnB;AAOI,mBAAW,EAAE;AAAC5f,YAAE,EAAE4P,yBAAC,CAAC,iDAAD,CAAN;AAA2DhL,wBAAc,EAAE;AAA3E;AAPjB,QADJ,EAUI;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,0CADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CAVJ,CAVJ,CADJ;AA8BH;;AAED,WACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,gCAAD,QACI,8BAAC,gCAAD;AAAM,QAAE,EAAE,MAAM,KAAK9N,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B;AAAvC,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,0BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,EAOI,8BAAC,oCAAD;AACI,QAAE,EAAE,KAAK1K,KAAL,CAAW2H,MAAX,CAAkBuB,EAD1B;AAEI,oBAAc,EAAE,KAAKlJ,KAAL,CAAW2H,MAAX,CAAkBmG;AAFtC,MAPJ,CADJ,EAaI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,iBADd;AAEI,cAAQ,EAAE,KAAKqD;AAFnB,OAII;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,yBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,aADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,IAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKpO,KAAL,CAAW6F,WALtB;AAMI,cAAQ,EAAE,KAAK0I;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,8BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CAJJ,EA+BI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,yBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,aADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,KAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKvO,KAAL,CAAW4F,WALtB;AAMI,cAAQ,EAAE,KAAK4I;AANnB,MADJ,EASI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,8BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CATJ,CAVJ,CA/BJ,EA0DI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,qBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,kCAAD;AACI,QAAE,EAAC,SADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAE7F,kCAAS,CAAC8c,kBAHzB;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKzlB,KAAL,CAAWgkB,OALtB;AAMI,cAAQ,EAAE,KAAKgC,aANnB;AAOI,iBAAW,EAAE;AAAC7f,UAAE,EAAE4P,yBAAC,CAAC,iCAAD,CAAN;AAA2ChL,sBAAc,EAAE;AAA3D;AAPjB,MADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,0BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAVJ,EAgBI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,kCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAhBJ,EAsBI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,kCADP;AAEI,oBAAc,EAAC,kBAFnB;AAGI,YAAM,EAAE;AACJ6E,YAAI,EACA;AACI,cAAI,EAAC,sFADT;AAEI,gBAAM,EAAC,QAFX;AAGI,aAAG,EAAC;AAHR,WAKI,8BAAC,oCAAD;AACI,YAAE,EAAC,0CADP;AAEI,wBAAc,EAAC;AAFnB,UALJ;AAFA;AAHZ,MADJ,CAtBJ,CAVJ,CA1DJ,EAgHI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,iBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,kCAAD;AACI,QAAE,EAAC,KADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,MAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAK5P,KAAL,CAAW4Y,GALtB;AAMI,cAAQ,EAAE,KAAKqN,SANnB;AAOI,iBAAW,EAAE;AAAC9f,UAAE,EAAE4P,yBAAC,CAAC,6BAAD,CAAN;AAAuChL,sBAAc,EAAE;AAAvD;AAPjB,MADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,sBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAVJ,CAVJ,CAhHJ,EA4II;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,sBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,QADP;AAEI,eAAS,EAAC,cAFd;AAGI,WAAK,EAAE,KAAK/K,KAAL,CAAWqlB,QAHtB;AAII,cAAQ,EAAE,KAAKa;AAJnB,OAMI;AAAQ,WAAK,EAAC;AAAd,cANJ,EASI;AAAQ,WAAK,EAAC;AAAd,kBATJ,CADJ,CAVJ,CA5IJ,EAsKI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,oBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,QADP;AAEI,eAAS,EAAC,cAFd;AAGI,WAAK,EAAE,KAAKlmB,KAAL,CAAW+kB,MAHtB;AAII,cAAQ,EAAE,KAAKoB;AAJnB,OAMI;AAAQ,WAAK,EAAEzB;AAAf,OACKpf,iCAAA,CAAsB,yBAAtB,EAAiD,MAAjD,CADL,CANJ,EASI;AAAQ,WAAK,EAAEqf;AAAf,OACKrf,iCAAA,CAAsB,wBAAtB,EAAgD,KAAhD,CADL,CATJ,EAYI;AAAQ,WAAK,EAAEsf;AAAf,OACKtf,iCAAA,CAAsB,wBAAtB,EAAgD,KAAhD,CADL,CAZJ,CADJ,EAiBI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,yBADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAjBJ,CAVJ,CAtKJ,EAyMI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,sBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,kCAAD;AACI,QAAE,EAAC,UADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,IAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAKtF,KAAL,CAAW2F,QALtB;AAMI,cAAQ,EAAE,KAAK0I,cANnB;AAOI,iBAAW,EAAE;AAAClI,UAAE,EAAE4P,yBAAC,CAAC,kCAAD,CAAN;AAA4ChL,sBAAc,EAAE;AAA5D;AAPjB,MADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,2BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAVJ,CAVJ,CAzMJ,EAqOI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,qBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,kCAAD;AACI,QAAE,EAAC,SADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,MAHd;AAII,eAAS,EAAC,cAJd;AAKI,WAAK,EAAE,KAAK/K,KAAL,CAAWglB,OALtB;AAMI,cAAQ,EAAE,KAAK1B,aANnB;AAOI,iBAAW,EAAE;AAACnd,UAAE,EAAE4P,yBAAC,CAAC,iCAAD,CAAN;AAA2ChL,sBAAc,EAAE;AAA3D;AAPjB,MADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,0BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAVJ,CAVJ,CArOJ,EAiQI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,wBADd;AAEI,aAAO,EAAC;AAFZ,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,0BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,cADP;AAEI,UAAI,EAAC,UAFT;AAGI,aAAO,EAAE,KAAK/K,KAAL,CAAWilB,YAHxB;AAII,cAAQ,EAAE,KAAKmB;AAJnB,MADJ,EAOI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,+BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAPJ,CAVJ,CAjQJ,EA0RKlB,gBA1RL,EA2RKC,uBA3RL,EA4RI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,6BAAD;AACI,UAAI,EAAC,WADT;AAEI,YAAM,EAAE,CAAC,KAAKloB,KAAL,CAAWoe,WAAZ,EAAyB,KAAKrb,KAAL,CAAWsb,WAApC;AAFZ,MADJ,EAKI,8BAAC,gCAAD;AACI,eAAS,EAAC,qBADd;AAEI,QAAE,EAAE,MAAM,KAAKre,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B;AAFrC,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,oBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CALJ,EAcI,8BAAC,iCAAD;AACI,eAAS,EAAC,iBADd;AAEI,UAAI,EAAC,QAFT;AAGI,cAAQ,EAAE,KAAK3H,KAAL,CAAW4W,MAHzB;AAII,kBAAY,EAAEtR,iCAAA,CAAsB,KAAKrI,KAAL,CAAW+G,OAAX,CAAmBmC,EAAzC,EAA6C,KAAKlJ,KAAL,CAAW+G,OAAX,CAAmB+G,cAAhE,CAJlB;AAKI,aAAO,EAAE,KAAKqD,YALlB;AAMI,QAAE,EAAC;AANP,OAQI,8BAAC,oCAAD;AACI,QAAE,EAAE,KAAKnR,KAAL,CAAW2e,MAAX,CAAkBzV,EAD1B;AAEI,oBAAc,EAAE,KAAKlJ,KAAL,CAAW2e,MAAX,CAAkB7Q;AAFtC,MARJ,CAdJ,EA2BK,KAAK9N,KAAL,CAAWoiB,WA3BhB,CA5RJ,CADJ,CAbJ,CADJ;AA4UH;;AA5oB4D;;gCAA5CwF,gC,eACE;AAEf;;;AAGAnd,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UALR;;AAOf;;;AAGAR,QAAM,EAAExH,oBAAS,CAACmB,MAAV,CAAiB6G,UAVV;;AAYf;;;AAGAwW,QAAM,EAAExe,oBAAS,CAACmB,MAAV,CAAiB6G,UAfV;;AAiBf;;;AAGApB,SAAO,EAAE5G,oBAAS,CAACmB,MAAV,CAAiB6G,UApBX;;AAsBf;;;AAGAia,aAAW,EAAEjiB,oBAAS,CAAC8H,IAAV,CAAeE,UAzBb;;AA2Bf;;;AAGAiW,aAAW,EAAEje,oBAAS,CAACC,MAAV,CAAiB+H,UA9Bf;;AAgCf;;;AAGAygB,gBAAc,EAAEzoB,oBAAS,CAACmB,MAnCX;;AAqCf;;;AAGAgd,QAAM,EAAEne,oBAAS,CAAC+H,IAAV,CAAeC;AAxCR,C;;;;ACtBvB;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA,MAAM8W,kBAAM,GAAG;AAAC/V,IAAE,EAAE4P,yBAAC,CAAC,kBAAD,CAAN;AAA4BhL,gBAAc,EAAE;AAA5C,CAAf;AACA,MAAMoR,kBAAM,GAAG;AAAChW,IAAE,EAAE4P,yBAAC,CAAC,kBAAD,CAAN;AAA4BhL,gBAAc,EAAE;AAA5C,CAAf;AACA,MAAMqR,mBAAO,GAAG;AAACjW,IAAE,EAAE4P,yBAAC,CAAC,oBAAD,CAAN;AAA8BhL,gBAAc,EAAE;AAA9C,CAAhB;AAEe,MAAMsb,sBAAN,SAAyBxpB,eAAK,CAACC,aAA/B,CAA6C;AAiBxD2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,mDAQN,MAAO8D,OAAP,IAAmB;AAC5B,WAAK8C,QAAL,CAAc;AAACwX,mBAAW,EAAE;AAAd,OAAd;AAEA,YAAM;AAACvU,YAAD;AAAOD;AAAP,UAAgB,MAAM,KAAK5J,KAAL,CAAWgJ,OAAX,CAAmBqgB,UAAnB,CAA8BvlB,OAA9B,CAA5B;;AACA,UAAI+F,IAAJ,EAAU;AACN2G,iDAAc,CAACzO,IAAf,CAAqB,IAAG,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,mDAAkDb,IAAI,CAACX,EAAG,EAAvG;AACA;AACH;;AAED,UAAIU,KAAJ,EAAW;AACP,aAAKhD,QAAL,CAAc;AAACwX,qBAAW,EAAExU,KAAK,CAACG;AAApB,SAAd;AACH;AACJ,KApBkB;;AAGf,SAAKhH,KAAL,GAAa;AACTqb,iBAAW,EAAE;AADJ,KAAb;AAGH;;AAgBDte,QAAM,GAAG;AACL,WACI,8BAAC,gCAAD;AACI,UAAI,EAAE,KAAKE,KAAL,CAAWyK,IADrB;AAEI,YAAM,EAAEwU,kBAFZ;AAGI,YAAM,EAAEC,kBAHZ;AAII,aAAO,EAAEC,mBAJb;AAKI,iBAAW,EAAE,EALjB;AAMI,YAAM,EAAE,KAAKkK,UANjB;AAOI,iBAAW,EAAE,KAAKtmB,KAAL,CAAWqb;AAP5B,MADJ;AAWH;;AAnDuD;;2BAAvCgL,sB,eACE;AAEf;;;AAGA3e,MAAI,EAAEtK,oBAAS,CAACmB,MALD;AAOf0H,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGAoe,cAAU,EAAElpB,oBAAS,CAAC+H,IAAV,CAAeC;AALN,GAAhB,EAMNA;AAbY,C;;ACfvB;AACA;AAEA;AACA;AACA;AAEA;;AAEA,SAASiF,8BAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxB+b,oDAAUA;AADc,KAAD,EAExBhc,QAFwB;AADxB,GAAP;AAKH;;AAEcE,qEAAO,CAAC,IAAD,EAAOH,8BAAP,CAAP,CAAkCgc,sBAAlC,CAAf,E;;;;ACjBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,MAAMnK,mBAAM,GAAG;AAAC/V,IAAE,EAAE4P,yBAAC,CAAC,mBAAD,CAAN;AAA6BhL,gBAAc,EAAE;AAA7C,CAAf;AACA,MAAMoR,mBAAM,GAAG;AAAChW,IAAE,EAAE4P,yBAAC,CAAC,qBAAD,CAAN;AAA+BhL,gBAAc,EAAE;AAA/C,CAAf;AACA,MAAMqR,oBAAO,GAAG;AAACjW,IAAE,EAAE4P,yBAAC,CAAC,uBAAD,CAAN;AAAiChL,gBAAc,EAAE;AAAjD,CAAhB;AAEe,MAAMwb,wBAAN,SAA0B1pB,eAAK,CAACC,aAAhC,CAA8C;AAqCzD2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,qDAsBL,MAAO8D,OAAP,IAAmB;AAC7B,WAAKylB,UAAL,GAAkBzlB,OAAlB;;AAEA,UAAI,KAAKf,KAAL,CAAWymB,eAAX,CAA2BtgB,EAA/B,EAAmC;AAC/BpF,eAAO,CAACoF,EAAR,GAAa,KAAKnG,KAAL,CAAWymB,eAAX,CAA2BtgB,EAAxC;AACH;;AAED,UAAI,KAAKnG,KAAL,CAAWymB,eAAX,CAA2B7N,GAA3B,KAAmC,KAAK4N,UAAL,CAAgB5N,GAAnD,IACA,KAAK5Y,KAAL,CAAWymB,eAAX,CAA2BzC,OAA3B,KAAuC,KAAKwC,UAAL,CAAgBxC,OADvD,IAEA,KAAKhkB,KAAL,CAAWymB,eAAX,CAA2B1B,MAA3B,KAAsC,KAAKyB,UAAL,CAAgBzB,MAF1D,EAEkE;AAC9D,aAAK5E,kBAAL;AACH,OAJD,MAIO;AACH,cAAM,KAAKuG,aAAL,EAAN;AACH;AACJ,KApCkB;;AAAA,4DAsCE,MAAM;AACvB,WAAK7iB,QAAL,CAAc;AAACoZ,wBAAgB,EAAE;AAAnB,OAAd;AACH,KAxCkB;;AAAA,+DA0CK,MAAM;AAC1B,WAAKpZ,QAAL,CAAc;AAACoZ,wBAAgB,EAAE;AAAnB,OAAd;AACH,KA5CkB;;AAAA,uDA8CH,YAAY;AACxB,WAAKpZ,QAAL,CAAc;AAACwX,mBAAW,EAAE;AAAd,OAAd;AAEA,YAAM;AAACvU,YAAD;AAAOD;AAAP,UAAgB,MAAM,KAAK5J,KAAL,CAAWgJ,OAAX,CAAmB0gB,WAAnB,CAA+B,KAAKH,UAApC,CAA5B;;AAEA,UAAI1f,IAAJ,EAAU;AACN2G,iDAAc,CAACzO,IAAf,CAAqB,IAAG,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBC,IAAK,wBAA7C;AACA;AACH;;AAED,WAAK9D,QAAL,CAAc;AAACoZ,wBAAgB,EAAE;AAAnB,OAAd;;AAEA,UAAIpW,KAAJ,EAAW;AACP,aAAKhD,QAAL,CAAc;AAACwX,qBAAW,EAAExU,KAAK,CAACG;AAApB,SAAd;AACH;AACJ,KA7DkB;;AAAA,qDA+DL,MAAM;AAChB,YAAMsZ,aAAa,GACf,8BAAC,oCAAD;AACI,UAAE,EAAC,uBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAOA,YAAMC,YAAY,GACd,8BAAC,oCAAD;AACI,UAAE,EAAC,wBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAOA,YAAMC,cAAc,GAChB,8BAAC,oCAAD;AACI,UAAE,EAAC,yBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAOA,aACI,8BAAC,gCAAD;AACI,aAAK,EAAED,YADX;AAEI,eAAO,EAAEC,cAFb;AAGI,yBAAiB,EAAEF,aAHvB;AAII,YAAI,EAAE,KAAKtgB,KAAL,CAAWid,gBAJrB;AAKI,iBAAS,EAAE,KAAKyJ,aALpB;AAMI,gBAAQ,EAAE,KAAKjG;AANnB,QADJ;AAUH,KA/FkB;;AAGf,SAAKzgB,KAAL,GAAa;AACTymB,qBAAe,EAAE,IADR;AAETxJ,sBAAgB,EAAE,KAFT;AAGT5B,iBAAW,EAAE;AAHJ,KAAb;AAKH;;AAED3S,mBAAiB,GAAG;AAChB,QAAI,KAAKzL,KAAL,CAAWiT,cAAf,EAA+B;AAC3B,WAAKjT,KAAL,CAAWgJ,OAAX,CAAmB2gB,qBAAnB,CAAyC,KAAK3pB,KAAL,CAAWyK,IAAX,CAAgBvB,EAAzD,EAA6D4C,IAA7D,CACI,MAAM;AACF,aAAKlF,QAAL,CAAc;AACV4iB,yBAAe,EAAElpB,MAAM,CAACqD,MAAP,CAAc,KAAK3D,KAAL,CAAWoD,QAAzB,EAAmCzB,MAAnC,CAA2CmC,OAAD,IAAaA,OAAO,CAACoF,EAAR,KAAe,KAAKlJ,KAAL,CAAW4pB,SAAjF,EAA4F,CAA5F;AADP,SAAd;AAGH,OALL;AAOH;AACJ;;AA6ED9pB,QAAM,GAAG;AACL,QAAI,CAAC,KAAKiD,KAAL,CAAWymB,eAAhB,EAAiC;AAC7B,aAAO,8BAAC,iCAAD,OAAP;AACH;;AAED,WACI,8BAAC,gCAAD;AACI,UAAI,EAAE,KAAKxpB,KAAL,CAAWyK,IADrB;AAEI,YAAM,EAAEwU,mBAFZ;AAGI,YAAM,EAAEC,mBAHZ;AAII,aAAO,EAAEC,oBAJb;AAKI,iBAAW,EAAE,KAAKiD,WAAL,EALjB;AAMI,YAAM,EAAE,KAAKsH,WANjB;AAOI,iBAAW,EAAE,KAAK3mB,KAAL,CAAWqb,WAP5B;AAQI,oBAAc,EAAE,KAAKrb,KAAL,CAAWymB;AAR/B,MADJ;AAYH;;AAvJwD;;4BAAxCF,wB,eACE;AAEf;;;AAGA7e,MAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UALR;;AAOf;;;AAGAyhB,WAAS,EAAEzpB,oBAAS,CAACC,MAAV,CAAiB+H,UAVb;;AAYf;;;AAGA/E,UAAQ,EAAEjD,oBAAS,CAACmB,MAfL;AAiBf0H,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGA0e,yBAAqB,EAAExpB,oBAAS,CAAC+H,IAAV,CAAeC,UALjB;;AAOrB;;;AAGAuhB,eAAW,EAAEvpB,oBAAS,CAAC+H,IAAV,CAAeC;AAVP,GAAhB,EAWNA,UA5BY;;AA8Bf;;;AAGA8K,gBAAc,EAAE9S,oBAAS,CAACiI;AAjCX,C;;AClBvB;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASwE,4BAAT,CAAyB7J,KAAzB,EAAgC8O,QAAhC,EAA0C;AACtC,QAAMhF,MAAM,GAAGC,4BAAS,CAAC/J,KAAD,CAAxB;AACA,QAAM6mB,SAAS,GAAI,IAAI7X,eAAJ,CAAoBF,QAAQ,CAACG,QAAT,CAAkBlK,MAAtC,CAAD,CAAgDmK,GAAhD,CAAoD,IAApD,CAAlB;AACA,QAAMgB,cAAc,GAAGpG,MAAM,CAACoH,cAAP,KAA0B,MAAjD;AAEA,SAAO;AACH2V,aADG;AAEHxmB,YAAQ,EAAExC,4CAAW,CAACmC,KAAD,CAFlB;AAGHkQ;AAHG,GAAP;AAKH;;AAED,SAAS7F,+BAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxBqc,0EADwB;AAExBD,sDAAWA;AAFa,KAAD,EAGxBrc,QAHwB;AADxB,GAAP;AAMH;;AAEcE,sEAAO,CAACX,4BAAD,EAAkBQ,+BAAlB,CAAP,CAA6Ckc,wBAA7C,CAAf,E;;;;AChCA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEe,MAAMO,sCAAN,SAAiCjqB,eAAK,CAAC2G,SAAvC,CAAiD;AAC5D,aAAWkH,SAAX,GAAuB;AACnB,WAAO;AACHhD,UAAI,EAAEtK,oBAAS,CAACmB,MADb;AAEH0Q,cAAQ,EAAE7R,oBAAS,CAACmB,MAFjB;AAGH8B,cAAQ,EAAEjD,oBAAS,CAACmB,MAHjB;AAIH+B,eAAS,EAAElD,oBAAS,CAACmB,MAJlB;AAKH4B,mBAAa,EAAE/C,oBAAS,CAACmB,MALtB;AAMH6B,mBAAa,EAAEhD,oBAAS,CAACmB,MANtB;AAOHiD,UAAI,EAAEpE,oBAAS,CAACmB;AAPb,KAAP;AASH;;AAEDkF,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,+DAgBD2G,CAAD,IAAO;AACpB,UAAIA,CAAC,CAACnE,GAAF,KAAU,OAAd,EAAuB;AACnBgO,iDAAc,CAACzO,IAAf,CAAoB,MAAM,KAAK/B,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B,gBAA7B,GAAgD,KAAK3H,KAAL,CAAWkN,IAA/E;AACH;AACJ,KApBkB;;AAEf,SAAKlN,KAAL,GAAa;AACTkN,UAAI,EAAG,IAAI8B,eAAJ,CAAoB,KAAK/R,KAAL,CAAWgS,QAAX,CAAoBlK,MAAxC,CAAD,CAAkDmK,GAAlD,CAAsD,MAAtD,CADG;AAET/I,QAAE,EAAG,IAAI6I,eAAJ,CAAoB,KAAK/R,KAAL,CAAWgS,QAAX,CAAoBlK,MAAxC,CAAD,CAAkDmK,GAAlD,CAAsD,IAAtD;AAFK,KAAb;AAIH;;AAEDxG,mBAAiB,GAAG;AAChBqe,UAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoC,KAAKC,cAAzC;AACH;;AAEDC,sBAAoB,GAAG;AACnBH,UAAM,CAACI,mBAAP,CAA2B,UAA3B,EAAuC,KAAKF,cAA5C;AACH;;AAQDlqB,QAAM,GAAG;AACL,QAAIqqB,UAAU,GAAG,IAAjB;AACA,QAAIpiB,QAAQ,GAAG,IAAf;AACA,QAAIqiB,SAAS,GAAG,IAAhB;AAEA,UAAMtmB,OAAO,GAAG,KAAK9D,KAAL,CAAWoD,QAAX,CAAoB,KAAKL,KAAL,CAAWmG,EAA/B,CAAhB;AACA,UAAMmhB,YAAY,GAAG,KAAKrqB,KAAL,CAAWkD,aAAX,CAAyB,KAAKH,KAAL,CAAWmG,EAApC,CAArB;AACA,UAAMohB,YAAY,GAAG,KAAKtqB,KAAL,CAAWmD,aAAX,CAAyB,KAAKJ,KAAL,CAAWmG,EAApC,CAArB;AACA,UAAM0a,QAAQ,GAAG,KAAK5jB,KAAL,CAAWqD,SAAX,CAAqB,KAAKN,KAAL,CAAWmG,EAAhC,CAAjB;AACA,UAAM9D,GAAG,GAAG,KAAKpF,KAAL,CAAWuE,IAAX,CAAgB,KAAKxB,KAAL,CAAWmG,EAA3B,CAAZ;;AAEA,QAAI,KAAKnG,KAAL,CAAWkN,IAAX,KAAoBvE,oCAAS,CAACC,YAAV,CAAuB4e,OAA3C,IAAsDzmB,OAA1D,EAAmE;AAC/D,YAAMojB,YAAY,GAAGpjB,OAAO,CAAC2F,KAA7B;AAEA0gB,gBAAU,GACN,8BAAC,oCAAD;AACI,UAAE,EAAE,2BADR;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMApiB,cAAQ,GACJ,yCACI,8BAAC,6CAAD;AACI,UAAE,EAAC,sBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CADJ;AAQAqiB,eAAS,GACL;AAAG,iBAAS,EAAC;AAAb,SACI,8BAAC,6CAAD;AACI,UAAE,EAAC,mBADP;AAEI,sBAAc,EAAC,oBAFnB;AAGI,cAAM,EAAE;AACJ3gB,eAAK,EAAEyd;AADH;AAHZ,QADJ,EAQI,8BAAC,kBAAD;AACI,aAAK,EAAEA;AADX,QARJ,CADJ;AAcH,KA/BD,MA+BO,IAAI,KAAKnkB,KAAL,CAAWkN,IAAX,KAAoBvE,oCAAS,CAACC,YAAV,CAAuB6e,gBAA3C,IAA+DH,YAAnE,EAAiF;AACpF,YAAMI,iBAAiB,GAAG/O,iCAAU,KAAK,SAAf,GAA2B2O,YAAY,CAACnhB,EAAlE;AAEAihB,gBAAU,GACN,8BAAC,oCAAD;AACI,UAAE,EAAE,oCADR;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMApiB,cAAQ,GACJ,yCACI,8BAAC,6CAAD;AACI,UAAE,EAAC,+BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CADJ;AAQAqiB,eAAS,GACL;AAAG,iBAAS,EAAC;AAAb,SACI,8BAAC,6CAAD;AACI,UAAE,EAAC,0BADP;AAEI,sBAAc,EAAC,gBAFnB;AAGI,cAAM,EAAE;AACJzO,aAAG,EAAE8O;AADD;AAHZ,QADJ,EAQI,8BAAC,kBAAD;AACI,iBAAS,EAAC,iCADd;AAEI,sBAAc,EAAC,oBAFnB;AAGI,aAAK,EAAEA;AAHX,QARJ,CADJ;AAgBH,KAjCM,MAiCA,IAAI,KAAK1nB,KAAL,CAAWkN,IAAX,KAAoBvE,oCAAS,CAACC,YAAV,CAAuB+e,gBAA3C,IAA+DJ,YAAnE,EAAiF;AACpF,YAAMK,iBAAiB,GAAGL,YAAY,CAAC7gB,KAAvC;AAEA0gB,gBAAU,GACN,8BAAC,oCAAD;AACI,UAAE,EAAE,oCADR;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMApiB,cAAQ,GACJ,yCACI,8BAAC,6CAAD;AACI,UAAE,EAAC,+BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CADJ;AAQAqiB,eAAS,GACL;AAAG,iBAAS,EAAC;AAAb,SACI,8BAAC,6CAAD;AACI,UAAE,EAAC,4BADP;AAEI,sBAAc,EAAC,oBAFnB;AAGI,cAAM,EAAE;AACJ3gB,eAAK,EAAEkhB;AADH;AAHZ,QADJ,EAQI,8BAAC,kBAAD;AACI,aAAK,EAAEA;AADX,QARJ,CADJ;AAcH,KA/BM,MA+BA,IAAI,KAAK5nB,KAAL,CAAWkN,IAAX,KAAoBvE,oCAAS,CAACC,YAAV,CAAuBif,SAA3C,IAAwDhH,QAA5D,EAAsE;AACzE,YAAMiH,aAAa,GAAGjH,QAAQ,CAAC1a,EAA/B;AACA,YAAM4hB,cAAc,GAAGlH,QAAQ,CAACG,aAAhC;AAEAoG,gBAAU,GACN,8BAAC,oCAAD;AACI,UAAE,EAAE,6BADR;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAOApiB,cAAQ,GAAG,EAAX;AACAA,cAAQ,CAAChG,IAAT,CACI;AAAG,WAAG,EAAC;AAAP,SACI,8BAAC,6CAAD;AACI,UAAE,EAAC,wBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CADJ;AAQAgG,cAAQ,CAAChG,IAAT,CACI;AAAG,WAAG,EAAC;AAAP,SACI,8BAAC,6CAAD;AACI,UAAE,EAAC,wBADP;AAEI,sBAAc,EAAC,qBAFnB;AAGI,cAAM,EAAE;AACJmH,YAAE,EAAE2hB;AADA;AAHZ,QADJ,EAQI,8BAAC,kBAAD;AACI,iBAAS,EAAC,6BADd;AAEI,sBAAc,EAAC,gBAFnB;AAGI,aAAK,EAAEA;AAHX,QARJ,EAaI,yCAbJ,EAcI,8BAAC,6CAAD;AACI,UAAE,EAAC,4BADP;AAEI,sBAAc,EAAC,6BAFnB;AAGI,cAAM,EAAE;AACJE,gBAAM,EAAED;AADJ;AAHZ,QAdJ,EAqBI,8BAAC,kBAAD;AACI,iBAAS,EAAC,iCADd;AAEI,sBAAc,EAAC,oBAFnB;AAGI,aAAK,EAAEA;AAHX,QArBJ,CADJ;AA8BA/iB,cAAQ,CAAChG,IAAT,CACI;AAAG,WAAG,EAAC;AAAP,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CADJ;AASAqoB,eAAS,GACL;AAAG,iBAAS,EAAC;AAAb,SACI,8BAAC,6CAAD;AACI,UAAE,EAAC,mBADP;AAEI,sBAAc,EAAC,mBAFnB;AAGI,cAAM,EAAE;AACJzO,aAAG,EAAEiI,QAAQ,CAAC5C;AADV;AAHZ,QADJ,CADJ;AAWH,KAtEM,MAsEA,IAAI,KAAKje,KAAL,CAAWkN,IAAX,KAAoBvE,oCAAS,CAACC,YAAV,CAAuBqf,GAA3C,IAAkD5lB,GAAtD,EAA2D;AAC9D,YAAM6lB,QAAQ,GAAI,IAAIlZ,eAAJ,CAAoB,KAAK/R,KAAL,CAAWgS,QAAX,CAAoBlK,MAAxC,CAAD,CAAkDmK,GAAlD,CAAsD,OAAtD,CAAjB;AAEAkY,gBAAU,GACN,8BAAC,oCAAD;AACI,UAAE,EAAC,oBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMApiB,cAAQ,GACJ,yCACI,8BAAC,6CAAD;AACI,UAAE,EAAC,0BADP;AAEI,sBAAc,EAAC,sNAFnB;AAGI,cAAM,EAAE;AACJmjB,iBAAO,EAAE9lB,GAAG,CAAChB,YAAJ,IAAoBgB,GAAG,CAACsD;AAD7B;AAHZ,QADJ,CADJ;AAWA0hB,eAAS,GACL;AAAG,iBAAS,EAAC;AAAb,SACI,8BAAC,6CAAD;AACI,UAAE,EAAC,4BADP;AAEI,sBAAc,EAAC,oBAFnB;AAGI,cAAM,EAAE;AACJ3gB,eAAK,EAAEwhB;AADH;AAHZ,QADJ,EAQI,8BAAC,kBAAD;AACI,aAAK,EAAEA;AADX,QARJ,EAWI,yCAXJ,EAYI,yCAZJ,EAaI,8BAAC,6CAAD;AACI,UAAE,EAAC,oCADP;AAEI,sBAAc,EAAC;AAFnB,QAbJ,CADJ;AAoBH,KAxCM,MAwCA;AACHza,+CAAc,CAAC2a,OAAf,CAAwB,eAAcC,yCAAc,CAACC,cAAe,EAApE;AACA,aAAO,EAAP;AACH;;AAED,WACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,gCAAD,QACI,8BAAC,gCAAD;AAAM,QAAE,EAAE,MAAM,KAAKrrB,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B,gBAA7B,GAAgD,KAAK3H,KAAL,CAAWkN;AAArE,OACKka,UADL,CADJ,EAII,8BAAC,oCAAD;AACI,QAAE,EAAC,kBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,uBADd;AAEI,QAAE,EAAC;AAFP,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,yBADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,EAUKpiB,QAVL,EAWKqiB,SAXL,EAYI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,gCAAD;AACI,eAAS,EAAC,iBADd;AAEI,UAAI,EAAC,QAFT;AAGI,QAAE,EAAE,MAAM,KAAKpqB,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B,gBAA7B,GAAgD,KAAK3H,KAAL,CAAWkN,IAHnE;AAII,QAAE,EAAC;AAJP,OAMI,8BAAC,oCAAD;AACI,QAAE,EAAC,mBADP;AAEI,oBAAc,EAAC;AAFnB,MANJ,CADJ,CAZJ,CAVJ,CADJ;AAuCH;;AAvS2D,C;;ACfhE;AACA;AAEA;AACA;AACA;AAEA;;AAEA,SAASrD,mCAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,SAAO;AACHK,YAAQ,EAAExC,4CAAW,CAACmC,KAAD,CADlB;AAEHM,aAAS,EAAExC,6CAAY,CAACkC,KAAD,CAFpB;AAGHG,iBAAa,EAAExC,iDAAgB,CAACqC,KAAD,CAH5B;AAIHI,iBAAa,EAAExC,iDAAgB,CAACoC,KAAD,CAJ5B;AAKHwB,QAAI,EAAED,uCAAc,CAACvB,KAAD;AALjB,GAAP;AAOH;;AAEcwK,6EAAO,CAACX,mCAAD,CAAP,CAAyBid,sCAAzB,CAAf,E;;;;;;ACnBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMyB,YAAY,GAAG,CAAC;AAACC,WAAS,EAAEhlB,SAAZ;AAAuBilB,YAAvB;AAAmC,KAAGC;AAAtC,CAAD,KAAmD;AACpE,8BAAC,6BAAD,iCACQA,IADR;AAEI,QAAM,EAAGzrB,KAAD,IACJ,8BAAC,SAAD,iCACQwrB,UADR,EAEQxrB,KAFR;AAHR,GADJ;;AAYe,MAAM0rB,oCAAN,SAAgC9rB,eAAK,CAACC,aAAtC,CAAoD;AA4C/D2G,aAAW,CAACxG,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAK+C,KAAL,GAAa;AACTgE,aAAO,EAAE;AADA,KAAb;AAGH;;AAED0E,mBAAiB,GAAG;AAChB,QAAI,KAAKzL,KAAL,CAAWiT,cAAf,EAA+B;AAC3B,WAAKjT,KAAL,CAAWgJ,OAAX,CAAmB2iB,8BAAnB,CAAkD,KAAK3rB,KAAL,CAAWyK,IAAX,CAAgBvB,EAAlE,EAAsE4C,IAAtE,CACI,MAAM,KAAKlF,QAAL,CAAc;AAACG,eAAO,EAAE;AAAV,OAAd,CADV;AAGH;AACJ;;AAEDjH,QAAM,GAAG;AACL,UAAM0rB,UAAU,GAAG;AACfzkB,aAAO,EAAE,KAAKhE,KAAL,CAAWgE,OADL;AAEf3D,cAAQ,EAAE,KAAKpD,KAAL,CAAWoD,QAAX,IAAuB,EAFlB;AAGfoZ,WAAK,EAAE,KAAKxc,KAAL,CAAWwc,KAHH;AAIf/R,UAAI,EAAE,KAAKzK,KAAL,CAAWyK,IAJF;AAKfyH,UAAI,EAAE,KAAKlS,KAAL,CAAWkS;AALF,KAAnB;AAOA,WACI,2CACI,8BAAC,8BAAD,QACI,8BAAC,6BAAD;AACI,WAAK,EAAE,IADX;AAEI,UAAI,EAAG,GAAE,KAAKlS,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,GAFlC;AAGI,YAAM,EAAE,MAAO,8BAAC,gCAAD;AAAU,UAAE,EAAG,GAAE,KAAK3b,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI;AAAtC;AAHnB,MADJ,EAMI,8BAAC,YAAD;AACI,gBAAU,EAAE6P,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,YAFlC;AAGI,eAAS,EAAEwL,kBAAiBA;AAHhC,MANJ,EAWI,8BAAC,YAAD;AACI,gBAAU,EAAEqE,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,MAFlC;AAGI,eAAS,EAAEyN,WAAUA;AAHzB,MAXJ,EAgBI,8BAAC,YAAD;AACI,gBAAU,EAAEoC,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,OAFlC;AAGI,eAAS,EAAE2N,YAAWA;AAH1B,MAhBJ,EAqBI,8BAAC,YAAD;AACI,gBAAU,EAAEkC,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,UAFlC;AAGI,eAAS,EAAEkO,mBAAkBA;AAHjC,MArBJ,CADJ,CADJ;AA+BH;;AAlG8D;;kCAA9C6B,oC,eACE;AAEf;;;AAGAjhB,MAAI,EAAEtK,oBAAS,CAACmB,MALD;;AAOf;;;AAGA4Q,MAAI,EAAE/R,oBAAS,CAACmB,MAVD;;AAYf;;;AAGAkb,OAAK,EAAErc,oBAAS,CAACmB,MAfF;;AAiBf;;;AAGA8B,UAAQ,EAAEjD,oBAAS,CAACwc,KApBL;;AAsBf;;;AAGAvR,OAAK,EAAEjL,oBAAS,CAAC8K,KAAV,CAAgB;AACnB0Q,OAAG,EAAExb,oBAAS,CAACC,MAAV,CAAiB+H;AADH,GAAhB,EAEJA,UA3BY;AA6Bfa,SAAO,EAAE7I,oBAAS,CAAC8K,KAAV,CAAgB;AAErB;;;AAGA0gB,kCAA8B,EAAExrB,oBAAS,CAAC+H,IAAV,CAAeC;AAL1B,GAAhB,EAMNA,UAnCY;;AAqCf;;;AAGA8K,gBAAc,EAAE9S,oBAAS,CAACiI;AAxCX,C;;ACzBvB;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,SAASwE,kCAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,QAAM8J,MAAM,GAAGC,4BAAS,CAAC/J,KAAD,CAAxB;AACA,QAAMkQ,cAAc,GAAGpG,MAAM,CAACoH,cAAP,KAA0B,MAAjD;AAEA,SAAO;AACH7Q,YAAQ,EAAE9C,MAAM,CAACqD,MAAP,CAAc/C,4CAAW,CAACmC,KAAD,CAAzB,CADP;AAEHyZ,SAAK,EAAErK,yBAAQ,CAACpP,KAAD,CAFZ;AAGHkQ;AAHG,GAAP;AAKH;;AAED,SAAS7F,qCAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrE,WAAO,EAAEsE,mCAAkB,CAAC;AACxBqe,mGAA8BA;AADN,KAAD,EAExBte,QAFwB;AADxB,GAAP;AAKH;;AAEcE,4EAAO,CAACX,kCAAD,EAAkBQ,qCAAlB,CAAP,CAA6Cse,oCAA7C,CAAf,E;;AChCA;AACA;AAEA;AACA;AACA;AAEe,MAAME,oCAAN,SAAgChsB,eAAK,CAAC2G,SAAtC,CAAgD;AAC3D,aAAWkH,SAAX,GAAuB;AACnB,WAAO;AACH/C,UAAI,EAAEvK,oBAAS,CAACC,MAAV,CAAiB+H,UADpB;AAEHjI,WAAK,EAAEC,oBAAS,CAAC8H,IAAV,CAAeE,UAFnB;AAGHuc,UAAI,EAAEvkB,oBAAS,CAACC,MAAV,CAAiB+H,UAHpB;AAIH0jB,gBAAU,EAAE1rB,oBAAS,CAACC,MAJnB;AAKH0G,cAAQ,EAAE3G,oBAAS,CAACoU,OAAV,CAAkBpU,oBAAS,CAAC2rB,OAA5B;AALP,KAAP;AAOH;;AAED,aAAWjR,YAAX,GAA0B;AACtB,WAAO;AACHgR,gBAAU,EAAE,EADT;AAEH/kB,cAAQ,EAAE;AAFP,KAAP;AAIH;;AAED,aAAWilB,YAAX,GAA0B;AACtB,WAAO;AACHtR,YAAM,EAAEta,oBAAS,CAACmB,MAAV,CAAiB6G;AADtB,KAAP;AAGH;;AAEDrI,QAAM,GAAG;AACL,UAAM;AAAC4K,UAAD;AAAOxK,WAAP;AAAcwkB,UAAd;AAAoBmH,gBAApB;AAAgC/kB;AAAhC,QAA4C,KAAK9G,KAAvD;AAEA,UAAM2S,IAAI,GAAGkZ,UAAU,GAAG,GAAb,GAAmBnhB,IAAhC;AAEA,WACI;AAAI,eAAS,EAAC;AAAd,OACI,8BAAC,mCAAD;AACI,QAAE,EAAEiI,IADR;AAEI,eAAS,EAAC,gBAFd;AAGI,qBAAe,EAAC;AAHpB,OAKI;AAAG,eAAS,EAAE,QAAQ+R;AAAtB,MALJ,EAMI;AAAM,eAAS,EAAC;AAAhB,OACKxkB,KADL,CANJ,CADJ,EAWI,8BAAC,6BAAD;AACI,UAAI,EAAEyS,IADV;AAEI,YAAM,EAAE,MACJ;AAAI,iBAAS,EAAC;AAAd,SAEQ/S,eAAK,CAACqH,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,EAA8BK,KAAD,IAAW;AACpC,YAAI,CAACA,KAAL,EAAY;AACR,iBAAOA,KAAP;AACH;;AAED,eAAOvH,eAAK,CAACwH,YAAN,CAAmBD,KAAnB,EAA0B;AAC7B0kB,oBAAU,EAAElZ;AADiB,SAA1B,CAAP;AAGH,OARD,CAFR;AAHR,MAXJ,CADJ;AAgCH;;AA7D0D,C;;ACP/D;AACA;AAEA;AACA;AACA;AAEe,MAAMqZ,kCAAN,SAA+BpsB,eAAK,CAAC2G,SAArC,CAA+C;AAC1D,aAAWkH,SAAX,GAAuB;AACnB,WAAO;AACH/C,UAAI,EAAEvK,oBAAS,CAACC,MAAV,CAAiB+H,UADpB;AAEHjI,WAAK,EAAEC,oBAAS,CAAC8H,IAAV,CAAeE,UAFnB;AAGH0jB,gBAAU,EAAE1rB,oBAAS,CAACC,MAHnB;AAIH6rB,gBAAU,EAAE9rB,oBAAS,CAACiI,IAJnB;AAKHtB,cAAQ,EAAE3G,oBAAS,CAACoU,OAAV,CAAkBpU,oBAAS,CAAC2rB,OAA5B,CALP;AAMH5iB,QAAE,EAAE/I,oBAAS,CAACC;AANX,KAAP;AAQH;;AAED,aAAWya,YAAX,GAA0B;AACtB,WAAO;AACHgR,gBAAU,EAAE,EADT;AAEHI,gBAAU,EAAE,KAFT;AAGHnlB,cAAQ,EAAE;AAHP,KAAP;AAKH;;AAED,aAAWilB,YAAX,GAA0B;AACtB,WAAO;AACHtR,YAAM,EAAEta,oBAAS,CAACmB,MAAV,CAAiB6G;AADtB,KAAP;AAGH;;AAED+jB,SAAO,GAAG;AACN,WAAO,KAAKlsB,KAAL,CAAW6rB,UAAX,GAAwB,GAAxB,GAA8B,KAAK7rB,KAAL,CAAW0K,IAAhD;AACH;;AAED5K,QAAM,GAAG;AACL,UAAM;AAACI,WAAD;AAAQ+rB,gBAAR;AAAoBnlB;AAApB,QAAgC,KAAK9G,KAA3C;AAEA,UAAM2S,IAAI,GAAG,KAAKuZ,OAAL,EAAb;AAEA,QAAIC,cAAc,GAAG,IAArB;;AACA,QAAIrlB,QAAQ,CAACzE,MAAT,GAAkB,CAAtB,EAAyB;AACrB8pB,oBAAc,GACV;AAAI,iBAAS,EAAC;AAAd,SAEQvsB,eAAK,CAACqH,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,EAA8BK,KAAD,IAAW;AACpC,eAAOvH,eAAK,CAACwH,YAAN,CAAmBD,KAAnB,EAA0B;AAC7B0kB,oBAAU,EAAElZ,IADiB;AAE7BsZ,oBAAU,EAAE;AAFiB,SAA1B,CAAP;AAIH,OALD,CAFR,CADJ;AAYH;;AAED,QAAIlsB,SAAS,GAAG,SAAhB;;AACA,QAAIksB,UAAJ,EAAgB;AACZlsB,eAAS,GAAG,YAAZ;AACH;;AAED,WACI;AACI,eAAS,EAAEA,SADf;AAEI,QAAE,EAAE,KAAKC,KAAL,CAAWkJ;AAFnB,OAII,8BAAC,mCAAD;AACI,eAAS,EAAG,GAAEnJ,SAAU,QAD5B;AAEI,qBAAe,EAAG,GAAEA,SAAU,gBAFlC;AAGI,QAAE,EAAE4S;AAHR,OAKI;AAAM,eAAS,EAAG,GAAE5S,SAAU;AAA9B,OACKG,KADL,CALJ,CAJJ,EAaKisB,cAbL,CADJ;AAiBH;;AAzEyD,C;;ACP9D;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEe,MAAMC,kCAAN,SAA+BxsB,eAAK,CAAC2G,SAArC,CAA+C;AAC1D,aAAWkH,SAAX,GAAuB;AACnB,WAAO;AACHhD,UAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UADpB;AAEH+J,UAAI,EAAE/R,oBAAS,CAACmB,MAAV,CAAiB6G,UAFpB;AAGHkkB,uBAAiB,EAAElsB,oBAAS,CAACiI,IAAV,CAAeD,UAH/B;AAIH4K,4BAAsB,EAAE5S,oBAAS,CAACiI,IAAV,CAAeD,UAJpC;AAKH6K,4BAAsB,EAAE7S,oBAAS,CAACiI,IAAV,CAAeD,UALpC;AAMH8K,oBAAc,EAAE9S,oBAAS,CAACiI,IAAV,CAAeD,UAN5B;AAOH+K,gCAA0B,EAAE/S,oBAAS,CAACiI,IAAV,CAAeD,UAPxC;AAQHmkB,kCAA4B,EAAEnsB,oBAAS,CAACiI,IAAV,CAAeD;AAR1C,KAAP;AAUH;;AAEDokB,mBAAiB,GAAG;AAChB,QAAI,CAAC,KAAKvsB,KAAL,CAAWqsB,iBAAZ,IAAiC,CAAC,KAAKrsB,KAAL,CAAWssB,4BAAjD,EAA+E;AAC3E,aAAO,IAAP;AACH;;AAED,WACI,8BAAC,oCAAD;AACI,UAAI,EAAC,OADT;AAEI,gBAAU,EAAE,MAAM,KAAKtsB,KAAL,CAAWyK,IAAX,CAAgBC,IAFtC;AAGI,UAAI,EAAC,YAHT;AAII,WAAK,EACD,8BAAC,oCAAD;AACI,UAAE,EAAC,yBADP;AAEI,sBAAc,EAAC;AAFnB;AALR,MADJ;AAaH;;AAED8hB,oBAAkB,GAAG;AACjB,QAAIpQ,gBAAgB,GAAG,IAAvB;;AACA,QAAI,KAAKpc,KAAL,CAAW+S,sBAAf,EAAuC;AACnCqJ,sBAAgB,GACZ,8BAAC,uCAAD;AACI,mBAAW,EAAE,CAAC5J,wBAAW,CAACY,wBAAb,CADjB;AAEI,cAAM,EAAE,KAAKpT,KAAL,CAAWyK,IAAX,CAAgBvB;AAF5B,SAII,8BAAC,kCAAD;AACI,YAAI,EAAC,mBADT;AAEI,kBAAU,EAAE,MAAM,KAAKlJ,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B,eAF7C;AAGI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,kDADP;AAEI,wBAAc,EAAC;AAFnB,UAJR;AASI,UAAE,EAAC;AATP,QAJJ,CADJ;AAkBH;;AAED,QAAI8W,gBAAgB,GAAG,IAAvB;;AACA,QAAI,KAAKxhB,KAAL,CAAWgT,sBAAf,EAAuC;AACnCwO,sBAAgB,GACZ,8BAAC,uCAAD;AACI,mBAAW,EAAE,CAAChP,wBAAW,CAACc,wBAAb,CADjB;AAEI,cAAM,EAAE,KAAKtT,KAAL,CAAWyK,IAAX,CAAgBvB;AAF5B,SAII,8BAAC,kCAAD;AACI,YAAI,EAAC,mBADT;AAEI,kBAAU,EAAE,MAAM,KAAKlJ,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B,eAF7C;AAGI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,kDADP;AAEI,wBAAc,EAAC;AAFnB,UAJR;AASI,UAAE,EAAC;AATP,QAJJ,CADJ;AAkBH;;AAED,QAAItH,QAAQ,GAAG,IAAf;;AACA,QAAI,KAAKpD,KAAL,CAAWiT,cAAf,EAA+B;AAC3B7P,cAAQ,GACJ,8BAAC,uCAAD;AACI,mBAAW,EAAE,CAACoP,wBAAW,CAACgB,qBAAb,CADjB;AAEI,cAAM,EAAE,KAAKxT,KAAL,CAAWyK,IAAX,CAAgBvB;AAF5B,SAII,8BAAC,kCAAD;AACI,YAAI,EAAC,UADT;AAEI,kBAAU,EAAE,MAAM,KAAKlJ,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B,eAF7C;AAGI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,yCADP;AAEI,wBAAc,EAAC;AAFnB,UAJR;AASI,UAAE,EAAC;AATP,QAJJ,CADJ;AAkBH;;AAED,QAAIrH,SAAS,GAAG,IAAhB;;AACA,QAAI,KAAKrD,KAAL,CAAWkT,0BAAf,EAA2C;AACvC7P,eAAS,GACL,8BAAC,yCAAD;AAAsB,mBAAW,EAAE,CAACmP,wBAAW,CAACkB,YAAb;AAAnC,SACI,8BAAC,kCAAD;AACI,YAAI,EAAC,aADT;AAEI,kBAAU,EAAE,MAAM,KAAK1T,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B,eAF7C;AAGI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,0CADP;AAEI,wBAAc,EAAC;AAFnB,UAJR;AASI,UAAE,EAAC;AATP,QADJ,CADJ;AAeH;;AAED,UAAMiC,WAAW,GACb,8BAAC,yCAAD;AAAsB,iBAAW,EAAE,CAAC,aAAD;AAAnC,OACI,8BAAC,kCAAD;AACI,UAAI,EAAC,MADT;AAEI,gBAAU,EAAE,MAAM,KAAK3M,KAAL,CAAWyK,IAAX,CAAgBC,IAAtB,GAA6B,eAF7C;AAGI,WAAK,EACD,8BAAC,oCAAD;AACI,UAAE,EAAC,wBADP;AAEI,sBAAc,EAAC;AAFnB,QAJR;AASI,QAAE,EAAC;AATP,MADJ,CADJ;AAgBA,WACI,8BAAC,uCAAD;AACI,iBAAW,EAAE,CAAC8H,wBAAW,CAACY,wBAAb,EAAuCZ,wBAAW,CAACc,wBAAnD,EAA6Ed,wBAAW,CAACgB,qBAAzF,EAAgHhB,wBAAW,CAACkB,YAA5H,CADjB;AAEI,YAAM,EAAE,KAAK1T,KAAL,CAAWyK,IAAX,CAAgBvB;AAF5B,OAII,8BAAC,oCAAD;AACI,UAAI,EAAC,cADT;AAEI,UAAI,EAAC,SAFT;AAGI,gBAAU,EAAE,MAAM,KAAKlJ,KAAL,CAAWyK,IAAX,CAAgBC,IAHtC;AAII,WAAK,EACD,8BAAC,oCAAD;AACI,UAAE,EAAC,gCADP;AAEI,sBAAc,EAAC;AAFnB;AALR,OAWK0R,gBAXL,EAYKoF,gBAZL,EAaKpe,QAbL,EAcKC,SAdL,EAeKsJ,WAfL,CAJJ,CADJ;AAwBH;;AAED7M,QAAM,GAAG;AACL,WACI;AAAK,eAAS,EAAC;AAAf,OACI,0CACK,KAAKysB,iBAAL,EADL,EAEK,KAAKC,kBAAL,EAFL,CADJ,CADJ;AAQH;;AA3KyD,C;;;;;ACf9D;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEe,MAAMC,gCAAN,SAA8B7sB,eAAK,CAAC2G,SAApC,CAA8C;AACzD,aAAWkH,SAAX,GAAuB;AACnB,WAAO;AACHhD,UAAI,EAAEtK,oBAAS,CAACmB,MAAV,CAAiB6G,UADpB;AAEH0K,cAAQ,EAAE1S,oBAAS,CAACC;AAFjB,KAAP;AAIH;;AAEDN,QAAM,GAAG;AACL,QAAI,CAAC,KAAKE,KAAL,CAAWyK,IAAhB,EAAsB;AAClB,aAAO,IAAP;AACH;;AAED,WACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,gCAAD;AACI,eAAS,EAAC,wBADd;AAEI,QAAE,EAAG,IAAG,KAAKzK,KAAL,CAAWyK,IAAX,CAAgBC,IAAK;AAFjC,OAII,8BAAC,4BAAD,OAJJ,EAKI,4CACI,8BAAC,oCAAD;AACI,QAAE,EAAC,mCADP;AAEI,oBAAc,EAAC,oBAFnB;AAGI,YAAM,EAAE;AACJmI,gBAAQ,EAAE,KAAK7S,KAAL,CAAW6S;AADjB;AAHZ,MADJ,CALJ,CADJ,CADJ;AAmBH;;AAhCwD,C;;;;;;ACV7D;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAM6Z,cAAc,GAAG,CAAC;AAACnB,WAAS,EAAEhlB,SAAZ;AAAuBilB,YAAvB;AAAmC,KAAGC;AAAtC,CAAD,KAAmD;AACtE,8BAAC,6BAAD,mCACQA,IADR;AAEI,QAAM,EAAGzrB,KAAD,IACJ,8BAAC,SAAD,mCACQwrB,UADR,EAEQxrB,KAFR;AAHR,GADJ;;AAYe,MAAM2sB,wCAAN,SAAkC/sB,eAAK,CAAC2G,SAAxC,CAAkD;AAAA;AAAA;;AAAA,6DA6B/C,MAAM;AAChB,UAAI,KAAKqmB,OAAT,EAAkB;AACd,aAAKA,OAAL,CAAaC,SAAb,GAAyB,CAAzB;AACH;AACJ,KAjC4D;;AAAA,4DAmC/CC,GAAD,IAAS;AAClB,WAAKF,OAAL,GAAeE,GAAf;AACH,KArC4D;AAAA;;AAuC7DhtB,QAAM,GAAG;AACL,QAAI,KAAKE,KAAL,CAAWyK,IAAX,IAAmB,IAAnB,IAA2B,KAAKzK,KAAL,CAAWkS,IAAX,IAAmB,IAAlD,EAAwD;AACpD,aAAO,0CAAP;AACH;;AACD,UAAMsZ,UAAU,GAAG;AACf/gB,UAAI,EAAE,KAAKzK,KAAL,CAAWyK,IADF;AAEfyH,UAAI,EAAE,KAAKlS,KAAL,CAAWkS,IAFF;AAGfsF,iBAAW,EAAE,KAAKA;AAHH,KAAnB;AAKA,WACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,mCAAD,OADJ,EAEI,8BAAC,gCAAD,OAFJ,EAGI,8BAAC,gCAAD;AACI,UAAI,EAAE,KAAKxX,KAAL,CAAWyK,IADrB;AAEI,cAAQ,EAAE,KAAKzK,KAAL,CAAW6S;AAFzB,MAHJ,EAOI,8BAAC,4BAAD;AAAW,mBAAa,EAAC;AAAzB,MAPJ,EAQI;AACI,eAAS,EAAC,gBADd;AAEI,SAAG,EAAE,KAAKka;AAFd,OAII,8BAAC,kCAAD;AACI,UAAI,EAAE,KAAK/sB,KAAL,CAAWyK,IADrB;AAEI,UAAI,EAAE,KAAKzK,KAAL,CAAWkS,IAFrB;AAGI,uBAAiB,EAAE,KAAKlS,KAAL,CAAWqsB,iBAHlC;AAII,4BAAsB,EAAE,KAAKrsB,KAAL,CAAW+S,sBAJvC;AAKI,4BAAsB,EAAE,KAAK/S,KAAL,CAAWgT,sBALvC;AAMI,oBAAc,EAAE,KAAKhT,KAAL,CAAWiT,cAN/B;AAOI,gCAA0B,EAAE,KAAKjT,KAAL,CAAWkT,0BAP3C;AAQI,kCAA4B,EAAE,KAAKlT,KAAL,CAAWssB;AAR7C,MAJJ,EAcI,8BAAC,8BAAD,QACI,8BAAC,cAAD;AACI,gBAAU,EAAEd,UADhB;AAEI,WAAK,EAAE,IAFX;AAGI,UAAI,EAAE,qBAHV;AAII,eAAS,EAAE7f,YAAYA;AAJ3B,MADJ,EAOI,8BAAC,cAAD;AACI,gBAAU,EAAE6f,UADhB;AAEI,WAAK,EAAE,IAFX;AAGI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,oBAHlC;AAII,eAAS,EAAEG,2BAAyBA;AAJxC,MAPJ,EAaI,8BAAC,cAAD;AACI,gBAAU,EAAE0P,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,wBAFlC;AAGI,eAAS,EAAEqR,oBAAiBA;AAHhC,MAbJ,EAkBI,8BAAC,cAAD;AACI,gBAAU,EAAExB,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,yBAFlC;AAGI,eAAS,EAAEgE,qBAAmBA;AAHlC,MAlBJ,EAuBI,8BAAC,cAAD;AACI,gBAAU,EAAE6L,UADhB;AAEI,WAAK,EAAE,IAFX;AAGI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,oBAHlC;AAII,eAAS,EAAE0F,2BAAyBA;AAJxC,MAvBJ,EA6BI,8BAAC,cAAD;AACI,gBAAU,EAAEmK,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,wBAFlC;AAGI,eAAS,EAAE8G,oBAAkBA;AAHjC,MA7BJ,EAkCI,8BAAC,cAAD;AACI,gBAAU,EAAE+I,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,yBAFlC;AAGI,eAAS,EAAEkH,qBAAmBA;AAHlC,MAlCJ,EAuCI,8BAAC,cAAD;AACI,gBAAU,EAAE2I,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,WAFlC;AAGI,eAAS,EAAE+P,kBAAiBA;AAHhC,MAvCJ,EA4CI,8BAAC,cAAD;AACI,gBAAU,EAAEF,UADhB;AAEI,WAAK,EAAE,IAFX;AAGI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,cAHlC;AAII,eAAS,EAAEsR,oBAAkBA;AAJjC,MA5CJ,EAkDI,8BAAC,cAAD;AACI,gBAAU,EAAEzB,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,kBAFlC;AAGI,eAAS,EAAEuR,aAAWA;AAH1B,MAlDJ,EAuDI,8BAAC,cAAD;AACI,gBAAU,EAAE1B,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,mBAFlC;AAGI,eAAS,EAAEwR,cAAYA;AAH3B,MAvDJ,EA4DI,8BAAC,cAAD;AACI,gBAAU,EAAE3B,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,UAFlC;AAGI,eAAS,EAAEkO,mBAAkBA;AAHjC,MA5DJ,EAiEI,8BAAC,cAAD;AACI,gBAAU,EAAE2B,UADhB;AAEI,WAAK,EAAE,IAFX;AAGI,UAAI,EAAE,cAHV;AAII,eAAS,EAAEnU,gBAAKA;AAJpB,MAjEJ,EAuEI,8BAAC,cAAD;AACI,gBAAU,EAAEmU,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,MAFlC;AAGI,eAAS,EAAElC,SAAQA;AAHvB,MAvEJ,EA4EI,8BAAC,cAAD;AACI,gBAAU,EAAE+R,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,WAFlC;AAGI,eAAS,EAAEzN,OAAMA;AAHrB,MA5EJ,EAiFI,8BAAC,cAAD;AACI,gBAAU,EAAEsd,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,YAFlC;AAGI,eAAS,EAAEzN,OAAMA;AAHrB,MAjFJ,EAsFI,8BAAC,cAAD;AACI,gBAAU,EAAEsd,UADhB;AAEI,UAAI,EAAG,GAAE,KAAKxrB,KAAL,CAAWoL,KAAX,CAAiBuQ,GAAI,OAFlC;AAGI,eAAS,EAAEzQ,iBAAIA;AAHnB,MAtFJ,CAdJ,CARJ,CADJ;AAsHH;;AAtK4D;;oCAA5CyhB,wC,eACE;AAEf;;;AAGAza,MAAI,EAAE/R,oBAAS,CAACmB,MALD;;AAOf;;;AAGAmJ,MAAI,EAAEtK,oBAAS,CAACmB,MAVD;;AAYf;;;AAGA8J,OAAK,EAAEjL,oBAAS,CAAC8K,KAAV,CAAgB;AACnB0Q,OAAG,EAAExb,oBAAS,CAACC,MAAV,CAAiB+H;AADH,GAAhB,EAEJA,UAjBY;AAmBf0K,UAAQ,EAAE1S,oBAAS,CAACC,MAnBL;AAoBfisB,mBAAiB,EAAElsB,oBAAS,CAACiI,IAAV,CAAeD,UApBnB;AAqBf4K,wBAAsB,EAAE5S,oBAAS,CAACiI,IAAV,CAAeD,UArBxB;AAsBf6K,wBAAsB,EAAE7S,oBAAS,CAACiI,IAAV,CAAeD,UAtBxB;AAuBf8K,gBAAc,EAAE9S,oBAAS,CAACiI,IAAV,CAAeD,UAvBhB;AAwBf+K,4BAA0B,EAAE/S,oBAAS,CAACiI,IAAV,CAAeD,UAxB5B;AAyBfmkB,8BAA4B,EAAEnsB,oBAAS,CAACiI,IAAV,CAAeD;AAzB9B,C;;AC5CvB;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASyE,yBAAT,CAAyB7J,KAAzB,EAAgC;AAC5B,QAAMmP,IAAI,GAAGkb,+BAAc,CAACrqB,KAAD,CAA3B;AACA,QAAM0H,IAAI,GAAGqM,wCAAc,CAAC/T,KAAD,CAA3B;AAEA,QAAM8J,MAAM,GAAGC,4BAAS,CAAC/J,KAAD,CAAxB;AAEA,QAAM8P,QAAQ,GAAGhG,MAAM,CAACiH,QAAxB;AACA,QAAMuY,iBAAiB,GAAGxf,MAAM,CAACwgB,iBAAP,KAA6B,MAAvD;AACA,QAAMta,sBAAsB,GAAGlG,MAAM,CAACkH,sBAAP,KAAkC,MAAjE;AACA,QAAMf,sBAAsB,GAAGnG,MAAM,CAACmH,sBAAP,KAAkC,MAAjE;AACA,QAAMf,cAAc,GAAGpG,MAAM,CAACoH,cAAP,KAA0B,MAAjD;AACA,QAAMf,0BAA0B,GAAGrG,MAAM,CAACqH,0BAAP,KAAsC,MAAzE;AAEA,MAAIoY,4BAA4B,GAAIha,+CAAqB,CAACvP,KAAD,EAAQ;AAACwP,cAAU,EAAEC,wBAAW,CAAC8G;AAAzB,GAAR,CAArB,IAAyEhH,+CAAqB,CAACvP,KAAD,EAAQ;AAACwP,cAAU,EAAEC,wBAAW,CAAC0D;AAAzB,GAAR,CAAlI;;AACA,MAAI,CAACoW,4BAAL,EAAmC;AAC/B,SAAK,MAAMxT,CAAX,IAAgBrE,oCAAU,CAAC1R,KAAD,CAA1B,EAAmC;AAC/B,UAAI2R,6CAAmB,CAAC3R,KAAD,EAAQ;AAAC0H,YAAI,EAAEqO,CAAC,CAAC5P,EAAT;AAAaqJ,kBAAU,EAAEC,wBAAW,CAAC8G;AAArC,OAAR,CAAnB,IAAmF5E,6CAAmB,CAAC3R,KAAD,EAAQ;AAAC0H,YAAI,EAAEqO,CAAC,CAAC5P,EAAT;AAAaqJ,kBAAU,EAAEC,wBAAW,CAAC0D;AAArC,OAAR,CAA1G,EAAwK;AACpKoW,oCAA4B,GAAG,IAA/B;AACA;AACH;AACJ;AACJ;;AAED,SAAO;AACHpa,QADG;AAEHzH,QAFG;AAGHoI,YAHG;AAIHwZ,qBAJG;AAKHtZ,0BALG;AAMHC,0BANG;AAOHC,kBAPG;AAQHC,8BARG;AASHoZ;AATG,GAAP;AAWH;;AAEcgB,yHAAU,CAAC/f,qBAAO,CAACX,yBAAD,CAAP,CAAyB+f,wCAAzB,CAAD,CAAzB,E","file":"8.59d06e5e538582a6a9a5.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default class NextIcon extends React.PureComponent {\r\n    static propTypes = {\r\n        additionalClassName: PropTypes.string,\r\n    };\r\n\r\n    static defaultProps = {\r\n        additionalClassName: null,\r\n    };\r\n\r\n    render() {\r\n        const className = 'fa fa-1x fa-angle-right' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\r\n        return (\r\n            <FormattedMessage\r\n                id='generic_icons.next'\r\n                defaultMessage='Next Icon'\r\n            >\r\n                {(title) => (\r\n                    <i\r\n                        className={className}\r\n                        title={title}\r\n                    />\r\n                )}\r\n            </FormattedMessage>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class PreviousIcon extends React.PureComponent {\r\n    static propTypes = {\r\n        additionalClassName: PropTypes.string,\r\n    };\r\n\r\n    static defaultProps = {\r\n        additionalClassName: null,\r\n    };\r\n\r\n    render() {\r\n        const className = 'fa fa-1x fa-angle-left' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\r\n        return (\r\n            <FormattedMessage\r\n                id='generic_icons.previous'\r\n                defaultMessage='Previous Icon'\r\n            >\r\n                {(title) => (\r\n                    <i\r\n                        className={className}\r\n                        title={title}\r\n                    />\r\n                )}\r\n            </FormattedMessage>\r\n        );\r\n    }\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIncomingHooks = getIncomingHooks;\nexports.getOutgoingHooks = getOutgoingHooks;\nexports.getCommands = getCommands;\nexports.getOAuthApps = getOAuthApps;\nexports.getSystemCommands = getSystemCommands;\nexports.getAutocompleteCommandsList = exports.getAllCommands = exports.getOutgoingHooksInCurrentTeam = void 0;\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es7.object.values\");\n\nvar _reselect = require(\"reselect\");\n\nvar _teams = require(\"./teams\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction getIncomingHooks(state) {\n  return state.entities.integrations.incomingHooks;\n}\n\nfunction getOutgoingHooks(state) {\n  return state.entities.integrations.outgoingHooks;\n}\n\nfunction getCommands(state) {\n  return state.entities.integrations.commands;\n}\n\nfunction getOAuthApps(state) {\n  return state.entities.integrations.oauthApps;\n}\n\nfunction getSystemCommands(state) {\n  return state.entities.integrations.systemCommands;\n}\n/**\n * get outgoing hooks in current team\n */\n\n\nvar getOutgoingHooksInCurrentTeam = (0, _reselect.createSelector)(_teams.getCurrentTeamId, getOutgoingHooks, function (teamId, hooks) {\n  return Object.values(hooks).filter(function (o) {\n    return o.teamId === teamId;\n  });\n});\nexports.getOutgoingHooksInCurrentTeam = getOutgoingHooksInCurrentTeam;\nvar getAllCommands = (0, _reselect.createSelector)(getCommands, getSystemCommands, function (commands, systemCommands) {\n  return _objectSpread({}, commands, {}, systemCommands);\n});\nexports.getAllCommands = getAllCommands;\nvar getAutocompleteCommandsList = (0, _reselect.createSelector)(getAllCommands, _teams.getCurrentTeamId, function (commands, currentTeamId) {\n  return Object.values(commands).filter(function (command) {\n    return command && (!command.team_id || command.team_id === currentTeamId) && command.auto_complete;\n  }).sort(function (a, b) {\n    return a.display_name.localeCompare(b.display_name);\n  });\n});\nexports.getAutocompleteCommandsList = getAutocompleteCommandsList;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBotAccounts = getBotAccounts;\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nfunction getBotAccounts(state) {\n  return state.entities.bots.accounts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBot = createBot;\nexports.patchBot = patchBot;\nexports.loadBot = loadBot;\nexports.loadBots = loadBots;\nexports.disableBot = disableBot;\nexports.enableBot = enableBot;\nexports.assignBot = assignBot;\n\nvar _client = require(\"../client\");\n\nvar _action_types = require(\"../action_types\");\n\nvar _helpers = require(\"./helpers\");\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nvar BOTS_PER_PAGE_DEFAULT = 20;\n\nfunction createBot(bot) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.createBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [bot]\n  });\n}\n\nfunction patchBot(botUserId, botPatch) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.patchBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId, botPatch]\n  });\n}\n\nfunction loadBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction loadBots() {\n  var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BOTS_PER_PAGE_DEFAULT;\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getBotsIncludeDeleted,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNTS,\n    params: [page, perPage]\n  });\n}\n\nfunction disableBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.disableBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction enableBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.enableBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction assignBot(botUserId, newOwnerId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.assignBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId, newOwnerId]\n  });\n}","module.exports = __webpack_public_path__ + \"files/63fafa4ec86b3e689f52806ba5a3cd4f.png\";","module.exports = __webpack_public_path__ + \"files/e18dcc703feb7046e3b49f91eeebb0e2.png\";","module.exports = __webpack_public_path__ + \"files/d184fcdb23c1e24bfd7132950ceb4f68.jpg\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default class SearchIcon extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <FormattedMessage\r\n                id='generic_icons.search'\r\n                defaultMessage='Search Icon'\r\n            >\r\n                {(title) => (\r\n                    <i\r\n                        className='fa fa-search'\r\n                        title={title}\r\n                    />\r\n                )}\r\n            </FormattedMessage>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\nimport SearchIcon from 'components/icon/search_icon';\r\n\r\nexport default class BackstageList extends React.Component {\r\n    static propTypes = {\r\n        children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\r\n        header: PropTypes.node.isRequired,\r\n        addLink: PropTypes.string,\r\n        addText: PropTypes.node,\r\n        addButtonId: PropTypes.string,\r\n        emptyText: PropTypes.node,\r\n        emptyTextSearch: PropTypes.node,\r\n        helpText: PropTypes.node,\r\n        loading: PropTypes.bool.isRequired,\r\n        searchPlaceholder: PropTypes.string,\r\n    }\r\n\r\n    static defaultProps = {\r\n        searchPlaceholder: Utils.localizeMessage('backstage_list.search', 'Search'),\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateFilter = this.updateFilter.bind(this);\r\n\r\n        this.state = {\r\n            filter: '',\r\n        };\r\n    }\r\n\r\n    updateFilter(e) {\r\n        this.setState({\r\n            filter: e.target.value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const filter = this.state.filter.toLowerCase();\r\n\r\n        let children;\r\n        if (this.props.loading) {\r\n            children = <LoadingScreen/>;\r\n        } else {\r\n            children = this.props.children;\r\n            let hasChildren = true;\r\n            if (typeof children === 'function') {\r\n                [children, hasChildren] = children(filter);\r\n            }\r\n            children = React.Children.map(children, (child) => {\r\n                return React.cloneElement(child, {filter});\r\n            });\r\n            if (children.length === 0 || !hasChildren) {\r\n                if (!filter) {\r\n                    if (this.props.emptyText) {\r\n                        children = (\r\n                            <span className='backstage-list__item backstage-list__empty'>\r\n                                {this.props.emptyText}\r\n                            </span>\r\n                        );\r\n                    }\r\n                } else if (this.props.emptyTextSearch) {\r\n                    children = (\r\n                        <span\r\n                            className='backstage-list__item backstage-list__empty'\r\n                            id='emptySearchResultsMessage'\r\n                        >\r\n                            {React.cloneElement(this.props.emptyTextSearch, {values: {searchTerm: filter}})}\r\n                        </span>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        let addLink = null;\r\n\r\n        if (this.props.addLink && this.props.addText) {\r\n            addLink = (\r\n                <Link\r\n                    className='add-link'\r\n                    to={this.props.addLink}\r\n                >\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-primary'\r\n                        id={this.props.addButtonId}\r\n                    >\r\n                        <span>\r\n                            {this.props.addText}\r\n                        </span>\r\n                    </button>\r\n                </Link>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='backstage-content'>\r\n                <div className='backstage-header'>\r\n                    <h1>\r\n                        {this.props.header}\r\n                    </h1>\r\n                    {addLink}\r\n                </div>\r\n                <div className='backstage-filters'>\r\n                    <div className='backstage-filter__search'>\r\n                        <SearchIcon/>\r\n                        <input\r\n                            type='search'\r\n                            className='form-control'\r\n                            placeholder={this.props.searchPlaceholder}\r\n                            value={this.state.filter}\r\n                            onChange={this.updateFilter}\r\n                            style={style.search}\r\n                            id='searchInput'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <span className='backstage-list__help'>\r\n                    {this.props.helpText}\r\n                </span>\r\n                <div className='backstage-list'>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst style = {\r\n    search: {flexGrow: 0, flexShrink: 0},\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\nimport Markdown from 'components/markdown';\r\nimport SaveButton from 'components/save_button.jsx';\r\nimport WarningIcon from 'components/icon/warning_icon';\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nexport function matchesFilter(bot, filter, owner) {\r\n    if (!filter) {\r\n        return true;\r\n    }\r\n    const username = bot.username || '';\r\n    const description = bot.description || '';\r\n    const displayName = bot.display_name || '';\r\n\r\n    let ownerUsername = 'plugin';\r\n    if (owner && owner.username) {\r\n        ownerUsername = owner.username;\r\n    }\r\n    return !(username.toLowerCase().indexOf(filter) === -1 &&\r\n        displayName.toLowerCase().indexOf(filter) === -1 &&\r\n        description.toLowerCase().indexOf(filter) === -1 &&\r\n        ownerUsername.toLowerCase().indexOf(filter) === -1);\r\n}\r\n\r\nexport default class Bot extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        *  Bot that we are displaying\r\n        */\r\n        bot: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * Owner of the bot we are displaying\r\n        */\r\n        owner: PropTypes.object,\r\n\r\n        /**\r\n        * The access tokens of the bot user\r\n        */\r\n        accessTokens: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * String used for filtering bot items\r\n        */\r\n        filter: PropTypes.string,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n            * Disable a bot\r\n            */\r\n            disableBot: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * Enable a bot\r\n            */\r\n            enableBot: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * Access token managment\r\n            */\r\n            createUserAccessToken: PropTypes.func.isRequired,\r\n            revokeUserAccessToken: PropTypes.func.isRequired,\r\n            enableUserAccessToken: PropTypes.func.isRequired,\r\n            disableUserAccessToken: PropTypes.func.isRequired,\r\n        }),\r\n\r\n        /**\r\n        *  Only used for routing since backstage is team based.\r\n        */\r\n        team: PropTypes.object.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            confirmingId: '',\r\n            creatingTokenState: 'CLOSED',\r\n            token: {},\r\n            error: '',\r\n        };\r\n    }\r\n\r\n    enableBot = () => {\r\n        this.props.actions.enableBot(this.props.bot.user_id);\r\n    }\r\n\r\n    disableBot = () => {\r\n        this.props.actions.disableBot(this.props.bot.user_id);\r\n    }\r\n\r\n    enableUserAccessToken = (id) => {\r\n        this.props.actions.enableUserAccessToken(id);\r\n    }\r\n\r\n    disableUserAccessToken = (id) => {\r\n        this.props.actions.disableUserAccessToken(id);\r\n    }\r\n\r\n    confirmRevokeToken = (id) => {\r\n        this.setState({confirmingId: id});\r\n    }\r\n\r\n    revokeTokenConfirmed = () => {\r\n        this.props.actions.revokeUserAccessToken(this.state.confirmingId);\r\n        this.closeConfirm();\r\n    }\r\n\r\n    closeConfirm = () => {\r\n        this.setState({confirmingId: ''});\r\n    }\r\n\r\n    openCreateToken = () => {\r\n        this.setState({\r\n            creatingTokenState: 'OPEN',\r\n            token: {\r\n                description: '',\r\n            },\r\n        });\r\n    }\r\n\r\n    closeCreateToken = () => {\r\n        this.setState({\r\n            creatingTokenState: 'CLOSED',\r\n            token: {\r\n                description: '',\r\n            },\r\n        });\r\n    }\r\n\r\n    handleUpdateDescription = (e) => {\r\n        this.setState({\r\n            token: Object.assign({}, this.state.token, {description: e.target.value}),\r\n        });\r\n    }\r\n\r\n    handleCreateToken = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.token.description === '') {\r\n            this.setState({error: (\r\n                <FormattedMessage\r\n                    id='bot.token.error.description'\r\n                    defaultMessage='Please enter a description.'\r\n                />\r\n            )});\r\n            return;\r\n        }\r\n\r\n        const {data, error} = await this.props.actions.createUserAccessToken(this.props.bot.user_id, this.state.token.description);\r\n        if (data) {\r\n            this.setState({creatingTokenState: 'CREATED', token: data});\r\n        } else if (error) {\r\n            this.setState({error: error.message});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const username = this.props.bot.username || '';\r\n        const description = this.props.bot.description || '';\r\n        const displayName = this.props.bot.display_name || '';\r\n\r\n        let ownerUsername = 'plugin';\r\n        if (this.props.owner && this.props.owner.username) {\r\n            ownerUsername = this.props.owner.username;\r\n        }\r\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\r\n        if (!matchesFilter(this.props.bot, filter, this.props.owner)) {\r\n            return null;\r\n        }\r\n\r\n        const tokenList = [];\r\n        Object.values(this.props.accessTokens).forEach((token) => {\r\n            let activeLink;\r\n            let disableClass = '';\r\n            let disabledText;\r\n\r\n            if (token.is_active) {\r\n                activeLink = (\r\n                    <a\r\n                        name={token.id + '_deactivate'}\r\n                        href='#'\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.disableUserAccessToken(token.id);\r\n                        }}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.deactivate'\r\n                            defaultMessage='Disable'\r\n                        />\r\n                    </a>);\r\n            } else {\r\n                disableClass = 'light';\r\n                disabledText = (\r\n                    <span className='margin-right light'>\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.deactivatedWarning'\r\n                            defaultMessage='(Disabled)'\r\n                        />\r\n                    </span>\r\n                );\r\n                activeLink = (\r\n                    <a\r\n                        name={token.id + '_activate'}\r\n                        href='#'\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.enableUserAccessToken(token.id);\r\n                        }}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.activate'\r\n                            defaultMessage='Enable'\r\n                        />\r\n                    </a>\r\n                );\r\n            }\r\n\r\n            tokenList.push(\r\n                <div\r\n                    key={token.id}\r\n                    className='bot-list__item'\r\n                >\r\n                    <div className='item-details__row d-flex justify-content-between'>\r\n                        <div className={disableClass}>\r\n                            <div className='whitespace--nowrap overflow--ellipsis'>\r\n                                <b>\r\n                                    <FormattedMessage\r\n                                        id='user.settings.tokens.tokenDesc'\r\n                                        defaultMessage='Token Description: '\r\n                                    />\r\n                                </b>\r\n                                {token.description}\r\n                            </div>\r\n                            <div className='setting-box__token-id whitespace--nowrap overflow--ellipsis'>\r\n                                <b>\r\n                                    <FormattedMessage\r\n                                        id='user.settings.tokens.tokenId'\r\n                                        defaultMessage='Token ID: '\r\n                                    />\r\n                                </b>\r\n                                {token.id}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            {disabledText}\r\n                            {activeLink}\r\n                            {' - '}\r\n                            <a\r\n                                name={token.id + '_delete'}\r\n                                href='#'\r\n                                onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    this.confirmRevokeToken(token.id);\r\n                                }}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='user.settings.tokens.delete'\r\n                                    defaultMessage='Delete'\r\n                                />\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        let options;\r\n        if (ownerUsername !== 'plugin') {\r\n            options = (\r\n                <div className='item-actions'>\r\n                    <button\r\n                        id='createToken'\r\n                        className='style--none color--link'\r\n                        onClick={this.openCreateToken}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='bot.manage.create_token'\r\n                            defaultMessage='Create New Token'\r\n                        />\r\n                    </button>\r\n                    {' - '}\r\n                    <Link to={`/${this.props.team.name}/integrations/bots/edit?id=${this.props.bot.user_id}`}>\r\n                        <FormattedMessage\r\n                            id='bots.manage.edit'\r\n                            defaultMessage='Edit'\r\n                        />\r\n                    </Link>\r\n                    {' - '}\r\n                    <button\r\n                        className='style--none color--link'\r\n                        onClick={this.disableBot}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='bot.manage.disable'\r\n                            defaultMessage='Disable'\r\n                        />\r\n                    </button>\r\n                </div>\r\n            );\r\n        }\r\n        if (this.props.bot.delete_at !== 0) {\r\n            options = (\r\n                <div className='item-actions'>\r\n                    <button\r\n                        className='style--none color--link'\r\n                        onClick={this.enableBot}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='bot.manage.enable'\r\n                            defaultMessage='Enable'\r\n                        />\r\n                    </button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.creatingTokenState === 'OPEN') {\r\n            tokenList.push(\r\n                <div\r\n                    key={'create'}\r\n                    className='bot-list__item'\r\n                >\r\n                    <div key={'create'}>\r\n                        <form\r\n                            className='form-horizontal'\r\n                            onSubmit={this.handleCreateToken}\r\n                        >\r\n                            <div className='row'>\r\n                                <label className='col-sm-auto control-label'>\r\n                                    <FormattedMessage\r\n                                        id='user.settings.tokens.name'\r\n                                        defaultMessage='Token Description: '\r\n                                    />\r\n                                </label>\r\n                                <div className='col-sm-4'>\r\n                                    <input\r\n                                        autoFocus={true}\r\n                                        className='form-control form-sm'\r\n                                        type='text'\r\n                                        maxLength={64}\r\n                                        value={this.state.token.description}\r\n                                        onChange={this.handleUpdateDescription}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className='padding-top padding-bottom'>\r\n                                    <FormattedMessage\r\n                                        id='user.settings.tokens.nameHelp'\r\n                                        defaultMessage='Enter a description for your token to remember what it does.'\r\n                                    />\r\n                                </div>\r\n                                <label\r\n                                    id='clientError'\r\n                                    className='has-error is-empty'\r\n                                >\r\n                                    {this.state.error}\r\n                                </label>\r\n                                <div className='margin-top'>\r\n                                    <SaveButton\r\n                                        btnClass='btn-sm btn-primary'\r\n                                        savingMessage={\r\n                                            <FormattedMessage\r\n                                                id='user.settings.tokens.save'\r\n                                                defaultMessage='Save'\r\n                                            />\r\n                                        }\r\n                                        saving={false}\r\n                                    />\r\n                                    <button\r\n                                        className='btn btn-sm btn-link'\r\n                                        onClick={this.closeCreateToken}\r\n                                    >\r\n                                        <FormattedMessage\r\n                                            id='user.settings.tokens.cancel'\r\n                                            defaultMessage='Cancel'\r\n                                        />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (this.state.creatingTokenState === 'CREATED') {\r\n            tokenList.push(\r\n                <div\r\n                    key={'created'}\r\n                    className='bot-list__item alert alert-warning'\r\n                >\r\n                    <div className='margin-bottom'>\r\n                        <WarningIcon additionalClassName='margin-right'/>\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.copy'\r\n                            defaultMessage=\"Please copy the access token below. You won't be able to see it again!\"\r\n                        />\r\n                    </div>\r\n                    <div className='whitespace--nowrap overflow--ellipsis'>\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.name'\r\n                            defaultMessage='Token Description: '\r\n                        />\r\n                        {this.state.token.description}\r\n                    </div>\r\n                    <div className='whitespace--nowrap overflow--ellipsis'>\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.id'\r\n                            defaultMessage='Token ID: '\r\n                        />\r\n                        {this.state.token.id}\r\n                    </div>\r\n                    <strong className='word-break--all'>\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.token'\r\n                            defaultMessage='Access Token: '\r\n                        />\r\n                        {this.state.token.token}\r\n                    </strong>\r\n                    <div className='margin-top'>\r\n                        <button\r\n                            className='btn btn-sm btn-primary'\r\n                            onClick={this.closeCreateToken}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='bot.create_token.close'\r\n                                defaultMessage='Close'\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const imageURL = Utils.imageURLForUser(this.props.bot.user_id);\r\n\r\n        return (\r\n            <div className='backstage-list__item'>\r\n                <div className={'bot-list-img-container'}>\r\n                    <img\r\n                        className={'bot-list-img'}\r\n                        alt={'bot image'}\r\n                        src={imageURL}\r\n                    />\r\n                </div>\r\n                <div className='item-details'>\r\n                    <div className='item-details__row d-flex justify-content-between'>\r\n                        <strong className='item-details__name'>\r\n                            {displayName + ' (@' + username + ')'}\r\n                        </strong>\r\n                        {options}\r\n                    </div>\r\n                    <div className='bot-details__description'>\r\n                        <Markdown message={description}/>\r\n                    </div>\r\n                    <div className='light small'>\r\n                        <FormattedMessage\r\n                            id='bots.managed_by'\r\n                            defaultMessage='Managed by '\r\n                        />\r\n                        {ownerUsername}\r\n                    </div>\r\n                    <div className='bot-list is-empty'>\r\n                        {tokenList}\r\n                    </div>\r\n                </div>\r\n                <ConfirmModal\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='bots.token.delete'\r\n                            defaultMessage='Delete Token'\r\n                        />\r\n                    }\r\n                    message={\r\n                        <FormattedMessage\r\n                            id='bots.token.confirm_text'\r\n                            defaultMessage='Are you sure you want to delete the token?'\r\n                        />\r\n                    }\r\n                    confirmButtonText={\r\n                        <FormattedMessage\r\n                            id='bots.token.confirm'\r\n                            defaultMessage='Delete'\r\n                        />\r\n                    }\r\n                    show={this.state.confirmingId !== ''}\r\n                    onConfirm={this.revokeTokenConfirmed}\r\n                    onCancel={this.closeConfirm}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\r\nimport Constants from 'utils/constants.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\n\r\nimport Bot, {matchesFilter} from './bot.jsx';\r\n\r\nexport default class Bots extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        *  Map from botUserId to bot.\r\n        */\r\n        bots: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        *  Map from botUserId to accessTokens.\r\n        */\r\n        accessTokens: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        *  Map from botUserId to owner.\r\n        */\r\n        owners: PropTypes.object.isRequired,\r\n\r\n        createBots: PropTypes.bool,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n            * Ensure we have bot accounts\r\n            */\r\n            loadBots: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * Load access tokens for bot accounts\r\n            */\r\n            getUserAccessTokensForUser: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * Access token managment\r\n            */\r\n            createUserAccessToken: PropTypes.func.isRequired,\r\n            revokeUserAccessToken: PropTypes.func.isRequired,\r\n            enableUserAccessToken: PropTypes.func.isRequired,\r\n            disableUserAccessToken: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * Load owner of bot account\r\n            */\r\n            getUser: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * Disable a bot\r\n            */\r\n            disableBot: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * Enable a bot\r\n            */\r\n            enableBot: PropTypes.func.isRequired,\r\n        }),\r\n\r\n        /**\r\n        *  Only used for routing since backstage is team based.\r\n        */\r\n        team: PropTypes.object.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.actions.loadBots(\r\n            Constants.Integrations.START_PAGE_NUM,\r\n            Constants.Integrations.PAGE_SIZE\r\n        ).then(\r\n            (result) => {\r\n                if (result.data) {\r\n                    const promises = [];\r\n\r\n                    for (const bot of result.data) {\r\n                        // We don't need to wait for this and we need to accept failure in the case where bot.owner_id is a plugin id\r\n                        this.props.actions.getUser(bot.owner_id);\r\n\r\n                        // We want to wait for these.\r\n                        promises.push(this.props.actions.getUser(bot.user_id));\r\n                        promises.push(this.props.actions.getUserAccessTokensForUser(bot.user_id));\r\n                    }\r\n\r\n                    Promise.all(promises).then(() => {\r\n                        this.setState({loading: false});\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    DisabledSection(props) {\r\n        if (!props.hasDisabled) {\r\n            return null;\r\n        }\r\n        const botsToDisplay = React.Children.map(props.disabledBots, (child) => {\r\n            return React.cloneElement(child, {filter: props.filter});\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n                <div className='bot-disabled'>\r\n                    <FormattedMessage\r\n                        id='bots.disabled'\r\n                        defaultMessage='Disabled'\r\n                    />\r\n                </div>\r\n                <div className='bot-list__disabled'>\r\n                    {botsToDisplay}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    EnabledSection(props) {\r\n        const botsToDisplay = React.Children.map(props.enabledBots, (child) => {\r\n            return React.cloneElement(child, {filter: props.filter});\r\n        });\r\n        return (\r\n            <div>\r\n                {botsToDisplay}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    botToJSX = (bot) => {\r\n        return (\r\n            <Bot\r\n                key={bot.user_id}\r\n                bot={bot}\r\n                owner={this.props.owners[bot.user_id]}\r\n                accessTokens={this.props.accessTokens[bot.user_id] || {}}\r\n                actions={this.props.actions}\r\n                team={this.props.team}\r\n            />\r\n        );\r\n    };\r\n\r\n    bots = (filter) => {\r\n        const bots = Object.values(this.props.bots).sort((a, b) => a.username.localeCompare(b.username));\r\n        const match = (bot) => matchesFilter(bot, filter, this.props.owners[bot.user_id]);\r\n        const enabledBots = bots.filter((bot) => bot.delete_at === 0).filter(match).map(this.botToJSX);\r\n        const disabledBots = bots.filter((bot) => bot.delete_at > 0).filter(match).map(this.botToJSX);\r\n        const sections = (\r\n            <div key='sections'>\r\n                <this.EnabledSection\r\n                    enabledBots={enabledBots}\r\n                />\r\n                <this.DisabledSection\r\n                    hasDisabled={disabledBots.length > 0}\r\n                    disabledBots={disabledBots}\r\n                />\r\n            </div>\r\n        );\r\n\r\n        return [sections, enabledBots.length > 0 || disabledBots.length > 0];\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BackstageList\r\n                header={\r\n                    <FormattedMessage\r\n                        id='bots.manage.header'\r\n                        defaultMessage='Bot Accounts'\r\n                    />\r\n                }\r\n                addText={this.props.createBots &&\r\n                    <FormattedMessage\r\n                        id='bots.manage.add'\r\n                        defaultMessage='Add Bot Account'\r\n                    />\r\n                }\r\n                addLink={'/' + this.props.team.name + '/integrations/bots/add'}\r\n                addButtonId='addBotAccount'\r\n                emptyText={\r\n                    <FormattedMessage\r\n                        id='bots.manage.empty'\r\n                        defaultMessage='No bot accounts found'\r\n                    />\r\n                }\r\n                emptyTextSearch={\r\n                    <FormattedMarkdownMessage\r\n                        id='bots.manage.emptySearch'\r\n                        defaultMessage='No bot accounts match **{searchTerm}**'\r\n                    />\r\n                }\r\n                helpText={\r\n                    <FormattedMessage\r\n                        id='bots.manage.help'\r\n                        defaultMessage='Use {botAccounts} to integrate with Mattermost through plugins or the API. Bot accounts are available to everyone on your server.'\r\n                        values={{\r\n                            botAccounts: (\r\n                                <a\r\n                                    target='_blank'\r\n                                    rel='noopener noreferrer'\r\n                                    href='https://mattermost.com/pl/default-bot-accounts'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='bots.manage.bot_accounts'\r\n                                        defaultMessage='Bot Accounts'\r\n                                    />\r\n                                </a>\r\n                            ),\r\n                        }}\r\n                    />\r\n                }\r\n                searchPlaceholder={Utils.localizeMessage('bots.manage.search', 'Search Bot Accounts')}\r\n                loading={this.state.loading}\r\n            >\r\n                {this.bots}\r\n            </BackstageList>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {loadBots, disableBot, enableBot} from 'mattermost-redux/actions/bots';\r\nimport {createUserAccessToken, revokeUserAccessToken, enableUserAccessToken, disableUserAccessToken, getUserAccessTokensForUser, getUser} from 'mattermost-redux/actions/users';\r\nimport * as UserSelectors from 'mattermost-redux/selectors/entities/users';\r\n\r\nimport Bots from './bots.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n    const createBots = config.EnableBotAccountCreation === 'true';\r\n    const bots = getBotAccounts(state);\r\n    const owners = Object.values(bots).\r\n        reduce((result, bot) => {\r\n            result[bot.user_id] = UserSelectors.getUser(state, bot.owner_id);\r\n            return result;\r\n        }, {});\r\n    return {\r\n        createBots,\r\n        bots,\r\n        accessTokens: state.entities.admin.userAccessTokensByUser,\r\n        owners,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            loadBots,\r\n            getUserAccessTokensForUser,\r\n            createUserAccessToken,\r\n            revokeUserAccessToken,\r\n            enableUserAccessToken,\r\n            disableUserAccessToken,\r\n            getUser,\r\n            disableBot,\r\n            enableBot,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Bots);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {intlShape} from 'react-intl';\r\n\r\nexport default class BackstageHeader extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            children: PropTypes.node,\r\n        };\r\n    }\r\n    static contextTypes = {\r\n        intl: intlShape.isRequired,\r\n    };\r\n\r\n    render() {\r\n        const children = [];\r\n        const {formatMessage} = this.context.intl;\r\n\r\n        React.Children.forEach(this.props.children, (child, index) => {\r\n            if (index !== 0) {\r\n                children.push(\r\n                    <span\r\n                        key={'divider' + index}\r\n                        className='backstage-header__divider'\r\n                    >\r\n                        <i\r\n                            className='fa fa-angle-right'\r\n                            title={formatMessage({id: 'generic_icons.breadcrumb', defaultMessage: 'Breadcrumb Icon'})}\r\n                        />\r\n                    </span>\r\n                );\r\n            }\r\n\r\n            children.push(child);\r\n        });\r\n\r\n        return (\r\n            <div className='backstage-header'>\r\n                <h1>\r\n                    {children}\r\n                </h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\r\n\r\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\r\nimport {General} from 'mattermost-redux/constants';\r\n\r\nimport BotDefaultIcon from 'images/bot_default_icon.png';\r\n\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\r\nimport SpinnerButton from 'components/spinner_button.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\nimport FormError from 'components/form_error.jsx';\r\nimport {AcceptedProfileImageTypes, OVERLAY_TIME_DELAY} from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport * as FileUtils from 'utils/file_utils.jsx';\r\n\r\nconst roleOptionSystemAdmin = 'System Admin';\r\nconst roleOptionMember = 'Member';\r\n\r\nexport default class AddBot extends React.Component {\r\n    static propTypes = {\r\n\r\n        /**\r\n        *  Only used for routing since backstage is team based.\r\n        */\r\n        team: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        *  Bot to edit (if editing)\r\n        */\r\n        bot: PropTypes.object,\r\n\r\n        /**\r\n        *  Roles of the bot to edit (if editing)\r\n        */\r\n        roles: PropTypes.string,\r\n\r\n        /**\r\n        * Maximum upload file size (for bot account profile picture)\r\n        */\r\n        maxFileSize: PropTypes.number.isRequired,\r\n\r\n        /**\r\n         * Editing user has the MANAGE_SYSTEM permission\r\n        */\r\n        editingUserHasManageSystem: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n        * Bot to edit\r\n        */\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n            * Creates a new bot account.\r\n            */\r\n            createBot: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * Patches an existing bot account.\r\n            */\r\n            patchBot: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * Uploads a user profile image\r\n            */\r\n            uploadProfileImage: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * Set profile image to default\r\n            */\r\n            setDefaultProfileImage: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * For creating default access token\r\n            */\r\n            createUserAccessToken: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * For creating setting bot to system admin or special posting permissions\r\n            */\r\n            updateUserRoles: PropTypes.func.isRequired,\r\n        }),\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: '',\r\n            username: '',\r\n            displayName: '',\r\n            description: '',\r\n            adding: false,\r\n            image: BotDefaultIcon,\r\n            role: roleOptionMember,\r\n            postAll: false,\r\n            postChannels: false,\r\n        };\r\n\r\n        if (this.props.bot) {\r\n            this.state.username = this.props.bot.username;\r\n            this.state.displayName = this.props.bot.display_name;\r\n            this.state.description = this.props.bot.description;\r\n            this.state.role = UserUtils.isSystemAdmin(this.props.roles || '') ? roleOptionSystemAdmin : roleOptionMember;\r\n            this.state.postAll = UserUtils.hasPostAllRole(this.props.roles || '');\r\n            this.state.postChannels = UserUtils.hasPostAllPublicRole(this.props.roles || '');\r\n        }\r\n    }\r\n\r\n    updateUsername = (e) => {\r\n        this.setState({\r\n            username: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateDisplayName = (e) => {\r\n        this.setState({\r\n            displayName: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateDescription = (e) => {\r\n        this.setState({\r\n            description: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateRole = (e) => {\r\n        this.setState({\r\n            role: e.target.value,\r\n        });\r\n    }\r\n\r\n    updatePostAll = (e) => {\r\n        this.setState({\r\n            postAll: e.target.checked,\r\n        });\r\n    }\r\n\r\n    updatePostChannels = (e) => {\r\n        this.setState({\r\n            postChannels: e.target.checked,\r\n        });\r\n    }\r\n\r\n    updatePicture = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            const pictureFile = e.target.files[0];\r\n            this.previewBlob = URL.createObjectURL(pictureFile);\r\n\r\n            var reader = new FileReader();\r\n            reader.onload = (e2) => {\r\n                const orientation = FileUtils.getExifOrientation(e2.target.result);\r\n                const orientationStyles = FileUtils.getOrientationStyles(orientation);\r\n\r\n                this.setState({\r\n                    image: this.previewBlob,\r\n                    orientationStyles,\r\n                });\r\n            };\r\n            reader.readAsArrayBuffer(pictureFile);\r\n            e.target.value = null;\r\n            this.setState({pictureFile});\r\n        } else {\r\n            this.setState({pictureFile: null, image: null});\r\n        }\r\n    }\r\n\r\n    setDefault = () => {\r\n        this.setState({pictureFile: 'default', image: BotDefaultIcon});\r\n    }\r\n\r\n    updateRoles = async (data) => {\r\n        let roles = General.SYSTEM_USER_ROLE;\r\n\r\n        if (this.state.role === roleOptionSystemAdmin) {\r\n            roles += ' ' + General.SYSTEM_ADMIN_ROLE;\r\n        } else if (this.state.postAll) {\r\n            roles += ' ' + General.SYSTEM_POST_ALL_ROLE;\r\n        } else if (this.state.postChannels) {\r\n            roles += ' ' + General.SYSTEM_POST_ALL_PUBLIC_ROLE;\r\n        }\r\n\r\n        const rolesResult = await this.props.actions.updateUserRoles(data.user_id, roles);\r\n        if (rolesResult) {\r\n            return rolesResult.error;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.adding) {\r\n            return;\r\n        }\r\n\r\n        if (!this.state.username || this.state.username.length < 3) {\r\n            this.setState({\r\n                error: (\r\n                    <FormattedMessage\r\n                        id='bots.manage.add.invalid_username'\r\n                        defaultMessage='Usernames have to begin with a lowercase letter and be 3-22 characters long. You can use lowercase letters, numbers, periods, dashes, and underscores.'\r\n                    />\r\n                ),\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (this.state.pictureFile) {\r\n            if (!AcceptedProfileImageTypes.includes(this.state.pictureFile.type)) {\r\n                this.setState({\r\n                    error: (\r\n                        <FormattedMessage\r\n                            id='user.settings.general.validImage'\r\n                            defaultMessage='Only BMP, JPG or PNG images may be used for profile pictures'\r\n                        />\r\n                    ),\r\n                });\r\n            } else if (this.state.pictureFile.size > this.props.maxFileSize) {\r\n                this.setState({\r\n                    error: (\r\n                        <FormattedMessage\r\n                            id='user.settings.general.imageTooLarge'\r\n                            defaultMessage='Unable to upload profile image. File is too large.'\r\n                        />\r\n                    ),\r\n                });\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            adding: true,\r\n            error: '',\r\n        });\r\n\r\n        const bot = {\r\n            username: this.state.username.toLowerCase(),\r\n            display_name: this.state.displayName,\r\n            description: this.state.description,\r\n        };\r\n\r\n        let data;\r\n        let error;\r\n        if (this.props.bot) {\r\n            const result = await this.props.actions.patchBot(this.props.bot.user_id, bot);\r\n            if (result) {\r\n                data = result.data;\r\n                error = result.error;\r\n            } else {\r\n                error = Utils.localizeMessage('bot.edit_failed', 'Failed to edit bot');\r\n            }\r\n\r\n            if (!error) {\r\n                if (this.state.pictureFile && this.state.pictureFile !== 'default') {\r\n                    const imageResult = await this.props.actions.uploadProfileImage(data.user_id, this.state.pictureFile);\r\n                    error = imageResult.error;\r\n                } else {\r\n                    await this.props.actions.setDefaultProfileImage(data.user_id);\r\n                }\r\n            }\r\n\r\n            if (!error && data) {\r\n                error = this.updateRoles(data);\r\n            }\r\n\r\n            if (data) {\r\n                browserHistory.push(`/${this.props.team.name}/integrations/bots`);\r\n                return;\r\n            }\r\n        } else {\r\n            const usernameError = Utils.isValidUsername(bot.username);\r\n            if (usernameError) {\r\n                this.setState({\r\n                    adding: false,\r\n                    error: usernameError,\r\n                });\r\n                return;\r\n            }\r\n\r\n            const result = await this.props.actions.createBot(bot);\r\n            if (result) {\r\n                data = result.data;\r\n                error = result.error;\r\n            } else {\r\n                error = Utils.localizeMessage('bot.create_failed', 'Failed to create bot');\r\n            }\r\n\r\n            let token = '';\r\n            if (!error) {\r\n                if (this.state.pictureFile && this.state.pictureFile !== 'default') {\r\n                    await this.props.actions.uploadProfileImage(data.user_id, this.state.pictureFile);\r\n                } else {\r\n                    await this.props.actions.setDefaultProfileImage(data.user_id);\r\n                }\r\n                const tokenResult = await this.props.actions.createUserAccessToken(data.user_id,\r\n                    Utils.localizeMessage('bot.token.default.description', 'Default Token')\r\n                );\r\n\r\n                // On error just skip the confirmation because we have a bot without a token.\r\n                if (!tokenResult || tokenResult.error) {\r\n                    browserHistory.push(`/${this.props.team.name}/integrations/bots`);\r\n                    return;\r\n                }\r\n\r\n                token = tokenResult.data.token;\r\n            }\r\n\r\n            if (!error && data) {\r\n                error = this.updateRoles(data);\r\n            }\r\n\r\n            if (data) {\r\n                browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=bots&id=${data.user_id}&token=${token}`);\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            adding: false,\r\n        });\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: error.message,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let subtitle = (\r\n            <FormattedMessage\r\n                id='bots.manage.add'\r\n                defaultMessage='Add'\r\n            />\r\n        );\r\n        let buttonText = (\r\n            <FormattedMessage\r\n                id='bots.manage.add.create'\r\n                defaultMessage='Create Bot Account'\r\n            />\r\n        );\r\n        let buttonActiveText = (\r\n            <FormattedMessage\r\n                id='bots.manage.add.creating'\r\n                defaultMessage='Creating...'\r\n            />\r\n        );\r\n\r\n        // If we are editing\r\n        if (this.props.bot) {\r\n            subtitle = (\r\n                <FormattedMessage\r\n                    id='bots.manage.edit'\r\n                    defaultMessage='Edit'\r\n                />\r\n            );\r\n            buttonText = (\r\n                <FormattedMessage\r\n                    id='bots.manage.edit.title'\r\n                    defaultMessage='Update'\r\n                />\r\n            );\r\n            buttonActiveText = (\r\n                <FormattedMessage\r\n                    id='bots.manage.edit.editing'\r\n                    defaultMessage='Updating...'\r\n                />\r\n            );\r\n        }\r\n\r\n        let imageURL = '';\r\n        let removeImageIcon = (\r\n            <OverlayTrigger\r\n                trigger={['hover', 'focus']}\r\n                delayShow={OVERLAY_TIME_DELAY}\r\n                placement='right'\r\n                overlay={(\r\n                    <Tooltip id='removeIcon'>\r\n                        <FormattedMessage\r\n                            id='bot.remove_profile_picture'\r\n                            defaultMessage='Remove Bot Icon'\r\n                        />\r\n                    </Tooltip>\r\n                )}\r\n            >\r\n                <a\r\n                    className={'bot-profile__remove'}\r\n                    onClick={this.setDefault}\r\n                >\r\n                    <span>{'×'}</span>\r\n                </a>\r\n            </OverlayTrigger>\r\n        );\r\n        let imageStyles = null;\r\n        if (this.props.bot && !this.state.pictureFile) {\r\n            imageURL = Utils.imageURLForUser(this.props.bot.user_id);\r\n        } else {\r\n            imageURL = this.state.image;\r\n            imageStyles = this.state.orientationStyles;\r\n            if (this.state.image === BotDefaultIcon) {\r\n                removeImageIcon = null;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='backstage-content'>\r\n                <BackstageHeader>\r\n                    <Link to={`/${this.props.team.name}/integrations/bots`}>\r\n                        <FormattedMessage\r\n                            id='bots.manage.header'\r\n                            defaultMessage='Bot Accounts'\r\n                        />\r\n                    </Link>\r\n                    {subtitle}\r\n                </BackstageHeader>\r\n                <div className='backstage-form'>\r\n                    <form\r\n                        className='form-horizontal'\r\n                        onSubmit={this.handleSubmit}\r\n                    >\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='username'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='bots.add.username'\r\n                                    defaultMessage='Username'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <input\r\n                                    id='username'\r\n                                    type='text'\r\n                                    maxLength='22'\r\n                                    className='form-control'\r\n                                    value={this.state.username}\r\n                                    onChange={this.updateUsername}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='bot.add.username.help'\r\n                                        defaultMessage='You can use lowercase letters, numbers, periods, dashes, and underscores.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='boticon'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='bots.add.icon'\r\n                                    defaultMessage='Bot Icon'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <div className={'bot-img-container'}>\r\n                                    <img\r\n                                        className={'bot-img'}\r\n                                        alt={'bot image'}\r\n                                        src={imageURL}\r\n                                        style={imageStyles}\r\n                                    />\r\n                                    {removeImageIcon}\r\n                                </div>\r\n                                <div\r\n                                    className='btn btn-sm btn-primary btn-file sel-btn'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='bots.image.upload'\r\n                                        defaultMessage='Upload an image'\r\n                                    />\r\n                                    <input\r\n                                        accept='.jpg,.png,.bmp'\r\n                                        type='file'\r\n                                        onChange={this.updatePicture}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='displayName'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='bots.add.displayName'\r\n                                    defaultMessage='Display Name'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <input\r\n                                    id='displayName'\r\n                                    type='text'\r\n                                    maxLength='64'\r\n                                    className='form-control'\r\n                                    value={this.state.displayName}\r\n                                    onChange={this.updateDisplayName}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='bot.add.display_name.help'\r\n                                        defaultMessage={'(Optional) You can choose to display your bot\\'s full name rather than its username.'}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='description'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='bot.add.description'\r\n                                    defaultMessage='Description'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <input\r\n                                    id='description'\r\n                                    type='text'\r\n                                    maxLength='1024'\r\n                                    className='form-control'\r\n                                    value={this.state.description}\r\n                                    onChange={this.updateDescription}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='bot.add.description.help'\r\n                                        defaultMessage='(Optional) Let others know what this bot does.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='role'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='bot.add.role'\r\n                                    defaultMessage='Role'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <select\r\n                                    className='form-control'\r\n                                    value={this.state.role}\r\n                                    disabled={!this.props.editingUserHasManageSystem}\r\n                                    onChange={this.updateRole}\r\n                                >\r\n                                    <option\r\n                                        value={roleOptionMember}\r\n                                    >\r\n                                        {roleOptionMember}\r\n                                    </option>\r\n                                    <option\r\n                                        value={roleOptionSystemAdmin}\r\n                                    >\r\n                                        {roleOptionSystemAdmin}\r\n                                    </option>\r\n                                </select>\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='bot.add.role.help'\r\n                                        defaultMessage='Choose what role the bot should have.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row bot-profile__section'>\r\n                            <div className='col-md-5 col-sm-8 col-sm-offset-4'>\r\n                                <FormattedMarkdownMessage\r\n                                    id='admin.manage_roles.additionalRoles'\r\n                                    defaultMessage='Select additional permissions for the account. [Read more about roles and permissions](!https://about.mattermost.com/default-permissions).'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='postAll'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='bot.add.post_all'\r\n                                    defaultMessage='post:all'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8 checkbox'>\r\n                                <div className='checkbox no-padding'>\r\n                                    <label htmlFor='postAll'>\r\n                                        <input\r\n                                            id='postAll'\r\n                                            type='checkbox'\r\n                                            checked={this.state.postAll || this.state.role === roleOptionSystemAdmin}\r\n                                            onChange={this.updatePostAll}\r\n                                            disabled={!this.props.editingUserHasManageSystem || this.state.role === roleOptionSystemAdmin}\r\n                                        />\r\n                                        <FormattedMessage\r\n                                            id='bot.add.post_all.enabled'\r\n                                            defaultMessage='Enabled'\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='bot.add.post_all.help'\r\n                                        defaultMessage='Bot will have access to post to all Mattermost channels including direct messages.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='postChannels'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='bot.add.post_channels'\r\n                                    defaultMessage='post:channels'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8 checkbox'>\r\n                                <div className='checkbox no-padding'>\r\n                                    <label htmlFor='postChannels'>\r\n                                        <input\r\n                                            id='postChannels'\r\n                                            type='checkbox'\r\n                                            checked={this.state.postChannels || this.state.role === roleOptionSystemAdmin || this.state.postAll}\r\n                                            onChange={this.updatePostChannels}\r\n                                            disabled={!this.props.editingUserHasManageSystem || this.state.role === roleOptionSystemAdmin || this.state.postAll}\r\n                                        />\r\n                                        <FormattedMessage\r\n                                            id='bot.add.post_channels.enabled'\r\n                                            defaultMessage='Enabled'\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='bot.add.post_channels.help'\r\n                                        defaultMessage='Bot will have access to post to all Mattermost public channels.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='backstage-form__footer'>\r\n                            <FormError\r\n                                type='backstage'\r\n                                errors={[this.state.error]}\r\n                            />\r\n                            <Link\r\n                                className='btn btn-link btn-sm'\r\n                                to={`/${this.props.team.name}/integrations/bots`}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='bots.manage.add.cancel'\r\n                                    defaultMessage='Cancel'\r\n                                />\r\n                            </Link>\r\n                            <SpinnerButton\r\n                                className='btn btn-primary'\r\n                                type='submit'\r\n                                spinning={this.state.adding}\r\n                                spinningText={buttonActiveText}\r\n                                onClick={this.handleSubmit}\r\n                                id='saveBot'\r\n                            >\r\n                                {buttonText}\r\n                            </SpinnerButton>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {updateUserRoles, uploadProfileImage, setDefaultProfileImage, createUserAccessToken} from 'mattermost-redux/actions/users';\r\nimport {createBot, patchBot} from 'mattermost-redux/actions/bots';\r\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {getUsers} from 'mattermost-redux/selectors/entities/common';\r\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\r\nimport {Permissions} from 'mattermost-redux/constants';\r\n\r\nimport AddBot from './add_bot.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const config = getConfig(state);\r\n    const botId = (new URLSearchParams(ownProps.location.search)).get('id');\r\n    const bots = getBotAccounts(state);\r\n    const bot = bots ? bots[botId] : null;\r\n    const user = bot ? getUsers(state)[bot.user_id] : null;\r\n    const roles = user ? user.roles : null;\r\n    return {\r\n        maxFileSize: parseInt(config.MaxFileSize, 10),\r\n        bot,\r\n        roles,\r\n        editingUserHasManageSystem: haveISystemPermission(state, {permission: Permissions.MANAGE_SYSTEM}),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            createBot,\r\n            patchBot,\r\n            uploadProfileImage,\r\n            setDefaultProfileImage,\r\n            createUserAccessToken,\r\n            updateUserRoles,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddBot);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class IntegrationOption extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            image: PropTypes.string.isRequired,\r\n            title: PropTypes.node.isRequired,\r\n            description: PropTypes.node.isRequired,\r\n            link: PropTypes.string.isRequired,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {image, title, description, link} = this.props;\r\n\r\n        return (\r\n            <Link\r\n                to={link}\r\n                className='integration-option'\r\n            >\r\n                <img\r\n                    alt={'integration image'}\r\n                    className='integration-option__image'\r\n                    src={image}\r\n                />\r\n                <div className='integration-option__title'>\r\n                    {title}\r\n                </div>\r\n                <div className='integration-option__description'>\r\n                    {description}\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {Permissions} from 'mattermost-redux/constants';\r\n\r\nimport BotAccountsIcon from 'images/bot_default_icon.png';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport IncomingWebhookIcon from 'images/post-robot-icon.png';\r\nimport OAuthIcon from 'images/oauth_icon.png';\r\nimport OutgoingWebhookIcon from 'images/post-robot-icon.png';\r\nimport SlashCommandIcon from 'images/slash_command_icon.jpg';\r\n\r\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\r\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\r\n\r\nimport IntegrationOption from './integration_option.jsx';\r\n\r\nexport default class Integrations extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            team: PropTypes.object,\r\n            user: PropTypes.object,\r\n            siteName: PropTypes.string,\r\n            enableIncomingWebhooks: PropTypes.bool,\r\n            enableOutgoingWebhooks: PropTypes.bool,\r\n            enableCommands: PropTypes.bool,\r\n            enableOAuthServiceProvider: PropTypes.bool,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateTitle();\r\n    }\r\n\r\n    updateTitle = () => {\r\n        const currentSiteName = this.props.siteName || '';\r\n        document.title = Utils.localizeMessage('admin.sidebar.integrations', 'Integrations') + ' - ' + this.props.team.display_name + ' ' + currentSiteName;\r\n    }\r\n\r\n    render() {\r\n        const options = [];\r\n\r\n        if (this.props.enableIncomingWebhooks) {\r\n            options.push(\r\n                <TeamPermissionGate\r\n                    teamId={this.props.team.id}\r\n                    permissions={[Permissions.MANAGE_INCOMING_WEBHOOKS]}\r\n                    key='incomingWebhookPermission'\r\n                >\r\n                    <IntegrationOption\r\n                        key='incomingWebhook'\r\n                        image={IncomingWebhookIcon}\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='integrations.incomingWebhook.title'\r\n                                defaultMessage='Incoming Webhook'\r\n                            />\r\n                        }\r\n                        description={\r\n                            <FormattedMessage\r\n                                id='integrations.incomingWebhook.description'\r\n                                defaultMessage='Incoming webhooks allow external integrations to send messages'\r\n                            />\r\n                        }\r\n                        link={'/' + this.props.team.name + '/integrations/incoming_webhooks'}\r\n                    />\r\n                </TeamPermissionGate>\r\n            );\r\n        }\r\n\r\n        if (this.props.enableOutgoingWebhooks) {\r\n            options.push(\r\n                <TeamPermissionGate\r\n                    teamId={this.props.team.id}\r\n                    permissions={[Permissions.MANAGE_OUTGOING_WEBHOOKS]}\r\n                    key='outgoingWebhookPermission'\r\n                >\r\n                    <IntegrationOption\r\n                        key='outgoingWebhook'\r\n                        image={OutgoingWebhookIcon}\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='integrations.outgoingWebhook.title'\r\n                                defaultMessage='Outgoing Webhook'\r\n                            />\r\n                        }\r\n                        description={\r\n                            <FormattedMessage\r\n                                id='integrations.outgoingWebhook.description'\r\n                                defaultMessage='Outgoing webhooks allow external integrations to receive and respond to messages'\r\n                            />\r\n                        }\r\n                        link={'/' + this.props.team.name + '/integrations/outgoing_webhooks'}\r\n                    />\r\n                </TeamPermissionGate>\r\n            );\r\n        }\r\n\r\n        if (this.props.enableCommands) {\r\n            options.push(\r\n                <TeamPermissionGate\r\n                    teamId={this.props.team.id}\r\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\r\n                    key='commandPermission'\r\n                >\r\n                    <IntegrationOption\r\n                        key='command'\r\n                        image={SlashCommandIcon}\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='integrations.command.title'\r\n                                defaultMessage='Slash Command'\r\n                            />\r\n                        }\r\n                        description={\r\n                            <FormattedMessage\r\n                                id='integrations.command.description'\r\n                                defaultMessage='Slash commands send events to an external integration'\r\n                            />\r\n                        }\r\n                        link={'/' + this.props.team.name + '/integrations/commands'}\r\n                    />\r\n                </TeamPermissionGate>\r\n            );\r\n        }\r\n\r\n        if (this.props.enableOAuthServiceProvider) {\r\n            options.push(\r\n                <SystemPermissionGate\r\n                    permissions={[Permissions.MANAGE_OAUTH]}\r\n                    key='oauth2AppsPermission'\r\n                >\r\n                    <IntegrationOption\r\n                        key='oauth2Apps'\r\n                        image={OAuthIcon}\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='integrations.oauthApps.title'\r\n                                defaultMessage='OAuth 2.0 Applications'\r\n                            />\r\n                        }\r\n                        description={\r\n                            <FormattedMessage\r\n                                id='integrations.oauthApps.description'\r\n                                defaultMessage='Auth 2.0 allows external applications to make authorized requests to the Mattermost API'\r\n                            />\r\n                        }\r\n                        link={'/' + this.props.team.name + '/integrations/oauth2-apps'}\r\n                    />\r\n                </SystemPermissionGate>\r\n            );\r\n        }\r\n\r\n        options.push(\r\n            <SystemPermissionGate\r\n                permissions={['manage_bots']}\r\n                key='botsPermissions'\r\n            >\r\n                <IntegrationOption\r\n                    image={BotAccountsIcon}\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='bots.manage.header'\r\n                            defaultMessage='Bot Accounts'\r\n                        />\r\n                    }\r\n                    description={\r\n                        <FormattedMessage\r\n                            id='bots.manage.description'\r\n                            defaultMessage='Use bot accounts to integrate with Mattermost through plugins or the API'\r\n                        />\r\n                    }\r\n                    link={'/' + this.props.team.name + '/integrations/bots'}\r\n                />\r\n            </SystemPermissionGate>\r\n        );\r\n\r\n        return (\r\n            <div className='backstage-content row'>\r\n                <div className='backstage-header'>\r\n                    <h1>\r\n                        <FormattedMessage\r\n                            id='integrations.header'\r\n                            defaultMessage='Integrations'\r\n                        />\r\n                    </h1>\r\n                </div>\r\n                <div className='backstage-list__help'>\r\n                    <FormattedMessage\r\n                        id='integrations.help'\r\n                        defaultMessage='Visit the {appDirectory} to find self-hosted, third-party apps and integrations for Mattermost.'\r\n                        values={{\r\n                            appDirectory: (\r\n                                <a\r\n                                    target='_blank'\r\n                                    rel='noopener noreferrer'\r\n                                    href='https://about.mattermost.com/default-app-directory/'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='integrations.help.appDirectory'\r\n                                        defaultMessage='App Directory'\r\n                                    />\r\n                                </a>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className='integrations-list d-flex flex-wrap'>\r\n                    {options}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport Integrations from './integrations.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n    const siteName = config.SiteName;\r\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\r\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\r\n    const enableCommands = config.EnableCommands === 'true';\r\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\r\n\r\n    return {\r\n        siteName,\r\n        enableIncomingWebhooks,\r\n        enableOutgoingWebhooks,\r\n        enableCommands,\r\n        enableOAuthServiceProvider,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Integrations);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nexport default class AnyTeamPermissionGate extends React.Component {\r\n    static defaultProps = {\r\n        invert: false,\r\n    }\r\n\r\n    static propTypes = {\r\n\r\n        /**\r\n         * Permissions enough to pass the gate (binary OR)\r\n         */\r\n        permissions: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n\r\n        /**\r\n         * Has permission\r\n         */\r\n        hasPermission: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * Invert the permission (used for else)\r\n         */\r\n        invert: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * Content protected by the permissions gate\r\n         */\r\n        children: PropTypes.node.isRequired,\r\n    };\r\n\r\n    render() {\r\n        if (this.props.hasPermission && !this.props.invert) {\r\n            return this.props.children;\r\n        }\r\n        if (!this.props.hasPermission && this.props.invert) {\r\n            return this.props.children;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\r\nimport {getMyTeams} from 'mattermost-redux/selectors/entities/teams';\r\n\r\nimport AnyTeamPermissionGate from './any_team_permission_gate.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const teams = getMyTeams(state);\r\n    for (const team of teams) {\r\n        for (const permission of ownProps.permissions) {\r\n            if (haveITeamPermission(state, {team: team.id, permission})) {\r\n                return {hasPermission: true};\r\n            }\r\n        }\r\n    }\r\n\r\n    return {hasPermission: false};\r\n}\r\n\r\nexport default connect(mapStateToProps)(AnyTeamPermissionGate);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport Constants from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nimport ConfirmModal from './confirm_modal.jsx';\r\n\r\nexport default class DeleteModalTrigger extends React.PureComponent {\r\n    static propTypes = {\r\n        onDelete: PropTypes.func.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.constructor === DeleteModalTrigger) {\r\n            throw new TypeError('Can not construct abstract class.');\r\n        }\r\n\r\n        this.state = {\r\n            showDeleteModal: false,\r\n        };\r\n    }\r\n\r\n    handleOpenModal = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            showDeleteModal: true,\r\n        });\r\n    }\r\n\r\n    handleConfirm = () => {\r\n        this.props.onDelete();\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            showDeleteModal: false,\r\n        });\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if (Utils.isKeyPressed(e, Constants.KeyCodes.ENTER)) {\r\n            this.handleConfirm(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <button\r\n                    className='color--link style--none'\r\n                    onClick={this.handleOpenModal}\r\n                >\r\n                    { this.triggerTitle }\r\n                </button>\r\n                <ConfirmModal\r\n                    show={this.state.showDeleteModal}\r\n                    title={this.modalTitle}\r\n                    message={this.modalMessage}\r\n                    confirmButtonText={this.modalConfirmButton}\r\n                    onConfirm={this.handleConfirm}\r\n                    onCancel={this.handleCancel}\r\n                    onKeyDown={this.handleKeyDown}\r\n                />\r\n            </span>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport DeleteModalTrigger from 'components/delete_modal_trigger.jsx';\r\nimport WarningIcon from 'components/icon/warning_icon';\r\n\r\nexport default class DeleteEmoji extends DeleteModalTrigger {\r\n    static propTypes = {\r\n        onDelete: PropTypes.func.isRequired,\r\n    }\r\n\r\n    get triggerTitle() {\r\n        return (\r\n            <FormattedMessage\r\n                id='emoji_list.delete'\r\n                defaultMessage='Delete'\r\n            />\r\n        );\r\n    }\r\n\r\n    get modalTitle() {\r\n        return (\r\n            <FormattedMessage\r\n                id='emoji_list.delete.confirm.title'\r\n                defaultMessage='Delete Custom Emoji'\r\n            />\r\n        );\r\n    }\r\n\r\n    get modalMessage() {\r\n        return (\r\n            <div className='alert alert-warning'>\r\n                <WarningIcon additionalClassName='fa-margin--right'/>\r\n                <FormattedMessage\r\n                    id='emoji_list.delete.confirm.msg'\r\n                    defaultMessage='This action permanently deletes the custom emoji. Are you sure you want to delete it?'\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    get modalConfirmButton() {\r\n        return (\r\n            <FormattedMessage\r\n                id='emoji_list.delete.confirm.button'\r\n                defaultMessage='Delete'\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Permissions from 'mattermost-redux/constants/permissions';\r\nimport {Client4} from 'mattermost-redux/client';\r\n\r\nimport DeleteEmoji from 'components/emoji/delete_emoji_modal.jsx';\r\nimport AnyTeamPermissionGate from 'components/permissions_gates/any_team_permission_gate';\r\n\r\nexport default class EmojiListItem extends React.Component {\r\n    static propTypes = {\r\n        emoji: PropTypes.object.isRequired,\r\n        currentUserId: PropTypes.string.isRequired,\r\n        creatorDisplayName: PropTypes.string.isRequired,\r\n        creatorUsername: PropTypes.string,\r\n        currentTeam: PropTypes.object,\r\n        onDelete: PropTypes.func,\r\n        actions: PropTypes.shape({\r\n            deleteCustomEmoji: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    static defaultProps = {\r\n        emoji: {},\r\n        currentUserId: '',\r\n        currentTeam: {},\r\n        creatorDisplayName: '',\r\n    }\r\n\r\n    handleDelete = () => {\r\n        if (this.props.onDelete) {\r\n            this.props.onDelete(this.props.emoji.id);\r\n        }\r\n\r\n        this.props.actions.deleteCustomEmoji(this.props.emoji.id);\r\n    }\r\n\r\n    render() {\r\n        const emoji = this.props.emoji;\r\n        const creatorUsername = this.props.creatorUsername;\r\n        let creatorDisplayName = this.props.creatorDisplayName;\r\n\r\n        if (creatorUsername && creatorUsername !== creatorDisplayName) {\r\n            creatorDisplayName += ' (@' + creatorUsername + ')';\r\n        }\r\n\r\n        let deleteButton = null;\r\n        if (emoji.creator_id === this.props.currentUserId) {\r\n            deleteButton = (\r\n                <AnyTeamPermissionGate permissions={[Permissions.DELETE_EMOJIS]}>\r\n                    <DeleteEmoji onDelete={this.handleDelete}/>\r\n                </AnyTeamPermissionGate>\r\n            );\r\n        } else {\r\n            deleteButton = (\r\n                <AnyTeamPermissionGate permissions={[Permissions.DELETE_EMOJIS]}>\r\n                    <AnyTeamPermissionGate permissions={[Permissions.DELETE_OTHERS_EMOJIS]}>\r\n                        <DeleteEmoji onDelete={this.handleDelete}/>\r\n                    </AnyTeamPermissionGate>\r\n                </AnyTeamPermissionGate>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <tr className='backstage-list__item'>\r\n                <td className='emoji-list__name'>\r\n                    {':' + emoji.name + ':'}\r\n                </td>\r\n                <td className='emoji-list__image'>\r\n                    <span\r\n                        className='emoticon'\r\n                        style={{backgroundImage: 'url(' + Client4.getCustomEmojiImageUrl(emoji.id) + ')'}}\r\n                    />\r\n                </td>\r\n                <td className='emoji-list__creator'>\r\n                    {creatorDisplayName}\r\n                </td>\r\n                <td className='emoji-list-item_actions'>\r\n                    {deleteButton}\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getUser, getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\r\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\r\n\r\nimport {deleteCustomEmoji} from 'mattermost-redux/actions/emojis';\r\n\r\nimport {getDisplayNameByUser} from 'utils/utils.jsx';\r\n\r\nimport EmojiListItem from './emoji_list_item.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const emoji = state.entities.emojis.customEmoji[ownProps.emojiId];\r\n    const creator = getUser(state, emoji.creator_id);\r\n\r\n    return {\r\n        emoji,\r\n        creatorDisplayName: getDisplayNameByUser(creator),\r\n        creatorUsername: creator ? creator.username : '',\r\n        currentUserId: getCurrentUserId(state),\r\n        currentTeam: getCurrentTeam(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            deleteCustomEmoji,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiListItem);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {Emoji} from 'mattermost-redux/constants';\r\n\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\nimport SaveButton from 'components/save_button.jsx';\r\nimport EmojiListItem from 'components/emoji/emoji_list_item';\r\nimport NextIcon from 'components/icon/next_icon';\r\nimport PreviousIcon from 'components/icon/previous_icon';\r\nimport SearchIcon from 'components/icon/search_icon';\r\nimport LocalizedInput from 'components/localized_input/localized_input';\r\n\r\nimport {t} from 'utils/i18n.jsx';\r\n\r\nconst EMOJI_PER_PAGE = 50;\r\nconst EMOJI_SEARCH_DELAY_MILLISECONDS = 200;\r\n\r\nexport default class EmojiList extends React.Component {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * Custom emojis on the system.\r\n         */\r\n        emojiIds: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n\r\n        /**\r\n         * Function to scroll list to top.\r\n         */\r\n        scrollToTop: PropTypes.func.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n             * Get pages of custom emojis.\r\n             */\r\n            getCustomEmojis: PropTypes.func.isRequired,\r\n\r\n            /**\r\n             * Search custom emojis.\r\n             */\r\n            searchCustomEmojis: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchTimeout = null;\r\n\r\n        this.state = {\r\n            loading: true,\r\n            page: 0,\r\n            nextLoading: false,\r\n            searchEmojis: null,\r\n            missingPages: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.actions.getCustomEmojis(0, EMOJI_PER_PAGE + 1, Emoji.SORT_BY_NAME, true).then(({data}) => {\r\n            this.setState({loading: false});\r\n            if (data && data.length < EMOJI_PER_PAGE) {\r\n                this.setState({missingPages: false});\r\n            }\r\n        });\r\n    }\r\n\r\n    nextPage = (e) => {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        const next = this.state.page + 1;\r\n        this.setState({nextLoading: true});\r\n        this.props.actions.getCustomEmojis(next, EMOJI_PER_PAGE, Emoji.SORT_BY_NAME, true).then(({data}) => {\r\n            this.setState({page: next, nextLoading: false});\r\n            if (data && data.length < EMOJI_PER_PAGE) {\r\n                this.setState({missingPages: false});\r\n            }\r\n\r\n            this.props.scrollToTop();\r\n        });\r\n    }\r\n\r\n    previousPage = (e) => {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        this.setState({page: this.state.page - 1, nextLoading: false});\r\n        this.props.scrollToTop();\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        if (!e || !e.target) {\r\n            return;\r\n        }\r\n\r\n        const term = e.target.value || '';\r\n\r\n        clearTimeout(this.searchTimeout);\r\n\r\n        this.searchTimeout = setTimeout(async () => {\r\n            if (term.trim() === '') {\r\n                this.setState({searchEmojis: null, page: 0});\r\n                return;\r\n            }\r\n\r\n            this.setState({loading: true});\r\n\r\n            const {data} = await this.props.actions.searchCustomEmojis(term, {}, true);\r\n\r\n            if (data) {\r\n                this.setState({searchEmojis: data.map((em) => em.id), loading: false});\r\n            } else {\r\n                this.setState({searchEmojis: [], loading: false});\r\n            }\r\n        }, EMOJI_SEARCH_DELAY_MILLISECONDS);\r\n    }\r\n\r\n    deleteFromSearch = (emojiId) => {\r\n        if (!this.state.searchEmojis) {\r\n            return;\r\n        }\r\n\r\n        const index = this.state.searchEmojis.indexOf(emojiId);\r\n\r\n        if (index < 0) {\r\n            return;\r\n        }\r\n\r\n        const newSearchEmojis = [...this.state.searchEmojis];\r\n        newSearchEmojis.splice(index, 1);\r\n        this.setState({searchEmojis: newSearchEmojis});\r\n    }\r\n\r\n    render() {\r\n        const searchEmojis = this.state.searchEmojis;\r\n        const emojis = [];\r\n        let nextButton;\r\n        let previousButton;\r\n\r\n        if (this.state.loading) {\r\n            emojis.push(\r\n                <tr\r\n                    key='loading'\r\n                    className='backstage-list__item backstage-list__empty'\r\n                >\r\n                    <td colSpan='4'>\r\n                        <LoadingScreen key='loading'/>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        } else if (this.props.emojiIds.length === 0 || (searchEmojis && searchEmojis.length === 0)) {\r\n            emojis.push(\r\n                <tr\r\n                    key='empty'\r\n                    className='backstage-list__item backstage-list__empty'\r\n                >\r\n                    <td colSpan='4'>\r\n                        <FormattedMessage\r\n                            id='emoji_list.empty'\r\n                            defaultMessage='No custom emoji found'\r\n                        />\r\n                    </td>\r\n                </tr>\r\n            );\r\n        } else if (searchEmojis) {\r\n            searchEmojis.forEach((emojiId) => {\r\n                emojis.push(\r\n                    <EmojiListItem\r\n                        key={'emoji_search_item' + emojiId}\r\n                        emojiId={emojiId}\r\n                        onDelete={this.deleteFromSearch}\r\n                    />\r\n                );\r\n            });\r\n        } else {\r\n            const pageStart = this.state.page * EMOJI_PER_PAGE;\r\n            const pageEnd = pageStart + EMOJI_PER_PAGE;\r\n            const emojisToDisplay = this.props.emojiIds.slice(pageStart, pageEnd);\r\n\r\n            emojisToDisplay.forEach((emojiId) => {\r\n                emojis.push(\r\n                    <EmojiListItem\r\n                        key={'emoji_list_item' + emojiId}\r\n                        emojiId={emojiId}\r\n                    />\r\n                );\r\n            });\r\n\r\n            if (this.state.missingPages) {\r\n                const buttonContents = (\r\n                    <span>\r\n                        <FormattedMessage\r\n                            id='filtered_user_list.next'\r\n                            defaultMessage='Next'\r\n                        />\r\n                        <NextIcon additionalClassName='margin-left'/>\r\n                    </span>\r\n                );\r\n\r\n                nextButton = (\r\n                    <SaveButton\r\n                        btnClass='btn-link'\r\n                        extraClasses='pull-right'\r\n                        onClick={this.nextPage}\r\n                        saving={this.state.nextLoading}\r\n                        disabled={this.state.nextLoading}\r\n                        defaultMessage={buttonContents}\r\n                        savingMessage={buttonContents}\r\n                    />\r\n                );\r\n            }\r\n\r\n            if (this.state.page > 0) {\r\n                previousButton = (\r\n                    <button\r\n                        className='btn btn-link'\r\n                        onClick={this.previousPage}\r\n                    >\r\n                        <PreviousIcon additionalClassName='margin-right'/>\r\n                        <FormattedMessage\r\n                            id='filtered_user_list.prev'\r\n                            defaultMessage='Previous'\r\n                        />\r\n                    </button>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className='backstage-filters'>\r\n                    <div className='backstage-filter__search'>\r\n                        <SearchIcon/>\r\n                        <LocalizedInput\r\n                            type='search'\r\n                            className='form-control'\r\n                            placeholder={{id: t('emoji_list.search'), defaultMessage: 'Search Custom Emoji'}}\r\n                            onChange={this.onSearchChange}\r\n                            style={style.search}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <span className='backstage-list__help'>\r\n                    <p>\r\n                        <FormattedMessage\r\n                            id='emoji_list.help'\r\n                            defaultMessage=\"Custom emoji are available to everyone on your server. Type ':' followed by two characters in a message box to bring up the emoji selection menu.\"\r\n                        />\r\n                    </p>\r\n                    <p>\r\n                        <FormattedMessage\r\n                            id='emoji_list.help2'\r\n                            defaultMessage=\"Tip: If you add #, ##, or ### as the first character on a new line containing emoji, you can use larger sized emoji. To try it out, send a message such as: '# :smile:'.\"\r\n                        />\r\n                    </p>\r\n                </span>\r\n                <div className='backstage-list'>\r\n                    <table className='emoji-list__table'>\r\n                        <thead>\r\n                            <tr className='backstage-list__item emoji-list__table-header'>\r\n                                <th className='emoji-list__name'>\r\n                                    <FormattedMessage\r\n                                        id='emoji_list.name'\r\n                                        defaultMessage='Name'\r\n                                    />\r\n                                </th>\r\n                                <th className='emoji-list__image'>\r\n                                    <FormattedMessage\r\n                                        id='emoji_list.image'\r\n                                        defaultMessage='Image'\r\n                                    />\r\n                                </th>\r\n                                <th className='emoji-list__creator'>\r\n                                    <FormattedMessage\r\n                                        id='emoji_list.creator'\r\n                                        defaultMessage='Creator'\r\n                                    />\r\n                                </th>\r\n                                <th className='emoji-list_actions'>\r\n                                    <FormattedMessage\r\n                                        id='emoji_list.actions'\r\n                                        defaultMessage='Actions'\r\n                                    />\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {emojis}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className='filter-controls padding-top x2'>\r\n                    {previousButton}\r\n                    {nextButton}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst style = {\r\n    search: {flexGrow: 0, flexShrink: 0},\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getCustomEmojiIdsSortedByName} from 'mattermost-redux/selectors/entities/emojis';\r\n\r\nimport {getCustomEmojis, searchCustomEmojis} from 'mattermost-redux/actions/emojis';\r\n\r\nimport EmojiList from './emoji_list.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        emojiIds: getCustomEmojiIdsSortedByName(state) || [],\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getCustomEmojis,\r\n            searchCustomEmojis,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiList);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Permissions from 'mattermost-redux/constants/permissions';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport AnyTeamPermissionGate from 'components/permissions_gates/any_team_permission_gate';\r\n\r\nimport EmojiList from './emoji_list';\r\n\r\nexport default class EmojiPage extends React.Component {\r\n    static propTypes = {\r\n        teamId: PropTypes.string.isRequired,\r\n        teamName: PropTypes.string.isRequired,\r\n        teamDisplayName: PropTypes.string.isRequired,\r\n        siteName: PropTypes.string,\r\n        scrollToTop: PropTypes.func.isRequired,\r\n        actions: PropTypes.shape({\r\n            loadRolesIfNeeded: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    static defaultProps = {\r\n        teamName: '',\r\n        teamDisplayName: '',\r\n        siteName: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateTitle();\r\n        this.props.actions.loadRolesIfNeeded(['system_admin', 'team_admin', 'system_user', 'team_user']);\r\n    }\r\n\r\n    updateTitle = (props = this.props) => {\r\n        document.title = Utils.localizeMessage('custom_emoji.header', 'Custom Emoji') + ' - ' + props.teamDisplayName + ' ' + props.siteName;\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\r\n        if (this.props.siteName !== nextProps.siteName) {\r\n            this.updateTitle(nextProps);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='backstage-content emoji-list'>\r\n                <div className='backstage-header'>\r\n                    <h1>\r\n                        <FormattedMessage\r\n                            id='emoji_list.header'\r\n                            defaultMessage='Custom Emoji'\r\n                        />\r\n                    </h1>\r\n                    <AnyTeamPermissionGate permissions={[Permissions.CREATE_EMOJIS]}>\r\n                        <Link\r\n                            className='add-link'\r\n                            to={'/' + this.props.teamName + '/emoji/add'}\r\n                        >\r\n                            <button\r\n                                type='button'\r\n                                className='btn btn-primary'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='emoji_list.add'\r\n                                    defaultMessage='Add Custom Emoji'\r\n                                />\r\n                            </button>\r\n                        </Link>\r\n                    </AnyTeamPermissionGate>\r\n                </div>\r\n                <EmojiList scrollToTop={this.props.scrollToTop}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\r\nimport {loadRolesIfNeeded} from 'mattermost-redux/actions/roles';\r\n\r\nimport EmojiPage from './emoji_page.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const team = getCurrentTeam(state) || {};\r\n\r\n    return {\r\n        teamId: team.id,\r\n        teamName: team.name,\r\n        teamDisplayName: team.display_name,\r\n        siteName: state.entities.general.config.SiteName,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            loadRolesIfNeeded,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiPage);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\r\nimport FormError from 'components/form_error.jsx';\r\nimport SpinnerButton from 'components/spinner_button.jsx';\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport {localizeMessage} from 'utils/utils.jsx';\r\n\r\nexport default class AddEmoji extends React.Component {\r\n    static propTypes = {\r\n        actions: PropTypes.shape({\r\n            createCustomEmoji: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n        emojiMap: PropTypes.object.isRequired,\r\n        team: PropTypes.object,\r\n        user: PropTypes.object,\r\n    };\r\n\r\n    static contextTypes = {\r\n        router: PropTypes.object.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            image: null,\r\n            imageUrl: '',\r\n            saving: false,\r\n            error: null,\r\n        };\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        const {actions, emojiMap, user, team} = this.props;\r\n        const {image, name, saving} = this.state;\r\n\r\n        e.preventDefault();\r\n\r\n        if (saving) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            saving: true,\r\n            error: null,\r\n        });\r\n\r\n        const emoji = {\r\n            creator_id: user.id,\r\n            name: name.trim().toLowerCase(),\r\n        };\r\n\r\n        // trim surrounding colons if the user accidentally included them in the name\r\n        if (emoji.name.startsWith(':') && emoji.name.endsWith(':')) {\r\n            emoji.name = emoji.name.substring(1, emoji.name.length - 1);\r\n        }\r\n\r\n        if (!emoji.name) {\r\n            this.setState({\r\n                saving: false,\r\n                error: (\r\n                    <FormattedMessage\r\n                        id='add_emoji.nameRequired'\r\n                        defaultMessage='A name is required for the emoji'\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        } else if ((/[^a-z0-9_-]/).test(emoji.name)) {\r\n            this.setState({\r\n                saving: false,\r\n                error: (\r\n                    <FormattedMessage\r\n                        id='add_emoji.nameInvalid'\r\n                        defaultMessage=\"An emoji's name can only contain lowercase letters, numbers, and the symbols '-' and '_'.\"\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        } else if (emojiMap.hasSystemEmoji(emoji.name)) {\r\n            this.setState({\r\n                saving: false,\r\n                error: (\r\n                    <FormattedMessage\r\n                        id='add_emoji.nameTaken'\r\n                        defaultMessage='This name is already in use by a system emoji. Please choose another name.'\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!image) {\r\n            this.setState({\r\n                saving: false,\r\n                error: (\r\n                    <FormattedMessage\r\n                        id='add_emoji.imageRequired'\r\n                        defaultMessage='An image is required for the emoji'\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const {error} = await actions.createCustomEmoji(emoji, image);\r\n        if (error) {\r\n            this.setState({\r\n                saving: false,\r\n                error: error.message,\r\n            });\r\n            return;\r\n        }\r\n\r\n        browserHistory.push('/' + team.name + '/emoji');\r\n    };\r\n\r\n    updateName = (e) => {\r\n        this.setState({\r\n            name: e.target.value,\r\n        });\r\n    };\r\n\r\n    updateImage = (e) => {\r\n        if (e.target.files.length === 0) {\r\n            this.setState({\r\n                image: null,\r\n                imageUrl: '',\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const image = e.target.files[0];\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            this.setState({\r\n                image,\r\n                imageUrl: reader.result,\r\n            });\r\n        };\r\n        reader.readAsDataURL(image);\r\n    };\r\n\r\n    render() {\r\n        let filename = null;\r\n        if (this.state.image) {\r\n            filename = (\r\n                <span className='add-emoji__filename'>\r\n                    {this.state.image.name}\r\n                </span>\r\n            );\r\n        }\r\n\r\n        let preview = null;\r\n        if (this.state.imageUrl) {\r\n            preview = (\r\n                <div className='form-group'>\r\n                    <label\r\n                        className='control-label col-sm-4'\r\n                        htmlFor='preview'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='add_emoji.preview'\r\n                            defaultMessage='Preview'\r\n                        />\r\n                    </label>\r\n                    <div className='col-md-5 col-sm-8 add-emoji__preview'>\r\n                        <FormattedMessage\r\n                            id='add_emoji.preview.sentence'\r\n                            defaultMessage='This is a sentence with {image} in it.'\r\n                            values={{\r\n                                image: (\r\n                                    <span\r\n                                        className='emoticon'\r\n                                        style={{backgroundImage: 'url(' + this.state.imageUrl + ')'}}\r\n                                    />\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='backstage-content row'>\r\n                <BackstageHeader>\r\n                    <Link to={'/' + this.props.team.name + '/emoji'}>\r\n                        <FormattedMessage\r\n                            id='emoji_list.header'\r\n                            defaultMessage='Custom Emoji'\r\n                        />\r\n                    </Link>\r\n                    <FormattedMessage\r\n                        id='add_emoji.header'\r\n                        defaultMessage='Add'\r\n                    />\r\n                </BackstageHeader>\r\n                <div className='backstage-form'>\r\n                    <form\r\n                        className='form-horizontal'\r\n                        onSubmit={this.handleSubmit}\r\n                    >\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='name'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_emoji.name'\r\n                                    defaultMessage='Name'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <input\r\n                                    id='name'\r\n                                    type='text'\r\n                                    maxLength='64'\r\n                                    className='form-control'\r\n                                    value={this.state.name}\r\n                                    onChange={this.updateName}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_emoji.name.help'\r\n                                        defaultMessage=\"Choose a name for your emoji made of up to 64 characters consisting of lowercase letters, numbers, and the symbols '-' and '_'.\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='image'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_emoji.image'\r\n                                    defaultMessage='Image'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <div>\r\n                                    <div className='add-emoji__upload'>\r\n                                        <button className='btn btn-primary'>\r\n                                            <FormattedMessage\r\n                                                id='add_emoji.image.button'\r\n                                                defaultMessage='Select'\r\n                                            />\r\n                                        </button>\r\n                                        <input\r\n                                            id='select-emoji'\r\n                                            type='file'\r\n                                            accept='.jpg,.png,.gif'\r\n                                            multiple={false}\r\n                                            onChange={this.updateImage}\r\n                                        />\r\n                                    </div>\r\n                                    {filename}\r\n                                    <div className='form__help'>\r\n                                        <FormattedMessage\r\n                                            id='add_emoji.image.help'\r\n                                            defaultMessage='Choose the image for your emoji. The image can be a gif, png, or jpeg file with a max size of 64 KB and dimensions up to 128 by 128 pixels.'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {preview}\r\n                        <div className='backstage-form__footer'>\r\n                            <FormError\r\n                                type='backstage'\r\n                                error={this.state.error}\r\n                            />\r\n                            <Link\r\n                                className='btn btn-link btn-sm'\r\n                                to={'/' + this.props.team.name + '/emoji'}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_emoji.cancel'\r\n                                    defaultMessage='Cancel'\r\n                                />\r\n                            </Link>\r\n                            <SpinnerButton\r\n                                className='btn btn-primary'\r\n                                type='submit'\r\n                                spinning={this.state.saving}\r\n                                spinningText={localizeMessage('add_emoji.saving', 'Saving...')}\r\n                                onClick={this.handleSubmit}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_emoji.save'\r\n                                    defaultMessage='Save'\r\n                                />\r\n                            </SpinnerButton>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {createCustomEmoji} from 'mattermost-redux/actions/emojis';\r\n\r\nimport {getEmojiMap} from 'selectors/emojis';\r\n\r\nimport AddEmoji from './add_emoji.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        emojiMap: getEmojiMap(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            createCustomEmoji,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEmoji);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\r\n\r\nimport Constants from 'utils/constants.jsx';\r\nimport {copyToClipboard} from 'utils/utils.jsx';\r\n\r\nexport default class CopyText extends React.PureComponent {\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n\r\n        defaultMessage: PropTypes.string,\r\n\r\n        idMessage: PropTypes.string,\r\n    };\r\n\r\n    static get defaultProps() {\r\n        return {\r\n            idMessage: 'integrations.copy',\r\n            defaultMessage: 'Copy',\r\n        };\r\n    }\r\n\r\n    copyText = (e) => {\r\n        e.preventDefault();\r\n        copyToClipboard(this.props.value);\r\n    };\r\n\r\n    render() {\r\n        if (!document.queryCommandSupported('copy')) {\r\n            return null;\r\n        }\r\n\r\n        const tooltip = (\r\n            <Tooltip id='copy'>\r\n                <FormattedMessage\r\n                    id={this.props.idMessage}\r\n                    defaultMessage={this.props.defaultMessage}\r\n                />\r\n            </Tooltip>\r\n        );\r\n\r\n        return (\r\n            <OverlayTrigger\r\n                trigger={['hover', 'focus']}\r\n                delayShow={Constants.OVERLAY_TIME_DELAY}\r\n                placement='top'\r\n                overlay={tooltip}\r\n            >\r\n                <a\r\n                    href='#'\r\n                    className='fa fa-copy margin-left'\r\n                    onClick={this.copyText}\r\n                />\r\n            </OverlayTrigger>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport DeleteModalTrigger from 'components/delete_modal_trigger.jsx';\r\nimport WarningIcon from 'components/icon/warning_icon';\r\n\r\nexport default class DeleteIntegration extends DeleteModalTrigger {\r\n    get triggerTitle() {\r\n        return (\r\n            <FormattedMessage\r\n                id='installed_integrations.delete'\r\n                defaultMessage='Delete'\r\n            />\r\n        );\r\n    }\r\n\r\n    get modalTitle() {\r\n        return (\r\n            <FormattedMessage\r\n                id='integrations.delete.confirm.title'\r\n                defaultMessage='Delete Integration'\r\n            />\r\n        );\r\n    }\r\n\r\n    get modalMessage() {\r\n        return (\r\n            <div className='alert alert-warning'>\r\n                <WarningIcon additionalClassName='fa-margin--right'/>\r\n                <FormattedMessage\r\n                    id={this.props.messageId}\r\n                    defaultMessage='This action permanently deletes the integration and breaks any integrations using it. Are you sure you want to delete it?'\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    get modalConfirmButton() {\r\n        return (\r\n            <FormattedMessage\r\n                id='integrations.delete.confirm.button'\r\n                defaultMessage='Delete'\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nDeleteIntegration.propTypes = {\r\n    messageId: PropTypes.string.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {getSiteURL} from 'utils/url.jsx';\r\nimport {t} from 'utils/i18n';\r\n\r\nimport CopyText from 'components/copy_text.jsx';\r\n\r\nimport DeleteIntegration from './delete_integration.jsx';\r\n\r\nexport function matchesFilter(incomingWebhook, channel, filter) {\r\n    if (!filter) {\r\n        return true;\r\n    }\r\n\r\n    if (incomingWebhook.display_name.toLowerCase().indexOf(filter) !== -1 ||\r\n        incomingWebhook.description.toLowerCase().indexOf(filter) !== -1) {\r\n        return true;\r\n    }\r\n\r\n    if (incomingWebhook.channel_id) {\r\n        if (channel && channel.name.toLowerCase().indexOf(filter) !== -1) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport default class InstalledIncomingWebhook extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * Data used for showing webhook details\r\n        */\r\n        incomingWebhook: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * Function to call when webhook delete button is pressed\r\n        */\r\n        onDelete: PropTypes.func.isRequired,\r\n\r\n        /**\r\n        * String used for filtering webhook item\r\n        */\r\n        filter: PropTypes.string,\r\n\r\n        /**\r\n        * Data used for showing created by details\r\n        */\r\n        creator: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        *  Set to show available actions on webhook\r\n        */\r\n        canChange: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n        *  Data used in routing of webhook for modifications\r\n        */\r\n        team: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        *  Data used for filtering of webhook based on filter prop\r\n        */\r\n        channel: PropTypes.object,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.onDelete(this.props.incomingWebhook);\r\n    }\r\n\r\n    render() {\r\n        const incomingWebhook = this.props.incomingWebhook;\r\n        const channel = this.props.channel;\r\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\r\n\r\n        if (!matchesFilter(incomingWebhook, channel, filter)) {\r\n            return null;\r\n        }\r\n\r\n        let displayName;\r\n        if (incomingWebhook.display_name) {\r\n            displayName = incomingWebhook.display_name;\r\n        } else if (channel) {\r\n            displayName = channel.display_name;\r\n        } else {\r\n            displayName = (\r\n                <FormattedMessage\r\n                    id='installed_incoming_webhooks.unknown_channel'\r\n                    defaultMessage='A Private Webhook'\r\n                />\r\n            );\r\n        }\r\n\r\n        let description = null;\r\n        if (incomingWebhook.description) {\r\n            description = (\r\n                <div className='item-details__row'>\r\n                    <span className='item-details__description'>\r\n                        {incomingWebhook.description}\r\n                    </span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let actions = null;\r\n        if (this.props.canChange) {\r\n            actions = (\r\n                <div className='item-actions'>\r\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks/edit?id=${incomingWebhook.id}`}>\r\n                        <FormattedMessage\r\n                            id='installed_integrations.edit'\r\n                            defaultMessage='Edit'\r\n                        />\r\n                    </Link>\r\n                    {' - '}\r\n                    <DeleteIntegration\r\n                        messageId={t('installed_incoming_webhooks.delete.confirm')}\r\n                        onDelete={this.handleDelete}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const incomingWebhookId = getSiteURL() + '/hooks/' + incomingWebhook.id;\r\n\r\n        return (\r\n            <div className='backstage-list__item'>\r\n                <div className='item-details'>\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__name'>\r\n                            {displayName}\r\n                        </span>\r\n                    </div>\r\n                    {description}\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__url'>\r\n                            <FormattedMessage\r\n                                id='installed_integrations.url'\r\n                                defaultMessage='URL: {url}'\r\n                                values={{\r\n                                    url: incomingWebhookId,\r\n                                }}\r\n                            />\r\n                            <span>\r\n                                <CopyText\r\n                                    value={incomingWebhookId}\r\n                                />\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__creation'>\r\n                            <FormattedMessage\r\n                                id='installed_integrations.creation'\r\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\r\n                                values={{\r\n                                    creator: this.props.creator.username,\r\n                                    createAt: incomingWebhook.create_at,\r\n                                }}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                {actions}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport Constants from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\r\nimport InstalledIncomingWebhook, {matchesFilter} from 'components/integrations/installed_incoming_webhook.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\n\r\nexport default class InstalledIncomingWebhooks extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        *  Data used in passing down as props for webhook modifications\r\n        */\r\n        team: PropTypes.object,\r\n\r\n        /**\r\n        * Data used for checking if webhook is created by current user\r\n        */\r\n        user: PropTypes.object,\r\n\r\n        /**\r\n        *  Data used for checking modification privileges\r\n        */\r\n        canManageOthersWebhooks: PropTypes.bool,\r\n\r\n        /**\r\n        * Data used in passing down as props for showing webhook details\r\n        */\r\n        incomingWebhooks: PropTypes.array,\r\n\r\n        /**\r\n        * Data used in sorting for displaying list and as props channel details\r\n        */\r\n        channels: PropTypes.object,\r\n\r\n        /**\r\n        *  Data used in passing down as props for webhook -created by label\r\n        */\r\n        users: PropTypes.object,\r\n\r\n        /**\r\n        *  Data used in passing as argument for loading webhooks\r\n        */\r\n\r\n        teamId: PropTypes.string,\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n            * The function to call for removing incomingWebhook\r\n            */\r\n            removeIncomingHook: PropTypes.func,\r\n\r\n            /**\r\n            * The function to call for incomingWebhook List and for the status of api\r\n            */\r\n            loadIncomingHooksAndProfilesForTeam: PropTypes.func,\r\n        }),\r\n\r\n        /**\r\n        * Whether or not incoming webhooks are enabled.\r\n        */\r\n        enableIncomingWebhooks: PropTypes.bool,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.enableIncomingWebhooks) {\r\n            this.props.actions.loadIncomingHooksAndProfilesForTeam(\r\n                this.props.teamId,\r\n                Constants.Integrations.START_PAGE_NUM,\r\n                Constants.Integrations.PAGE_SIZE\r\n            ).then(\r\n                () => this.setState({loading: false})\r\n            );\r\n        }\r\n    }\r\n\r\n    deleteIncomingWebhook = (incomingWebhook) => {\r\n        this.props.actions.removeIncomingHook(incomingWebhook.id);\r\n    }\r\n\r\n    incomingWebhookCompare = (a, b) => {\r\n        let displayNameA = a.display_name;\r\n        if (!displayNameA) {\r\n            const channelA = this.props.channels[a.channel_id];\r\n            if (channelA) {\r\n                displayNameA = channelA.display_name;\r\n            } else {\r\n                displayNameA = Utils.localizeMessage('installed_incoming_webhooks.unknown_channel', 'A Private Webhook');\r\n            }\r\n        }\r\n\r\n        const displayNameB = b.display_name;\r\n\r\n        return displayNameA.localeCompare(displayNameB);\r\n    }\r\n\r\n    incomingWebhooks = (filter) => this.props.incomingWebhooks.\r\n        sort(this.incomingWebhookCompare).\r\n        filter((incomingWebhook) => matchesFilter(incomingWebhook, this.props.channels[incomingWebhook.channel_id], filter)).\r\n        map((incomingWebhook) => {\r\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === incomingWebhook.user_id;\r\n            const channel = this.props.channels[incomingWebhook.channel_id];\r\n            return (\r\n                <InstalledIncomingWebhook\r\n                    key={incomingWebhook.id}\r\n                    incomingWebhook={incomingWebhook}\r\n                    onDelete={this.deleteIncomingWebhook}\r\n                    creator={this.props.users[incomingWebhook.user_id] || {}}\r\n                    canChange={canChange}\r\n                    team={this.props.team}\r\n                    channel={channel}\r\n                />\r\n            );\r\n        });\r\n\r\n    render() {\r\n        return (\r\n            <BackstageList\r\n                header={\r\n                    <FormattedMessage\r\n                        id='installed_incoming_webhooks.header'\r\n                        defaultMessage='Installed Incoming Webhooks'\r\n                    />\r\n                }\r\n                addText={\r\n                    <FormattedMessage\r\n                        id='installed_incoming_webhooks.add'\r\n                        defaultMessage='Add Incoming Webhook'\r\n                    />\r\n                }\r\n                addLink={'/' + this.props.team.name + '/integrations/incoming_webhooks/add'}\r\n                addButtonId='addIncomingWebhook'\r\n                emptyText={\r\n                    <FormattedMessage\r\n                        id='installed_incoming_webhooks.empty'\r\n                        defaultMessage='No incoming webhooks found'\r\n                    />\r\n                }\r\n                emptyTextSearch={\r\n                    <FormattedMarkdownMessage\r\n                        id='installed_incoming_webhooks.emptySearch'\r\n                        defaultMessage='No incoming webhooks match {searchTerm}'\r\n                    />\r\n                }\r\n                helpText={\r\n                    <FormattedMessage\r\n                        id='installed_incoming_webhooks.help'\r\n                        defaultMessage='Use incoming webhooks to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\r\n                        values={{\r\n                            buildYourOwn: (\r\n                                <a\r\n                                    target='_blank'\r\n                                    rel='noopener noreferrer'\r\n                                    href='http://docs.mattermost.com/developer/webhooks-incoming.html'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='installed_incoming_webhooks.help.buildYourOwn'\r\n                                        defaultMessage='Build your own'\r\n                                    />\r\n                                </a>\r\n                            ),\r\n                            appDirectory: (\r\n                                <a\r\n                                    target='_blank'\r\n                                    rel='noopener noreferrer'\r\n                                    href='https://about.mattermost.com/default-app-directory/'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='installed_incoming_webhooks.help.appDirectory'\r\n                                        defaultMessage='App Directory'\r\n                                    />\r\n                                </a>\r\n                            ),\r\n                        }}\r\n                    />\r\n                }\r\n                searchPlaceholder={Utils.localizeMessage('installed_incoming_webhooks.search', 'Search Incoming Webhooks')}\r\n                loading={this.state.loading}\r\n            >\r\n                {(filter) => {\r\n                    const children = this.incomingWebhooks(filter);\r\n                    return [children, children.length > 0];\r\n                }}\r\n            </BackstageList>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as Actions from 'mattermost-redux/actions/integrations';\r\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\r\nimport {getIncomingHooks} from 'mattermost-redux/selectors/entities/integrations';\r\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\r\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\r\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\r\nimport {Permissions} from 'mattermost-redux/constants';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport {loadIncomingHooksAndProfilesForTeam} from 'actions/integration_actions';\r\n\r\nimport InstalledIncomingWebhooks from './installed_incoming_webhooks.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n    const teamId = getCurrentTeamId(state);\r\n    const canManageOthersWebhooks = haveITeamPermission(state, {team: teamId, permission: Permissions.MANAGE_OTHERS_INCOMING_WEBHOOKS});\r\n    const incomingHooks = getIncomingHooks(state);\r\n    const incomingWebhooks = Object.keys(incomingHooks).\r\n        map((key) => incomingHooks[key]).\r\n        filter((incomingWebhook) => incomingWebhook.team_id === teamId);\r\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\r\n\r\n    return {\r\n        incomingWebhooks,\r\n        channels: getAllChannels(state),\r\n        users: getUsers(state),\r\n        teamId,\r\n        canManageOthersWebhooks,\r\n        enableIncomingWebhooks,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            loadIncomingHooksAndProfilesForTeam,\r\n            removeIncomingHook: Actions.removeIncomingHook,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledIncomingWebhooks);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport Constants from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nexport default class ChannelSelect extends React.PureComponent {\r\n    static get propTypes() {\r\n        return {\r\n            channels: PropTypes.array.isRequired,\r\n            onChange: PropTypes.func,\r\n            value: PropTypes.string,\r\n            selectOpen: PropTypes.bool.isRequired,\r\n            selectPrivate: PropTypes.bool.isRequired,\r\n            selectDm: PropTypes.bool.isRequired,\r\n        };\r\n    }\r\n\r\n    static get defaultProps() {\r\n        return {\r\n            selectOpen: false,\r\n            selectPrivate: false,\r\n            selectDm: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const options = [\r\n            <option\r\n                key=''\r\n                value=''\r\n            >\r\n                {Utils.localizeMessage('channel_select.placeholder', '--- Select a channel ---')}\r\n            </option>,\r\n        ];\r\n\r\n        this.props.channels.forEach((channel) => {\r\n            const channelName = channel.display_name || channel.name;\r\n            if (channel.type === Constants.OPEN_CHANNEL && this.props.selectOpen) {\r\n                options.push(\r\n                    <option\r\n                        key={channel.id}\r\n                        value={channel.id}\r\n                    >\r\n                        {channelName}\r\n                    </option>\r\n                );\r\n            } else if (channel.type === Constants.PRIVATE_CHANNEL && this.props.selectPrivate) {\r\n                options.push(\r\n                    <option\r\n                        key={channel.id}\r\n                        value={channel.id}\r\n                    >\r\n                        {channelName}\r\n                    </option>\r\n                );\r\n            } else if (channel.type === Constants.DM_CHANNEL && this.props.selectDm) {\r\n                options.push(\r\n                    <option\r\n                        key={channel.id}\r\n                        value={channel.id}\r\n                    >\r\n                        {channelName}\r\n                    </option>\r\n                );\r\n            }\r\n        });\r\n\r\n        return (\r\n            <select\r\n                className='form-control'\r\n                value={this.props.value}\r\n                onChange={this.props.onChange}\r\n                id='channelSelect'\r\n            >\r\n                {options}\r\n            </select>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {createSelector} from 'reselect';\r\n\r\nimport {getMyChannels} from 'mattermost-redux/selectors/entities/channels';\r\nimport {getCurrentUserLocale} from 'mattermost-redux/selectors/entities/i18n';\r\nimport {sortChannelsByTypeAndDisplayName} from 'mattermost-redux/utils/channel_utils';\r\n\r\nimport ChannelSelect from './channel_select.jsx';\r\n\r\nconst getMyChannelsSorted = createSelector(\r\n    getMyChannels,\r\n    getCurrentUserLocale,\r\n    (channels, locale) => {\r\n        return [...channels].sort(sortChannelsByTypeAndDisplayName.bind(null, locale));\r\n    }\r\n);\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        channels: getMyChannelsSorted(state),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChannelSelect);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\r\nimport ChannelSelect from 'components/channel_select';\r\nimport FormError from 'components/form_error.jsx';\r\nimport SpinnerButton from 'components/spinner_button.jsx';\r\nimport {localizeMessage} from 'utils/utils.jsx';\r\n\r\nexport default class AbstractIncomingWebhook extends React.Component {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * The current team\r\n        */\r\n        team: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The header text to render, has id and defaultMessage\r\n        */\r\n        header: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The footer text to render, has id and defaultMessage\r\n        */\r\n        footer: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The spinner loading text to render, has id and defaultMessage\r\n        */\r\n        loading: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The server error text after a failed action\r\n        */\r\n        serverError: PropTypes.string.isRequired,\r\n\r\n        /**\r\n        * The hook used to set the initial state\r\n        */\r\n        initialHook: PropTypes.object,\r\n\r\n        /**\r\n        * Whether to allow configuration of the default post username.\r\n        */\r\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n        * Whether to allow configuration of the default post icon.\r\n        */\r\n        enablePostIconOverride: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n        * The async function to run when the action button is pressed\r\n        */\r\n        action: PropTypes.func.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = this.getStateFromHook(this.props.initialHook || {});\r\n    }\r\n\r\n    getStateFromHook = (hook) => {\r\n        return {\r\n            displayName: hook.display_name || '',\r\n            description: hook.description || '',\r\n            channelId: hook.channel_id || '',\r\n            channelLocked: hook.channel_locked || false,\r\n            username: hook.username || '',\r\n            iconURL: hook.icon_url || '',\r\n            saving: false,\r\n            serverError: '',\r\n            clientError: null,\r\n        };\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.saving) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            saving: true,\r\n            serverError: '',\r\n            clientError: '',\r\n        });\r\n\r\n        if (!this.state.channelId) {\r\n            this.setState({\r\n                saving: false,\r\n                clientError: (\r\n                    <FormattedMessage\r\n                        id='add_incoming_webhook.channelRequired'\r\n                        defaultMessage='A valid channel is required'\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const hook = {\r\n            channel_id: this.state.channelId,\r\n            channel_locked: this.state.channelLocked,\r\n            display_name: this.state.displayName,\r\n            description: this.state.description,\r\n            username: this.state.username,\r\n            icon_url: this.state.iconURL,\r\n        };\r\n\r\n        this.props.action(hook).then(() => this.setState({saving: false}));\r\n    }\r\n\r\n    updateDisplayName = (e) => {\r\n        this.setState({\r\n            displayName: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateDescription = (e) => {\r\n        this.setState({\r\n            description: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateChannelId = (e) => {\r\n        this.setState({\r\n            channelId: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateChannelLocked = (e) => {\r\n        this.setState({\r\n            channelLocked: e.target.checked,\r\n        });\r\n    }\r\n\r\n    updateUsername = (e) => {\r\n        this.setState({\r\n            username: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateIconURL = (e) => {\r\n        this.setState({\r\n            iconURL: e.target.value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var headerToRender = this.props.header;\r\n        var footerToRender = this.props.footer;\r\n\r\n        return (\r\n            <div className='backstage-content'>\r\n                <BackstageHeader>\r\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks`}>\r\n                        <FormattedMessage\r\n                            id='installed_incoming_webhooks.header'\r\n                            defaultMessage='Incoming Webhooks'\r\n                        />\r\n                    </Link>\r\n                    <FormattedMessage\r\n                        id={headerToRender.id}\r\n                        defaultMessage={headerToRender.defaultMessage}\r\n                    />\r\n                </BackstageHeader>\r\n                <div className='backstage-form'>\r\n                    <form\r\n                        className='form-horizontal'\r\n                        onSubmit={this.handleSubmit}\r\n                    >\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='displayName'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_incoming_webhook.displayName'\r\n                                    defaultMessage='Title'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <input\r\n                                    id='displayName'\r\n                                    type='text'\r\n                                    maxLength='64'\r\n                                    className='form-control'\r\n                                    value={this.state.displayName}\r\n                                    onChange={this.updateDisplayName}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_incoming_webhook.displayName.help'\r\n                                        defaultMessage='Choose a title to be displayed on the webhook settings page. Maximum 64 characters.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='description'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_incoming_webhook.description'\r\n                                    defaultMessage='Description'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <input\r\n                                    id='description'\r\n                                    type='text'\r\n                                    maxLength='500'\r\n                                    className='form-control'\r\n                                    value={this.state.description}\r\n                                    onChange={this.updateDescription}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_incoming_webhook.description.help'\r\n                                        defaultMessage='Description for your incoming webhook.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='channelId'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_incoming_webhook.channel'\r\n                                    defaultMessage='Channel'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <ChannelSelect\r\n                                    id='channelId'\r\n                                    value={this.state.channelId}\r\n                                    onChange={this.updateChannelId}\r\n                                    selectOpen={true}\r\n                                    selectPrivate={true}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_incoming_webhook.channel.help'\r\n                                        defaultMessage='The default public or private channel that receives the webhook payloads. You must belong to the private channel when setting up the webhook.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='channelLocked'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_incoming_webhook.channelLocked'\r\n                                    defaultMessage='Lock to this channel'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8 checkbox'>\r\n                                <input\r\n                                    id='channelLocked'\r\n                                    type='checkbox'\r\n                                    checked={this.state.channelLocked}\r\n                                    onChange={this.updateChannelLocked}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_incoming_webhook.channelLocked.help'\r\n                                        defaultMessage='If set, the incoming webhook can only post to the channel selected above.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        { this.props.enablePostUsernameOverride &&\r\n                            <div className='form-group'>\r\n                                <label\r\n                                    className='control-label col-sm-4'\r\n                                    htmlFor='username'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='add_incoming_webhook.username'\r\n                                        defaultMessage='Username'\r\n                                    />\r\n                                </label>\r\n                                <div className='col-md-5 col-sm-8'>\r\n                                    <input\r\n                                        id='username'\r\n                                        type='text'\r\n                                        maxLength='22'\r\n                                        className='form-control'\r\n                                        value={this.state.username}\r\n                                        onChange={this.updateUsername}\r\n                                    />\r\n                                    <div className='form__help'>\r\n                                        <FormattedMessage\r\n                                            id='add_incoming_webhook.username.help'\r\n                                            defaultMessage='Choose the username this integration will post as. Usernames can be up to 22 characters, and may contain lowercase letters, numbers and the symbols \"-\", \"_\", and \".\".'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        { this.props.enablePostIconOverride &&\r\n                            <div className='form-group'>\r\n                                <label\r\n                                    className='control-label col-sm-4'\r\n                                    htmlFor='iconURL'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='add_incoming_webhook.icon_url'\r\n                                        defaultMessage='Profile Picture'\r\n                                    />\r\n                                </label>\r\n                                <div className='col-md-5 col-sm-8'>\r\n                                    <input\r\n                                        id='iconURL'\r\n                                        type='text'\r\n                                        maxLength='1024'\r\n                                        className='form-control'\r\n                                        value={this.state.iconURL}\r\n                                        onChange={this.updateIconURL}\r\n                                    />\r\n                                    <div className='form__help'>\r\n                                        <FormattedMessage\r\n                                            id='add_incoming_webhook.icon_url.help'\r\n                                            defaultMessage='Choose the profile picture this integration will use when posting. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div className='backstage-form__footer'>\r\n                            <FormError\r\n                                type='backstage'\r\n                                errors={[this.props.serverError, this.state.clientError]}\r\n                            />\r\n                            <Link\r\n                                className='btn btn-link btn-sm'\r\n                                to={`/${this.props.team.name}/integrations/incoming_webhooks`}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_incoming_webhook.cancel'\r\n                                    defaultMessage='Cancel'\r\n                                />\r\n                            </Link>\r\n                            <SpinnerButton\r\n                                className='btn btn-primary'\r\n                                type='submit'\r\n                                spinning={this.state.saving}\r\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\r\n                                onClick={this.handleSubmit}\r\n                                id='saveWebhook'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id={footerToRender.id}\r\n                                    defaultMessage={footerToRender.defaultMessage}\r\n                                />\r\n                            </SpinnerButton>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport {t} from 'utils/i18n';\r\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook.jsx';\r\n\r\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\r\nconst FOOTER = {id: t('add_incoming_webhook.save'), defaultMessage: 'Save'};\r\nconst LOADING = {id: t('add_incoming_webhook.saving'), defaultMessage: 'Saving...'};\r\n\r\nexport default class AddIncomingWebhook extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * The current team\r\n        */\r\n        team: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The request state for createIncomingHook action. Contains status and error\r\n        */\r\n        createIncomingHookRequest: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * Whether to allow configuration of the default post username.\r\n        */\r\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n        * Whether to allow configuration of the default post icon.\r\n        */\r\n        enablePostIconOverride: PropTypes.bool.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n            * The function to call to add a new incoming webhook\r\n            */\r\n            createIncomingHook: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            serverError: '',\r\n        };\r\n    }\r\n\r\n    addIncomingHook = async (hook) => {\r\n        this.setState({serverError: ''});\r\n\r\n        const {data} = await this.props.actions.createIncomingHook(hook);\r\n        if (data) {\r\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=incoming_webhooks&id=${data.id}`);\r\n            return;\r\n        }\r\n\r\n        if (this.props.createIncomingHookRequest.error) {\r\n            this.setState({serverError: this.props.createIncomingHookRequest.error.message});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AbstractIncomingWebhook\r\n                team={this.props.team}\r\n                header={HEADER}\r\n                footer={FOOTER}\r\n                loading={LOADING}\r\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\r\n                enablePostIconOverride={this.props.enablePostIconOverride}\r\n                action={this.addIncomingHook}\r\n                serverError={this.state.serverError}\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {createIncomingHook} from 'mattermost-redux/actions/integrations';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport AddIncomingWebhook from './add_incoming_webhook.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\r\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\r\n\r\n    return {\r\n        createIncomingHookRequest: state.requests.integrations.createIncomingHook,\r\n        enablePostUsernameOverride,\r\n        enablePostIconOverride,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            createIncomingHook,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddIncomingWebhook);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport {t} from 'utils/i18n';\r\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook.jsx';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\n\r\nconst HEADER = {id: t('integrations.edit'), defaultMessage: 'Edit'};\r\nconst FOOTER = {id: t('update_incoming_webhook.update'), defaultMessage: 'Update'};\r\nconst LOADING = {id: t('update_incoming_webhook.updating'), defaultMessage: 'Updating...'};\r\n\r\nexport default class EditIncomingWebhook extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * The current team\r\n        */\r\n        team: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The incoming webhook to edit\r\n        */\r\n        hook: PropTypes.object,\r\n\r\n        /**\r\n        * The id of the incoming webhook to edit\r\n        */\r\n        hookId: PropTypes.string.isRequired,\r\n\r\n        /**\r\n        * The request state for updateIncomingHook action. Contains status and error\r\n        */\r\n        updateIncomingHookRequest: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * Whether or not incoming webhooks are enabled.\r\n        */\r\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n        * Whether to allow configuration of the default post username.\r\n        */\r\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n        * Whether to allow configuration of the default post icon.\r\n        */\r\n        enablePostIconOverride: PropTypes.bool.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n            * The function to call to update an incoming webhook\r\n            */\r\n            updateIncomingHook: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * The function to call to get an incoming webhook\r\n            */\r\n            getIncomingHook: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmModal: false,\r\n            serverError: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.enableIncomingWebhooks) {\r\n            this.props.actions.getIncomingHook(this.props.hookId);\r\n        }\r\n    }\r\n\r\n    editIncomingHook = async (hook) => {\r\n        this.newHook = hook;\r\n\r\n        if (this.props.hook.id) {\r\n            hook.id = this.props.hook.id;\r\n        }\r\n\r\n        if (this.props.hook.token) {\r\n            hook.token = this.props.hook.token;\r\n        }\r\n\r\n        await this.submitHook();\r\n    }\r\n\r\n    submitHook = async () => {\r\n        this.setState({serverError: ''});\r\n\r\n        const {data} = await this.props.actions.updateIncomingHook(this.newHook);\r\n\r\n        if (data) {\r\n            browserHistory.push(`/${this.props.team.name}/integrations/incoming_webhooks`);\r\n            return;\r\n        }\r\n\r\n        if (this.props.updateIncomingHookRequest.error) {\r\n            this.setState({serverError: this.props.updateIncomingHookRequest.error.message});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.hook) {\r\n            return <LoadingScreen/>;\r\n        }\r\n\r\n        return (\r\n            <AbstractIncomingWebhook\r\n                team={this.props.team}\r\n                header={HEADER}\r\n                footer={FOOTER}\r\n                loading={LOADING}\r\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\r\n                enablePostIconOverride={this.props.enablePostIconOverride}\r\n                action={this.editIncomingHook}\r\n                serverError={this.state.serverError}\r\n                initialHook={this.props.hook}\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getIncomingHook, updateIncomingHook} from 'mattermost-redux/actions/integrations';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport EditIncomingWebhook from './edit_incoming_webhook.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const config = getConfig(state);\r\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\r\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\r\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\r\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\r\n\r\n    return {\r\n        hookId,\r\n        hook: state.entities.integrations.incomingHooks[hookId],\r\n        updateIncomingHookRequest: state.requests.integrations.updateIncomingHook,\r\n        enableIncomingWebhooks,\r\n        enablePostUsernameOverride,\r\n        enablePostIconOverride,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            updateIncomingHook,\r\n            getIncomingHook,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditIncomingWebhook);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {t} from 'utils/i18n';\r\nimport CopyText from 'components/copy_text.jsx';\r\n\r\nimport DeleteIntegration from './delete_integration.jsx';\r\n\r\nexport function matchesFilter(outgoingWebhook, channel, filter) {\r\n    if (!filter) {\r\n        return true;\r\n    }\r\n\r\n    const {\r\n        display_name: displayName,\r\n        description,\r\n        trigger_words: triggerWords,\r\n    } = outgoingWebhook;\r\n\r\n    if (\r\n        (displayName && displayName.toLowerCase().indexOf(filter) !== -1) ||\r\n        (description && description.toLowerCase().indexOf(filter) !== -1)\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    if (triggerWords) {\r\n        for (const triggerWord of triggerWords) {\r\n            if (triggerWord.toLowerCase().indexOf(filter) !== -1) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (channel && channel.name) {\r\n        if (channel.name.toLowerCase().indexOf(filter) !== -1) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport default class InstalledOutgoingWebhook extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * Data used for showing webhook details\r\n        */\r\n        outgoingWebhook: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * Function used for webhook token regeneration\r\n        */\r\n        onRegenToken: PropTypes.func.isRequired,\r\n\r\n        /**\r\n        * Function to call when webhook delete button is pressed\r\n        */\r\n        onDelete: PropTypes.func.isRequired,\r\n\r\n        /**\r\n        * String used for filtering webhook item\r\n        */\r\n        filter: PropTypes.string,\r\n\r\n        /**\r\n        * Data used for showing created by details\r\n        */\r\n        creator: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        *  Set to show available actions on webhook\r\n        */\r\n        canChange: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n        *  Data used in routing of webhook for modifications\r\n        */\r\n        team: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        *  Data used for filtering of webhooks based in filter prop\r\n        */\r\n        channel: PropTypes.object,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleRegenToken = this.handleRegenToken.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    handleRegenToken(e) {\r\n        e.preventDefault();\r\n\r\n        this.props.onRegenToken(this.props.outgoingWebhook);\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.onDelete(this.props.outgoingWebhook);\r\n    }\r\n\r\n    makeDisplayName(outgoingWebhook, channel) {\r\n        if (outgoingWebhook.display_name) {\r\n            return outgoingWebhook.display_name;\r\n        } else if (channel) {\r\n            return channel.display_name;\r\n        }\r\n        return (\r\n            <FormattedMessage\r\n                id='installed_outgoing_webhooks.unknown_channel'\r\n                defaultMessage='A Private Webhook'\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const outgoingWebhook = this.props.outgoingWebhook;\r\n        const channel = this.props.channel;\r\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\r\n        const triggerWordsFull = 0;\r\n        const triggerWordsStartsWith = 1;\r\n\r\n        if (outgoingWebhook && !matchesFilter(outgoingWebhook, channel, filter)) {\r\n            return null;\r\n        }\r\n\r\n        const displayName = this.makeDisplayName(outgoingWebhook, channel);\r\n\r\n        let description = null;\r\n        if (outgoingWebhook.description) {\r\n            description = (\r\n                <div className='item-details__row'>\r\n                    <span className='item-details__description'>\r\n                        {outgoingWebhook.description}\r\n                    </span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let triggerWords = null;\r\n        if (outgoingWebhook.trigger_words && outgoingWebhook.trigger_words.length > 0) {\r\n            triggerWords = (\r\n                <div className='item-details__row'>\r\n                    <span className='item-details__trigger-words'>\r\n                        <FormattedMessage\r\n                            id='installed_integrations.triggerWords'\r\n                            defaultMessage='Trigger Words: {triggerWords}'\r\n                            values={{\r\n                                triggerWords: outgoingWebhook.trigger_words.join(', '),\r\n                            }}\r\n                        />\r\n                    </span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const urls = (\r\n            <div className='item-details__row'>\r\n                <span className='item-details__url'>\r\n                    <FormattedMessage\r\n                        id='installed_integrations.callback_urls'\r\n                        defaultMessage='Callback URLs: {urls}'\r\n                        values={{\r\n                            urls: outgoingWebhook.callback_urls.join(', '),\r\n                        }}\r\n                    />\r\n                </span>\r\n            </div>\r\n        );\r\n\r\n        let triggerWhen;\r\n        if (outgoingWebhook.trigger_when === triggerWordsFull) {\r\n            triggerWhen = (\r\n                <FormattedMessage\r\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenFullWord'\r\n                    defaultMessage='First word matches a trigger word exactly'\r\n                />\r\n            );\r\n        } else if (outgoingWebhook.trigger_when === triggerWordsStartsWith) {\r\n            triggerWhen = (\r\n                <FormattedMessage\r\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenStartsWith'\r\n                    defaultMessage='First word starts with a trigger word'\r\n                />\r\n            );\r\n        }\r\n\r\n        let actions = null;\r\n        if (this.props.canChange) {\r\n            actions = (\r\n                <div className='item-actions'>\r\n                    <button\r\n                        className='style--none color--link'\r\n                        onClick={this.handleRegenToken}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='installed_integrations.regenToken'\r\n                            defaultMessage='Regen Token'\r\n                        />\r\n                    </button>\r\n                    {' - '}\r\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks/edit?id=${outgoingWebhook.id}`}>\r\n                        <FormattedMessage\r\n                            id='installed_integrations.edit'\r\n                            defaultMessage='Edit'\r\n                        />\r\n                    </Link>\r\n                    {' - '}\r\n                    <DeleteIntegration\r\n                        messageId={t('installed_outgoing_webhooks.delete.confirm')}\r\n                        onDelete={this.handleDelete}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='backstage-list__item'>\r\n                <div className='item-details'>\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__name'>\r\n                            {displayName}\r\n                        </span>\r\n                    </div>\r\n                    {description}\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__content_type'>\r\n                            <FormattedMessage\r\n                                id='installed_integrations.content_type'\r\n                                defaultMessage='Content-Type: {contentType}'\r\n                                values={{\r\n                                    contentType: outgoingWebhook.content_type || 'application/x-www-form-urlencoded',\r\n                                }}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                    {triggerWords}\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__trigger-when'>\r\n                            <FormattedMessage\r\n                                id='installed_integrations.triggerWhen'\r\n                                defaultMessage='Trigger When: {triggerWhen}'\r\n                                values={{\r\n                                    triggerWhen,\r\n                                }}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__token'>\r\n                            <FormattedMessage\r\n                                id='installed_integrations.token'\r\n                                defaultMessage='Token: {token}'\r\n                                values={{\r\n                                    token: outgoingWebhook.token,\r\n                                }}\r\n                            />\r\n                            <CopyText\r\n                                value={outgoingWebhook.token}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__creation'>\r\n                            <FormattedMessage\r\n                                id='installed_integrations.creation'\r\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\r\n                                values={{\r\n                                    creator: this.props.creator.username,\r\n                                    createAt: outgoingWebhook.create_at,\r\n                                }}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                    {urls}\r\n                </div>\r\n                {actions}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport Constants from 'utils/constants.jsx';\r\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\r\nimport InstalledOutgoingWebhook, {matchesFilter} from 'components/integrations/installed_outgoing_webhook.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\n\r\nexport default class InstalledOutgoingWebhooks extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        *  Data used in passing down as props for webhook modifications\r\n        */\r\n        team: PropTypes.object,\r\n\r\n        /**\r\n        * Data used for checking if webhook is created by current user\r\n        */\r\n        user: PropTypes.object,\r\n\r\n        /**\r\n        *  Data used for checking modification privileges\r\n        */\r\n        canManageOthersWebhooks: PropTypes.bool,\r\n\r\n        /**\r\n        * Data used in passing down as props for showing webhook details\r\n        */\r\n        outgoingWebhooks: PropTypes.array,\r\n\r\n        /**\r\n        * Data used in sorting for displaying list and as props channel details\r\n        */\r\n        channels: PropTypes.object,\r\n\r\n        /**\r\n        *  Data used in passing down as props for webhook -created by label\r\n        */\r\n        users: PropTypes.object,\r\n\r\n        /**\r\n        *  Data used in passing as argument for loading webhooks\r\n        */\r\n        teamId: PropTypes.string,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n            * The function to call for removing outgoingWebhook\r\n            */\r\n            removeOutgoingHook: PropTypes.func,\r\n\r\n            /**\r\n            * The function to call for outgoingWebhook List and for the status of api\r\n            */\r\n            loadOutgoingHooksAndProfilesForTeam: PropTypes.func,\r\n\r\n            /**\r\n            * The function to call for regeneration of webhook token\r\n            */\r\n            regenOutgoingHookToken: PropTypes.func,\r\n        }),\r\n\r\n        /**\r\n        * Whether or not outgoing webhooks are enabled.\r\n        */\r\n        enableOutgoingWebhooks: PropTypes.bool,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.outgoingWebhookCompare = this.outgoingWebhookCompare.bind(this);\r\n\r\n        this.state = {\r\n            loading: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.enableOutgoingWebhooks) {\r\n            this.props.actions.loadOutgoingHooksAndProfilesForTeam(\r\n                this.props.teamId,\r\n                Constants.Integrations.START_PAGE_NUM,\r\n                Constants.Integrations.PAGE_SIZE\r\n            ).then(\r\n                () => this.setState({loading: false})\r\n            );\r\n        }\r\n    }\r\n\r\n    regenOutgoingWebhookToken = (outgoingWebhook) => {\r\n        this.props.actions.regenOutgoingHookToken(outgoingWebhook.id);\r\n    }\r\n\r\n    removeOutgoingHook = (outgoingWebhook) => {\r\n        this.props.actions.removeOutgoingHook(outgoingWebhook.id);\r\n    }\r\n\r\n    outgoingWebhookCompare(a, b) {\r\n        let displayNameA = a.display_name;\r\n        if (!displayNameA) {\r\n            const channelA = this.props.channels[a.channel_id];\r\n            if (channelA) {\r\n                displayNameA = channelA.display_name;\r\n            } else {\r\n                displayNameA = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\r\n            }\r\n        }\r\n\r\n        let displayNameB = b.display_name;\r\n        if (!displayNameB) {\r\n            const channelB = this.props.channels[b.channel_id];\r\n            if (channelB) {\r\n                displayNameB = channelB.display_name;\r\n            } else {\r\n                displayNameB = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\r\n            }\r\n        }\r\n        return displayNameA.localeCompare(displayNameB);\r\n    }\r\n\r\n    outgoingWebhooks = (filter) => this.props.outgoingWebhooks.\r\n        sort(this.outgoingWebhookCompare).\r\n        filter((outgoingWebhook) => matchesFilter(outgoingWebhook, this.props.channels[outgoingWebhook.channel_id], filter)).\r\n        map((outgoingWebhook) => {\r\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === outgoingWebhook.creator_id;\r\n            const channel = this.props.channels[outgoingWebhook.channel_id];\r\n            return (\r\n                <InstalledOutgoingWebhook\r\n                    key={outgoingWebhook.id}\r\n                    outgoingWebhook={outgoingWebhook}\r\n                    onRegenToken={this.regenOutgoingWebhookToken}\r\n                    onDelete={this.removeOutgoingHook}\r\n                    creator={this.props.users[outgoingWebhook.creator_id] || {}}\r\n                    canChange={canChange}\r\n                    team={this.props.team}\r\n                    channel={channel}\r\n                />\r\n            );\r\n        });\r\n\r\n    render() {\r\n        return (\r\n            <BackstageList\r\n                header={\r\n                    <FormattedMessage\r\n                        id='installed_outgoing_webhooks.header'\r\n                        defaultMessage='Installed Outgoing Webhooks'\r\n                    />\r\n                }\r\n                addText={\r\n                    <FormattedMessage\r\n                        id='installed_outgoing_webhooks.add'\r\n                        defaultMessage='Add Outgoing Webhook'\r\n                    />\r\n                }\r\n                addLink={'/' + this.props.team.name + '/integrations/outgoing_webhooks/add'}\r\n                addButtonId='addOutgoingWebhook'\r\n                emptyText={\r\n                    <FormattedMessage\r\n                        id='installed_outgoing_webhooks.empty'\r\n                        defaultMessage='No outgoing webhooks found'\r\n                    />\r\n                }\r\n                emptyTextSearch={\r\n                    <FormattedMarkdownMessage\r\n                        id='installed_outgoing_webhooks.emptySearch'\r\n                        defaultMessage='No outgoing webhooks match {searchTerm}'\r\n                    />\r\n                }\r\n                helpText={\r\n                    <FormattedMessage\r\n                        id='installed_outgoing_webhooks.help'\r\n                        defaultMessage='Use outgoing webhooks to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\r\n                        values={{\r\n                            buildYourOwn: (\r\n                                <a\r\n                                    target='_blank'\r\n                                    rel='noopener noreferrer'\r\n                                    href='http://docs.mattermost.com/developer/webhooks-outgoing.html'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='installed_outgoing_webhooks.help.buildYourOwn'\r\n                                        defaultMessage='Build your own'\r\n                                    />\r\n                                </a>\r\n                            ),\r\n                            appDirectory: (\r\n                                <a\r\n                                    target='_blank'\r\n                                    rel='noopener noreferrer'\r\n                                    href='https://about.mattermost.com/default-app-directory/'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='installed_outgoing_webhooks.help.appDirectory'\r\n                                        defaultMessage='App Directory'\r\n                                    />\r\n                                </a>\r\n                            ),\r\n                        }}\r\n                    />\r\n                }\r\n                searchPlaceholder={Utils.localizeMessage('installed_outgoing_webhooks.search', 'Search Outgoing Webhooks')}\r\n                loading={this.state.loading}\r\n            >\r\n                {(filter) => {\r\n                    const children = this.outgoingWebhooks(filter);\r\n                    return [children, children.length > 0];\r\n                }}\r\n            </BackstageList>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as Actions from 'mattermost-redux/actions/integrations';\r\nimport {getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\r\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\r\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\r\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\r\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\r\nimport {Permissions} from 'mattermost-redux/constants';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport {loadOutgoingHooksAndProfilesForTeam} from 'actions/integration_actions';\r\n\r\nimport InstalledOutgoingWebhook from './installed_outgoing_webhooks.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n    const teamId = getCurrentTeamId(state);\r\n    const canManageOthersWebhooks = haveITeamPermission(state, {team: teamId, permission: Permissions.MANAGE_OTHERS_OUTGOING_WEBHOOKS});\r\n    const outgoingHooks = getOutgoingHooks(state);\r\n    const outgoingWebhooks = Object.keys(outgoingHooks).\r\n        map((key) => outgoingHooks[key]).\r\n        filter((outgoingWebhook) => outgoingWebhook.team_id === teamId);\r\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\r\n\r\n    return {\r\n        outgoingWebhooks,\r\n        channels: getAllChannels(state),\r\n        users: getUsers(state),\r\n        teamId,\r\n        canManageOthersWebhooks,\r\n        enableOutgoingWebhooks,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            loadOutgoingHooksAndProfilesForTeam,\r\n            removeOutgoingHook: Actions.removeOutgoingHook,\r\n            regenOutgoingHookToken: Actions.regenOutgoingHookToken,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOutgoingWebhook);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {localizeMessage} from 'utils/utils.jsx';\r\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\r\nimport ChannelSelect from 'components/channel_select';\r\nimport FormError from 'components/form_error.jsx';\r\nimport SpinnerButton from 'components/spinner_button.jsx';\r\n\r\nexport default class AbstractOutgoingWebhook extends React.Component {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * The current team\r\n         */\r\n        team: PropTypes.object.isRequired,\r\n\r\n        /**\r\n         * The header text to render, has id and defaultMessage\r\n         */\r\n        header: PropTypes.object.isRequired,\r\n\r\n        /**\r\n         * The footer text to render, has id and defaultMessage\r\n         */\r\n        footer: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The spinner loading text to render, has id and defaultMessage\r\n        */\r\n        loading: PropTypes.object.isRequired,\r\n\r\n        /**\r\n         * Any extra component/node to render\r\n         */\r\n        renderExtra: PropTypes.node.isRequired,\r\n\r\n        /**\r\n         * The server error text after a failed action\r\n         */\r\n        serverError: PropTypes.string.isRequired,\r\n\r\n        /**\r\n         * The hook used to set the initial state\r\n         */\r\n        initialHook: PropTypes.object,\r\n\r\n        /**\r\n         * The async function to run when the action button is pressed\r\n         */\r\n        action: PropTypes.func.isRequired,\r\n\r\n        /**\r\n         * Whether to allow configuration of the default post username.\r\n         */\r\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * Whether to allow configuration of the default post icon.\r\n         */\r\n        enablePostIconOverride: PropTypes.bool.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = this.getStateFromHook(this.props.initialHook || {});\r\n    }\r\n\r\n    getStateFromHook = (hook) => {\r\n        let triggerWords = '';\r\n        if (hook.trigger_words) {\r\n            let i = 0;\r\n            for (i = 0; i < hook.trigger_words.length; i++) {\r\n                triggerWords += hook.trigger_words[i] + '\\n';\r\n            }\r\n        }\r\n\r\n        let callbackUrls = '';\r\n        if (hook.callback_urls) {\r\n            let i = 0;\r\n            for (i = 0; i < hook.callback_urls.length; i++) {\r\n                callbackUrls += hook.callback_urls[i] + '\\n';\r\n            }\r\n        }\r\n\r\n        return {\r\n            displayName: hook.display_name || '',\r\n            description: hook.description || '',\r\n            contentType: hook.content_type || 'application/x-www-form-urlencoded',\r\n            channelId: hook.channel_id || '',\r\n            triggerWords,\r\n            triggerWhen: hook.trigger_when || 0,\r\n            callbackUrls,\r\n            saving: false,\r\n            clientError: null,\r\n            username: hook.username || '',\r\n            iconURL: hook.icon_url || '',\r\n        };\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.saving) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            saving: true,\r\n            clientError: '',\r\n        });\r\n\r\n        const triggerWords = [];\r\n        if (this.state.triggerWords) {\r\n            for (let triggerWord of this.state.triggerWords.split('\\n')) {\r\n                triggerWord = triggerWord.trim();\r\n\r\n                if (triggerWord.length > 0) {\r\n                    triggerWords.push(triggerWord);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!this.state.channelId && triggerWords.length === 0) {\r\n            this.setState({\r\n                saving: false,\r\n                clientError: (\r\n                    <FormattedMessage\r\n                        id='add_outgoing_webhook.triggerWordsOrChannelRequired'\r\n                        defaultMessage='A valid channel or a list of trigger words is required'\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const callbackUrls = [];\r\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\r\n            callbackUrl = callbackUrl.trim();\r\n\r\n            if (callbackUrl.length > 0) {\r\n                callbackUrls.push(callbackUrl);\r\n            }\r\n        }\r\n\r\n        if (callbackUrls.length === 0) {\r\n            this.setState({\r\n                saving: false,\r\n                clientError: (\r\n                    <FormattedMessage\r\n                        id='add_outgoing_webhook.callbackUrlsRequired'\r\n                        defaultMessage='One or more callback URLs are required'\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const hook = {\r\n            team_id: this.props.team.id,\r\n            channel_id: this.state.channelId,\r\n            trigger_words: triggerWords,\r\n            trigger_when: parseInt(this.state.triggerWhen, 10),\r\n            callback_urls: callbackUrls,\r\n            display_name: this.state.displayName,\r\n            content_type: this.state.contentType,\r\n            description: this.state.description,\r\n            username: this.state.username,\r\n            icon_url: this.state.iconURL,\r\n        };\r\n\r\n        this.props.action(hook).then(() => this.setState({saving: false}));\r\n    }\r\n\r\n    updateDisplayName = (e) => {\r\n        this.setState({\r\n            displayName: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateDescription = (e) => {\r\n        this.setState({\r\n            description: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateContentType = (e) => {\r\n        this.setState({\r\n            contentType: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateChannelId = (e) => {\r\n        this.setState({\r\n            channelId: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateTriggerWords = (e) => {\r\n        this.setState({\r\n            triggerWords: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateTriggerWhen = (e) => {\r\n        this.setState({\r\n            triggerWhen: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateCallbackUrls = (e) => {\r\n        this.setState({\r\n            callbackUrls: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateUsername = (e) => {\r\n        this.setState({\r\n            username: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateIconURL = (e) => {\r\n        this.setState({\r\n            iconURL: e.target.value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const contentTypeOption1 = 'application/x-www-form-urlencoded';\r\n        const contentTypeOption2 = 'application/json';\r\n\r\n        var headerToRender = this.props.header;\r\n        var footerToRender = this.props.footer;\r\n        var renderExtra = this.props.renderExtra;\r\n\r\n        return (\r\n            <div className='backstage-content'>\r\n                <BackstageHeader>\r\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks`}>\r\n                        <FormattedMessage\r\n                            id='installed_outgoing_webhooks.header'\r\n                            defaultMessage='Outgoing Webhooks'\r\n                        />\r\n                    </Link>\r\n                    <FormattedMessage\r\n                        id={headerToRender.id}\r\n                        defaultMessage={headerToRender.defaultMessage}\r\n                    />\r\n                </BackstageHeader>\r\n                <div className='backstage-form'>\r\n                    <form\r\n                        className='form-horizontal'\r\n                        onSubmit={this.handleSubmit}\r\n                    >\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='displayName'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_outgoing_webhook.displayName'\r\n                                    defaultMessage='Title'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <input\r\n                                    id='displayName'\r\n                                    type='text'\r\n                                    maxLength='64'\r\n                                    className='form-control'\r\n                                    value={this.state.displayName}\r\n                                    onChange={this.updateDisplayName}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_outgoing_webhook.displayName.help'\r\n                                        defaultMessage='Choose a title to be displayed on the webhook settings page. Maximum 64 characters.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='description'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_outgoing_webhook.description'\r\n                                    defaultMessage='Description'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <input\r\n                                    id='description'\r\n                                    type='text'\r\n                                    maxLength='500'\r\n                                    className='form-control'\r\n                                    value={this.state.description}\r\n                                    onChange={this.updateDescription}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_outgoing_webhook.description.help'\r\n                                        defaultMessage='Description for your incoming webhook.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='contentType'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_outgoing_webhook.content_Type'\r\n                                    defaultMessage='Content Type'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <select\r\n                                    className='form-control'\r\n                                    value={this.state.contentType}\r\n                                    onChange={this.updateContentType}\r\n                                >\r\n                                    <option\r\n                                        value={contentTypeOption1}\r\n                                    >\r\n                                        {contentTypeOption1}\r\n                                    </option>\r\n                                    <option\r\n                                        value={contentTypeOption2}\r\n                                    >\r\n                                        {contentTypeOption2}\r\n                                    </option>\r\n                                </select>\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_outgoing_webhook.contentType.help1'\r\n                                        defaultMessage='Choose the content type by which the request will be sent.'\r\n                                    />\r\n                                </div>\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_outgoing_webhook.contentType.help2'\r\n                                        defaultMessage='If application/x-www-form-urlencoded is chosen, the server will encode the parameters in a URL format in the request body.'\r\n                                    />\r\n                                </div>\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_outgoing_webhook.contentType.help3'\r\n                                        defaultMessage='If application/json is chosen, the server will format the request body as JSON.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='channelId'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_outgoing_webhook.channel'\r\n                                    defaultMessage='Channel'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <ChannelSelect\r\n                                    id='channelId'\r\n                                    value={this.state.channelId}\r\n                                    onChange={this.updateChannelId}\r\n                                    selectOpen={true}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_outgoing_webhook.channel.help'\r\n                                        defaultMessage='Public channel that delivers payload to webhook. Optional if at least one Trigger Word is specified.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='triggerWords'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_outgoing_webhook.triggerWords'\r\n                                    defaultMessage='Trigger Words (One Per Line)'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <textarea\r\n                                    id='triggerWords'\r\n                                    rows='3'\r\n                                    maxLength='1000'\r\n                                    className='form-control'\r\n                                    value={this.state.triggerWords}\r\n                                    onChange={this.updateTriggerWords}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_outgoing_webhook.triggerWords.help'\r\n                                        defaultMessage='Messages that start with one of the specified words will trigger the outgoing webhook. Optional if Channel is selected.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='triggerWords'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_outgoing_webhook.triggerWordsTriggerWhen'\r\n                                    defaultMessage='Trigger When'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <select\r\n                                    className='form-control'\r\n                                    value={this.state.triggerWhen}\r\n                                    onChange={this.updateTriggerWhen}\r\n                                >\r\n                                    <option\r\n                                        value='0'\r\n                                    >\r\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenFullWord', 'First word matches a trigger word exactly')}\r\n                                    </option>\r\n                                    <option\r\n                                        value='1'\r\n                                    >\r\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenStartsWith', 'First word starts with a trigger word')}\r\n                                    </option>\r\n                                </select>\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_outgoing_webhook.triggerWordsTriggerWhen.help'\r\n                                        defaultMessage='Choose when to trigger the outgoing webhook; if the first word of a message matches a Trigger Word exactly, or if it starts with a Trigger Word.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='callbackUrls'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_outgoing_webhook.callbackUrls'\r\n                                    defaultMessage='Callback URLs (One Per Line)'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <textarea\r\n                                    id='callbackUrls'\r\n                                    rows='3'\r\n                                    maxLength='1000'\r\n                                    className='form-control'\r\n                                    value={this.state.callbackUrls}\r\n                                    onChange={this.updateCallbackUrls}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_outgoing_webhook.callbackUrls.help'\r\n                                        defaultMessage='The URL that messages will be sent to. If the URL is private, add it as a {link}.'\r\n                                        values={{\r\n                                            link: (\r\n                                                <a\r\n                                                    href='https://about.mattermost.com/default-allow-internal-connections-settings-documentation/'\r\n                                                    target='_blank'\r\n                                                    rel='noopener noreferrer'\r\n                                                >\r\n                                                    <FormattedMessage\r\n                                                        id='add_outgoing_webhook.callbackUrls.helpLinkText'\r\n                                                        defaultMessage='trusted internal connection'\r\n                                                    />\r\n                                                </a>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {this.props.enablePostUsernameOverride &&\r\n                            <div className='form-group'>\r\n                                <label\r\n                                    className='control-label col-sm-4'\r\n                                    htmlFor='username'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='add_outgoing_webhook.username'\r\n                                        defaultMessage='Username'\r\n                                    />\r\n                                </label>\r\n                                <div className='col-md-5 col-sm-8'>\r\n                                    <input\r\n                                        id='username'\r\n                                        type='text'\r\n                                        maxLength='22'\r\n                                        className='form-control'\r\n                                        value={this.state.username}\r\n                                        onChange={this.updateUsername}\r\n                                    />\r\n                                    <div className='form__help'>\r\n                                        <FormattedMessage\r\n                                            id='add_outgoing_webhook.username.help'\r\n                                            defaultMessage='Choose the username this integration will post as. Usernames can be up to 22 characters, and may contain lowercase letters, numbers and the symbols \"-\", \"_\", and \".\".'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {this.props.enablePostIconOverride &&\r\n                            <div className='form-group'>\r\n                                <label\r\n                                    className='control-label col-sm-4'\r\n                                    htmlFor='iconURL'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='add_outgoing_webhook.icon_url'\r\n                                        defaultMessage='Profile Picture'\r\n                                    />\r\n                                </label>\r\n                                <div className='col-md-5 col-sm-8'>\r\n                                    <input\r\n                                        id='iconURL'\r\n                                        type='text'\r\n                                        maxLength='1024'\r\n                                        className='form-control'\r\n                                        value={this.state.iconURL}\r\n                                        onChange={this.updateIconURL}\r\n                                    />\r\n                                    <div className='form__help'>\r\n                                        <FormattedMessage\r\n                                            id='add_outgoing_webhook.icon_url.help'\r\n                                            defaultMessage='Choose the profile picture this integration will use when posting. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div className='backstage-form__footer'>\r\n                            <FormError\r\n                                type='backstage'\r\n                                errors={[this.props.serverError, this.state.clientError]}\r\n                            />\r\n                            <Link\r\n                                className='btn btn-link btn-sm'\r\n                                to={`/${this.props.team.name}/integrations/outgoing_webhooks`}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_outgoing_webhook.cancel'\r\n                                    defaultMessage='Cancel'\r\n                                />\r\n                            </Link>\r\n                            <SpinnerButton\r\n                                className='btn btn-primary'\r\n                                type='submit'\r\n                                spinning={this.state.saving}\r\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\r\n                                onClick={this.handleSubmit}\r\n                                id='saveWebhook'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id={footerToRender.id}\r\n                                    defaultMessage={footerToRender.defaultMessage}\r\n                                />\r\n                            </SpinnerButton>\r\n                            {renderExtra}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport {t} from 'utils/i18n';\r\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\r\n\r\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\r\nconst FOOTER = {id: t('add_outgoing_webhook.save'), defaultMessage: 'Save'};\r\nconst LOADING = {id: t('add_outgoing_webhook.saving'), defaultMessage: 'Saving...'};\r\n\r\nexport default class AddOutgoingWebhook extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * The current team\r\n         */\r\n        team: PropTypes.object.isRequired,\r\n\r\n        /**\r\n         * The request state for createOutgoingHook action. Contains status and error\r\n         */\r\n        createOutgoingHookRequest: PropTypes.object.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n             * The function to call to add a new outgoing webhook\r\n             */\r\n            createOutgoingHook: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n\r\n        /**\r\n         * Whether to allow configuration of the default post username.\r\n         */\r\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * Whether to allow configuration of the default post icon.\r\n         */\r\n        enablePostIconOverride: PropTypes.bool.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            serverError: '',\r\n        };\r\n    }\r\n\r\n    addOutgoingHook = async (hook) => {\r\n        this.setState({serverError: ''});\r\n\r\n        const {data} = await this.props.actions.createOutgoingHook(hook);\r\n        if (data) {\r\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=outgoing_webhooks&id=${data.id}`);\r\n            return;\r\n        }\r\n\r\n        if (this.props.createOutgoingHookRequest.error) {\r\n            this.setState({serverError: this.props.createOutgoingHookRequest.error.message});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AbstractOutgoingWebhook\r\n                team={this.props.team}\r\n                header={HEADER}\r\n                footer={FOOTER}\r\n                loading={LOADING}\r\n                renderExtra={''}\r\n                action={this.addOutgoingHook}\r\n                serverError={this.state.serverError}\r\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\r\n                enablePostIconOverride={this.props.enablePostIconOverride}\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {createOutgoingHook} from 'mattermost-redux/actions/integrations';\r\n\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport AddOutgoingWebhook from './add_outgoing_webhook.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\r\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\r\n    return {\r\n        createOutgoingHookRequest: state.requests.integrations.createOutgoingHook,\r\n        enablePostUsernameOverride,\r\n        enablePostIconOverride,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            createOutgoingHook,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOutgoingWebhook);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\n\r\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\r\nconst FOOTER = {id: 'update_outgoing_webhook.update', defaultMessage: 'Update'};\r\nconst LOADING = {id: 'update_outgoing_webhook.updating', defaultMessage: 'Updating...'};\r\n\r\nexport default class EditOutgoingWebhook extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * The current team\r\n         */\r\n        team: PropTypes.object.isRequired,\r\n\r\n        /**\r\n         * The outgoing webhook to edit\r\n         */\r\n        hook: PropTypes.object,\r\n\r\n        /**\r\n         * The id of the outgoing webhook to edit\r\n         */\r\n        hookId: PropTypes.string.isRequired,\r\n\r\n        /**\r\n         * The request state for updateOutgoingHook action. Contains status and error\r\n         */\r\n        updateOutgoingHookRequest: PropTypes.object.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n             * The function to call to update an outgoing webhook\r\n             */\r\n            updateOutgoingHook: PropTypes.func.isRequired,\r\n\r\n            /**\r\n             * The function to call to get an outgoing webhook\r\n             */\r\n            getOutgoingHook: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n\r\n        /**\r\n        * Whether or not outgoing webhooks are enabled.\r\n        */\r\n        enableOutgoingWebhooks: PropTypes.bool,\r\n\r\n        /**\r\n         * Whether to allow configuration of the default post username.\r\n         */\r\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * Whether to allow configuration of the default post icon.\r\n         */\r\n        enablePostIconOverride: PropTypes.bool.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmModal: false,\r\n            serverError: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.enableOutgoingWebhooks) {\r\n            this.props.actions.getOutgoingHook(this.props.hookId);\r\n        }\r\n    }\r\n\r\n    editOutgoingHook = async (hook) => {\r\n        this.newHook = hook;\r\n\r\n        if (this.props.hook.id) {\r\n            hook.id = this.props.hook.id;\r\n        }\r\n\r\n        if (this.props.hook.token) {\r\n            hook.token = this.props.hook.token;\r\n        }\r\n\r\n        const triggerWordsSame = (this.props.hook.trigger_words.length === hook.trigger_words.length) &&\r\n            this.props.hook.trigger_words.every((v, i) => v === hook.trigger_words[i]);\r\n\r\n        const callbackUrlsSame = (this.props.hook.callback_urls.length === hook.callback_urls.length) &&\r\n            this.props.hook.callback_urls.every((v, i) => v === hook.callback_urls[i]);\r\n\r\n        if (this.props.hook.content_type !== hook.content_type ||\r\n            !triggerWordsSame || !callbackUrlsSame) {\r\n            this.handleConfirmModal();\r\n        } else {\r\n            await this.submitHook();\r\n        }\r\n    }\r\n\r\n    handleConfirmModal = () => {\r\n        this.setState({showConfirmModal: true});\r\n    }\r\n\r\n    confirmModalDismissed = () => {\r\n        this.setState({showConfirmModal: false});\r\n    }\r\n\r\n    submitHook = async () => {\r\n        this.setState({serverError: ''});\r\n\r\n        const {data} = await this.props.actions.updateOutgoingHook(this.newHook);\r\n\r\n        if (data) {\r\n            browserHistory.push(`/${this.props.team.name}/integrations/outgoing_webhooks`);\r\n            return;\r\n        }\r\n\r\n        this.setState({showConfirmModal: false});\r\n\r\n        if (this.props.updateOutgoingHookRequest.error) {\r\n            this.setState({serverError: this.props.updateOutgoingHookRequest.error.message});\r\n        }\r\n    }\r\n\r\n    renderExtra = () => {\r\n        const confirmButton = (\r\n            <FormattedMessage\r\n                id='update_outgoing_webhook.update'\r\n                defaultMessage='Update'\r\n            />\r\n        );\r\n\r\n        const confirmTitle = (\r\n            <FormattedMessage\r\n                id='update_outgoing_webhook.confirm'\r\n                defaultMessage='Edit Outgoing Webhook'\r\n            />\r\n        );\r\n\r\n        const confirmMessage = (\r\n            <FormattedMessage\r\n                id='update_outgoing_webhook.question'\r\n                defaultMessage='Your changes may break the existing outgoing webhook. Are you sure you would like to update it?'\r\n            />\r\n        );\r\n\r\n        return (\r\n            <ConfirmModal\r\n                title={confirmTitle}\r\n                message={confirmMessage}\r\n                confirmButtonText={confirmButton}\r\n                show={this.state.showConfirmModal}\r\n                onConfirm={this.submitHook}\r\n                onCancel={this.confirmModalDismissed}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.hook) {\r\n            return <LoadingScreen/>;\r\n        }\r\n\r\n        return (\r\n            <AbstractOutgoingWebhook\r\n                team={this.props.team}\r\n                header={HEADER}\r\n                footer={FOOTER}\r\n                loading={LOADING}\r\n                renderExtra={this.renderExtra()}\r\n                action={this.editOutgoingHook}\r\n                serverError={this.state.serverError}\r\n                initialHook={this.props.hook}\r\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\r\n                enablePostIconOverride={this.props.enablePostIconOverride}\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getOutgoingHook, updateOutgoingHook} from 'mattermost-redux/actions/integrations';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport EditOutgoingWebhook from './edit_outgoing_webhook.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const config = getConfig(state);\r\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\r\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\r\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\r\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\r\n\r\n    return {\r\n        hookId,\r\n        hook: state.entities.integrations.outgoingHooks[hookId],\r\n        updateOutgoingHookRequest: state.requests.integrations.createOutgoingHook,\r\n        enableOutgoingWebhooks,\r\n        enablePostUsernameOverride,\r\n        enablePostIconOverride,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            updateOutgoingHook,\r\n            getOutgoingHook,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOutgoingWebhook);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport {t} from 'utils/i18n';\r\nimport FormError from 'components/form_error.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\nimport CopyText from 'components/copy_text.jsx';\r\n\r\nimport DeleteIntegration from '../delete_integration.jsx';\r\n\r\nconst FAKE_SECRET = '***************';\r\n\r\nexport function matchesFilter(oauthApp, filter) {\r\n    if (!filter) {\r\n        return true;\r\n    }\r\n\r\n    return oauthApp.name.toLowerCase().indexOf(filter) !== -1;\r\n}\r\n\r\nexport default class InstalledOAuthApp extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * The team data\r\n        */\r\n        team: PropTypes.object,\r\n\r\n        /**\r\n        * The oauthApp data\r\n        */\r\n        oauthApp: PropTypes.object.isRequired,\r\n\r\n        creatorName: PropTypes.string.isRequired,\r\n\r\n        /**\r\n        * The request state for regenOAuthAppSecret action. Contains status and error\r\n        */\r\n        regenOAuthAppSecretRequest: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The function to call when Regenerate Secret link is clicked\r\n        */\r\n        onRegenerateSecret: PropTypes.func.isRequired,\r\n\r\n        /**\r\n        * The function to call when Delete link is clicked\r\n        */\r\n        onDelete: PropTypes.func.isRequired,\r\n\r\n        /**\r\n        * Set to filter OAuthApp\r\n        */\r\n        filter: PropTypes.string,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            clientSecret: FAKE_SECRET,\r\n        };\r\n    }\r\n\r\n    handleShowClientSecret = (e) => {\r\n        if (e && e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n        this.setState({clientSecret: this.props.oauthApp.client_secret});\r\n    }\r\n\r\n    handleHideClientSecret = (e) => {\r\n        e.preventDefault();\r\n        this.setState({clientSecret: FAKE_SECRET});\r\n    }\r\n\r\n    handleRegenerate = (e) => {\r\n        e.preventDefault();\r\n        this.props.onRegenerateSecret(this.props.oauthApp.id).then(\r\n            () => {\r\n                const {error} = this.props.regenOAuthAppSecretRequest;\r\n                if (error) {\r\n                    this.setState({error: error.message});\r\n                } else {\r\n                    this.setState({error: null});\r\n                    this.handleShowClientSecret();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleDelete = () => {\r\n        this.props.onDelete(this.props.oauthApp);\r\n    }\r\n\r\n    render() {\r\n        const {oauthApp, creatorName} = this.props;\r\n        let error;\r\n\r\n        if (this.state.error) {\r\n            error = (\r\n                <FormError\r\n                    error={this.state.error}\r\n                />\r\n            );\r\n        }\r\n\r\n        if (!matchesFilter(oauthApp, this.props.filter)) {\r\n            return null;\r\n        }\r\n\r\n        let name;\r\n        if (oauthApp.name) {\r\n            name = oauthApp.name;\r\n        } else {\r\n            name = (\r\n                <FormattedMessage\r\n                    id='installed_integrations.unnamed_oauth_app'\r\n                    defaultMessage='Unnamed OAuth 2.0 Application'\r\n                />\r\n            );\r\n        }\r\n\r\n        let description;\r\n        if (oauthApp.description) {\r\n            description = (\r\n                <div className='item-details__row'>\r\n                    <span className='item-details__description'>\r\n                        {oauthApp.description}\r\n                    </span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const urls = (\r\n            <div className='item-details__row'>\r\n                <span className='item-details__url'>\r\n                    <FormattedMessage\r\n                        id='installed_integrations.callback_urls'\r\n                        defaultMessage='Callback URLs: {urls}'\r\n                        values={{\r\n                            urls: oauthApp.callback_urls.join(', '),\r\n                        }}\r\n                    />\r\n                </span>\r\n            </div>\r\n        );\r\n\r\n        let isTrusted;\r\n        if (oauthApp.is_trusted) {\r\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.yes', 'Yes');\r\n        } else {\r\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.no', 'No');\r\n        }\r\n\r\n        let showHide;\r\n        let clientSecret;\r\n        if (this.state.clientSecret === FAKE_SECRET) {\r\n            showHide = (\r\n                <button\r\n                    id='showSecretButton'\r\n                    className='style--none color--link'\r\n                    onClick={this.handleShowClientSecret}\r\n                >\r\n                    <FormattedMessage\r\n                        id='installed_integrations.showSecret'\r\n                        defaultMessage='Show Secret'\r\n                    />\r\n                </button>\r\n            );\r\n            clientSecret = (\r\n                <span className='item-details__token'>\r\n                    <FormattedMessage\r\n                        id='installed_integrations.client_secret'\r\n                        defaultMessage='Client Secret: **{clientSecret}**'\r\n                        values={{\r\n                            clientSecret: this.state.clientSecret,\r\n                        }}\r\n                    />\r\n                </span>\r\n            );\r\n        } else {\r\n            showHide = (\r\n                <button\r\n                    id='hideSecretButton'\r\n                    className='style--none color--link'\r\n                    onClick={this.handleHideClientSecret}\r\n                >\r\n                    <FormattedMessage\r\n                        id='installed_integrations.hideSecret'\r\n                        defaultMessage='Hide Secret'\r\n                    />\r\n                </button>\r\n            );\r\n            clientSecret = (\r\n                <span className='item-details__token'>\r\n                    <FormattedMarkdownMessage\r\n                        id='installed_integrations.client_secret'\r\n                        defaultMessage='Client Secret: **{clientSecret}**'\r\n                        values={{\r\n                            clientSecret: this.state.clientSecret,\r\n                        }}\r\n                    />\r\n                    <CopyText\r\n                        idMessage='integrations.copy_client_secret'\r\n                        defaultMessage='Copy Client Secret'\r\n                        value={this.state.clientSecret}\r\n                    />\r\n                </span>\r\n            );\r\n        }\r\n\r\n        const regen = (\r\n            <button\r\n                id='regenerateSecretButton'\r\n                className='style--none color--link'\r\n                onClick={this.handleRegenerate}\r\n            >\r\n                <FormattedMessage\r\n                    id='installed_integrations.regenSecret'\r\n                    defaultMessage='Regenerate Secret'\r\n                />\r\n            </button>\r\n        );\r\n\r\n        let icon;\r\n        if (oauthApp.icon_url) {\r\n            icon = (\r\n                <div className='integration__icon integration-list__icon'>\r\n                    <img\r\n                        alt={'get app screenshot'}\r\n                        src={oauthApp.icon_url}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='backstage-list__item'>\r\n                {icon}\r\n                <div className='item-details'>\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__name'>\r\n                            {name}\r\n                        </span>\r\n                    </div>\r\n                    {error}\r\n                    {description}\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__url'>\r\n                            <FormattedMarkdownMessage\r\n                                id='installed_oauth_apps.is_trusted'\r\n                                defaultMessage='Is Trusted: **{isTrusted}**'\r\n                                values={{\r\n                                    isTrusted,\r\n                                }}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__token'>\r\n                            <FormattedMarkdownMessage\r\n                                id='installed_integrations.client_id'\r\n                                defaultMessage='Client ID: **{clientId}**'\r\n                                values={{\r\n                                    clientId: oauthApp.id,\r\n                                }}\r\n                            />\r\n                            <CopyText\r\n                                idMessage='integrations.copy_client_id'\r\n                                defaultMessage='Copy Client Id'\r\n                                value={oauthApp.id}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                    <div className='item-details__row'>\r\n                        {clientSecret}\r\n                    </div>\r\n                    {urls}\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__creation'>\r\n                            <FormattedMessage\r\n                                id='installed_integrations.creation'\r\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\r\n                                values={{\r\n                                    creator: creatorName,\r\n                                    createAt: oauthApp.create_at,\r\n                                }}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className='item-actions'>\r\n                    {showHide}\r\n                    {' - '}\r\n                    {regen}\r\n                    {' - '}\r\n                    <Link to={`/${this.props.team.name}/integrations/oauth2-apps/edit?id=${oauthApp.id}`}>\r\n                        <FormattedMessage\r\n                            id='installed_integrations.edit'\r\n                            defaultMessage='Edit'\r\n                        />\r\n                    </Link>\r\n                    {' - '}\r\n                    <DeleteIntegration\r\n                        messageId={t('installed_oauth_apps.delete.confirm')}\r\n                        onDelete={this.handleDelete}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getUser} from 'mattermost-redux/selectors/entities/users';\r\n\r\nimport {getDisplayNameByUser} from 'utils/utils';\r\n\r\nimport InstalledOAuthApp from './installed_oauth_app.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const oauthApp = ownProps.oauthApp || {};\r\n    return {\r\n        creatorName: getDisplayNameByUser(getUser(state, oauthApp.creator_id)),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InstalledOAuthApp);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {localizeMessage} from 'utils/utils.jsx';\r\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\r\nimport InstalledOAuthApp from '../installed_oauth_app';\r\nimport {matchesFilter} from '../installed_oauth_app/installed_oauth_app';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\n\r\nexport default class InstalledOAuthApps extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * The team data\r\n        */\r\n        team: PropTypes.object,\r\n\r\n        /**\r\n        * The oauthApps data\r\n        */\r\n        oauthApps: PropTypes.object,\r\n\r\n        /**\r\n        * Set if user can manage oath\r\n        */\r\n        canManageOauth: PropTypes.bool,\r\n\r\n        /**\r\n        * The request state for regenOAuthAppSecret action. Contains status and error\r\n        */\r\n        regenOAuthAppSecretRequest: PropTypes.object.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n            * The function to call to fetch OAuth apps\r\n            */\r\n            loadOAuthAppsAndProfiles: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * The function to call when Regenerate Secret link is clicked\r\n            */\r\n            regenOAuthAppSecret: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * The function to call when Delete link is clicked\r\n            */\r\n            deleteOAuthApp: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n\r\n        /**\r\n        * Whether or not OAuth applications are enabled.\r\n        */\r\n        enableOAuthServiceProvider: PropTypes.bool,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.enableOAuthServiceProvider) {\r\n            this.props.actions.loadOAuthAppsAndProfiles().then(\r\n                () => this.setState({loading: false})\r\n            );\r\n        }\r\n    }\r\n\r\n    deleteOAuthApp = (app) => {\r\n        if (app && app.id) {\r\n            this.props.actions.deleteOAuthApp(app.id);\r\n        }\r\n    }\r\n\r\n    oauthAppCompare(a, b) {\r\n        let nameA = a.name;\r\n        if (!nameA) {\r\n            nameA = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\r\n        }\r\n\r\n        let nameB = b.name;\r\n        if (!nameB) {\r\n            nameB = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\r\n        }\r\n\r\n        return nameA.localeCompare(nameB);\r\n    }\r\n\r\n    oauthApps = (filter) => Object.values(this.props.oauthApps).\r\n        filter((app) => matchesFilter(app, filter)).\r\n        sort(this.oauthAppCompare).\r\n        map((app) => {\r\n            return (\r\n                <InstalledOAuthApp\r\n                    key={app.id}\r\n                    team={this.props.team}\r\n                    oauthApp={app}\r\n                    regenOAuthAppSecretRequest={this.props.regenOAuthAppSecretRequest}\r\n                    onRegenerateSecret={this.props.actions.regenOAuthAppSecret}\r\n                    onDelete={this.deleteOAuthApp}\r\n                />\r\n            );\r\n        });\r\n\r\n    render() {\r\n        const integrationsEnabled = this.props.enableOAuthServiceProvider && this.props.canManageOauth;\r\n        let props;\r\n        if (integrationsEnabled) {\r\n            props = {\r\n                addLink: '/' + this.props.team.name + '/integrations/oauth2-apps/add',\r\n                addText: localizeMessage('installed_oauth_apps.add', 'Add OAuth 2.0 Application'),\r\n                addButtonId: 'addOauthApp',\r\n            };\r\n        }\r\n\r\n        return (\r\n            <BackstageList\r\n                header={\r\n                    <FormattedMessage\r\n                        id='installed_oauth_apps.header'\r\n                        defaultMessage='OAuth 2.0 Applications'\r\n                    />\r\n                }\r\n                helpText={\r\n                    <FormattedMessage\r\n                        id='installed_oauth_apps.help'\r\n                        defaultMessage='Create {oauthApplications} to securely integrate bots and third-party apps with Mattermost. Visit the {appDirectory} to find available self-hosted apps.'\r\n                        values={{\r\n                            oauthApplications: (\r\n                                <a\r\n                                    target='_blank'\r\n                                    rel='noopener noreferrer'\r\n                                    href='https://docs.mattermost.com/developer/oauth-2-0-applications.html'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='installed_oauth_apps.help.oauthApplications'\r\n                                        defaultMessage='OAuth 2.0 applications'\r\n                                    />\r\n                                </a>\r\n                            ),\r\n                            appDirectory: (\r\n                                <a\r\n                                    target='_blank'\r\n                                    rel='noopener noreferrer'\r\n                                    href='https://about.mattermost.com/default-app-directory/'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='installed_oauth_apps.help.appDirectory'\r\n                                        defaultMessage='App Directory'\r\n                                    />\r\n                                </a>\r\n                            ),\r\n                        }}\r\n                    />\r\n                }\r\n                emptyText={\r\n                    <FormattedMessage\r\n                        id='installed_oauth_apps.empty'\r\n                        defaultMessage='No OAuth 2.0 Applications found'\r\n                    />\r\n                }\r\n                emptyTextSearch={\r\n                    <FormattedMarkdownMessage\r\n                        id='installed_oauth_apps.emptySearch'\r\n                        defaultMessage='No OAuth 2.0 Applications match {searchTerm}'\r\n                    />\r\n                }\r\n                searchPlaceholder={localizeMessage('installed_oauth_apps.search', 'Search OAuth 2.0 Applications')}\r\n                loading={this.state.loading}\r\n                {...props}\r\n            >\r\n                {(filter) => {\r\n                    const children = this.oauthApps(filter);\r\n                    return [children, children.length > 0];\r\n                }}\r\n            </BackstageList>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as Actions from 'mattermost-redux/actions/integrations';\r\nimport {getOAuthApps} from 'mattermost-redux/selectors/entities/integrations';\r\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\r\nimport {Permissions} from 'mattermost-redux/constants';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport {loadOAuthAppsAndProfiles} from 'actions/integration_actions';\r\n\r\nimport InstalledOAuthApps from './installed_oauth_apps.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\r\n\r\n    return {\r\n        canManageOauth: haveISystemPermission(state, {permission: Permissions.MANAGE_OAUTH}),\r\n        oauthApps: getOAuthApps(state),\r\n        regenOAuthAppSecretRequest: state.requests.integrations.updateOAuthApp,\r\n        enableOAuthServiceProvider,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            loadOAuthAppsAndProfiles,\r\n            regenOAuthAppSecret: Actions.regenOAuthAppSecret,\r\n            deleteOAuthApp: Actions.deleteOAuthApp,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOAuthApps);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\nimport {Permissions} from 'mattermost-redux/constants';\r\n\r\nimport {localizeMessage} from 'utils/utils.jsx';\r\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\r\nimport FormError from 'components/form_error.jsx';\r\nimport SpinnerButton from 'components/spinner_button.jsx';\r\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\r\n\r\nexport default class AbstractOAuthApp extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * The current team\r\n        */\r\n        team: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The header text to render, has id and defaultMessage\r\n        */\r\n        header: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The footer text to render, has id and defaultMessage\r\n        */\r\n        footer: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The spinner loading text to render, has id and defaultMessage\r\n        */\r\n        loading: PropTypes.object.isRequired,\r\n\r\n        /**\r\n         * Any extra component/node to render\r\n         */\r\n        renderExtra: PropTypes.node.isRequired,\r\n\r\n        /**\r\n        * The server error text after a failed action\r\n        */\r\n        serverError: PropTypes.string.isRequired,\r\n\r\n        /**\r\n        * The OAuthApp used to set the initial state\r\n        */\r\n        initialApp: PropTypes.object,\r\n\r\n        /**\r\n        * The async function to run when the action button is pressed\r\n        */\r\n        action: PropTypes.func.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.image = new Image();\r\n        this.image.onload = this.imageLoaded;\r\n        this.state = this.getStateFromApp(this.props.initialApp || {});\r\n    }\r\n\r\n    getStateFromApp = (app) => {\r\n        return {\r\n            name: app.name || '',\r\n            description: app.description || '',\r\n            homepage: app.homepage || '',\r\n            icon_url: app.icon_url || '',\r\n            callbackUrls: app.callback_urls ? app.callback_urls.join('\\n') : '',\r\n            is_trusted: app.is_trusted || false,\r\n            has_icon: Boolean(app.icon_url),\r\n            saving: false,\r\n            clientError: null,\r\n        };\r\n    }\r\n\r\n    imageLoaded = () => {\r\n        this.setState({\r\n            has_icon: true,\r\n            icon_url: this.refs.icon_url.value,\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.saving) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            saving: true,\r\n            clientError: '',\r\n        });\r\n\r\n        if (!this.state.name) {\r\n            this.setState({\r\n                saving: false,\r\n                clientError: (\r\n                    <FormattedMessage\r\n                        id='add_oauth_app.nameRequired'\r\n                        defaultMessage='Name for the OAuth 2.0 application is required.'\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!this.state.description) {\r\n            this.setState({\r\n                saving: false,\r\n                clientError: (\r\n                    <FormattedMessage\r\n                        id='add_oauth_app.descriptionRequired'\r\n                        defaultMessage='Description for the OAuth 2.0 application is required.'\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!this.state.homepage) {\r\n            this.setState({\r\n                saving: false,\r\n                clientError: (\r\n                    <FormattedMessage\r\n                        id='add_oauth_app.homepageRequired'\r\n                        defaultMessage='Homepage for the OAuth 2.0 application is required.'\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const callbackUrls = [];\r\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\r\n            callbackUrl = callbackUrl.trim();\r\n\r\n            if (callbackUrl.length > 0) {\r\n                callbackUrls.push(callbackUrl);\r\n            }\r\n        }\r\n\r\n        if (callbackUrls.length === 0) {\r\n            this.setState({\r\n                saving: false,\r\n                clientError: (\r\n                    <FormattedMessage\r\n                        id='add_oauth_app.callbackUrlsRequired'\r\n                        defaultMessage='One or more callback URLs are required.'\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const app = {\r\n            name: this.state.name,\r\n            callback_urls: callbackUrls,\r\n            homepage: this.state.homepage,\r\n            description: this.state.description,\r\n            is_trusted: this.state.is_trusted,\r\n            icon_url: this.state.icon_url,\r\n        };\r\n\r\n        this.props.action(app).then(() => this.setState({saving: false}));\r\n    }\r\n\r\n    updateName = (e) => {\r\n        this.setState({\r\n            name: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateTrusted = (e) => {\r\n        this.setState({\r\n            is_trusted: e.target.value === 'true',\r\n        });\r\n    }\r\n\r\n    updateDescription = (e) => {\r\n        this.setState({\r\n            description: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateHomepage = (e) => {\r\n        this.setState({\r\n            homepage: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateIconUrl = (e) => {\r\n        this.setState({\r\n            has_icon: false,\r\n            icon_url: e.target.value,\r\n        });\r\n        this.image.src = e.target.value;\r\n    }\r\n\r\n    updateCallbackUrls = (e) => {\r\n        this.setState({\r\n            callbackUrls: e.target.value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const headerToRender = this.props.header;\r\n        const footerToRender = this.props.footer;\r\n        const renderExtra = this.props.renderExtra;\r\n\r\n        let icon;\r\n        if (this.state.has_icon) {\r\n            icon = (\r\n                <div className='integration__icon'>\r\n                    <img\r\n                        alt={'integration icon'}\r\n                        src={this.state.icon_url}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const trusted = (\r\n            <SystemPermissionGate permissions={[Permissions.MANAGE_SYSTEM]}>\r\n                <div className='form-group'>\r\n                    <label\r\n                        className='control-label col-sm-4'\r\n                        htmlFor='is_trusted'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='installed_oauth_apps.trusted'\r\n                            defaultMessage='Is Trusted'\r\n                        />\r\n                    </label>\r\n                    <div className='col-md-5 col-sm-8'>\r\n                        <label className='radio-inline'>\r\n                            <input\r\n                                type='radio'\r\n                                value='true'\r\n                                name='is_trusted'\r\n                                checked={this.state.is_trusted}\r\n                                onChange={this.updateTrusted}\r\n                            />\r\n                            <FormattedMessage\r\n                                id='installed_oauth_apps.trusted.yes'\r\n                                defaultMessage='Yes'\r\n                            />\r\n                        </label>\r\n                        <label className='radio-inline'>\r\n                            <input\r\n                                type='radio'\r\n                                value='false'\r\n                                name='is_trusted'\r\n                                checked={!this.state.is_trusted}\r\n                                onChange={this.updateTrusted}\r\n                            />\r\n                            <FormattedMessage\r\n                                id='installed_oauth_apps.trusted.no'\r\n                                defaultMessage='No'\r\n                            />\r\n                        </label>\r\n                        <div className='form__help'>\r\n                            <FormattedMessage\r\n                                id='add_oauth_app.trusted.help'\r\n                                defaultMessage=\"When true, the OAuth 2.0 application is considered trusted by the Mattermost server and doesn't require the user to accept authorization. When false, an additional window will appear, asking the user to accept or deny the authorization.\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </SystemPermissionGate>\r\n        );\r\n\r\n        return (\r\n            <div className='backstage-content'>\r\n                <BackstageHeader>\r\n                    <Link to={`/${this.props.team.name}/integrations/oauth2-apps`}>\r\n                        <FormattedMessage\r\n                            id='installed_oauth_apps.header'\r\n                            defaultMessage='Installed OAuth2 Apps'\r\n                        />\r\n                    </Link>\r\n                    <FormattedMessage\r\n                        id={headerToRender.id}\r\n                        defaultMessage={headerToRender.defaultMessage}\r\n                    />\r\n                </BackstageHeader>\r\n                <div className='backstage-form'>\r\n                    {icon}\r\n                    <form className='form-horizontal'>\r\n                        {trusted}\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='name'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='installed_oauth_apps.name'\r\n                                    defaultMessage='Display Name'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <input\r\n                                    id='name'\r\n                                    type='text'\r\n                                    maxLength='64'\r\n                                    className='form-control'\r\n                                    value={this.state.name}\r\n                                    onChange={this.updateName}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_oauth_app.name.help'\r\n                                        defaultMessage='Display name for your OAuth 2.0 application made of up to 64 characters.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='description'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='installed_oauth_apps.description'\r\n                                    defaultMessage='Description'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <input\r\n                                    id='description'\r\n                                    type='text'\r\n                                    maxLength='512'\r\n                                    className='form-control'\r\n                                    value={this.state.description}\r\n                                    onChange={this.updateDescription}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_oauth_app.description.help'\r\n                                        defaultMessage='Description for your OAuth 2.0 application.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='homepage'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='installed_oauth_apps.homepage'\r\n                                    defaultMessage='Homepage'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <input\r\n                                    id='homepage'\r\n                                    type='url'\r\n                                    maxLength='256'\r\n                                    className='form-control'\r\n                                    value={this.state.homepage}\r\n                                    onChange={this.updateHomepage}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_oauth_app.homepage.help'\r\n                                        defaultMessage='The URL for the homepage of the OAuth 2.0 application. Make sure you use HTTP or HTTPS in your URL depending on your server configuration.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='icon_url'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='installed_oauth_apps.iconUrl'\r\n                                    defaultMessage='Icon URL'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <input\r\n                                    id='icon_url'\r\n                                    ref='icon_url'\r\n                                    type='url'\r\n                                    maxLength='512'\r\n                                    className='form-control'\r\n                                    value={this.state.icon_url}\r\n                                    onChange={this.updateIconUrl}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_oauth_app.icon.help'\r\n                                        defaultMessage='The URL for the homepage of the OAuth 2.0 application. Make sure you use HTTP or HTTPS in your URL depending on your server configuration.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='callbackUrls'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='installed_oauth_apps.callbackUrls'\r\n                                    defaultMessage='Callback URLs (One Per Line)'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <textarea\r\n                                    id='callbackUrls'\r\n                                    rows='3'\r\n                                    maxLength='1024'\r\n                                    className='form-control'\r\n                                    value={this.state.callbackUrls}\r\n                                    onChange={this.updateCallbackUrls}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_oauth_app.callbackUrls.help'\r\n                                        defaultMessage='The redirect URIs to which the service will redirect users after accepting or denying authorization of your application, and which will handle authorization codes or access tokens. Must be a valid URL and start with http:// or https://.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='backstage-form__footer'>\r\n                            <FormError\r\n                                type='backstage'\r\n                                errors={[this.props.serverError, this.state.clientError]}\r\n                            />\r\n                            <Link\r\n                                className='btn btn-link btn-sm'\r\n                                to={`/${this.props.team.name}/integrations/oauth2-apps`}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='installed_oauth_apps.cancel'\r\n                                    defaultMessage='Cancel'\r\n                                />\r\n                            </Link>\r\n                            <SpinnerButton\r\n                                className='btn btn-primary'\r\n                                type='submit'\r\n                                spinning={this.state.saving}\r\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\r\n                                onClick={this.handleSubmit}\r\n                                id='saveOauthApp'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id={footerToRender.id}\r\n                                    defaultMessage={footerToRender.defaultMessage}\r\n                                />\r\n                            </SpinnerButton>\r\n                            {renderExtra}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport {t} from 'utils/i18n';\r\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\r\n\r\nconst HEADER = {id: t('add_oauth_app.header'), defaultMessage: 'Add'};\r\nconst FOOTER = {id: t('installed_oauth_apps.save'), defaultMessage: 'Save'};\r\nconst LOADING = {id: t('installed_oauth_apps.saving'), defaultMessage: 'Saving...'};\r\n\r\nexport default class AddOAuthApp extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * The team data\r\n        */\r\n        team: PropTypes.object,\r\n\r\n        /**\r\n        * The request state for addOAuthApp action. Contains status and error\r\n        */\r\n        addOAuthAppRequest: PropTypes.object.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n            * The function to call to add new OAuthApp\r\n            */\r\n            addOAuthApp: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            serverError: '',\r\n        };\r\n    }\r\n\r\n    addOAuthApp = async (app) => {\r\n        this.setState({serverError: ''});\r\n\r\n        const {data} = await this.props.actions.addOAuthApp(app);\r\n        if (data) {\r\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=oauth2-apps&id=${data.id}`);\r\n            return;\r\n        }\r\n\r\n        if (this.props.addOAuthAppRequest.error) {\r\n            this.setState({serverError: this.props.addOAuthAppRequest.error.message});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AbstractOAuthApp\r\n                team={this.props.team}\r\n                header={HEADER}\r\n                footer={FOOTER}\r\n                loading={LOADING}\r\n                renderExtra={''}\r\n                action={this.addOAuthApp}\r\n                serverError={this.state.serverError}\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {addOAuthApp} from 'mattermost-redux/actions/integrations';\r\n\r\nimport AddOAuthApp from './add_oauth_app.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        addOAuthAppRequest: state.requests.integrations.addOAuthApp,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            addOAuthApp,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOAuthApp);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\r\n\r\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\r\nconst FOOTER = {id: 'update_incoming_webhook.update', defaultMessage: 'Update'};\r\nconst LOADING = {id: 'update_incoming_webhook.updating', defaultMessage: 'Updating...'};\r\n\r\nexport default class EditOAuthApp extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * The current team\r\n        */\r\n        team: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The id of the OAuthApp to edit\r\n        */\r\n        oauthAppId: PropTypes.string.isRequired,\r\n\r\n        /**\r\n        * The OAuthApp data\r\n        */\r\n        oauthApp: PropTypes.object,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n            * The function to call to get OAuthApp\r\n            */\r\n            getOAuthApp: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * The function to call to edit OAuthApp\r\n            */\r\n            editOAuthApp: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n\r\n        /**\r\n        * Whether or not OAuth applications are enabled.\r\n        */\r\n        enableOAuthServiceProvider: PropTypes.bool,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmModal: false,\r\n            serverError: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.enableOAuthServiceProvider) {\r\n            this.props.actions.getOAuthApp(this.props.oauthAppId);\r\n        }\r\n    }\r\n\r\n    editOAuthApp = async (app) => {\r\n        this.newApp = app;\r\n\r\n        if (this.props.oauthApp.id) {\r\n            app.id = this.props.oauthApp.id;\r\n        }\r\n\r\n        if (this.props.oauthApp.token) {\r\n            app.token = this.props.oauthApp.token;\r\n        }\r\n\r\n        const callbackUrlsSame = (this.props.oauthApp.callback_urls.length === app.callback_urls.length) &&\r\n            this.props.oauthApp.callback_urls.every((v, i) => v === app.callback_urls[i]);\r\n\r\n        if (callbackUrlsSame === false) {\r\n            this.handleConfirmModal();\r\n        } else {\r\n            await this.submitOAuthApp();\r\n        }\r\n    }\r\n\r\n    handleConfirmModal = () => {\r\n        this.setState({showConfirmModal: true});\r\n    }\r\n\r\n    confirmModalDismissed = () => {\r\n        this.setState({showConfirmModal: false});\r\n    }\r\n\r\n    submitOAuthApp = async () => {\r\n        this.setState({serverError: ''});\r\n\r\n        const {data, error} = await this.props.actions.editOAuthApp(this.newApp);\r\n\r\n        if (data) {\r\n            browserHistory.push(`/${this.props.team.name}/integrations/oauth2-apps`);\r\n            return;\r\n        }\r\n\r\n        this.setState({showConfirmModal: false});\r\n\r\n        if (error) {\r\n            this.setState({serverError: error.message});\r\n        }\r\n    }\r\n\r\n    renderExtra = () => {\r\n        const confirmButton = (\r\n            <FormattedMessage\r\n                id='update_command.update'\r\n                defaultMessage='Update'\r\n            />\r\n        );\r\n\r\n        const confirmTitle = (\r\n            <FormattedMessage\r\n                id='update_oauth_app.confirm'\r\n                defaultMessage='Edit OAuth 2.0 application'\r\n            />\r\n        );\r\n\r\n        const confirmMessage = (\r\n            <FormattedMessage\r\n                id='update_oauth_app.question'\r\n                defaultMessage='Your changes may break the existing OAuth 2.0 application. Are you sure you would like to update it?'\r\n            />\r\n        );\r\n\r\n        return (\r\n            <ConfirmModal\r\n                title={confirmTitle}\r\n                message={confirmMessage}\r\n                confirmButtonText={confirmButton}\r\n                show={this.state.showConfirmModal}\r\n                onConfirm={this.submitOAuthApp}\r\n                onCancel={this.confirmModalDismissed}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.oauthApp) {\r\n            return <LoadingScreen/>;\r\n        }\r\n\r\n        return (\r\n            <AbstractOAuthApp\r\n                team={this.props.team}\r\n                header={HEADER}\r\n                footer={FOOTER}\r\n                loading={LOADING}\r\n                renderExtra={this.renderExtra()}\r\n                action={this.editOAuthApp}\r\n                serverError={this.state.serverError}\r\n                initialApp={this.props.oauthApp}\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getOAuthApp, editOAuthApp} from 'mattermost-redux/actions/integrations';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport EditOAuthApp from './edit_oauth_app.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const config = getConfig(state);\r\n    const oauthAppId = (new URLSearchParams(ownProps.location.search)).get('id');\r\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\r\n\r\n    return {\r\n        oauthAppId,\r\n        oauthApp: state.entities.integrations.oauthApps[oauthAppId],\r\n        enableOAuthServiceProvider,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getOAuthApp,\r\n            editOAuthApp,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOAuthApp);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {t} from 'utils/i18n';\r\nimport CopyText from '../copy_text.jsx';\r\n\r\nimport DeleteIntegration from './delete_integration.jsx';\r\n\r\nexport function matchesFilter(command, filter) {\r\n    if (!filter) {\r\n        return true;\r\n    }\r\n\r\n    return command.display_name.toLowerCase().indexOf(filter) !== -1 ||\r\n        command.description.toLowerCase().indexOf(filter) !== -1 ||\r\n        command.trigger.toLowerCase().indexOf(filter) !== -1;\r\n}\r\n\r\nexport default class InstalledCommand extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * The team data\r\n        */\r\n        team: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * Installed slash command to display\r\n        */\r\n        command: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The function to call when Regenerate Token link is clicked\r\n        */\r\n        onRegenToken: PropTypes.func.isRequired,\r\n\r\n        /**\r\n        * The function to call when Delete link is clicked\r\n        */\r\n        onDelete: PropTypes.func.isRequired,\r\n\r\n        /**\r\n        * Set to filter command, comes from BackstageList\r\n        */\r\n        filter: PropTypes.string,\r\n\r\n        /**\r\n        * The creator user data\r\n        */\r\n        creator: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * Set to show edit link\r\n        */\r\n        canChange: PropTypes.bool.isRequired,\r\n    }\r\n\r\n    handleRegenToken = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.onRegenToken(this.props.command);\r\n    }\r\n\r\n    handleDelete = () => {\r\n        this.props.onDelete(this.props.command);\r\n    }\r\n\r\n    render() {\r\n        const command = this.props.command;\r\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\r\n\r\n        if (!matchesFilter(command, filter)) {\r\n            return null;\r\n        }\r\n\r\n        let name;\r\n\r\n        if (command.display_name) {\r\n            name = command.display_name;\r\n        } else {\r\n            name = (\r\n                <FormattedMessage\r\n                    id='installed_commands.unnamed_command'\r\n                    defaultMessage='Unnamed Slash Command'\r\n                />\r\n            );\r\n        }\r\n\r\n        let description = null;\r\n        if (command.description) {\r\n            description = (\r\n                <div className='item-details__row'>\r\n                    <span className='item-details__description'>\r\n                        {command.description}\r\n                    </span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let trigger = '- /' + command.trigger;\r\n        if (command.auto_complete && command.auto_complete_hint) {\r\n            trigger += ' ' + command.auto_complete_hint;\r\n        }\r\n\r\n        let actions = null;\r\n        if (this.props.canChange) {\r\n            actions = (\r\n                <div className='item-actions'>\r\n                    <button\r\n                        className='style--none color--link'\r\n                        onClick={this.handleRegenToken}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='installed_integrations.regenToken'\r\n                            defaultMessage='Regenerate Token'\r\n                        />\r\n                    </button>\r\n                    {' - '}\r\n                    <Link to={`/${this.props.team.name}/integrations/commands/edit?id=${command.id}`}>\r\n                        <FormattedMessage\r\n                            id='installed_integrations.edit'\r\n                            defaultMessage='Edit'\r\n                        />\r\n                    </Link>\r\n                    {' - '}\r\n                    <DeleteIntegration\r\n                        messageId={t('installed_commands.delete.confirm')}\r\n                        onDelete={this.handleDelete}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const commandToken = command.token;\r\n\r\n        return (\r\n            <div className='backstage-list__item'>\r\n                <div className='item-details'>\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__name'>\r\n                            {name}\r\n                        </span>\r\n                        <span className='item-details__trigger'>\r\n                            {trigger}\r\n                        </span>\r\n                    </div>\r\n                    {description}\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__token'>\r\n                            <FormattedMessage\r\n                                id='installed_integrations.token'\r\n                                defaultMessage='Token: {token}'\r\n                                values={{\r\n                                    token: commandToken,\r\n                                }}\r\n                            />\r\n                            <CopyText\r\n                                value={commandToken}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                    <div className='item-details__row'>\r\n                        <span className='item-details__creation'>\r\n                            <FormattedMessage\r\n                                id='installed_integrations.creation'\r\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\r\n                                values={{\r\n                                    creator: this.props.creator.username,\r\n                                    createAt: command.create_at,\r\n                                }}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                {actions}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\r\nimport InstalledCommand, {matchesFilter} from '../installed_command.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\n\r\nexport default class InstalledCommands extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * The team object\r\n        */\r\n        team: PropTypes.object,\r\n\r\n        /**\r\n        * The user object\r\n        */\r\n        user: PropTypes.object,\r\n\r\n        /**\r\n        * The users collection\r\n        */\r\n        users: PropTypes.object,\r\n\r\n        /**\r\n        * Installed slash commands to display\r\n        */\r\n        commands: PropTypes.array,\r\n\r\n        /**\r\n        * Set whether to show the loading... animation or not\r\n        */\r\n        loading: PropTypes.bool,\r\n\r\n        /**\r\n        * Set to allow changes to installed slash commands\r\n        */\r\n        canManageOthersSlashCommands: PropTypes.bool,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n            * The function to call when Regenerate Token link is clicked\r\n            */\r\n            regenCommandToken: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * The function to call when Delete link is clicked\r\n            */\r\n            deleteCommand: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    regenCommandToken = (command) => {\r\n        this.props.actions.regenCommandToken(command.id);\r\n    }\r\n\r\n    deleteCommand = (command) => {\r\n        this.props.actions.deleteCommand(command.id);\r\n    }\r\n\r\n    commandCompare(a, b) {\r\n        let nameA = a.display_name;\r\n        if (!nameA) {\r\n            nameA = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\r\n        }\r\n\r\n        let nameB = b.display_name;\r\n        if (!nameB) {\r\n            nameB = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\r\n        }\r\n\r\n        return nameA.localeCompare(nameB);\r\n    }\r\n\r\n    render() {\r\n        const commands = (filter) => this.props.commands.\r\n            filter((command) => command.team_id === this.props.team.id).\r\n            filter((command) => matchesFilter(command, filter)).\r\n            sort(this.commandCompare).map((command) => {\r\n                const canChange = this.props.canManageOthersSlashCommands || this.props.user.id === command.creator_id;\r\n\r\n                return (\r\n                    <InstalledCommand\r\n                        key={command.id}\r\n                        team={this.props.team}\r\n                        command={command}\r\n                        onRegenToken={this.regenCommandToken}\r\n                        onDelete={this.deleteCommand}\r\n                        creator={this.props.users[command.creator_id] || {}}\r\n                        canChange={canChange}\r\n                    />\r\n                );\r\n            });\r\n\r\n        return (\r\n            <BackstageList\r\n                header={\r\n                    <FormattedMessage\r\n                        id='installed_commands.header'\r\n                        defaultMessage='Installed Slash Commands'\r\n                    />\r\n                }\r\n                addText={\r\n                    <FormattedMessage\r\n                        id='installed_commands.add'\r\n                        defaultMessage='Add Slash Command'\r\n                    />\r\n                }\r\n                addLink={'/' + this.props.team.name + '/integrations/commands/add'}\r\n                addButtonId='addSlashCommand'\r\n                emptyText={\r\n                    <FormattedMessage\r\n                        id='installed_commands.empty'\r\n                        defaultMessage='No slash commands found'\r\n                    />\r\n                }\r\n                emptyTextSearch={\r\n                    <FormattedMarkdownMessage\r\n                        id='installed_commands.emptySearch'\r\n                        defaultMessage='No slash commands match {searchTerm}'\r\n                    />\r\n                }\r\n                helpText={\r\n                    <FormattedMessage\r\n                        id='installed_commands.help'\r\n                        defaultMessage='Use slash commands to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\r\n                        values={{\r\n                            buildYourOwn: (\r\n                                <a\r\n                                    target='_blank'\r\n                                    rel='noopener noreferrer'\r\n                                    href='http://docs.mattermost.com/developer/slash-commands.html'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='installed_commands.help.buildYourOwn'\r\n                                        defaultMessage='Build your own'\r\n                                    />\r\n                                </a>\r\n                            ),\r\n                            appDirectory: (\r\n                                <a\r\n                                    target='_blank'\r\n                                    rel='noopener noreferrer'\r\n                                    href='https://about.mattermost.com/default-app-directory/'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='installed_commands.help.appDirectory'\r\n                                        defaultMessage='App Directory'\r\n                                    />\r\n                                </a>\r\n                            ),\r\n                        }}\r\n                    />\r\n                }\r\n                searchPlaceholder={Utils.localizeMessage('installed_commands.search', 'Search Slash Commands')}\r\n                loading={this.props.loading}\r\n            >\r\n                {(filter) => {\r\n                    const children = commands(filter);\r\n                    return [children, children.length > 0];\r\n                }}\r\n            </BackstageList>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {deleteCommand, regenCommandToken} from 'mattermost-redux/actions/integrations';\r\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\r\nimport {Permissions} from 'mattermost-redux/constants';\r\n\r\nimport InstalledCommands from './installed_commands.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const canManageOthersSlashCommands = haveITeamPermission(state, {team: ownProps.team.id, permission: Permissions.MANAGE_OTHERS_SLASH_COMMANDS});\r\n\r\n    return {\r\n        canManageOthersSlashCommands,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            regenCommandToken,\r\n            deleteCommand,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledCommands);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\r\nimport Constants from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport FormError from 'components/form_error.jsx';\r\nimport SpinnerButton from 'components/spinner_button.jsx';\r\nimport LocalizedInput from 'components/localized_input/localized_input';\r\n\r\nimport {t} from 'utils/i18n.jsx';\r\n\r\nconst REQUEST_POST = 'P';\r\nconst REQUEST_GET = 'G';\r\nconst REQUEST_NON = 'N';\r\n\r\nexport default class AbstractCommand extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * The current team\r\n        */\r\n        team: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The header text to render, has id and defaultMessage\r\n        */\r\n        header: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The footer text to render, has id and defaultMessage\r\n        */\r\n        footer: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The spinner loading text to render, has id and defaultMessage\r\n        */\r\n        loading: PropTypes.object.isRequired,\r\n\r\n        /**\r\n         * Any extra component/node to render\r\n         */\r\n        renderExtra: PropTypes.node.isRequired,\r\n\r\n        /**\r\n        * The server error text after a failed action\r\n        */\r\n        serverError: PropTypes.string.isRequired,\r\n\r\n        /**\r\n        * The Command used to set the initial state\r\n        */\r\n        initialCommand: PropTypes.object,\r\n\r\n        /**\r\n        * The async function to run when the action button is pressed\r\n        */\r\n        action: PropTypes.func.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = this.getStateFromCommand(this.props.initialCommand || {});\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.setState = (state,callback)=>{\r\n          return;\r\n        };\r\n    }\r\n\r\n    getStateFromCommand = (command) => {\r\n        return {\r\n            displayName: command.display_name || '',\r\n            description: command.description || '',\r\n            trigger: command.trigger || '',\r\n            url: command.url || '',\r\n            method: command.method || REQUEST_POST,\r\n            username: command.username || '',\r\n            iconUrl: command.icon_url || '',\r\n            autocomplete: command.auto_complete || false,\r\n            autocompleteHint: command.auto_complete_hint || '',\r\n            autocompleteDescription: command.auto_complete_desc || '',\r\n            saving: false,\r\n            clientError: null,\r\n            cardType:command.card_type || '',\r\n        };\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.saving) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            saving: true,\r\n            clientError: '',\r\n        });\r\n\r\n        let triggerWord = this.state.trigger.trim().toLowerCase();\r\n        if (triggerWord.indexOf('/') === 0) {\r\n            triggerWord = triggerWord.substr(1);\r\n        }\r\n\r\n        const command = {\r\n            display_name: this.state.displayName,\r\n            description: this.state.description,\r\n            trigger: triggerWord,\r\n            url: this.state.url.trim(),\r\n            method: this.state.method,\r\n            card_type: this.state.cardType,\r\n            username: this.state.username,\r\n            icon_url: this.state.iconUrl,\r\n            auto_complete: this.state.autocomplete,\r\n            team_id: this.props.team.id,\r\n        };\r\n\r\n        if (command.auto_complete) {\r\n            command.auto_complete_desc = this.state.autocompleteDescription;\r\n            command.auto_complete_hint = this.state.autocompleteHint;\r\n        }\r\n\r\n        if (!command.trigger) {\r\n            this.setState({\r\n                saving: false,\r\n                clientError: (\r\n                    <FormattedMessage\r\n                        id='add_command.triggerRequired'\r\n                        defaultMessage='A trigger word is required'\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (command.trigger.indexOf('/') === 0) {\r\n            this.setState({\r\n                saving: false,\r\n                clientError: (\r\n                    <FormattedMessage\r\n                        id='add_command.triggerInvalidSlash'\r\n                        defaultMessage='A trigger word cannot begin with a /'\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (command.trigger.indexOf(' ') !== -1) {\r\n            this.setState({\r\n                saving: false,\r\n                clientError: (\r\n                    <FormattedMessage\r\n                        id='add_command.triggerInvalidSpace'\r\n                        defaultMessage='A trigger word must not contain spaces'\r\n                    />\r\n                ),\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (command.trigger.length < Constants.MIN_TRIGGER_LENGTH ||\r\n            command.trigger.length > Constants.MAX_TRIGGER_LENGTH) {\r\n            this.setState({\r\n                saving: false,\r\n                clientError: (\r\n                    <FormattedMessage\r\n                        id='add_command.triggerInvalidLength'\r\n                        defaultMessage='A trigger word must contain between {min} and {max} characters'\r\n                        values={{\r\n                            min: Constants.MIN_TRIGGER_LENGTH,\r\n                            max: Constants.MAX_TRIGGER_LENGTH,\r\n                        }}\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (!command.url) {\r\n            this.setState({\r\n                saving: false,\r\n                clientError: (\r\n                    <FormattedMessage\r\n                        id='add_command.urlRequired'\r\n                        defaultMessage='A request URL is required'\r\n                    />\r\n                ),\r\n            });\r\n\r\n            return;\r\n        }\r\n        \r\n        this.props.action(command).then(() => this.setState({saving: false}));\r\n    }\r\n\r\n    updateDisplayName = (e) => {\r\n        this.setState({\r\n            displayName: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateDescription = (e) => {\r\n        this.setState({\r\n            description: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateTrigger = (e) => {\r\n        this.setState({\r\n            trigger: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateUrl = (e) => {\r\n        this.setState({\r\n            url: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateMethod = (e) => {\r\n        this.setState({\r\n            method: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateCardType = (e) => {\r\n        this.setState({\r\n            cardType: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateUsername = (e) => {\r\n        this.setState({\r\n            username: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateIconUrl = (e) => {\r\n        this.setState({\r\n            iconUrl: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateAutocomplete = (e) => {\r\n        this.setState({\r\n            autocomplete: e.target.checked,\r\n        });\r\n    }\r\n\r\n    updateAutocompleteHint = (e) => {\r\n        this.setState({\r\n            autocompleteHint: e.target.value,\r\n        });\r\n    }\r\n\r\n    updateAutocompleteDescription = (e) => {\r\n        this.setState({\r\n            autocompleteDescription: e.target.value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let autocompleteHint = null;\r\n        let autocompleteDescription = null;\r\n\r\n        if (this.state.autocomplete) {\r\n            autocompleteHint = (\r\n                <div className='form-group'>\r\n                    <label\r\n                        className='control-label col-sm-4'\r\n                        htmlFor='autocompleteHint'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='add_command.autocompleteHint'\r\n                            defaultMessage='Autocomplete Hint'\r\n                        />\r\n                    </label>\r\n                    <div className='col-md-5 col-sm-8'>\r\n                        <LocalizedInput\r\n                            id='autocompleteHint'\r\n                            type='text'\r\n                            maxLength='1024'\r\n                            className='form-control'\r\n                            value={this.state.autocompleteHint}\r\n                            onChange={this.updateAutocompleteHint}\r\n                            placeholder={{id: t('add_command.autocompleteHint.placeholder'), defaultMessage: 'Example: [Patient Name]'}}\r\n                        />\r\n                        <div className='form__help'>\r\n                            <FormattedMessage\r\n                                id='add_command.autocompleteHint.help'\r\n                                defaultMessage='(Optional) Arguments associated with your slash command, displayed as help in the autocomplete list.'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n            autocompleteDescription = (\r\n                <div className='form-group'>\r\n                    <label\r\n                        className='control-label col-sm-4'\r\n                        htmlFor='autocompleteDescription'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='add_command.autocompleteDescription'\r\n                            defaultMessage='Autocomplete Description'\r\n                        />\r\n                    </label>\r\n                    <div className='col-md-5 col-sm-8'>\r\n                        <LocalizedInput\r\n                            id='description'\r\n                            type='text'\r\n                            maxLength='128'\r\n                            className='form-control'\r\n                            value={this.state.autocompleteDescription}\r\n                            onChange={this.updateAutocompleteDescription}\r\n                            placeholder={{id: t('add_command.autocompleteDescription.placeholder'), defaultMessage: 'Example: \"Returns search results for patient records\"'}}\r\n                        />\r\n                        <div className='form__help'>\r\n                            <FormattedMessage\r\n                                id='add_command.autocompleteDescription.help'\r\n                                defaultMessage='(Optional) Short description of slash command for the autocomplete list.'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='backstage-content row'>\r\n                <BackstageHeader>\r\n                    <Link to={'/' + this.props.team.name + '/integrations/commands'}>\r\n                        <FormattedMessage\r\n                            id='installed_command.header'\r\n                            defaultMessage='Slash Commands'\r\n                        />\r\n                    </Link>\r\n                    <FormattedMessage\r\n                        id={this.props.header.id}\r\n                        defaultMessage={this.props.header.defaultMessage}\r\n                    />\r\n                </BackstageHeader>\r\n                <div className='backstage-form'>\r\n                    <form\r\n                        className='form-horizontal'\r\n                        onSubmit={this.handleSubmit}\r\n                    >\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='displayName'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_command.displayName'\r\n                                    defaultMessage='Title'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <input\r\n                                    id='displayName'\r\n                                    type='text'\r\n                                    maxLength='64'\r\n                                    className='form-control'\r\n                                    value={this.state.displayName}\r\n                                    onChange={this.updateDisplayName}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_command.displayName.help'\r\n                                        defaultMessage='Choose a title to be displayed on the slash command settings page. Maximum 64 characters.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='description'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_command.description'\r\n                                    defaultMessage='Description'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <input\r\n                                    id='description'\r\n                                    type='text'\r\n                                    maxLength='128'\r\n                                    className='form-control'\r\n                                    value={this.state.description}\r\n                                    onChange={this.updateDescription}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_command.description.help'\r\n                                        defaultMessage='Description for your incoming webhook.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='trigger'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_command.trigger'\r\n                                    defaultMessage='Command Trigger Word'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <LocalizedInput\r\n                                    id='trigger'\r\n                                    type='text'\r\n                                    maxLength={Constants.MAX_TRIGGER_LENGTH}\r\n                                    className='form-control'\r\n                                    value={this.state.trigger}\r\n                                    onChange={this.updateTrigger}\r\n                                    placeholder={{id: t('add_command.trigger.placeholder'), defaultMessage: 'Command trigger e.g. \"hello\" not including the slash'}}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_command.trigger.help'\r\n                                        defaultMessage='Trigger word must be unique, and cannot begin with a slash or contain any spaces.'\r\n                                    />\r\n                                </div>\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_command.trigger.helpExamples'\r\n                                        defaultMessage='Examples: client, employee, patient, weather'\r\n                                    />\r\n                                </div>\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_command.trigger.helpReserved'\r\n                                        defaultMessage='Reserved: {link}'\r\n                                        values={{\r\n                                            link: (\r\n                                                <a\r\n                                                    href='https://docs.mattermost.com/help/messaging/executing-commands.html#built-in-commands'\r\n                                                    target='_blank'\r\n                                                    rel='noopener noreferrer'\r\n                                                >\r\n                                                    <FormattedMessage\r\n                                                        id='add_command.trigger.helpReservedLinkText'\r\n                                                        defaultMessage='see list of built-in slash commands'\r\n                                                    />\r\n                                                </a>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='url'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_command.url'\r\n                                    defaultMessage='Request URL'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <LocalizedInput\r\n                                    id='url'\r\n                                    type='text'\r\n                                    maxLength='1024'\r\n                                    className='form-control'\r\n                                    value={this.state.url}\r\n                                    onChange={this.updateUrl}\r\n                                    placeholder={{id: t('add_command.url.placeholder'), defaultMessage: 'Must start with http:// or https://'}}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_command.url.help'\r\n                                        defaultMessage='The callback URL to receive the HTTP POST or GET event request when the slash command is run.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='method'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_command.cardType'\r\n                                    defaultMessage='Request Method'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <select\r\n                                    id='method'\r\n                                    className='form-control'\r\n                                    value={this.state.cardType}\r\n                                    onChange={this.updateCardType}\r\n                                >\r\n                                    <option value=\"\">\r\n                                        \"\"\r\n                                    </option>\r\n                                    <option value=\"9999\">\r\n                                        \"9999\"\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='method'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_command.method'\r\n                                    defaultMessage='Request Method'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <select\r\n                                    id='method'\r\n                                    className='form-control'\r\n                                    value={this.state.method}\r\n                                    onChange={this.updateMethod}\r\n                                >\r\n                                    <option value={REQUEST_POST}>\r\n                                        {Utils.localizeMessage('add_command.method.post', 'POST')}\r\n                                    </option>\r\n                                    <option value={REQUEST_GET}>\r\n                                        {Utils.localizeMessage('add_command.method.get', 'GET')}\r\n                                    </option>\r\n                                    <option value={REQUEST_NON}>\r\n                                        {Utils.localizeMessage('add_command.method.non', 'NON')}\r\n                                    </option>\r\n                                </select>\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_command.method.help'\r\n                                        defaultMessage='The type of command request issued to the Request URL.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='username'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_command.username'\r\n                                    defaultMessage='Response Username'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <LocalizedInput\r\n                                    id='username'\r\n                                    type='text'\r\n                                    maxLength='64'\r\n                                    className='form-control'\r\n                                    value={this.state.username}\r\n                                    onChange={this.updateUsername}\r\n                                    placeholder={{id: t('add_command.username.placeholder'), defaultMessage: 'Username'}}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_command.username.help'\r\n                                        defaultMessage='(Optional) Choose a username override for responses for this slash command. Usernames can consist of up to 22 characters consisting of lowercase letters, numbers and they symbols \"-\", \"_\", and \".\" .'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='iconUrl'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_command.iconUrl'\r\n                                    defaultMessage='Response Icon'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8'>\r\n                                <LocalizedInput\r\n                                    id='iconUrl'\r\n                                    type='text'\r\n                                    maxLength='1024'\r\n                                    className='form-control'\r\n                                    value={this.state.iconUrl}\r\n                                    onChange={this.updateIconUrl}\r\n                                    placeholder={{id: t('add_command.iconUrl.placeholder'), defaultMessage: 'https://www.example.com/myicon.png'}}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_command.iconUrl.help'\r\n                                        defaultMessage='(Optional) Choose a profile picture override for the post responses to this slash command. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                                htmlFor='autocomplete'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_command.autocomplete'\r\n                                    defaultMessage='Autocomplete'\r\n                                />\r\n                            </label>\r\n                            <div className='col-md-5 col-sm-8 checkbox'>\r\n                                <input\r\n                                    id='autocomplete'\r\n                                    type='checkbox'\r\n                                    checked={this.state.autocomplete}\r\n                                    onChange={this.updateAutocomplete}\r\n                                />\r\n                                <div className='form__help'>\r\n                                    <FormattedMessage\r\n                                        id='add_command.autocomplete.help'\r\n                                        defaultMessage='(Optional) Show slash command in autocomplete list.'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {autocompleteHint}\r\n                        {autocompleteDescription}\r\n                        <div className='backstage-form__footer'>\r\n                            <FormError\r\n                                type='backstage'\r\n                                errors={[this.props.serverError, this.state.clientError]}\r\n                            />\r\n                            <Link\r\n                                className='btn btn-link btn-sm'\r\n                                to={'/' + this.props.team.name + '/integrations/commands'}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='add_command.cancel'\r\n                                    defaultMessage='Cancel'\r\n                                />\r\n                            </Link>\r\n                            <SpinnerButton\r\n                                className='btn btn-primary'\r\n                                type='submit'\r\n                                spinning={this.state.saving}\r\n                                spinningText={Utils.localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\r\n                                onClick={this.handleSubmit}\r\n                                id='saveCommand'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id={this.props.footer.id}\r\n                                    defaultMessage={this.props.footer.defaultMessage}\r\n                                />\r\n                            </SpinnerButton>\r\n                            {this.props.renderExtra}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport {t} from 'utils/i18n';\r\nimport AbstractCommand from '../abstract_command.jsx';\r\n\r\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\r\nconst FOOTER = {id: t('add_command.save'), defaultMessage: 'Save'};\r\nconst LOADING = {id: t('add_command.saving'), defaultMessage: 'Saving...'};\r\n\r\nexport default class AddCommand extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * The team data\r\n        */\r\n        team: PropTypes.object,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n            * The function to call to add new command\r\n            */\r\n            addCommand: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            serverError: '',\r\n        };\r\n    }\r\n\r\n    addCommand = async (command) => {\r\n        this.setState({serverError: ''});\r\n\r\n        const {data, error} = await this.props.actions.addCommand(command);\r\n        if (data) {\r\n            browserHistory.push(`/${this.props.team.name}/integrations/commands/confirm?type=commands&id=${data.id}`);\r\n            return;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({serverError: error.message});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AbstractCommand\r\n                team={this.props.team}\r\n                header={HEADER}\r\n                footer={FOOTER}\r\n                loading={LOADING}\r\n                renderExtra={''}\r\n                action={this.addCommand}\r\n                serverError={this.state.serverError}\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {addCommand} from 'mattermost-redux/actions/integrations';\r\n\r\nimport AddCommand from './add_command.jsx';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            addCommand,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddCommand);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport {t} from 'utils/i18n';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\nimport AbstractCommand from '../abstract_command.jsx';\r\n\r\nconst HEADER = {id: t('integrations.edit'), defaultMessage: 'Edit'};\r\nconst FOOTER = {id: t('edit_command.update'), defaultMessage: 'Update'};\r\nconst LOADING = {id: t('edit_command.updating'), defaultMessage: 'Updating...'};\r\n\r\nexport default class EditCommand extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * The current team\r\n        */\r\n        team: PropTypes.object.isRequired,\r\n\r\n        /**\r\n        * The id of the command to edit\r\n        */\r\n        commandId: PropTypes.string.isRequired,\r\n\r\n        /**\r\n        * Installed slash commands to display\r\n        */\r\n        commands: PropTypes.object,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n            * The function to call to fetch team commands\r\n            */\r\n            getCustomTeamCommands: PropTypes.func.isRequired,\r\n\r\n            /**\r\n            * The function to call to edit command\r\n            */\r\n            editCommand: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n\r\n        /**\r\n        * Whether or not commands are enabled.\r\n        */\r\n        enableCommands: PropTypes.bool,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            originalCommand: null,\r\n            showConfirmModal: false,\r\n            serverError: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.enableCommands) {\r\n            this.props.actions.getCustomTeamCommands(this.props.team.id).then(\r\n                () => {\r\n                    this.setState({\r\n                        originalCommand: Object.values(this.props.commands).filter((command) => command.id === this.props.commandId)[0],\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    editCommand = async (command) => {\r\n        this.newCommand = command;\r\n\r\n        if (this.state.originalCommand.id) {\r\n            command.id = this.state.originalCommand.id;\r\n        }\r\n\r\n        if (this.state.originalCommand.url !== this.newCommand.url ||\r\n            this.state.originalCommand.trigger !== this.newCommand.trigger ||\r\n            this.state.originalCommand.method !== this.newCommand.method) {\r\n            this.handleConfirmModal();\r\n        } else {\r\n            await this.submitCommand();\r\n        }\r\n    }\r\n\r\n    handleConfirmModal = () => {\r\n        this.setState({showConfirmModal: true});\r\n    }\r\n\r\n    confirmModalDismissed = () => {\r\n        this.setState({showConfirmModal: false});\r\n    }\r\n\r\n    submitCommand = async () => {\r\n        this.setState({serverError: ''});\r\n\r\n        const {data, error} = await this.props.actions.editCommand(this.newCommand);\r\n\r\n        if (data) {\r\n            browserHistory.push(`/${this.props.team.name}/integrations/commands`);\r\n            return;\r\n        }\r\n\r\n        this.setState({showConfirmModal: false});\r\n\r\n        if (error) {\r\n            this.setState({serverError: error.message});\r\n        }\r\n    }\r\n\r\n    renderExtra = () => {\r\n        const confirmButton = (\r\n            <FormattedMessage\r\n                id='update_command.update'\r\n                defaultMessage='Update'\r\n            />\r\n        );\r\n\r\n        const confirmTitle = (\r\n            <FormattedMessage\r\n                id='update_command.confirm'\r\n                defaultMessage='Edit Slash Command'\r\n            />\r\n        );\r\n\r\n        const confirmMessage = (\r\n            <FormattedMessage\r\n                id='update_command.question'\r\n                defaultMessage='Your changes may break the existing slash command. Are you sure you would like to update it?'\r\n            />\r\n        );\r\n\r\n        return (\r\n            <ConfirmModal\r\n                title={confirmTitle}\r\n                message={confirmMessage}\r\n                confirmButtonText={confirmButton}\r\n                show={this.state.showConfirmModal}\r\n                onConfirm={this.submitCommand}\r\n                onCancel={this.confirmModalDismissed}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.originalCommand) {\r\n            return <LoadingScreen/>;\r\n        }\r\n\r\n        return (\r\n            <AbstractCommand\r\n                team={this.props.team}\r\n                header={HEADER}\r\n                footer={FOOTER}\r\n                loading={LOADING}\r\n                renderExtra={this.renderExtra()}\r\n                action={this.editCommand}\r\n                serverError={this.state.serverError}\r\n                initialCommand={this.state.originalCommand}\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {editCommand, getCustomTeamCommands} from 'mattermost-redux/actions/integrations';\r\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport EditCommand from './edit_command.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const config = getConfig(state);\r\n    const commandId = (new URLSearchParams(ownProps.location.search)).get('id');\r\n    const enableCommands = config.EnableCommands === 'true';\r\n\r\n    return {\r\n        commandId,\r\n        commands: getCommands(state),\r\n        enableCommands,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getCustomTeamCommands,\r\n            editCommand,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCommand);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport {Constants, ErrorPageTypes} from 'utils/constants.jsx';\r\nimport CopyText from 'components/copy_text.jsx';\r\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\r\nimport {getSiteURL} from 'utils/url.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\n\r\nexport default class ConfirmIntegration extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            team: PropTypes.object,\r\n            location: PropTypes.object,\r\n            commands: PropTypes.object,\r\n            oauthApps: PropTypes.object,\r\n            incomingHooks: PropTypes.object,\r\n            outgoingHooks: PropTypes.object,\r\n            bots: PropTypes.object,\r\n        };\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type: (new URLSearchParams(this.props.location.search)).get('type'),\r\n            id: (new URLSearchParams(this.props.location.search)).get('id'),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keypress', this.handleKeyPress);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keypress', this.handleKeyPress);\r\n    }\r\n\r\n    handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            browserHistory.push('/' + this.props.team.name + '/integrations/' + this.state.type);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let headerText = null;\r\n        let helpText = null;\r\n        let tokenText = null;\r\n\r\n        const command = this.props.commands[this.state.id];\r\n        const incomingHook = this.props.incomingHooks[this.state.id];\r\n        const outgoingHook = this.props.outgoingHooks[this.state.id];\r\n        const oauthApp = this.props.oauthApps[this.state.id];\r\n        const bot = this.props.bots[this.state.id];\r\n\r\n        if (this.state.type === Constants.Integrations.COMMAND && command) {\r\n            const commandToken = command.token;\r\n\r\n            headerText = (\r\n                <FormattedMessage\r\n                    id={'installed_commands.header'}\r\n                    defaultMessage='Slash Commands'\r\n                />\r\n            );\r\n            helpText = (\r\n                <p>\r\n                    <FormattedMarkdownMessage\r\n                        id='add_command.doneHelp'\r\n                        defaultMessage='Your slash command has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (see [documentation](!https://docs.mattermost.com/developer/slash-commands.html) for further details).'\r\n                    />\r\n                </p>\r\n            );\r\n            tokenText = (\r\n                <p className='word-break--all'>\r\n                    <FormattedMarkdownMessage\r\n                        id='add_command.token'\r\n                        defaultMessage='**Token**: {token}'\r\n                        values={{\r\n                            token: commandToken,\r\n                        }}\r\n                    />\r\n                    <CopyText\r\n                        value={commandToken}\r\n                    />\r\n                </p>\r\n            );\r\n        } else if (this.state.type === Constants.Integrations.INCOMING_WEBHOOK && incomingHook) {\r\n            const incomingHookToken = getSiteURL() + '/hooks/' + incomingHook.id;\r\n\r\n            headerText = (\r\n                <FormattedMessage\r\n                    id={'installed_incoming_webhooks.header'}\r\n                    defaultMessage='Incoming Webhooks'\r\n                />\r\n            );\r\n            helpText = (\r\n                <p>\r\n                    <FormattedMarkdownMessage\r\n                        id='add_incoming_webhook.doneHelp'\r\n                        defaultMessage='Your incoming webhook has been set up. Please send data to the following URL (see [documentation](!https://docs.mattermost.com/developer/webhooks-incoming.html) for further details).'\r\n                    />\r\n                </p>\r\n            );\r\n            tokenText = (\r\n                <p className='word-break--all'>\r\n                    <FormattedMarkdownMessage\r\n                        id='add_incoming_webhook.url'\r\n                        defaultMessage='**URL**: {url}'\r\n                        values={{\r\n                            url: incomingHookToken,\r\n                        }}\r\n                    />\r\n                    <CopyText\r\n                        idMessage='integrations.copy_client_secret'\r\n                        defaultMessage='Copy Client Secret'\r\n                        value={incomingHookToken}\r\n                    />\r\n                </p>\r\n            );\r\n        } else if (this.state.type === Constants.Integrations.OUTGOING_WEBHOOK && outgoingHook) {\r\n            const outgoingHookToken = outgoingHook.token;\r\n\r\n            headerText = (\r\n                <FormattedMessage\r\n                    id={'installed_outgoing_webhooks.header'}\r\n                    defaultMessage='Outgoing Webhooks'\r\n                />\r\n            );\r\n            helpText = (\r\n                <p>\r\n                    <FormattedMarkdownMessage\r\n                        id='add_outgoing_webhook.doneHelp'\r\n                        defaultMessage='Your outgoing webhook has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (see [documentation](!https://docs.mattermost.com/developer/webhooks-outgoing.html) for further details).'\r\n                    />\r\n                </p>\r\n            );\r\n            tokenText = (\r\n                <p className='word-break--all'>\r\n                    <FormattedMarkdownMessage\r\n                        id='add_outgoing_webhook.token'\r\n                        defaultMessage='**Token**: {token}'\r\n                        values={{\r\n                            token: outgoingHookToken,\r\n                        }}\r\n                    />\r\n                    <CopyText\r\n                        value={outgoingHookToken}\r\n                    />\r\n                </p>\r\n            );\r\n        } else if (this.state.type === Constants.Integrations.OAUTH_APP && oauthApp) {\r\n            const oauthAppToken = oauthApp.id;\r\n            const oauthAppSecret = oauthApp.client_secret;\r\n\r\n            headerText = (\r\n                <FormattedMessage\r\n                    id={'installed_oauth_apps.header'}\r\n                    defaultMessage='OAuth 2.0 Applications'\r\n                />\r\n            );\r\n\r\n            helpText = [];\r\n            helpText.push(\r\n                <p key='add_oauth_app.doneHelp'>\r\n                    <FormattedMarkdownMessage\r\n                        id='add_oauth_app.doneHelp'\r\n                        defaultMessage='Your OAuth 2.0 application has been set up. Please use the following Client ID and Client Secret when requesting authorization for your application (see [documentation](!https://docs.mattermost.com/developer/oauth-2-0-applications.html) for further details).'\r\n                    />\r\n                </p>\r\n            );\r\n            helpText.push(\r\n                <p key='add_oauth_app.clientId'>\r\n                    <FormattedMarkdownMessage\r\n                        id='add_oauth_app.clientId'\r\n                        defaultMessage='**Client ID**: {id}'\r\n                        values={{\r\n                            id: oauthAppToken,\r\n                        }}\r\n                    />\r\n                    <CopyText\r\n                        idMessage='integrations.copy_client_id'\r\n                        defaultMessage='Copy Client Id'\r\n                        value={oauthAppToken}\r\n                    />\r\n                    <br/>\r\n                    <FormattedMarkdownMessage\r\n                        id='add_oauth_app.clientSecret'\r\n                        defaultMessage='**Client Secret**: {secret}'\r\n                        values={{\r\n                            secret: oauthAppSecret,\r\n                        }}\r\n                    />\r\n                    <CopyText\r\n                        idMessage='integrations.copy_client_secret'\r\n                        defaultMessage='Copy Client Secret'\r\n                        value={oauthAppSecret}\r\n                    />\r\n                </p>\r\n            );\r\n\r\n            helpText.push(\r\n                <p key='add_oauth_app.doneUrlHelp'>\r\n                    <FormattedMessage\r\n                        id='add_oauth_app.doneUrlHelp'\r\n                        defaultMessage='The following are your authorized redirect URL(s).'\r\n                    />\r\n                </p>\r\n            );\r\n\r\n            tokenText = (\r\n                <p className='word-break--all'>\r\n                    <FormattedMarkdownMessage\r\n                        id='add_oauth_app.url'\r\n                        defaultMessage='**URL(s)**: {url}'\r\n                        values={{\r\n                            url: oauthApp.callback_urls,\r\n                        }}\r\n                    />\r\n                </p>\r\n            );\r\n        } else if (this.state.type === Constants.Integrations.BOT && bot) {\r\n            const botToken = (new URLSearchParams(this.props.location.search)).get('token');\r\n\r\n            headerText = (\r\n                <FormattedMessage\r\n                    id='bots.manage.header'\r\n                    defaultMessage='Bot Accounts'\r\n                />\r\n            );\r\n            helpText = (\r\n                <p>\r\n                    <FormattedMarkdownMessage\r\n                        id='bots.manage.created.text'\r\n                        defaultMessage='Your bot account **{botname}** has been created successfully. Please use the following access token to connect to the bot (see [documentation](https://mattermost.com/pl/default-bot-accounts) for further details).'\r\n                        values={{\r\n                            botname: bot.display_name || bot.username,\r\n                        }}\r\n                    />\r\n                </p>\r\n            );\r\n            tokenText = (\r\n                <p className='word-break--all'>\r\n                    <FormattedMarkdownMessage\r\n                        id='add_outgoing_webhook.token'\r\n                        defaultMessage='**Token**: {token}'\r\n                        values={{\r\n                            token: botToken,\r\n                        }}\r\n                    />\r\n                    <CopyText\r\n                        value={botToken}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <FormattedMarkdownMessage\r\n                        id='add_outgoing_webhook.token.message'\r\n                        defaultMessage='Make sure to add this bot account to teams and channels you want it to interact in. See [documentation](https://mattermost.com/pl/default-bot-accounts) to learn more.'\r\n                    />\r\n                </p>\r\n            );\r\n        } else {\r\n            browserHistory.replace(`/error?type=${ErrorPageTypes.PAGE_NOT_FOUND}`);\r\n            return '';\r\n        }\r\n\r\n        return (\r\n            <div className='backstage-content row'>\r\n                <BackstageHeader>\r\n                    <Link to={'/' + this.props.team.name + '/integrations/' + this.state.type}>\r\n                        {headerText}\r\n                    </Link>\r\n                    <FormattedMessage\r\n                        id='integrations.add'\r\n                        defaultMessage='Add'\r\n                    />\r\n                </BackstageHeader>\r\n                <div className='backstage-form backstage-form__confirmation'>\r\n                    <h4\r\n                        className='backstage-form__title'\r\n                        id='formTitle'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='integrations.successful'\r\n                            defaultMessage='Setup Successful'\r\n                        />\r\n                    </h4>\r\n                    {helpText}\r\n                    {tokenText}\r\n                    <div className='backstage-form__footer'>\r\n                        <Link\r\n                            className='btn btn-primary'\r\n                            type='submit'\r\n                            to={'/' + this.props.team.name + '/integrations/' + this.state.type}\r\n                            id='doneButton'\r\n                        >\r\n                            <FormattedMessage\r\n                                id='integrations.done'\r\n                                defaultMessage='Done'\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getCommands, getOAuthApps, getIncomingHooks, getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\r\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\r\n\r\nimport ConfirmIntegration from './confirm_integration.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        commands: getCommands(state),\r\n        oauthApps: getOAuthApps(state),\r\n        incomingHooks: getIncomingHooks(state),\r\n        outgoingHooks: getOutgoingHooks(state),\r\n        bots: getBotAccounts(state),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ConfirmIntegration);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\n\r\nimport InstalledCommands from 'components/integrations/installed_commands';\r\nimport AddCommand from 'components/integrations/add_command';\r\nimport EditCommand from 'components/integrations/edit_command';\r\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\r\n\r\nconst CommandRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\r\n    <Route\r\n        {...rest}\r\n        render={(props) => (\r\n            <Component\r\n                {...extraProps}\r\n                {...props}\r\n            />\r\n        )}\r\n    />\r\n);\r\n\r\nexport default class CommandsContainer extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n        * The team data needed to pass into child components\r\n        */\r\n        team: PropTypes.object,\r\n\r\n        /**\r\n        * The user data needed to pass into child components\r\n        */\r\n        user: PropTypes.object,\r\n\r\n        /**\r\n        * The users collection\r\n        */\r\n        users: PropTypes.object,\r\n\r\n        /**\r\n        * Installed slash commands to display\r\n        */\r\n        commands: PropTypes.array,\r\n\r\n        /**\r\n        * Object from react-router\r\n        */\r\n        match: PropTypes.shape({\r\n            url: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n            * The function to call to fetch team commands\r\n            */\r\n            loadCommandsAndProfilesForTeam: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n\r\n        /**\r\n        * Whether or not commands are enabled.\r\n        */\r\n        enableCommands: PropTypes.bool,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.enableCommands) {\r\n            this.props.actions.loadCommandsAndProfilesForTeam(this.props.team.id).then(\r\n                () => this.setState({loading: false})\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const extraProps = {\r\n            loading: this.state.loading,\r\n            commands: this.props.commands || [],\r\n            users: this.props.users,\r\n            team: this.props.team,\r\n            user: this.props.user,\r\n        };\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route\r\n                        exact={true}\r\n                        path={`${this.props.match.url}/`}\r\n                        render={() => (<Redirect to={`${this.props.match.url}/installed`}/>)}\r\n                    />\r\n                    <CommandRoute\r\n                        extraProps={extraProps}\r\n                        path={`${this.props.match.url}/installed`}\r\n                        component={InstalledCommands}\r\n                    />\r\n                    <CommandRoute\r\n                        extraProps={extraProps}\r\n                        path={`${this.props.match.url}/add`}\r\n                        component={AddCommand}\r\n                    />\r\n                    <CommandRoute\r\n                        extraProps={extraProps}\r\n                        path={`${this.props.match.url}/edit`}\r\n                        component={EditCommand}\r\n                    />\r\n                    <CommandRoute\r\n                        extraProps={extraProps}\r\n                        path={`${this.props.match.url}/confirm`}\r\n                        component={ConfirmIntegration}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\r\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport {loadCommandsAndProfilesForTeam} from 'actions/integration_actions';\r\n\r\nimport CommandsContainer from './commands_container.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n    const enableCommands = config.EnableCommands === 'true';\r\n\r\n    return {\r\n        commands: Object.values(getCommands(state)),\r\n        users: getUsers(state),\r\n        enableCommands,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            loadCommandsAndProfilesForTeam,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommandsContainer);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Route, NavLink} from 'react-router-dom';\r\n\r\nexport default class BackstageCategory extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            name: PropTypes.string.isRequired,\r\n            title: PropTypes.node.isRequired,\r\n            icon: PropTypes.string.isRequired,\r\n            parentLink: PropTypes.string,\r\n            children: PropTypes.arrayOf(PropTypes.element),\r\n        };\r\n    }\r\n\r\n    static get defaultProps() {\r\n        return {\r\n            parentLink: '',\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    static get contextTypes() {\r\n        return {\r\n            router: PropTypes.object.isRequired,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {name, title, icon, parentLink, children} = this.props;\r\n\r\n        const link = parentLink + '/' + name;\r\n\r\n        return (\r\n            <li className='backstage-sidebar__category'>\r\n                <NavLink\r\n                    to={link}\r\n                    className='category-title'\r\n                    activeClassName='category-title--active'\r\n                >\r\n                    <i className={'fa ' + icon}/>\r\n                    <span className='category-title__text'>\r\n                        {title}\r\n                    </span>\r\n                </NavLink>\r\n                <Route\r\n                    path={link}\r\n                    render={() => (\r\n                        <ul className='sections'>\r\n                            {\r\n                                React.Children.map(children, (child) => {\r\n                                    if (!child) {\r\n                                        return child;\r\n                                    }\r\n\r\n                                    return React.cloneElement(child, {\r\n                                        parentLink: link,\r\n                                    });\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    )}\r\n                />\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport default class BackstageSection extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            name: PropTypes.string.isRequired,\r\n            title: PropTypes.node.isRequired,\r\n            parentLink: PropTypes.string,\r\n            subsection: PropTypes.bool,\r\n            children: PropTypes.arrayOf(PropTypes.element),\r\n            id: PropTypes.string,\r\n        };\r\n    }\r\n\r\n    static get defaultProps() {\r\n        return {\r\n            parentLink: '',\r\n            subsection: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    static get contextTypes() {\r\n        return {\r\n            router: PropTypes.object.isRequired,\r\n        };\r\n    }\r\n\r\n    getLink() {\r\n        return this.props.parentLink + '/' + this.props.name;\r\n    }\r\n\r\n    render() {\r\n        const {title, subsection, children} = this.props;\r\n\r\n        const link = this.getLink();\r\n\r\n        let clonedChildren = null;\r\n        if (children.length > 0) {\r\n            clonedChildren = (\r\n                <ul className='subsections'>\r\n                    {\r\n                        React.Children.map(children, (child) => {\r\n                            return React.cloneElement(child, {\r\n                                parentLink: link,\r\n                                subsection: true,\r\n                            });\r\n                        })\r\n                    }\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        let className = 'section';\r\n        if (subsection) {\r\n            className = 'subsection';\r\n        }\r\n\r\n        return (\r\n            <li\r\n                className={className}\r\n                id={this.props.id}\r\n            >\r\n                <NavLink\r\n                    className={`${className}-title`}\r\n                    activeClassName={`${className}-title--active`}\r\n                    to={link}\r\n                >\r\n                    <span className={`${className}-title__text`}>\r\n                        {title}\r\n                    </span>\r\n                </NavLink>\r\n                {clonedChildren}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {Permissions} from 'mattermost-redux/constants';\r\n\r\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\r\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\r\n\r\nimport BackstageCategory from './backstage_category.jsx';\r\nimport BackstageSection from './backstage_section.jsx';\r\n\r\nexport default class BackstageSidebar extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            team: PropTypes.object.isRequired,\r\n            user: PropTypes.object.isRequired,\r\n            enableCustomEmoji: PropTypes.bool.isRequired,\r\n            enableIncomingWebhooks: PropTypes.bool.isRequired,\r\n            enableOutgoingWebhooks: PropTypes.bool.isRequired,\r\n            enableCommands: PropTypes.bool.isRequired,\r\n            enableOAuthServiceProvider: PropTypes.bool.isRequired,\r\n            canCreateOrDeleteCustomEmoji: PropTypes.bool.isRequired,\r\n        };\r\n    }\r\n\r\n    renderCustomEmoji() {\r\n        if (!this.props.enableCustomEmoji || !this.props.canCreateOrDeleteCustomEmoji) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <BackstageCategory\r\n                name='emoji'\r\n                parentLink={'/' + this.props.team.name}\r\n                icon='fa-smile-o'\r\n                title={\r\n                    <FormattedMessage\r\n                        id='backstage_sidebar.emoji'\r\n                        defaultMessage='Custom Emoji'\r\n                    />\r\n                }\r\n            />\r\n        );\r\n    }\r\n\r\n    renderIntegrations() {\r\n        let incomingWebhooks = null;\r\n        if (this.props.enableIncomingWebhooks) {\r\n            incomingWebhooks = (\r\n                <TeamPermissionGate\r\n                    permissions={[Permissions.MANAGE_INCOMING_WEBHOOKS]}\r\n                    teamId={this.props.team.id}\r\n                >\r\n                    <BackstageSection\r\n                        name='incoming_webhooks'\r\n                        parentLink={'/' + this.props.team.name + '/integrations'}\r\n                        title={(\r\n                            <FormattedMessage\r\n                                id='backstage_sidebar.integrations.incoming_webhooks'\r\n                                defaultMessage='Incoming Webhooks'\r\n                            />\r\n                        )}\r\n                        id='incomingWebhooks'\r\n                    />\r\n                </TeamPermissionGate>\r\n            );\r\n        }\r\n\r\n        let outgoingWebhooks = null;\r\n        if (this.props.enableOutgoingWebhooks) {\r\n            outgoingWebhooks = (\r\n                <TeamPermissionGate\r\n                    permissions={[Permissions.MANAGE_OUTGOING_WEBHOOKS]}\r\n                    teamId={this.props.team.id}\r\n                >\r\n                    <BackstageSection\r\n                        name='outgoing_webhooks'\r\n                        parentLink={'/' + this.props.team.name + '/integrations'}\r\n                        title={(\r\n                            <FormattedMessage\r\n                                id='backstage_sidebar.integrations.outgoing_webhooks'\r\n                                defaultMessage='Outgoing Webhooks'\r\n                            />\r\n                        )}\r\n                        id='outgoingWebhooks'\r\n                    />\r\n                </TeamPermissionGate>\r\n            );\r\n        }\r\n\r\n        let commands = null;\r\n        if (this.props.enableCommands) {\r\n            commands = (\r\n                <TeamPermissionGate\r\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\r\n                    teamId={this.props.team.id}\r\n                >\r\n                    <BackstageSection\r\n                        name='commands'\r\n                        parentLink={'/' + this.props.team.name + '/integrations'}\r\n                        title={(\r\n                            <FormattedMessage\r\n                                id='backstage_sidebar.integrations.commands'\r\n                                defaultMessage='Slash Commands'\r\n                            />\r\n                        )}\r\n                        id='slashCommands'\r\n                    />\r\n                </TeamPermissionGate>\r\n            );\r\n        }\r\n\r\n        let oauthApps = null;\r\n        if (this.props.enableOAuthServiceProvider) {\r\n            oauthApps = (\r\n                <SystemPermissionGate permissions={[Permissions.MANAGE_OAUTH]}>\r\n                    <BackstageSection\r\n                        name='oauth2-apps'\r\n                        parentLink={'/' + this.props.team.name + '/integrations'}\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='backstage_sidebar.integrations.oauthApps'\r\n                                defaultMessage='OAuth 2.0 Applications'\r\n                            />\r\n                        }\r\n                        id='oauthApps'\r\n                    />\r\n                </SystemPermissionGate>\r\n            );\r\n        }\r\n\r\n        const botAccounts = (\r\n            <SystemPermissionGate permissions={['manage_bots']}>\r\n                <BackstageSection\r\n                    name='bots'\r\n                    parentLink={'/' + this.props.team.name + '/integrations'}\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='backstage_sidebar.bots'\r\n                            defaultMessage='Bot Accounts'\r\n                        />\r\n                    }\r\n                    id='botAccounts'\r\n                />\r\n            </SystemPermissionGate>\r\n        );\r\n\r\n        return (\r\n            <TeamPermissionGate\r\n                permissions={[Permissions.MANAGE_INCOMING_WEBHOOKS, Permissions.MANAGE_OUTGOING_WEBHOOKS, Permissions.MANAGE_SLASH_COMMANDS, Permissions.MANAGE_OAUTH]}\r\n                teamId={this.props.team.id}\r\n            >\r\n                <BackstageCategory\r\n                    name='integrations'\r\n                    icon='fa-link'\r\n                    parentLink={'/' + this.props.team.name}\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='backstage_sidebar.integrations'\r\n                            defaultMessage='Integrations'\r\n                        />\r\n                    }\r\n                >\r\n                    {incomingWebhooks}\r\n                    {outgoingWebhooks}\r\n                    {commands}\r\n                    {oauthApps}\r\n                    {botAccounts}\r\n                </BackstageCategory>\r\n            </TeamPermissionGate>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='backstage-sidebar'>\r\n                <ul>\r\n                    {this.renderCustomEmoji()}\r\n                    {this.renderIntegrations()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport BackIcon from 'components/icon/back_icon';\r\n\r\nexport default class BackstageNavbar extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            team: PropTypes.object.isRequired,\r\n            siteName: PropTypes.string,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.team) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className='backstage-navbar'>\r\n                <Link\r\n                    className='backstage-navbar__back'\r\n                    to={`/${this.props.team.name}`}\r\n                >\r\n                    <BackIcon/>\r\n                    <span>\r\n                        <FormattedMessage\r\n                            id='backstage_navbar.backToMattermost'\r\n                            defaultMessage='Back to {siteName}'\r\n                            values={{\r\n                                siteName: this.props.siteName,\r\n                            }}\r\n                        />\r\n                    </span>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport Bots from 'components/integrations/bots';\r\nimport AddBot from 'components/integrations/bots/add_bot';\r\n\r\nimport Pluggable from 'plugins/pluggable';\r\nimport AnnouncementBar from 'components/announcement_bar';\r\nimport SystemNotice from 'components/system_notice';\r\nimport Integrations from 'components/integrations';\r\nimport Emoji from 'components/emoji';\r\nimport AddEmoji from 'components/emoji/add_emoji';\r\nimport InstalledIncomingWebhooks from 'components/integrations/installed_incoming_webhooks';\r\nimport AddIncomingWehook from 'components/integrations/add_incoming_webhook';\r\nimport EditIncomingWebhook from 'components/integrations/edit_incoming_webhook';\r\nimport InstalledOutgoingWebhooks from 'components/integrations/installed_outgoing_webhooks';\r\nimport AddOutgoingWebhook from 'components/integrations/add_outgoing_webhook';\r\nimport EditOutgoingWebhook from 'components/integrations/edit_outgoing_webhook';\r\nimport InstalledOauthApps from 'components/integrations/installed_oauth_apps';\r\nimport AddOauthApp from 'components/integrations/add_oauth_app';\r\nimport EditOauthApp from 'components/integrations/edit_oauth_app';\r\nimport CommandsContainer from 'components/integrations/commands_container';\r\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\r\n\r\nimport BackstageSidebar from './components/backstage_sidebar.jsx';\r\nimport BackstageNavbar from './components/backstage_navbar';\r\n\r\nconst BackstageRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\r\n    <Route\r\n        {...rest}\r\n        render={(props) => (\r\n            <Component\r\n                {...extraProps}\r\n                {...props}\r\n            />\r\n        )}\r\n    />\r\n);\r\n\r\nexport default class BackstageController extends React.Component {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * Current user.\r\n         */\r\n        user: PropTypes.object,\r\n\r\n        /**\r\n         * Current team.\r\n         */\r\n        team: PropTypes.object,\r\n\r\n        /**\r\n         * Object from react-router\r\n         */\r\n        match: PropTypes.shape({\r\n            url: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n\r\n        siteName: PropTypes.string,\r\n        enableCustomEmoji: PropTypes.bool.isRequired,\r\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\r\n        enableOutgoingWebhooks: PropTypes.bool.isRequired,\r\n        enableCommands: PropTypes.bool.isRequired,\r\n        enableOAuthServiceProvider: PropTypes.bool.isRequired,\r\n        canCreateOrDeleteCustomEmoji: PropTypes.bool.isRequired,\r\n    }\r\n\r\n    scrollToTop = () => {\r\n        if (this.listRef) {\r\n            this.listRef.scrollTop = 0;\r\n        }\r\n    }\r\n\r\n    setListRef = (ref) => {\r\n        this.listRef = ref;\r\n    }\r\n\r\n    render() {\r\n        if (this.props.team == null || this.props.user == null) {\r\n            return <div/>;\r\n        }\r\n        const extraProps = {\r\n            team: this.props.team,\r\n            user: this.props.user,\r\n            scrollToTop: this.scrollToTop,\r\n        };\r\n        return (\r\n            <div className='backstage'>\r\n                <AnnouncementBar/>\r\n                <SystemNotice/>\r\n                <BackstageNavbar\r\n                    team={this.props.team}\r\n                    siteName={this.props.siteName}\r\n                />\r\n                <Pluggable pluggableName='Root'/>\r\n                <div\r\n                    className='backstage-body'\r\n                    ref={this.setListRef}\r\n                >\r\n                    <BackstageSidebar\r\n                        team={this.props.team}\r\n                        user={this.props.user}\r\n                        enableCustomEmoji={this.props.enableCustomEmoji}\r\n                        enableIncomingWebhooks={this.props.enableIncomingWebhooks}\r\n                        enableOutgoingWebhooks={this.props.enableOutgoingWebhooks}\r\n                        enableCommands={this.props.enableCommands}\r\n                        enableOAuthServiceProvider={this.props.enableOAuthServiceProvider}\r\n                        canCreateOrDeleteCustomEmoji={this.props.canCreateOrDeleteCustomEmoji}\r\n                    />\r\n                    <Switch>\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            exact={true}\r\n                            path={'/:team/integrations'}\r\n                            component={Integrations}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            exact={true}\r\n                            path={`${this.props.match.url}/incoming_webhooks`}\r\n                            component={InstalledIncomingWebhooks}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            path={`${this.props.match.url}/incoming_webhooks/add`}\r\n                            component={AddIncomingWehook}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            path={`${this.props.match.url}/incoming_webhooks/edit`}\r\n                            component={EditIncomingWebhook}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            exact={true}\r\n                            path={`${this.props.match.url}/outgoing_webhooks`}\r\n                            component={InstalledOutgoingWebhooks}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            path={`${this.props.match.url}/outgoing_webhooks/add`}\r\n                            component={AddOutgoingWebhook}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            path={`${this.props.match.url}/outgoing_webhooks/edit`}\r\n                            component={EditOutgoingWebhook}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            path={`${this.props.match.url}/commands`}\r\n                            component={CommandsContainer}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            exact={true}\r\n                            path={`${this.props.match.url}/oauth2-apps`}\r\n                            component={InstalledOauthApps}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            path={`${this.props.match.url}/oauth2-apps/add`}\r\n                            component={AddOauthApp}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            path={`${this.props.match.url}/oauth2-apps/edit`}\r\n                            component={EditOauthApp}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            path={`${this.props.match.url}/confirm`}\r\n                            component={ConfirmIntegration}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            exact={true}\r\n                            path={'/:team/emoji'}\r\n                            component={Emoji}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            path={`${this.props.match.url}/add`}\r\n                            component={AddEmoji}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            path={`${this.props.match.url}/bots/add`}\r\n                            component={AddBot}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            path={`${this.props.match.url}/bots/edit`}\r\n                            component={AddBot}\r\n                        />\r\n                        <BackstageRoute\r\n                            extraProps={extraProps}\r\n                            path={`${this.props.match.url}/bots`}\r\n                            component={Bots}\r\n                        />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\r\nimport {getMyTeams, getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {haveITeamPermission, haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\r\nimport {Permissions} from 'mattermost-redux/constants';\r\n\r\nimport BackstageController from './backstage_controller.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const user = getCurrentUser(state);\r\n    const team = getCurrentTeam(state);\r\n\r\n    const config = getConfig(state);\r\n\r\n    const siteName = config.SiteName;\r\n    const enableCustomEmoji = config.EnableCustomEmoji === 'true';\r\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\r\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\r\n    const enableCommands = config.EnableCommands === 'true';\r\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\r\n\r\n    let canCreateOrDeleteCustomEmoji = (haveISystemPermission(state, {permission: Permissions.CREATE_EMOJIS}) || haveISystemPermission(state, {permission: Permissions.DELETE_EMOJIS}));\r\n    if (!canCreateOrDeleteCustomEmoji) {\r\n        for (const t of getMyTeams(state)) {\r\n            if (haveITeamPermission(state, {team: t.id, permission: Permissions.CREATE_EMOJIS}) || haveITeamPermission(state, {team: t.id, permission: Permissions.DELETE_EMOJIS})) {\r\n                canCreateOrDeleteCustomEmoji = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        user,\r\n        team,\r\n        siteName,\r\n        enableCustomEmoji,\r\n        enableIncomingWebhooks,\r\n        enableOutgoingWebhooks,\r\n        enableCommands,\r\n        enableOAuthServiceProvider,\r\n        canCreateOrDeleteCustomEmoji,\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(BackstageController));\r\n"],"sourceRoot":""}