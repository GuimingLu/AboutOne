{"version":3,"sources":["webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png","webpack:///./components/signup/signup_controller/signup_controller.jsx","webpack:///./components/signup/signup_controller/index.js"],"names":["BackButton","React","PureComponent","render","props","onClick","url","title","PropTypes","string","func","SignupController","Component","constructor","token","inviteId","data","team","error","actions","addUserToTeamFromInvite","browserHistory","push","name","Constants","DEFAULT_CHANNEL","handleInvalidInvite","getTeamInviteInfo","setState","serverError","loading","err","server_error_id","message","noOpenServerError","renderSignupControls","bind","usedBefore","location","search","params","URLSearchParams","get","loggedIn","enableOpenServer","noAccounts","state","componentDidMount","removeGlobalItem","userLoggedIn","getInviteInfo","GlobalActions","formatMessage","context","intl","signupControls","enableSignUpWithEmail","window","id","defaultMessage","enableSignUpWithGitLab","Client4","getOAuthRoute","isLicensed","enableSignUpWithGoogle","enableSignUpWithOffice365","enableLDAP","append","query","toString","LDAPText","ldapLoginFieldName","enableSAML","samlLoginButtonText","length","signupDisabledError","logoImage","siteName","object","bool","isRequired","shape","intlShape","mapStateToProps","ownProps","license","getLicense","config","getConfig","IsLicensed","EnableOpenServer","NoAccounts","EnableSignUpWithEmail","EnableSignUpWithGitLab","EnableSignUpWithGoogle","EnableSignUpWithOffice365","EnableLdap","EnableSaml","SamlLoginButtonText","LdapLoginFieldName","SiteName","getGlobalItem","Boolean","getCurrentUserId","mapDispatchToProps","dispatch","bindActionCreators","connect"],"mappings":"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","file":"19.b3016e028a3f84608614.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class BackButton extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * URL to return to\r\n         */\r\n        url: PropTypes.string,\r\n\r\n        /**\r\n         * An optional click handler that will trigger when the user clicks on the back button\r\n         */\r\n        onClick: PropTypes.func,\r\n    };\r\n\r\n    static defaultProps = {\r\n        url: '/',\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                id='back_button'\r\n                className='signup-header'\r\n            >\r\n                <Link\r\n                    onClick={this.props.onClick}\r\n                    to={this.props.url}\r\n                >\r\n                    <FormattedMessage\r\n                        id='generic_icons.back'\r\n                        defaultMessage='Back Icon'\r\n                    >\r\n                        {(title) => (\r\n                            <span\r\n                                id='back_button_icon'\r\n                                className='fa fa-1x fa-angle-left'\r\n                                title={title}\r\n                            />\r\n                        )}\r\n                    </FormattedMessage>\r\n                    <FormattedMessage\r\n                        id='web.header.back'\r\n                        defaultMessage='Back'\r\n                    />\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"files/87b80d01a017833f1357800bfca49cea.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage, intlShape} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\nimport {Client4} from 'mattermost-redux/client';\r\n\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport * as GlobalActions from 'actions/global_actions.jsx';\r\nimport logoImage from 'images/logo.png';\r\nimport AnnouncementBar from 'components/announcement_bar';\r\nimport BackButton from 'components/common/back_button.jsx';\r\nimport FormError from 'components/form_error.jsx';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\nimport {Constants} from 'utils/constants.jsx';\r\n\r\nexport default class SignupController extends React.Component {\r\n    static propTypes = {\r\n        location: PropTypes.object,\r\n        loggedIn: PropTypes.bool.isRequired,\r\n        isLicensed: PropTypes.bool.isRequired,\r\n        enableOpenServer: PropTypes.bool.isRequired,\r\n        noAccounts: PropTypes.bool.isRequired,\r\n        enableSignUpWithEmail: PropTypes.bool.isRequired,\r\n        enableSignUpWithGitLab: PropTypes.bool.isRequired,\r\n        enableSignUpWithGoogle: PropTypes.bool.isRequired,\r\n        enableSignUpWithOffice365: PropTypes.bool.isRequired,\r\n        enableLDAP: PropTypes.bool.isRequired,\r\n        enableSAML: PropTypes.bool.isRequired,\r\n        samlLoginButtonText: PropTypes.string,\r\n        siteName: PropTypes.string,\r\n        usedBefore: PropTypes.string,\r\n        ldapLoginFieldName: PropTypes.string.isRequired,\r\n        actions: PropTypes.shape({\r\n            removeGlobalItem: PropTypes.func.isRequired,\r\n            getTeamInviteInfo: PropTypes.func.isRequired,\r\n            addUserToTeamFromInvite: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    static contextTypes = {\r\n        intl: intlShape.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.renderSignupControls = this.renderSignupControls.bind(this);\r\n\r\n        let loading = false;\r\n        let serverError = '';\r\n        let noOpenServerError = false;\r\n        let usedBefore = false;\r\n\r\n        if (this.props.location.search) {\r\n            const params = new URLSearchParams(this.props.location.search);\r\n            let token = params.get('t');\r\n            if (token == null) {\r\n                token = '';\r\n            }\r\n            let inviteId = params.get('id');\r\n            if (inviteId == null) {\r\n                inviteId = '';\r\n            }\r\n\r\n            if (inviteId) {\r\n                loading = true;\r\n            } else if (!this.props.loggedIn) {\r\n                usedBefore = props.usedBefore;\r\n            } else if (!inviteId && !this.props.enableOpenServer && !this.props.noAccounts) {\r\n                noOpenServerError = true;\r\n                serverError = (\r\n                    <FormattedMessage\r\n                        id='signup_user_completed.no_open_server'\r\n                        defaultMessage='This server does not allow open signups.  Please speak with your Administrator to receive an invitation.'\r\n                    />\r\n                );\r\n            }\r\n        }\r\n\r\n        this.state = {\r\n            loading,\r\n            serverError,\r\n            noOpenServerError,\r\n            usedBefore,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.actions.removeGlobalItem('team');\r\n        if (this.props.location.search) {\r\n            const params = new URLSearchParams(this.props.location.search);\r\n            const token = params.get('t') || '';\r\n            const inviteId = params.get('id') || '';\r\n\r\n            const userLoggedIn = this.props.loggedIn;\r\n\r\n            if ((inviteId || token) && userLoggedIn) {\r\n                this.addUserToTeamFromInvite(token, inviteId);\r\n            } else if (inviteId) {\r\n                this.getInviteInfo(inviteId);\r\n            } else if (userLoggedIn) {\r\n                GlobalActions.redirectUserToDefaultTeam();\r\n            }\r\n        }\r\n    }\r\n\r\n    addUserToTeamFromInvite = async (token, inviteId) => {\r\n        const {data: team, error} = await this.props.actions.addUserToTeamFromInvite(token, inviteId);\r\n        if (team) {\r\n            browserHistory.push('/' + team.name + `/channels/${Constants.DEFAULT_CHANNEL}`);\r\n        } else if (error) {\r\n            this.handleInvalidInvite(error);\r\n        }\r\n    }\r\n\r\n    getInviteInfo = async (inviteId) => {\r\n        const {data, error} = await this.props.actions.getTeamInviteInfo(inviteId);\r\n        if (data) {\r\n            this.setState({\r\n                serverError: '',\r\n                loading: false,\r\n            });\r\n        } else if (error) {\r\n            this.handleInvalidInvite(error);\r\n        }\r\n    }\r\n\r\n    handleInvalidInvite = (err) => {\r\n        let serverError;\r\n        if (err.server_error_id === 'store.sql_user.save.max_accounts.app_error') {\r\n            serverError = err.message;\r\n        } else {\r\n            serverError = (\r\n                <FormattedMessage\r\n                    id='signup_user_completed.invalid_invite'\r\n                    defaultMessage='The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\r\n                />\r\n            );\r\n        }\r\n\r\n        this.setState({\r\n            noOpenServerError: true,\r\n            loading: false,\r\n            serverError,\r\n        });\r\n    }\r\n\r\n    renderSignupControls() {\r\n        const {formatMessage} = this.context.intl;\r\n        let signupControls = [];\r\n\r\n        if (this.props.enableSignUpWithEmail) {\r\n            signupControls.push(\r\n                <Link\r\n                    className='btn btn-custom-login btn--full email'\r\n                    key='email'\r\n                    to={'/signup_email' + window.location.search}\r\n                >\r\n                    <span>\r\n                        <span\r\n                            className='icon fa fa-envelope'\r\n                            title={formatMessage({id: 'signup.email.icon', defaultMessage: 'Email Icon'})}\r\n                        />\r\n                        <FormattedMessage\r\n                            id='signup.email'\r\n                            defaultMessage='Email and Password'\r\n                        />\r\n                    </span>\r\n                </Link>\r\n            );\r\n        }\r\n\r\n        if (this.props.enableSignUpWithGitLab) {\r\n            signupControls.push(\r\n                <a\r\n                    className='btn btn-custom-login btn--full gitlab'\r\n                    key='gitlab'\r\n                    href={Client4.getOAuthRoute() + '/gitlab/signup' + window.location.search}\r\n                >\r\n                    <span>\r\n                        <span className='icon'/>\r\n                        <span>\r\n                            <FormattedMessage\r\n                                id='signup.gitlab'\r\n                                defaultMessage='GitLab Single Sign-On'\r\n                            />\r\n                        </span>\r\n                    </span>\r\n                </a>\r\n            );\r\n        }\r\n\r\n        if (this.props.isLicensed && this.props.enableSignUpWithGoogle) {\r\n            signupControls.push(\r\n                <a\r\n                    className='btn btn-custom-login btn--full google'\r\n                    key='google'\r\n                    href={Client4.getOAuthRoute() + '/google/signup' + window.location.search}\r\n                >\r\n                    <span>\r\n                        <span className='icon'/>\r\n                        <span>\r\n                            <FormattedMessage\r\n                                id='signup.google'\r\n                                defaultMessage='Google Account'\r\n                            />\r\n                        </span>\r\n                    </span>\r\n                </a>\r\n            );\r\n        }\r\n\r\n        if (this.props.isLicensed && this.props.enableSignUpWithOffice365) {\r\n            signupControls.push(\r\n                <a\r\n                    className='btn btn-custom-login btn--full office365'\r\n                    key='office365'\r\n                    href={Client4.getOAuthRoute() + '/office365/signup' + window.location.search}\r\n                >\r\n                    <span>\r\n                        <span className='icon'/>\r\n                        <span>\r\n                            <FormattedMessage\r\n                                id='signup.office365'\r\n                                defaultMessage='Office 365'\r\n                            />\r\n                        </span>\r\n                    </span>\r\n                </a>\r\n            );\r\n        }\r\n\r\n        if (this.props.isLicensed && this.props.enableLDAP) {\r\n            const params = new URLSearchParams(this.props.location.search);\r\n            params.append('extra', 'create_ldap');\r\n            const query = '?' + params.toString();\r\n\r\n            let LDAPText = (\r\n                <FormattedMessage\r\n                    id='signup.ldap'\r\n                    defaultMessage='AD/LDAP Credentials'\r\n                />\r\n            );\r\n            if (this.props.ldapLoginFieldName) {\r\n                LDAPText = this.props.ldapLoginFieldName;\r\n            }\r\n            signupControls.push(\r\n                <Link\r\n                    className='btn btn-custom-login btn--full ldap'\r\n                    key='ldap'\r\n                    to={'/login' + query}\r\n                >\r\n                    <span>\r\n                        <span\r\n                            className='icon fa fa-folder-open fa--margin-top'\r\n                            title={formatMessage({id: 'signup.ldap.icon', defaultMessage: 'AD/LDAP Icon'})}\r\n                        />\r\n                        <span>\r\n                            {LDAPText}\r\n                        </span>\r\n                    </span>\r\n                </Link>\r\n            );\r\n        }\r\n\r\n        if (this.props.isLicensed && this.props.enableSAML) {\r\n            let query = '';\r\n            if (window.location.search) {\r\n                query = '&action=signup';\r\n            } else {\r\n                query = '?action=signup';\r\n            }\r\n\r\n            signupControls.push(\r\n                <Link\r\n                    className='btn btn-custom-login btn--full saml'\r\n                    key='saml'\r\n                    to={'/login/sso/saml' + window.location.search + query}\r\n                >\r\n                    <span>\r\n                        <span\r\n                            className='icon fa fa-lock fa--margin-top'\r\n                            title={formatMessage({id: 'signup.saml.icon', defaultMessage: 'SAML Icon'})}\r\n                        />\r\n                        <span>\r\n                            {this.props.samlLoginButtonText}\r\n                        </span>\r\n                    </span>\r\n                </Link>\r\n            );\r\n        }\r\n\r\n        if (signupControls.length === 0) {\r\n            const signupDisabledError = (\r\n                <FormattedMessage\r\n                    id='signup_user_completed.none'\r\n                    defaultMessage='No user creation method has been enabled. Please contact an administrator for access.'\r\n                />\r\n            );\r\n            signupControls = (\r\n                <FormError\r\n                    error={signupDisabledError}\r\n                    margin={true}\r\n                />\r\n            );\r\n        } else if (signupControls.length === 1) {\r\n            if (this.props.enableSignUpWithEmail) {\r\n                return browserHistory.push('/signup_email' + window.location.search);\r\n            } else if (this.props.isLicensed && this.props.enableLDAP) {\r\n                return browserHistory.push('/login' + window.location.search);\r\n            }\r\n        }\r\n\r\n        return signupControls;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (<LoadingScreen/>);\r\n        }\r\n\r\n        if (this.state.usedBefore) {\r\n            return (\r\n                <div>\r\n                    <FormattedMessage\r\n                        id='signup_user_completed.expired'\r\n                        defaultMessage=\"You've already completed the signup process for this invitation or this invitation has expired.\"\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let serverError = null;\r\n        if (this.state.serverError) {\r\n            serverError = (\r\n                <div className={'form-group has-error'}>\r\n                    <label className='control-label'>{this.state.serverError}</label>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let signupControls;\r\n        if (this.state.noOpenServerError || this.state.usedBefore) {\r\n            signupControls = null;\r\n        } else {\r\n            signupControls = this.renderSignupControls();\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <AnnouncementBar/>\r\n                <BackButton/>\r\n                <div className='col-sm-12'>\r\n                    <div className='signup-team__container'>\r\n                        <img\r\n                            alt={'signup team logo'}\r\n                            className='signup-team-logo'\r\n                            src={logoImage}\r\n                        />\r\n                        <div className='signup__content'>\r\n                            <h1>{this.props.siteName}</h1>\r\n                            <h4 className='color--light'>\r\n                                <FormattedMessage\r\n                                    id='web.root.signup_info'\r\n                                />\r\n                            </h4>\r\n                            <div className='margin--extra'>\r\n                                <h5><strong>\r\n                                    <FormattedMessage\r\n                                        id='signup.title'\r\n                                        defaultMessage='Create an account with:'\r\n                                    />\r\n                                </strong></h5>\r\n                            </div>\r\n                            {signupControls}\r\n                            {serverError}\r\n                        </div>\r\n                        <span className='color--light'>\r\n                            <FormattedMessage\r\n                                id='signup_user_completed.haveAccount'\r\n                                defaultMessage='Already have an account?'\r\n                            />\r\n                            {' '}\r\n                            <Link\r\n                                to={'/login' + this.props.location.search}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='signup_user_completed.signIn'\r\n                                    defaultMessage='Click here to sign in.'\r\n                                />\r\n                            </Link>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\r\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\r\nimport {getTeamInviteInfo} from 'mattermost-redux/actions/teams';\r\n\r\nimport {getGlobalItem} from 'selectors/storage';\r\nimport {removeGlobalItem} from 'actions/storage';\r\nimport {addUserToTeamFromInvite} from 'actions/team_actions';\r\n\r\nimport SignupController from './signup_controller.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const license = getLicense(state);\r\n    const config = getConfig(state);\r\n\r\n    const isLicensed = license && license.IsLicensed === 'true';\r\n    const enableOpenServer = config.EnableOpenServer === 'true';\r\n    const noAccounts = config.NoAccounts === 'true';\r\n    const enableSignUpWithEmail = config.EnableSignUpWithEmail === 'true';\r\n    const enableSignUpWithGitLab = config.EnableSignUpWithGitLab === 'true';\r\n    const enableSignUpWithGoogle = config.EnableSignUpWithGoogle === 'true';\r\n    const enableSignUpWithOffice365 = config.EnableSignUpWithOffice365 === 'true';\r\n    const enableLDAP = config.EnableLdap === 'true';\r\n    const enableSAML = config.EnableSaml === 'true';\r\n    const samlLoginButtonText = config.SamlLoginButtonText;\r\n    const ldapLoginFieldName = config.LdapLoginFieldName;\r\n    const siteName = config.SiteName;\r\n\r\n    let usedBefore;\r\n    if (ownProps.location.search) {\r\n        const params = new URLSearchParams(ownProps.location.search);\r\n        let token = params.get('t');\r\n        if (token == null) {\r\n            token = '';\r\n        }\r\n        usedBefore = getGlobalItem(state, token, null);\r\n    }\r\n\r\n    return {\r\n        loggedIn: Boolean(getCurrentUserId(state)),\r\n        isLicensed,\r\n        enableOpenServer,\r\n        noAccounts,\r\n        enableSignUpWithEmail,\r\n        enableSignUpWithGitLab,\r\n        enableSignUpWithGoogle,\r\n        enableSignUpWithOffice365,\r\n        enableLDAP,\r\n        enableSAML,\r\n        samlLoginButtonText,\r\n        ldapLoginFieldName,\r\n        siteName,\r\n        usedBefore,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            removeGlobalItem,\r\n            getTeamInviteInfo,\r\n            addUserToTeamFromInvite,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupController);\r\n"],"sourceRoot":""}