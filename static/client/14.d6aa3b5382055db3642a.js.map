{"version":3,"sources":["webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png","webpack:///./components/icon/next_icon.jsx","webpack:///./components/common/site_name_and_description.jsx","webpack:///./components/create_team/components/display_name.jsx","webpack:///./components/create_team/components/team_url/team_url.jsx","webpack:///./components/create_team/components/team_url/index.js","webpack:///./components/create_team/create_team.jsx","webpack:///./components/create_team/index.js"],"names":["BackButton","React","PureComponent","render","props","onClick","url","title","PropTypes","string","func","NextIcon","className","additionalClassName","SiteNameAndDescription","customDescriptionText","siteName","description","TeamSignupDisplayNamePage","constructor","e","preventDefault","displayName","ReactDOM","findDOMNode","refs","name","value","trim","setState","nameError","length","Constants","MIN_TEAMNAME_LENGTH","MAX_TEAMNAME_LENGTH","min","max","newState","state","wizard","team","display_name","cleanUpUrlable","updateParent","currentTarget","select","componentDidMount","trackEvent","nameDivClass","handleFocus","submitNext","object","TeamUrl","cleanedName","URL","urlRegex","actions","checkIfTeamExists","createTeam","test","index","RESERVED_TEAM_NAMES","indexOf","isLoading","teamSignup","JSON","parse","stringify","type","exists","data","error","history","push","DEFAULT_CHANNEL","message","urlTooltip","finishMessage","logoImage","OVERLAY_TIME_DELAY","submitBack","shape","isRequired","mapDispatchToProps","dispatch","bindActionCreators","connect","CreateTeam","currentChannel","currentTeam","match","mapStateToProps","config","getConfig","getCurrentChannel","getCurrentTeam","CustomDescriptionText","SiteName"],"mappings":"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","file":"14.d6aa3b5382055db3642a.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class BackButton extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * URL to return to\r\n         */\r\n        url: PropTypes.string,\r\n\r\n        /**\r\n         * An optional click handler that will trigger when the user clicks on the back button\r\n         */\r\n        onClick: PropTypes.func,\r\n    };\r\n\r\n    static defaultProps = {\r\n        url: '/',\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                id='back_button'\r\n                className='signup-header'\r\n            >\r\n                <Link\r\n                    onClick={this.props.onClick}\r\n                    to={this.props.url}\r\n                >\r\n                    <FormattedMessage\r\n                        id='generic_icons.back'\r\n                        defaultMessage='Back Icon'\r\n                    >\r\n                        {(title) => (\r\n                            <span\r\n                                id='back_button_icon'\r\n                                className='fa fa-1x fa-angle-left'\r\n                                title={title}\r\n                            />\r\n                        )}\r\n                    </FormattedMessage>\r\n                    <FormattedMessage\r\n                        id='web.header.back'\r\n                        defaultMessage='Back'\r\n                    />\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"files/87b80d01a017833f1357800bfca49cea.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default class NextIcon extends React.PureComponent {\r\n    static propTypes = {\r\n        additionalClassName: PropTypes.string,\r\n    };\r\n\r\n    static defaultProps = {\r\n        additionalClassName: null,\r\n    };\r\n\r\n    render() {\r\n        const className = 'fa fa-1x fa-angle-right' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\r\n        return (\r\n            <FormattedMessage\r\n                id='generic_icons.next'\r\n                defaultMessage='Next Icon'\r\n            >\r\n                {(title) => (\r\n                    <i\r\n                        className={className}\r\n                        title={title}\r\n                    />\r\n                )}\r\n            </FormattedMessage>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default class SiteNameAndDescription extends React.PureComponent {\r\n    static propTypes = {\r\n        customDescriptionText: PropTypes.string,\r\n        siteName: PropTypes.string,\r\n    };\r\n\r\n    static defaultProps = {\r\n        siteName: 'Aboutone',\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            customDescriptionText,\r\n            siteName,\r\n        } = this.props;\r\n        let description = null;\r\n        if (customDescriptionText) {\r\n            description = customDescriptionText;\r\n        } else {\r\n            description = (\r\n                <FormattedMessage\r\n                    id='web.root.signup_info'\r\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h1 id='site_name'>Aboutone</h1>\r\n                <h4\r\n                    id='site_description'\r\n                    className='color--light'\r\n                >\r\n                    {description}\r\n                </h4>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\r\nimport Constants from 'utils/constants.jsx';\r\nimport {cleanUpUrlable} from 'utils/url.jsx';\r\nimport logoImage from 'images/logo.png';\r\nimport NextIcon from 'components/icon/next_icon';\r\n\r\nexport default class TeamSignupDisplayNamePage extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Object containing team's display_name and name\r\n         */\r\n        state: PropTypes.object,\r\n\r\n        /*\r\n         * Function that updates parent component with state props\r\n         */\r\n        updateParent: PropTypes.func,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        trackEvent('signup', 'signup_team_01_name');\r\n    }\r\n\r\n    submitNext = (e) => {\r\n        e.preventDefault();\r\n\r\n        var displayName = ReactDOM.findDOMNode(this.refs.name).value.trim();\r\n        if (!displayName) {\r\n            this.setState({nameError: (\r\n                <FormattedMessage\r\n                    id='create_team.display_name.required'\r\n                    defaultMessage='This field is required'\r\n                />),\r\n            });\r\n            return;\r\n        } else if (displayName.length < Constants.MIN_TEAMNAME_LENGTH || displayName.length > Constants.MAX_TEAMNAME_LENGTH) {\r\n            this.setState({nameError: (\r\n                <FormattedMessage\r\n                    id='create_team.display_name.charLength'\r\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}. You can add a longer team description later.'\r\n                    values={{\r\n                        min: Constants.MIN_TEAMNAME_LENGTH,\r\n                        max: Constants.MAX_TEAMNAME_LENGTH,\r\n                    }}\r\n                />),\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newState = this.props.state;\r\n        newState.wizard = 'team_url';\r\n        newState.team.display_name = displayName;\r\n        newState.team.name = cleanUpUrlable(displayName);\r\n        this.props.updateParent(newState);\r\n    }\r\n\r\n    handleFocus = (e) => {\r\n        e.preventDefault();\r\n        e.currentTarget.select();\r\n    }\r\n\r\n    render() {\r\n        var nameError = null;\r\n        var nameDivClass = 'form-group';\r\n        if (this.state.nameError) {\r\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\r\n            nameDivClass += ' has-error';\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <form>\r\n                    {/* <img\r\n                        alt={'signup logo'}\r\n                        className='signup-team-logo'\r\n                        src={logoImage}\r\n                    /> */}\r\n                    <h2>\r\n                        <FormattedMessage\r\n                            id='create_team.display_name.teamName'\r\n                            defaultMessage='Team Name'\r\n                        />\r\n                    </h2>\r\n                    <div className={nameDivClass}>\r\n                        <div className='row'>\r\n                            <div className='col-sm-9'>\r\n                                <input\r\n                                    id='teamNameInput'\r\n                                    type='text'\r\n                                    ref='name'\r\n                                    className='form-control'\r\n                                    placeholder=''\r\n                                    maxLength='128'\r\n                                    defaultValue={this.props.state.team.display_name}\r\n                                    autoFocus={true}\r\n                                    onFocus={this.handleFocus}\r\n                                    spellCheck='false'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {nameError}\r\n                    </div>\r\n                    <div>\r\n                        <FormattedMessage\r\n                            id='create_team.display_name.nameHelp'\r\n                            defaultMessage='Name your team in any language. Your team name shows in menus and headings.'\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        id='teamNameNextButton'\r\n                        type='submit'\r\n                        className='btn btn-primary margin--extra'\r\n                        onClick={this.submitNext}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='create_team.display_name.next'\r\n                            defaultMessage='Next'\r\n                        />\r\n                        <NextIcon/>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Button, OverlayTrigger, Tooltip} from 'react-bootstrap';\r\nimport ReactDOM from 'react-dom';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\r\nimport Constants from 'utils/constants.jsx';\r\nimport * as URL from 'utils/url.jsx';\r\nimport logoImage from 'images/logo.png';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nexport default class TeamUrl extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Object containing team's display_name and name\r\n         */\r\n        state: PropTypes.object,\r\n\r\n        /*\r\n         * Function that updates parent component with state props\r\n         */\r\n        updateParent: PropTypes.func,\r\n\r\n        /*\r\n         * Object with redux action creators\r\n         */\r\n        actions: PropTypes.shape({\r\n\r\n            /*\r\n             * Action creator to check if a team already exists\r\n             */\r\n            checkIfTeamExists: PropTypes.func.isRequired,\r\n\r\n            /*\r\n             * Action creator to create a new team\r\n             */\r\n            createTeam: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nameError: '',\r\n            isLoading: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        trackEvent('signup', 'signup_team_02_url');\r\n    }\r\n\r\n    submitBack = (e) => {\r\n        e.preventDefault();\r\n        const newState = this.props.state;\r\n        newState.wizard = 'display_name';\r\n        this.props.updateParent(newState);\r\n    }\r\n\r\n    submitNext = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const name = ReactDOM.findDOMNode(this.refs.name).value.trim();\r\n        const cleanedName = URL.cleanUpUrlable(name);\r\n        const urlRegex = /^[a-z]+([a-z\\-0-9]+|(__)?)[a-z0-9]+$/g;\r\n        const {actions: {checkIfTeamExists, createTeam}} = this.props;\r\n\r\n        if (!name) {\r\n            this.setState({nameError: (\r\n                <FormattedMessage\r\n                    id='create_team.team_url.required'\r\n                    defaultMessage='This field is required'\r\n                />),\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (cleanedName.length < Constants.MIN_TEAMNAME_LENGTH || cleanedName.length > Constants.MAX_TEAMNAME_LENGTH) {\r\n            this.setState({nameError: (\r\n                <FormattedMessage\r\n                    id='create_team.team_url.charLength'\r\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}'\r\n                    values={{\r\n                        min: Constants.MIN_TEAMNAME_LENGTH,\r\n                        max: Constants.MAX_TEAMNAME_LENGTH,\r\n                    }}\r\n                />),\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (cleanedName !== name || !urlRegex.test(name)) {\r\n            this.setState({nameError: (\r\n                <FormattedMessage\r\n                    id='create_team.team_url.regex'\r\n                    defaultMessage=\"Use only lower case letters, numbers and dashes. Must start with a letter and can't end in a dash.\"\r\n                />),\r\n            });\r\n            return;\r\n        }\r\n\r\n        for (let index = 0; index < Constants.RESERVED_TEAM_NAMES.length; index++) {\r\n            if (cleanedName.indexOf(Constants.RESERVED_TEAM_NAMES[index]) === 0) {\r\n                this.setState({nameError: (\r\n                    <FormattedMarkdownMessage\r\n                        id='create_team.team_url.taken'\r\n                        defaultMessage='This URL [starts with a reserved word](!https://docs.mattermost.com/help/getting-started/creating-teams.html#team-url) or is unavailable. Please try another.'\r\n                    />),\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({isLoading: true});\r\n        var teamSignup = JSON.parse(JSON.stringify(this.props.state));\r\n        teamSignup.team.type = 'O';\r\n        teamSignup.team.name = name;\r\n\r\n        const {exists} = await checkIfTeamExists(name);\r\n\r\n        if (exists) {\r\n            this.setState({nameError: (\r\n                <FormattedMessage\r\n                    id='create_team.team_url.unavailable'\r\n                    defaultMessage='This URL is taken or unavailable. Please try another.'\r\n                />),\r\n            });\r\n            this.setState({isLoading: false});\r\n            return;\r\n        }\r\n\r\n        const {data, error} = await createTeam(teamSignup.team);\r\n\r\n        if (data) {\r\n            this.props.history.push('/' + data.name + '/channels/' + Constants.DEFAULT_CHANNEL);\r\n            trackEvent('signup', 'signup_team_03_complete');\r\n        } else if (error) {\r\n            this.setState({nameError: error.message});\r\n            this.setState({isLoading: false});\r\n        }\r\n    }\r\n\r\n    handleFocus = (e) => {\r\n        e.preventDefault();\r\n        e.currentTarget.select();\r\n    }\r\n\r\n    render() {\r\n        let nameError = null;\r\n        let nameDivClass = 'form-group';\r\n        if (this.state.nameError) {\r\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\r\n            nameDivClass += ' has-error';\r\n        }\r\n\r\n        const title = `${URL.getSiteURL()}/`;\r\n        const urlTooltip = (\r\n            <Tooltip id='urlTooltip'>{title}</Tooltip>\r\n        );\r\n\r\n        let finishMessage = (\r\n            <FormattedMessage\r\n                id='create_team.team_url.finish'\r\n                defaultMessage='Finish'\r\n            />\r\n        );\r\n\r\n        if (this.state.isLoading) {\r\n            finishMessage = (\r\n                <FormattedMessage\r\n                    id='create_team.team_url.creatingTeam'\r\n                    defaultMessage='Creating team...'\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <img\r\n                        alt={'signup team logo'}\r\n                        className='signup-team-logo'\r\n                        src={logoImage}\r\n                    />\r\n                    <h2>\r\n                        <FormattedMessage\r\n                            id='create_team.team_url.teamUrl'\r\n                            defaultMessage='Team URL'\r\n                        />\r\n                    </h2>\r\n                    <div className={nameDivClass}>\r\n                        <div className='row'>\r\n                            <div className='col-sm-11'>\r\n                                <div className='input-group input-group--limit'>\r\n                                    <OverlayTrigger\r\n                                        trigger={['hover', 'focus']}\r\n                                        delayShow={Constants.OVERLAY_TIME_DELAY}\r\n                                        placement='top'\r\n                                        overlay={urlTooltip}\r\n                                    >\r\n                                        <span className='input-group-addon'>\r\n                                            {title}\r\n                                        </span>\r\n                                    </OverlayTrigger>\r\n                                    <input\r\n                                        id='teamURLInput'\r\n                                        type='text'\r\n                                        ref='name'\r\n                                        className='form-control'\r\n                                        placeholder=''\r\n                                        maxLength='128'\r\n                                        defaultValue={this.props.state.team.name}\r\n                                        autoFocus={true}\r\n                                        onFocus={this.handleFocus}\r\n                                        spellCheck='false'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {nameError}\r\n                    </div>\r\n                    <p>\r\n                        <FormattedMessage\r\n                            id='create_team.team_url.webAddress'\r\n                            defaultMessage='Choose the web address of your new team:'\r\n                        />\r\n                    </p>\r\n                    <ul className='color--light'>\r\n                        <li>\r\n                            <FormattedMessage\r\n                                id='create_team.team_url.hint1'\r\n                                defaultMessage='Short and memorable is best'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <FormattedMessage\r\n                                id='create_team.team_url.hint2'\r\n                                defaultMessage='Use lowercase letters, numbers and dashes'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <FormattedMessage\r\n                                id='create_team.team_url.hint3'\r\n                                defaultMessage=\"Must start with a letter and can't end in a dash\"\r\n                            />\r\n                        </li>\r\n                    </ul>\r\n                    <div className='margin--extra'>\r\n                        <Button\r\n                            id='teamURLFinishButton'\r\n                            type='submit'\r\n                            bsStyle='primary'\r\n                            disabled={this.state.isLoading}\r\n                            onClick={this.submitNext}\r\n                        >\r\n                            {finishMessage}\r\n                        </Button>\r\n                    </div>\r\n                    <div className='margin--extra'>\r\n                        <a\r\n                            href='#'\r\n                            onClick={this.submitBack}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='create_team.team_url.back'\r\n                                defaultMessage='Back to previous step'\r\n                            />\r\n                        </a>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {checkIfTeamExists, createTeam} from 'mattermost-redux/actions/teams';\r\n\r\nimport TeamUrl from './team_url';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            checkIfTeamExists,\r\n            createTeam,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TeamUrl);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\n\r\nimport AnnouncementBar from 'components/announcement_bar';\r\nimport BackButton from 'components/common/back_button.jsx';\r\nimport DisplayName from 'components/create_team/components/display_name';\r\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\r\nimport TeamUrl from 'components/create_team/components/team_url';\r\n\r\nexport default class CreateTeam extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Object containing information on the current team, used to define BackButton's url\r\n         */\r\n        currentTeam: PropTypes.object,\r\n\r\n        /*\r\n         * Object containing information on the current selected channel, used to define BackButton's url\r\n         */\r\n        currentChannel: PropTypes.object,\r\n\r\n        /*\r\n         * String containing the custom branding's text\r\n         */\r\n        customDescriptionText: PropTypes.string,\r\n\r\n        /*\r\n         * String containing the custom branding's Site Name\r\n         */\r\n        siteName: PropTypes.string,\r\n\r\n        /*\r\n         * Object from react-router\r\n         */\r\n        match: PropTypes.shape({\r\n            url: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const state = {};\r\n        state.team = {};\r\n        state.wizard = 'display_name';\r\n        this.state = state;\r\n    }\r\n\r\n    updateParent = (state) => {\r\n        this.setState(state);\r\n        this.props.history.push('/create_team/' + state.wizard);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            currentChannel,\r\n            currentTeam,\r\n            customDescriptionText,\r\n            match,\r\n            siteName,\r\n        } = this.props;\r\n\r\n        let url = '/select_team';\r\n        if (currentTeam) {\r\n            url = `/${currentTeam.name}`;\r\n            if (currentChannel) {\r\n                url += `/channels/${currentChannel.name}`;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <AnnouncementBar/>\r\n                <BackButton url={url}/>\r\n                <div className='col-sm-12'>\r\n                    <div className='signup-team__container'>\r\n                        <SiteNameAndDescription\r\n                            customDescriptionText={customDescriptionText}\r\n                            siteName={siteName}\r\n                        />\r\n                        <div className='signup__content'>\r\n                            <Switch>\r\n                                <Route\r\n                                    path={`${this.props.match.url}/display_name`}\r\n                                    render={(props) => (\r\n                                        <DisplayName\r\n                                            state={this.state}\r\n                                            updateParent={this.updateParent}\r\n                                            {...props}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                                <Route\r\n                                    path={`${this.props.match.url}/team_url`}\r\n                                    render={(props) => (\r\n                                        <TeamUrl\r\n                                            state={this.state}\r\n                                            updateParent={this.updateParent}\r\n                                            {...props}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                                <Redirect to={`${match.url}/display_name`}/>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\r\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\r\n\r\nimport CreateTeam from './create_team';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n    const currentChannel = getCurrentChannel(state);\r\n    const currentTeam = getCurrentTeam(state);\r\n\r\n    const customDescriptionText = config.CustomDescriptionText;\r\n    const siteName = config.SiteName;\r\n\r\n    return {\r\n        currentChannel,\r\n        currentTeam,\r\n        customDescriptionText,\r\n        siteName,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateTeam);\r\n"],"sourceRoot":""}