{"version":3,"sources":["webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png","webpack:///./components/common/site_name_and_description.jsx","webpack:///./actions/views/login.js","webpack:///./components/signup/signup_email/signup_email.jsx","webpack:///./components/signup/signup_email/index.js"],"names":["BackButton","React","PureComponent","render","props","onClick","url","title","PropTypes","string","func","SiteNameAndDescription","customDescriptionText","siteName","description","login","loginId","password","mfaToken","dispatch","ignoreMfaRequiredError","UserActions","loginById","userId","promise","result","error","server_error_id","data","SignupEmail","Component","constructor","document","token","parsedData","JSON","parse","loading","email","teamName","name","inviteId","actions","getTeamInviteInfo","setState","noOpenServerError","serverError","user","trackEvent","id","then","browserHistory","push","encodeURIComponent","state","message","isSubmitting","setGlobalItem","stringify","usedBefore","redirectTo","URLSearchParams","location","search","get","GlobalActions","providedEmail","refs","value","trim","nameError","emailError","passwordError","isEmail","providedUsername","toLowerCase","usernameError","Utils","min","Constants","MIN_USERNAME_LENGTH","max","MAX_USERNAME_LENGTH","providedPassword","valid","passwordConfig","e","preventDefault","isUserValid","username","allow_marketing","createUser","handleSignupSuccess","emailHelpText","emailDivStyle","nameHelpText","nameDivStyle","passwordDivStyle","yourEmailIs","emailContainerStyle","handleSubmit","length","getTokenData","componentDidMount","setDocumentTitle","getInviteInfo","componentDidUpdate","enableSignUpWithEmail","privacyPolicyLink","termsOfServiceLink","emailSignup","renderEmailSignup","terms","TermsOfServiceLink","PrivacyPolicyLink","logoImage","object","bool","isRequired","shape","mapStateToProps","config","getConfig","EnableSignUpWithEmail","SiteName","CustomDescriptionText","getPasswordConfig","mapDispatchToProps","bindActionCreators","connect"],"mappings":"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","file":"12.829a5a3511aaaee6f876.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class BackButton extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * URL to return to\r\n         */\r\n        url: PropTypes.string,\r\n\r\n        /**\r\n         * An optional click handler that will trigger when the user clicks on the back button\r\n         */\r\n        onClick: PropTypes.func,\r\n    };\r\n\r\n    static defaultProps = {\r\n        url: '/',\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                id='back_button'\r\n                className='signup-header'\r\n            >\r\n                <Link\r\n                    onClick={this.props.onClick}\r\n                    to={this.props.url}\r\n                >\r\n                    <FormattedMessage\r\n                        id='generic_icons.back'\r\n                        defaultMessage='Back Icon'\r\n                    >\r\n                        {(title) => (\r\n                            <span\r\n                                id='back_button_icon'\r\n                                className='fa fa-1x fa-angle-left'\r\n                                title={title}\r\n                            />\r\n                        )}\r\n                    </FormattedMessage>\r\n                    <FormattedMessage\r\n                        id='web.header.back'\r\n                        defaultMessage='Back'\r\n                    />\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"files/87b80d01a017833f1357800bfca49cea.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default class SiteNameAndDescription extends React.PureComponent {\r\n    static propTypes = {\r\n        customDescriptionText: PropTypes.string,\r\n        siteName: PropTypes.string,\r\n    };\r\n\r\n    static defaultProps = {\r\n        siteName: 'Aboutone',\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            customDescriptionText,\r\n            siteName,\r\n        } = this.props;\r\n        let description = null;\r\n        if (customDescriptionText) {\r\n            description = customDescriptionText;\r\n        } else {\r\n            description = (\r\n                <FormattedMessage\r\n                    id='web.root.signup_info'\r\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h1 id='site_name'>Aboutone</h1>\r\n                <h4\r\n                    id='site_description'\r\n                    className='color--light'\r\n                >\r\n                    {description}\r\n                </h4>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport * as UserActions from 'mattermost-redux/actions/users';\r\n\r\nexport function login(loginId, password, mfaToken) {\r\n    return (dispatch) => {\r\n        return ignoreMfaRequiredError(dispatch(UserActions.login(loginId, password, mfaToken)));\r\n    };\r\n}\r\n\r\nexport function loginById(userId, password, mfaToken) {\r\n    return (dispatch) => {\r\n        return ignoreMfaRequiredError(dispatch(UserActions.loginById(userId, password, mfaToken)));\r\n    };\r\n}\r\n\r\nasync function ignoreMfaRequiredError(promise) {\r\n    let result = await promise;\r\n\r\n    if (result.error && result.error.server_error_id === 'api.context.mfa_required.app_error') {\r\n        result = {data: true};\r\n    }\r\n\r\n    return result;\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {isEmail} from 'mattermost-redux/utils/helpers';\r\n\r\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\r\nimport * as GlobalActions from 'actions/global_actions.jsx';\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport Constants from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nimport logoImage from 'images/logo.png';\r\n\r\nimport BackButton from 'components/common/back_button.jsx';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nexport default class SignupEmail extends React.Component {\r\n    static propTypes = {\r\n        location: PropTypes.object,\r\n        enableSignUpWithEmail: PropTypes.bool.isRequired,\r\n        siteName: PropTypes.string,\r\n        termsOfServiceLink: PropTypes.string,\r\n        privacyPolicyLink: PropTypes.string,\r\n        customDescriptionText: PropTypes.string,\r\n        passwordConfig: PropTypes.object,\r\n        actions: PropTypes.shape({\r\n            createUser: PropTypes.func.isRequired,\r\n            loginById: PropTypes.func.isRequired,\r\n            setGlobalItem: PropTypes.func.isRequired,\r\n            getTeamInviteInfo: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const data = (new URLSearchParams(this.props.location.search)).get('d');\r\n        const token = (new URLSearchParams(this.props.location.search)).get('t');\r\n        const inviteId = (new URLSearchParams(this.props.location.search)).get('id');\r\n\r\n        this.state = {};\r\n        if (token && token.length > 0) {\r\n            this.state = this.getTokenData(token, data);\r\n        } else if (inviteId && inviteId.length > 0) {\r\n            this.state = {\r\n                loading: true,\r\n                inviteId,\r\n            };\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        trackEvent('signup', 'signup_user_01_welcome');\r\n\r\n        this.setDocumentTitle(this.props.siteName);\r\n\r\n        const {inviteId} = this.state;\r\n        if (inviteId && inviteId.length > 0) {\r\n            this.getInviteInfo(inviteId);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.setDocumentTitle(this.props.siteName);\r\n    }\r\n\r\n    setDocumentTitle = (siteName) => {\r\n        if (siteName) {\r\n            document.title = siteName;\r\n        }\r\n    }\r\n\r\n    getTokenData = (token, data) => {\r\n        const parsedData = JSON.parse(data);\r\n\r\n        return {\r\n            loading: false,\r\n            token,\r\n            email: parsedData.email,\r\n            teamName: parsedData.name,\r\n        };\r\n    }\r\n\r\n    getInviteInfo = async (inviteId) => {\r\n        const {data, error} = await this.props.actions.getTeamInviteInfo(inviteId);\r\n        if (data) {\r\n            this.setState({\r\n                loading: false,\r\n                noOpenServerError: false,\r\n                serverError: '',\r\n                teamName: data.name,\r\n            });\r\n        } else if (error) {\r\n            this.setState({loading: false,\r\n                noOpenServerError: true,\r\n                serverError: (\r\n                    <FormattedMessage\r\n                        id='signup_user_completed.invalid_invite'\r\n                        defaultMessage='The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\r\n                    />\r\n                ),\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSignupSuccess = (user, data) => {\r\n        trackEvent('signup', 'signup_user_02_complete');\r\n\r\n        this.props.actions.loginById(data.id, user.password, '').then(({error}) => {\r\n            if (error) {\r\n                if (error.server_error_id === 'api.user.login.not_verified.app_error') {\r\n                    browserHistory.push('/should_verify_email?email=' + encodeURIComponent(user.email) + '&teamname=' + encodeURIComponent(this.state.teamName));\r\n                } else {\r\n                    this.setState({\r\n                        serverError: error.message,\r\n                        isSubmitting: false,\r\n                    });\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            if (this.state.token > 0) {\r\n                this.props.actions.setGlobalItem(this.state.token, JSON.stringify({usedBefore: true}));\r\n            }\r\n\r\n            const redirectTo = (new URLSearchParams(this.props.location.search)).get('redirect_to');\r\n            if (redirectTo) {\r\n                browserHistory.push(redirectTo);\r\n            } else {\r\n                GlobalActions.redirectUserToDefaultTeam();\r\n            }\r\n        });\r\n    }\r\n\r\n    isUserValid = () => {\r\n        const providedEmail = this.refs.email.value.trim();\r\n        if (!providedEmail) {\r\n            this.setState({\r\n                nameError: '',\r\n                emailError: (<FormattedMessage id='signup_user_completed.required'/>),\r\n                passwordError: '',\r\n                serverError: '',\r\n            });\r\n            return false;\r\n        }\r\n\r\n        if (!isEmail(providedEmail)) {\r\n            this.setState({\r\n                nameError: '',\r\n                emailError: (<FormattedMessage id='signup_user_completed.validEmail'/>),\r\n                passwordError: '',\r\n                serverError: '',\r\n            });\r\n            return false;\r\n        }\r\n\r\n        const providedUsername = this.refs.name.value.trim().toLowerCase();\r\n        if (!providedUsername) {\r\n            this.setState({\r\n                nameError: (<FormattedMessage id='signup_user_completed.required'/>),\r\n                emailError: '',\r\n                passwordError: '',\r\n                serverError: '',\r\n            });\r\n            return false;\r\n        }\r\n\r\n        const usernameError = Utils.isValidUsername(providedUsername);\r\n        if (usernameError === 'Cannot use a reserved word as a username.') {\r\n            this.setState({\r\n                nameError: (<FormattedMessage id='signup_user_completed.reserved'/>),\r\n                emailError: '',\r\n                passwordError: '',\r\n                serverError: '',\r\n            });\r\n            return false;\r\n        } else if (usernameError) {\r\n            this.setState({\r\n                nameError: (\r\n                    <FormattedMessage\r\n                        id='signup_user_completed.usernameLength'\r\n                        values={{\r\n                            min: Constants.MIN_USERNAME_LENGTH,\r\n                            max: Constants.MAX_USERNAME_LENGTH,\r\n                        }}\r\n                    />\r\n                ),\r\n                emailError: '',\r\n                passwordError: '',\r\n                serverError: '',\r\n            });\r\n            return false;\r\n        }\r\n\r\n        const providedPassword = this.refs.password.value;\r\n        const {valid, error} = Utils.isValidPassword(providedPassword, this.props.passwordConfig);\r\n        if (!valid && error) {\r\n            this.setState({\r\n                nameError: '',\r\n                emailError: '',\r\n                passwordError: error,\r\n                serverError: '',\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // bail out if a submission is already in progress\r\n        if (this.state.isSubmitting) {\r\n            return;\r\n        }\r\n\r\n        if (this.isUserValid()) {\r\n            this.setState({\r\n                nameError: '',\r\n                emailError: '',\r\n                passwordError: '',\r\n                serverError: '',\r\n                isSubmitting: true,\r\n            });\r\n\r\n            const user = {\r\n                email: this.refs.email.value.trim(),\r\n                username: this.refs.name.value.trim().toLowerCase(),\r\n                password: this.refs.password.value,\r\n                allow_marketing: true,\r\n            };\r\n\r\n            this.props.actions.createUser(user, this.state.token, this.state.inviteId).then((result) => {\r\n                if (result.error) {\r\n                    this.setState({\r\n                        serverError: result.error.message,\r\n                        isSubmitting: false,\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                this.handleSignupSuccess(user, result.data);\r\n            });\r\n        }\r\n    }\r\n\r\n    renderEmailSignup = () => {\r\n        let emailError = null;\r\n        let emailHelpText = (\r\n            <span\r\n                id='valid_email'\r\n                className='help-block'\r\n            >\r\n                <FormattedMessage\r\n                    id='signup_user_completed.emailHelp'\r\n                    defaultMessage='Valid email required for sign-up'\r\n                />\r\n            </span>\r\n        );\r\n        let emailDivStyle = 'form-group';\r\n        if (this.state.emailError) {\r\n            emailError = (<label className='control-label'>{this.state.emailError}</label>);\r\n            emailHelpText = '';\r\n            emailDivStyle += ' has-error';\r\n        }\r\n\r\n        let nameError = null;\r\n        let nameHelpText = (\r\n            <span\r\n                id='valid_name'\r\n                className='help-block'\r\n            >\r\n                <FormattedMessage\r\n                    id='signup_user_completed.userHelp'\r\n                    defaultMessage='You can use lowercase letters, numbers, periods, dashes, and underscores.'\r\n                />\r\n            </span>\r\n        );\r\n        let nameDivStyle = 'form-group';\r\n        if (this.state.nameError) {\r\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\r\n            nameHelpText = '';\r\n            nameDivStyle += ' has-error';\r\n        }\r\n\r\n        let passwordError = null;\r\n        let passwordDivStyle = 'form-group';\r\n        if (this.state.passwordError) {\r\n            passwordError = <label className='control-label'>{this.state.passwordError}</label>;\r\n            passwordDivStyle += ' has-error';\r\n        }\r\n\r\n        let yourEmailIs = null;\r\n        if (this.state.email) {\r\n            yourEmailIs = (\r\n                <FormattedMarkdownMessage\r\n                    id='signup_user_completed.emailIs'\r\n                    defaultMessage=\"Your email address is **{email}**. You'll use this address to sign in to {siteName}.\"\r\n                    values={{\r\n                        email: this.state.email,\r\n                        siteName: this.props.siteName,\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        let emailContainerStyle = 'margin--extra';\r\n        if (this.state.email) {\r\n            emailContainerStyle = 'hidden';\r\n        }\r\n\r\n        return (\r\n            <form>\r\n                <div className='inner__content'>\r\n                    <div className={emailContainerStyle}>\r\n                        <h5 id='email_label'>\r\n                            <strong>\r\n                                <FormattedMessage\r\n                                    id='signup_user_completed.whatis'\r\n                                    defaultMessage=\"What's your email address?\"\r\n                                />\r\n                            </strong>\r\n                        </h5>\r\n                        <div className={emailDivStyle}>\r\n                            <input\r\n                                id='email'\r\n                                type='email'\r\n                                ref='email'\r\n                                className='form-control'\r\n                                defaultValue={this.state.email}\r\n                                placeholder=''\r\n                                maxLength='128'\r\n                                autoFocus={true}\r\n                                spellCheck='false'\r\n                                autoCapitalize='off'\r\n                            />\r\n                            {emailError}\r\n                            {emailHelpText}\r\n                        </div>\r\n                    </div>\r\n                    {yourEmailIs}\r\n                    <div className='margin--extra'>\r\n                        <h5 id='name_label'>\r\n                            <strong>\r\n                                <FormattedMessage\r\n                                    id='signup_user_completed.chooseUser'\r\n                                    defaultMessage='Choose your username'\r\n                                />\r\n                            </strong>\r\n                        </h5>\r\n                        <div className={nameDivStyle}>\r\n                            <input\r\n                                id='name'\r\n                                type='text'\r\n                                ref='name'\r\n                                className='form-control'\r\n                                placeholder=''\r\n                                maxLength={Constants.MAX_USERNAME_LENGTH}\r\n                                spellCheck='false'\r\n                                autoCapitalize='off'\r\n                            />\r\n                            {nameError}\r\n                            {nameHelpText}\r\n                        </div>\r\n                    </div>\r\n                    <div className='margin--extra'>\r\n                        <h5 id='password_label'>\r\n                            <strong>\r\n                                <FormattedMessage\r\n                                    id='signup_user_completed.choosePwd'\r\n                                    defaultMessage='Choose your password'\r\n                                />\r\n                            </strong>\r\n                        </h5>\r\n                        <div className={passwordDivStyle}>\r\n                            <input\r\n                                id='password'\r\n                                type='password'\r\n                                ref='password'\r\n                                className='form-control'\r\n                                placeholder=''\r\n                                maxLength='128'\r\n                                spellCheck='false'\r\n                            />\r\n                            {passwordError}\r\n                        </div>\r\n                    </div>\r\n                    <p className='margin--extra'>\r\n                        <button\r\n                            id='createAccountButton'\r\n                            type='submit'\r\n                            onClick={this.handleSubmit}\r\n                            className='btn-primary btn'\r\n                            disabled={this.state.isSubmitting}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='signup_user_completed.create'\r\n                                defaultMessage='Create Account'\r\n                            />\r\n                        </button>\r\n                    </p>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            customDescriptionText,\r\n            enableSignUpWithEmail,\r\n            location,\r\n            privacyPolicyLink,\r\n            siteName,\r\n            termsOfServiceLink,\r\n        } = this.props;\r\n\r\n        let serverError = null;\r\n        if (this.state.serverError) {\r\n            serverError = (\r\n                <div\r\n                    id='existingEmailErrorContainer'\r\n                    className={'form-group has-error'}\r\n                >\r\n                    <label className='control-label'>{this.state.serverError}</label>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.loading) {\r\n            return (<LoadingScreen/>);\r\n        }\r\n\r\n        let emailSignup;\r\n        if (enableSignUpWithEmail) {\r\n            emailSignup = this.renderEmailSignup();\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n        let terms = null;\r\n        if (!this.state.noOpenServerError && emailSignup) {\r\n            terms = (\r\n                <p id='signup_agreement'>\r\n                    <FormattedMarkdownMessage\r\n                        id='create_team.agreement'\r\n                        defaultMessage='By proceeding to create your account and use {siteName}, you agree to our [Terms of Service]({TermsOfServiceLink}) and [Privacy Policy]({PrivacyPolicyLink}). If you do not agree, you cannot use {siteName}.'\r\n                        values={{\r\n                            siteName,\r\n                            TermsOfServiceLink: termsOfServiceLink,\r\n                            PrivacyPolicyLink: privacyPolicyLink,\r\n                        }}\r\n                    />\r\n                </p>\r\n            );\r\n        }\r\n\r\n        if (this.state.noOpenServerError) {\r\n            emailSignup = null;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <BackButton/>\r\n                <div\r\n                    id='signup_email_section'\r\n                    className='col-sm-12'\r\n                >\r\n                    <div className='signup-team__container padding--less'>\r\n                        <img\r\n                            alt={'signup team logo'}\r\n                            className='signup-team-logo'\r\n                            src={logoImage}\r\n                        />\r\n                        <SiteNameAndDescription\r\n                            customDescriptionText={customDescriptionText}\r\n                            siteName={siteName}\r\n                        />\r\n                        <h4\r\n                            id='create_account'\r\n                            className='color--light'\r\n                        >\r\n                            <FormattedMessage\r\n                                id='signup_user_completed.lets'\r\n                                defaultMessage=\"Let's create your account\"\r\n                            />\r\n                        </h4>\r\n                        <span\r\n                            id='signin_account'\r\n                            className='color--light'\r\n                        >\r\n                            <FormattedMessage\r\n                                id='signup_user_completed.haveAccount'\r\n                                defaultMessage='Already have an account?'\r\n                            />\r\n                            {' '}\r\n                            <Link\r\n                                id='signin_account_link'\r\n                                to={'/login' + location.search}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='signup_user_completed.signIn'\r\n                                    defaultMessage='Click here to sign in.'\r\n                                />\r\n                            </Link>\r\n                        </span>\r\n                        {emailSignup}\r\n                        {serverError}\r\n                        {terms}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {createUser} from 'mattermost-redux/actions/users';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {getTeamInviteInfo} from 'mattermost-redux/actions/teams';\r\n\r\nimport {setGlobalItem} from 'actions/storage';\r\nimport {loginById} from 'actions/views/login';\r\nimport {getPasswordConfig} from 'utils/utils.jsx';\r\n\r\nimport SignupEmail from './signup_email.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n\r\n    const enableSignUpWithEmail = config.EnableSignUpWithEmail === 'true';\r\n    const siteName = config.SiteName;\r\n    const termsOfServiceLink = config.TermsOfServiceLink;\r\n    const privacyPolicyLink = config.PrivacyPolicyLink;\r\n    const customDescriptionText = config.CustomDescriptionText;\r\n\r\n    return {\r\n        enableSignUpWithEmail,\r\n        siteName,\r\n        termsOfServiceLink,\r\n        privacyPolicyLink,\r\n        customDescriptionText,\r\n        passwordConfig: getPasswordConfig(config),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            createUser,\r\n            loginById,\r\n            setGlobalItem,\r\n            getTeamInviteInfo,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupEmail);\r\n"],"sourceRoot":""}