{"version":3,"sources":["webpack:///./components/new_user_settings/display/display.scss?f96e","webpack:///./components/new_user_settings/general/general.scss?88b3","webpack:///./components/new_user_settings/notifications/notific.scss?8462","webpack:///./components/new_user_settings/advanced/join_leave_section/join_leave_section.jsx","webpack:///./components/new_user_settings/advanced/join_leave_section/index.js","webpack:///./components/new_user_settings/advanced/user_settings_advanced.jsx","webpack:///./components/new_user_settings/advanced/index.js","webpack:///./components/new_user_settings/RadioItems.jsx","webpack:///./components/new_user_settings/display/user_settings_theme/theme_skeleton.jsx","webpack:///./components/new_user_settings/display/user_settings_theme/user_settings_theme.jsx","webpack:///./components/new_user_settings/display/user_settings_theme/index.js","webpack:///./components/new_user_settings/display/manage_timezones/manage_timezones.jsx","webpack:///./components/new_user_settings/display/manage_timezones/index.js","webpack:///./components/new_user_settings/display/manage_languages/manage_languages.jsx","webpack:///./components/new_user_settings/display/manage_languages/index.js","webpack:///./components/new_user_settings/display/new_user_settings_display.jsx","webpack:///./components/new_user_settings/display/index.js","webpack:///./components/new_user_settings/general/profile_picture/index.jsx","webpack:///./components/new_user_settings/general/new_user_settings_general.jsx","webpack:///./components/new_user_settings/general/index.js","webpack:///./components/new_user_settings/notifications/new_user_settings_notifications.jsx","webpack:///./components/new_user_settings/notifications/index.js","webpack:///./components/new_user_settings/security/mfa_section/mfa_section.jsx","webpack:///./components/new_user_settings/security/mfa_section/index.js","webpack:///./components/new_user_settings/security/user_access_token_section/user_access_token_section.jsx","webpack:///./components/new_user_settings/security/user_access_token_section/index.js","webpack:///./components/new_user_settings/security/user_settings_security.jsx","webpack:///./components/new_user_settings/security/index.js","webpack:///./components/new_user_settings/sidebar/user_settings_sidebar.jsx","webpack:///./components/new_user_settings/sidebar/index.js","webpack:///./components/new_user_settings/user_settings.jsx","webpack:///./components/new_user_settings/index.js"],"names":["JoinLeaveSection","React","PureComponent","constructor","props","e","value","currentTarget","setState","joinLeaveState","section","joinLeave","onUpdateSection","actions","currentUserId","joinLeavePreference","category","Preferences","CATEGORY_ADVANCED_SETTINGS","user_id","name","ADVANCED_FILTER_JOIN_LEAVE","state","savePreferences","render","activeSection","AdvancedSections","JOIN_LEAVE","handleOnChange","handleSubmit","isSaving","serverError","handleUpdateSection","renderOnOffLabel","prevActiveSection","PropTypes","string","isRequired","func","shape","mapStateToProps","getPreference","getCurrentUserId","mapDispatchToProps","dispatch","bindActionCreators","connect","PreReleaseFeatures","Constants","PRE_RELEASE_FEATURES","AdvancedSettingsDisplay","advancedSettings","advancedSettingsCategory","settings","send_on_ctrl_enter","sendOnCtrlEnter","code_block_ctrl_enter","codeBlockOnCtrlEnter","formatting","join_leave","preReleaseFeaturesKeys","Object","keys","enabledFeatures","as","key","feature","FeatureTogglePrefix","label","previewFeaturesEnabled","enablePreviewFeatures","showDeactivateAccountModal","preReleaseFeatures","setting","checked","String","forEach","lastIndexOf","features","push","preferences","currentUser","userId","id","Array","isArray","updateUserActive","then","error","message","data","revokeAllSessionsForUser","emitUserLoggedOutEvent","getStateFromProps","updateSection","updateSetting","bind","prevSections","advancedCtrlSend","advancedPreviewFeatures","deactivateAccount","enabled","renderCtrlEnterLabel","ctrlEnter","codeBlockCtrlEnter","renderFeatureLabel","ctrlSendSection","ctrlSendActive","inputs","formattingSection","renderFormattingSection","formattingSectionDivider","previewFeaturesSection","previewFeaturesSectionDivider","length","toggleFeature","target","saveEnabledFeatures","Utils","count","deactivateAccountSection","makeConfirmationModal","auth_service","enableUserDeactivation","handleShowDeactivateAccountModal","confirmButtonClass","deactivateMemberButton","handleDeactivateAccountSubmit","handleHideDeactivateAccountModal","closeModal","collapseModal","object","array","bool","makeMapStateToProps","getAdvancedSettingsCategory","makeGetCategory","config","getConfig","EnablePreviewFeatures","EnableUserDeactivation","get","getCurrentUser","title","options","rest","map","item","linearGradient","uuid","themeStyle","colorVal","val","themeConfig","sidebarBg","sidebarText","sidebarUnreadText","sidebarTextHoverBg","sidebarTextActiveBorder","sidebarTextActiveColor","sidebarHeaderBg","sidebarHeaderTextColor","onlineIndicator","awayIndicator","dndIndicator","mentionBj","mentionColor","centerChannelBg","centerChannelColor","newMessageSeparator","linkColor","buttonBg","buttonColor","errorTextColor","mentionHighlightBg","mentionHighlightLink","codeTheme","mentionBg","_theme","theme","handleSetTheme","split","saveTheme","applyToAllTeams","deleteTeamSpecificThemes","getThemeCategory","currentTeamId","getCurrentTeamId","getTheme","CATEGORY_THEME","showAllTeamsCheckbox","getMyTeamsCount","UserSettingsTheme","user","timePreference","CATEGORY_DISPLAY_SETTINGS","USE_MILITARY_TIME","handleChange","militaryTime","ManageTimezones","updateMe","locale","err","console","info","ManageLanguages","timezones","getTimezones","userTimezone","getUserTimezone","automaticTimezoneNotSet","useAutomaticTimezone","automaticTimezone","shouldAutoUpdateTimezone","allowCustomThemes","AllowCustomThemes","enableLinkPreviews","EnableLinkPreviews","defaultClientLocale","DefaultClientLocale","enableThemeSelection","EnableThemeSelection","enableTimezone","ExperimentalTimezone","configTeammateNameDisplay","TeammateNameDisplay","currentUserTimezone","getUserCurrentTimezone","USE_MILITARY_TIME_DEFAULT","teammateNameDisplay","NAME_NAME_FORMAT","channelDisplayMode","CHANNEL_DISPLAY_MODE","CHANNEL_DISPLAY_MODE_DEFAULT","messageDisplay","MESSAGE_DISPLAY","MESSAGE_DISPLAY_DEFAULT","collapseDisplay","COLLAPSE_DISPLAY","COLLAPSE_DISPLAY_DEFAULT","linkPreviewDisplay","LINK_PREVIEW_DISPLAY","LINK_PREVIEW_DISPLAY_DEFAULT","getSupportedTimezones","autoUpdateTimezone","NewUserSettingsDisplay","lastPictureUpdate","loadingPicture","onFileChange","handleFileChange","pictureFile","files","Client4","getProfilePictureUrl","Items","dataSource","idx","setLoadingPicture","useState","nickname","username","phone","email","position","sex","last_picture_update","department_name","job_grade","file","uploadProfileImage","sendEmailNotifications","SendEmailNotifications","requireEmailVerification","RequireEmailVerification","maxFileSize","parseInt","MaxFileSize","ldapFirstNameAttributeSet","LdapFirstNameAttributeSet","ldapLastNameAttributeSet","LdapLastNameAttributeSet","samlFirstNameAttributeSet","SamlFirstNameAttributeSet","samlLastNameAttributeSet","SamlLastNameAttributeSet","ldapNicknameAttributeSet","LdapNicknameAttributeSet","samlNicknameAttributeSet","SamlNicknameAttributeSet","samlPositionAttributeSet","SamlPositionAttributeSet","ldapPositionAttributeSet","LdapPositionAttributeSet","logError","clearErrors","getMe","sendVerificationEmail","setDefaultProfileImage","NewUserSettingsGeneralTab","dateDormat","unreadOpts","desktop","comments","desktop_sound","start_time","end_time","unread","meeting_notify_status","notify_props","useReducer","o","n","isEnable","meetingNotifyStatus","type","d","result","handleCheckbox","handleTimePicker","moment","format","handlePeriod","siteName","SiteName","sendPushNotifications","SendPushNotifications","enableAutoResponder","ExperimentalEnableAutomaticReplies","status","getStatusForUserId","setStatus","NewUserSettingsNotifications","SECTION_MFA","MfaSection","preventDefault","browserHistory","deactivateMfa","mfaEnforced","mfaActive","content","buttonText","removeMfa","setupMfa","renderTitle","mfaAvailable","active","renderDescription","renderContent","renderHelpText","license","getLicense","mfaLicensed","IsLicensed","MFA","mfaEnabled","EnableMultifactorAuthentication","EnforceMultifactorAuthentication","mfa_active","LDAP_SERVICE","SECTION_TOKENS","TOKEN_CREATING","TOKEN_CREATED","TOKEN_NOT_CREATING","UserAccessTokenSection","Component","tokenCreationState","saving","handleCancelConfirm","description","refs","newtokendescription","tokenError","setRequireConfirm","confirmCopyToken","createUserAccessToken","newToken","confirmAction","showConfirmModal","confirmTitle","confirmMessage","token","confirmButton","confirmComplete","confirmHideCancel","UserUtils","roles","handleCreateToken","trackEvent","KeyCodes","ENTER","confirmCreateToken","tokenId","userAccessTokens","revokeToken","revokeUserAccessToken","enableUserAccessToken","disableUserAccessToken","componentDidMount","clearUserAccessTokens","getUserAccessTokensForUser","UNSAFE_componentWillReceiveProps","nextProps","tokenListClass","describe","tokenList","values","activeLink","activeStatus","is_active","deactivateToken","activateToken","confirmRevokeToken","noTokenText","extraInfo","isMobile","newTokenSection","saveTokenKeyPress","stopCreatingToken","startCreatingToken","entities","users","myUserAccessTokens","SECTION_PASSWORD","SECTION_SIGNIN","SECTION_APPS","SecurityTab","getAuthorizedOAuthApps","authorizedApps","currentPassword","newPassword","confirmPassword","passwordError","valid","passwordConfig","defaultState","assign","getDefaultState","savingPassword","updateUserPassword","appId","getAttribute","deauthorizeOAuthApp","filter","app","submit","submitPassword","updateCurrentPassword","updateNewPassword","updateConfirmPassword","GITLAB_SERVICE","SAML_SERVICE","GOOGLE_SERVICE","OFFICE365_SERVICE","Date","last_password_update","date","time","emailOption","gitlabOption","googleOption","office365Option","ldapOption","samlOption","enableSignUpWithGitLab","encodeURIComponent","enableSignUpWithGoogle","enableSignUpWithOffice365","enableLdap","enableSaml","enableSignUpWithEmail","link","apps","homepage","deauthorizeApp","icon_url","icon50","wrapperClass","helpText","authService","enableOAuthServiceProvider","loadAuthorizedOAuthApps","passwordSection","createPasswordSection","numMethods","signInSection","experimentalEnableAuthenticationTransfer","createSignInSection","oauthSection","createOAuthAppsSection","tokensSection","canUseAccessTokens","ariaLabel","AccessHistoryModal","ActivityLogModal","ownProps","tokensEnabled","EnableUserAccessTokens","userHasTokenRole","EnableOAuthServiceProvider","EnableSignUpWithEmail","EnableSignUpWithGitLab","EnableSignUpWithGoogle","EnableLdap","EnableSaml","EnableSignUpWithOffice365","ExperimentalEnableAuthenticationTransfer","getPasswordConfig","getBool","UserSettingsSidebar","closeUnusedDirectMessages","channelSwitcherOption","sidebarPreference","grouping","sorting","unreadsAtTop","favoriteAtTop","close_unused_direct_messages","channel_switcher_section","field","updatedSidebarSettings","unreads_at_top","favorite_at_top","CATEGORY_SIDEBAR_SETTINGS","JSON","stringify","trackSettingChangeIfNecessary","contents","renderAutoCloseDMLabel","messages","sortingId","sortingDefaultMessage","t","atTopId","atTopDefaultMessage","toString","renderOrganizationLabel","channelSwitcherSectionDescId","channelSwitcherSectionDescDefault","isMac","helpChannelSwitcherText","renderChannelSwitcherLabel","showUnusedOption","showChannelOrganization","formatMessage","context","intl","channelOrganizationSection","renderChannelOrganizationSection","autoCloseDMSection","renderAutoCloseDMSection","channelSwitcherSection","renderChannelSwitcherSection","defaultMessage","intlShape","getSidebarPreferences","ExperimentalChannelOrganization","CloseUnusedDirectMessages","UserSettings","activeTab","updateTab","setEnforceFocus"],"mappings":";;;;;AAAA,uC;;;;;;;ACAA,uC;;;;;;;ACAA,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEe,MAAMA,mCAAN,SAA+BC,eAAK,CAACC,aAArC,CAAmD;AAa9DC,aAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,4CAQDC,CAAD,IAAO;AACpB,YAAMC,KAAK,GAAGD,CAAC,CAACE,aAAF,CAAgBD,KAA9B;AAEA,WAAKE,QAAL,CAAc;AAACC,sBAAc,EAAEH;AAAjB,OAAd;AACH,KAZkB;;AAAA,iDAcII,OAAD,IAAa;AAC/B,UAAI,CAACA,OAAL,EAAc;AACV,aAAKF,QAAL,CAAc;AAACC,wBAAc,EAAE,KAAKL,KAAL,CAAWO;AAA5B,SAAd;AACH;;AAED,WAAKP,KAAL,CAAWQ,eAAX,CAA2BF,OAA3B;AACH,KApBkB;;AAAA,0CAsBJ,MAAM;AACjB,YAAM;AAACG,eAAD;AAAUC,qBAAV;AAAyBF;AAAzB,UAA4C,KAAKR,KAAvD;AACA,YAAMW,mBAAmB,GAAG;AAACC,gBAAQ,EAAEC,yCAAW,CAACC,0BAAvB;AAAmDC,eAAO,EAAEL,aAA5D;AAA2EM,YAAI,EAAEH,yCAAW,CAACI,0BAA7F;AAAyHf,aAAK,EAAE,KAAKgB,KAAL,CAAWb;AAA3I,OAA5B;AACAI,aAAO,CAACU,eAAR,CAAwBT,aAAxB,EAAuC,CAACC,mBAAD,CAAvC;AAEAH,qBAAe;AAClB,KA5BkB;;AAGf,SAAKU,KAAL,GAAa;AACTb,oBAAc,EAAEL,KAAK,CAACO;AADb,KAAb;AAGH;;AAwBDa,QAAM,GAAG;AACL,UAAM;AAACf;AAAD,QAAmB,KAAKa,KAA9B;;AACA,QAAI,KAAKlB,KAAL,CAAWqB,aAAX,KAA6BC,qCAAgB,CAACC,UAAlD,EAA8D;AAC1D,aACI,8BAAC,mCAAD;AACI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,sCADP;AAEI,wBAAc,EAAC;AAFnB,UAFR;AAOI,cAAM,EAAE,CACJ;AAAK,aAAG,EAAC;AAAT,WACI;AAAK,mBAAS,EAAC;AAAf,WACI,6CACI;AACI,YAAE,EAAC,aADP;AAEI,cAAI,EAAC,OAFT;AAGI,eAAK,EAAE,MAHX;AAII,cAAI,EAAED,qCAAgB,CAACC,UAJ3B;AAKI,iBAAO,EAAElB,cAAc,KAAK,MALhC;AAMI,kBAAQ,EAAE,KAAKmB;AANnB,UADJ,EASI,8BAAC,oCAAD;AACI,YAAE,EAAC,0BADP;AAEI,wBAAc,EAAC;AAFnB,UATJ,CADJ,EAeI,yCAfJ,CADJ,EAkBI;AAAK,mBAAS,EAAC;AAAf,WACI,6CACI;AACI,YAAE,EAAC,cADP;AAEI,cAAI,EAAC,OAFT;AAGI,eAAK,EAAE,OAHX;AAII,cAAI,EAAEF,qCAAgB,CAACC,UAJ3B;AAKI,iBAAO,EAAElB,cAAc,KAAK,OALhC;AAMI,kBAAQ,EAAE,KAAKmB;AANnB,UADJ,EASI,8BAAC,oCAAD;AACI,YAAE,EAAC,2BADP;AAEI,wBAAc,EAAC;AAFnB,UATJ,CADJ,EAeI,yCAfJ,CAlBJ,EAmCI,2CACI,yCADJ,EAEI,8BAAC,oCAAD;AACI,YAAE,EAAC,qCADP;AAEI,wBAAc,EAAC;AAFnB,UAFJ,CAnCJ,CADI,CAPZ;AAoDI,eAAO,EAAEF,qCAAgB,CAACC,UApD9B;AAqDI,cAAM,EAAE,KAAKE,YArDjB;AAsDI,cAAM,EAAE,KAAKP,KAAL,CAAWQ,QAtDvB;AAuDI,oBAAY,EAAE,KAAKR,KAAL,CAAWS,WAvD7B;AAwDI,qBAAa,EAAE,KAAKC;AAxDxB,QADJ;AA4DH;;AAED,WACI,8BAAC,mCAAD;AACI,WAAK,EACD,8BAAC,oCAAD;AACI,UAAE,EAAC,sCADP;AAEI,sBAAc,EAAC;AAFnB,QAFR;AAOI,cAAQ,EAAE,KAAK5B,KAAL,CAAW6B,gBAAX,CAA4BxB,cAA5B,CAPd;AAQI,aAAO,EAAE,KAAKL,KAAL,CAAW8B,iBAAX,KAAiCR,qCAAgB,CAACC,UAR/D;AASI,aAAO,EAAED,qCAAgB,CAACC,UAT9B;AAUI,mBAAa,EAAE,KAAKK;AAVxB,MADJ;AAcH;;AA1H6D;;gBAA7ChC,mC,eACE;AACfyB,eAAa,EAAEU,oBAAS,CAACC,MADV;AAEftB,eAAa,EAAEqB,oBAAS,CAACC,MAAV,CAAiBC,UAFjB;AAGf1B,WAAS,EAAEwB,oBAAS,CAACC,MAHN;AAIfxB,iBAAe,EAAEuB,oBAAS,CAACG,IAAV,CAAeD,UAJjB;AAKfH,mBAAiB,EAAEC,oBAAS,CAACC,MALd;AAMfH,kBAAgB,EAAEE,oBAAS,CAACG,IAAV,CAAeD,UANlB;AAOfxB,SAAO,EAAEsB,oBAAS,CAACI,KAAV,CAAgB;AACrBhB,mBAAe,EAAEY,oBAAS,CAACG,IAAV,CAAeD;AADX,GAAhB,EAENA;AATY,C;;ACfvB;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA,SAASG,eAAT,CAAyBlB,KAAzB,EAAgC;AAC5B,QAAMX,SAAS,GAAG8B,mCAAa,CAC3BnB,KAD2B,EAE3BL,yCAAW,CAACC,0BAFe,EAG3BD,yCAAW,CAACI,0BAHe,EAI3B,MAJ2B,CAA/B;AAOA,SAAO;AACHP,iBAAa,EAAE4B,iCAAgB,CAACpB,KAAD,CAD5B;AAEHX;AAFG,GAAP;AAIH;;AAED,SAASgC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH/B,WAAO,EAAEgC,mCAAkB,CAAC;AACxBtB,6DAAeA;AADS,KAAD,EAExBqB,QAFwB;AADxB,GAAP;AAKH;;AAEcE,4EAAO,CAACN,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C3C,mCAA7C,CAAf,E;;;;ACnCA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAM+C,kBAAkB,GAAGC,4BAAS,CAACC,oBAArC;AAEe,MAAMC,8CAAN,SAAsCjD,eAAK,CAACC,aAA5C,CAA0D;AAsBrEC,aAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,qEAcC,MAAM;AACtB,YAAM+C,gBAAgB,GAAG,KAAK/C,KAAL,CAAWgD,wBAApC;AACA,YAAMC,QAAQ,GAAG;AACbC,0BAAkB,EAAE,KAAKlD,KAAL,CAAWmD,eADlB;AAEbC,6BAAqB,EAAE,KAAKpD,KAAL,CAAWqD,oBAFrB;AAGbC,kBAAU,EAAE,KAAKtD,KAAL,CAAWsD,UAHV;AAIbC,kBAAU,EAAE,KAAKvD,KAAL,CAAWO;AAJV,OAAjB;AAOA,YAAMiD,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYf,kBAAZ,CAA/B;AACA,UAAIgB,eAAe,GAAG,CAAtB;;AACA,WAAK,MAAMC,EAAX,IAAiBb,gBAAjB,EAAmC;AAC/B,aAAK,MAAMc,GAAX,IAAkBL,sBAAlB,EAA0C;AACtC,gBAAMM,OAAO,GAAGnB,kBAAkB,CAACkB,GAAD,CAAlC;;AAEA,cAAID,EAAE,CAAC5C,IAAH,KAAY4B,4BAAS,CAACmB,mBAAV,GAAgCD,OAAO,CAACE,KAAxD,EAA+D;AAC3Df,oBAAQ,CAACW,EAAE,CAAC5C,IAAJ,CAAR,GAAoB4C,EAAE,CAAC1D,KAAvB;;AAEA,gBAAI0D,EAAE,CAAC1D,KAAH,KAAa,MAAjB,EAAyB;AACrByD,6BAAe,IAAI,CAAnB;AACH;AACJ;AACJ;AACJ;;AAED,YAAMjC,QAAQ,GAAG,KAAjB;AAEA,YAAMuC,sBAAsB,GAAG,KAAKjE,KAAL,CAAWkE,qBAA1C;AACA,YAAMC,0BAA0B,GAAG,KAAnC;AAEA,aAAO;AACHC,0BAAkB,EAAEzB,kBADjB;AAEHM,gBAFG;AAGHO,8BAHG;AAIHG,uBAJG;AAKHjC,gBALG;AAMHuC,8BANG;AAOHE;AAPG,OAAP;AASH,KArDkB;;AAAA,iEAuDH,CAACE,OAAD,EAAUnE,KAAV,KAAoB;AAChC,YAAM+C,QAAQ,GAAG,KAAK/B,KAAL,CAAW+B,QAA5B;AACAA,cAAQ,CAACoB,OAAD,CAAR,GAAoBnE,KAApB;AACA,WAAKE,QAAL,CAAc6C,QAAd;AACH,KA3DkB;;AAAA,iEA6DH,CAACa,OAAD,EAAUQ,OAAV,KAAsB;AAClC,YAAMrB,QAAQ,GAAG,KAAK/B,KAAL,CAAW+B,QAA5B;AACAA,cAAQ,CAACL,4BAAS,CAACmB,mBAAV,GAAgCD,OAAjC,CAAR,GAAoDS,MAAM,CAACD,OAAD,CAA1D;AAEA,UAAIX,eAAe,GAAG,CAAtB;AACAF,YAAM,CAACC,IAAP,CAAY,KAAKxC,KAAL,CAAW+B,QAAvB,EAAiCuB,OAAjC,CAA0CH,OAAD,IAAa;AAClD,YAAIA,OAAO,CAACI,WAAR,CAAoB7B,4BAAS,CAACmB,mBAA9B,MAAuD,CAAvD,IAA4D,KAAK7C,KAAL,CAAW+B,QAAX,CAAoBoB,OAApB,MAAiC,MAAjG,EAAyG;AACrGV,yBAAe;AAClB;AACJ,OAJD;AAMA,WAAKvD,QAAL,CAAc;AAAC6C,gBAAD;AAAWU;AAAX,OAAd;AACH,KAzEkB;;AAAA,uEA2EG,MAAM;AACxB,YAAMe,QAAQ,GAAG,EAAjB;AACAjB,YAAM,CAACC,IAAP,CAAY,KAAKxC,KAAL,CAAW+B,QAAvB,EAAiCuB,OAAjC,CAA0CH,OAAD,IAAa;AAClD,YAAIA,OAAO,CAACI,WAAR,CAAoB7B,4BAAS,CAACmB,mBAA9B,MAAuD,CAA3D,EAA8D;AAC1DW,kBAAQ,CAACC,IAAT,CAAcN,OAAd;AACH;AACJ,OAJD;AAMA,WAAK5C,YAAL,CAAkBiD,QAAlB;AACH,KApFkB;;AAAA,gEAsFJ,MAAOzB,QAAP,IAAoB;AAC/B,YAAM2B,WAAW,GAAG,EAApB;AACA,YAAM;AAACnE,eAAD;AAAUoE;AAAV,UAAyB,KAAK7E,KAApC;AACA,YAAM8E,MAAM,GAAGD,WAAW,CAACE,EAA3B,CAH+B,CAK/B;;AACA,OAACC,KAAK,CAACC,OAAN,CAAchC,QAAd,IAA0BA,QAA1B,GAAqC,CAACA,QAAD,CAAtC,EAAkDuB,OAAlD,CAA2DH,OAAD,IAAa;AACnEO,mBAAW,CAACD,IAAZ,CAAiB;AACb5D,iBAAO,EAAE+D,MADI;AAEblE,kBAAQ,EAAEgC,4BAAS,CAAC/B,WAAV,CAAsBC,0BAFnB;AAGbE,cAAI,EAAEqD,OAHO;AAIbnE,eAAK,EAAE,KAAKgB,KAAL,CAAW+B,QAAX,CAAoBoB,OAApB;AAJM,SAAjB;AAMH,OAPD;AASA,WAAKjE,QAAL,CAAc;AAACsB,gBAAQ,EAAE;AAAX,OAAd;AACA,YAAMjB,OAAO,CAACU,eAAR,CAAwB2D,MAAxB,EAAgCF,WAAhC,CAAN;AAEA,WAAKhD,mBAAL,CAAyB,EAAzB;AACH,KAzGkB;;AAAA,iFA2Ga,YAAY;AACxC,YAAMkD,MAAM,GAAG,KAAK9E,KAAL,CAAW6E,WAAX,CAAuBE,EAAtC;AAEA,WAAK3E,QAAL,CAAc;AAACsB,gBAAQ,EAAE;AAAX,OAAd;AAEA,WAAK1B,KAAL,CAAWS,OAAX,CAAmByE,gBAAnB,CAAoCJ,MAApC,EAA4C,KAA5C,EACIK,IADJ,CACS,CAAC;AAACC;AAAD,OAAD,KAAa;AACd,YAAIA,KAAJ,EAAW;AACP,eAAKhF,QAAL,CAAc;AAACuB,uBAAW,EAAEyD,KAAK,CAACC;AAApB,WAAd;AACH;AACJ,OALL;AAOA,YAAM;AAACC,YAAD;AAAOF;AAAP,UAAgB,MAAM,KAAKpF,KAAL,CAAWS,OAAX,CAAmB8E,wBAAnB,CAA4CT,MAA5C,CAA5B;;AACA,UAAIQ,IAAJ,EAAU;AACNE,gEAAsB;AACzB,OAFD,MAEO,IAAIJ,KAAJ,EAAW;AACd,aAAKhF,QAAL,CAAc;AAACuB,qBAAW,EAAEyD,KAAK,CAACC;AAApB,SAAd;AACH;AACJ,KA7HkB;;AAAA,oFA+HgB,MAAM;AACrC,WAAKjF,QAAL,CAAc;AACV+D,kCAA0B,EAAE;AADlB,OAAd;AAGH,KAnIkB;;AAAA,oFAqIgB,MAAM;AACrC,WAAK/D,QAAL,CAAc;AACV+D,kCAA0B,EAAE;AADlB,OAAd;AAGH,KAzIkB;;AAAA,uEA2II7D,OAAD,IAAa;AAC/B,UAAI,CAACA,OAAL,EAAc;AACV,aAAKF,QAAL,CAAc,KAAKqF,iBAAL,EAAd;AACH;;AACD,WAAKrF,QAAL,CAAc;AAACsB,gBAAQ,EAAE;AAAX,OAAd;AACA,WAAK1B,KAAL,CAAW0F,aAAX,CAAyBpF,OAAzB;AACH,KAjJkB;;AAAA,2EA+LO,MAAM;AAC5B,UAAI,KAAKN,KAAL,CAAWqB,aAAX,KAA6B,YAAjC,EAA+C;AAC3C,eACI,8BAAC,mCAAD;AACI,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,uCADP;AAEI,0BAAc,EAAC;AAFnB,YAFR;AAOI,gBAAM,EAAE,CACJ;AAAK,eAAG,EAAC;AAAT,aACI;AAAK,qBAAS,EAAC;AAAf,aACI,6CACI;AACI,cAAE,EAAC,kBADP;AAEI,gBAAI,EAAC,OAFT;AAGI,gBAAI,EAAC,YAHT;AAII,mBAAO,EAAE,KAAKH,KAAL,CAAW+B,QAAX,CAAoBK,UAApB,KAAmC,OAJhD;AAKI,oBAAQ,EAAE,KAAKqC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8B,YAA9B,EAA4C,MAA5C;AALd,YADJ,EAQI,8BAAC,oCAAD;AACI,cAAE,EAAC,0BADP;AAEI,0BAAc,EAAC;AAFnB,YARJ,CADJ,EAcI,yCAdJ,CADJ,EAiBI;AAAK,qBAAS,EAAC;AAAf,aACI,6CACI;AACI,cAAE,EAAC,mBADP;AAEI,gBAAI,EAAC,OAFT;AAGI,gBAAI,EAAC,YAHT;AAII,mBAAO,EAAE,KAAK1E,KAAL,CAAW+B,QAAX,CAAoBK,UAApB,KAAmC,OAJhD;AAKI,oBAAQ,EAAE,KAAKqC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8B,YAA9B,EAA4C,OAA5C;AALd,YADJ,EAQI,8BAAC,oCAAD;AACI,cAAE,EAAC,2BADP;AAEI,0BAAc,EAAC;AAFnB,YARJ,CADJ,EAcI,yCAdJ,CAjBJ,EAiCI,2CACI,yCADJ,EAEI,8BAAC,oCAAD;AACI,cAAE,EAAC,sCADP;AAEI,0BAAc,EAAC;AAFnB,YAFJ,CAjCJ,CADI,CAPZ;AAkDI,iBAAO,EAAE,YAlDb;AAmDI,gBAAM,EAAE,KAAKnE,YAnDjB;AAoDI,gBAAM,EAAE,KAAKP,KAAL,CAAWQ,QApDvB;AAqDI,sBAAY,EAAE,KAAKR,KAAL,CAAWS,WArD7B;AAsDI,uBAAa,EAAE,KAAKC;AAtDxB,UADJ;AA0DH;;AAED,aACI,8BAAC,mCAAD;AACI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,uCADP;AAEI,wBAAc,EAAC;AAFnB,UAFR;AAOI,gBAAQ,EAAE,KAAKC,gBAAL,CAAsB,KAAKX,KAAL,CAAW+B,QAAX,CAAoBK,UAA1C,CAPd;AAQI,eAAO,EAAE,KAAKtD,KAAL,CAAW8B,iBAAX,KAAiC,KAAK+D,YAAL,CAAkBvC,UARhE;AASI,eAAO,EAAE,YATb;AAUI,qBAAa,EAAE,KAAK1B;AAVxB,QADJ;AAcH,KA3QkB;;AAGf,SAAKV,KAAL,GAAa,KAAKuE,iBAAL,EAAb;AAEA,SAAKI,YAAL,GAAoB;AAChBC,sBAAgB,EAAE,kBADF;AACsB;AACtCxC,gBAAU,EAAE,kBAFI;AAGhBC,gBAAU,EAAE,YAHI;AAIhBwC,6BAAuB,EAAE,YAJT;AAKhBC,uBAAiB,EAAE;AALH,KAApB;AAOH;;AAuIDnE,kBAAgB,CAACoE,OAAD,EAAU;AACtB,QAAIA,OAAO,KAAK,OAAhB,EAAyB;AACrB,aACI,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH;;AAED,WACI,8BAAC,oCAAD;AACI,QAAE,EAAC,0BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ;AAMH;;AAEDC,sBAAoB,GAAG;AACnB,UAAMC,SAAS,GAAG,KAAKjF,KAAL,CAAW+B,QAAX,CAAoBC,kBAAtC;AACA,UAAMkD,kBAAkB,GAAG,KAAKlF,KAAL,CAAW+B,QAAX,CAAoBG,qBAA/C;;AACA,QAAI+C,SAAS,KAAK,OAAd,IAAyBC,kBAAkB,KAAK,OAApD,EAA6D;AACzD,aACI,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH,KAPD,MAOO,IAAID,SAAS,KAAK,MAAd,IAAwBC,kBAAkB,KAAK,MAAnD,EAA2D;AAC9D,aACI,8BAAC,oCAAD;AACI,UAAE,EAAC,wCADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH;;AACD,WACI,8BAAC,oCAAD;AACI,QAAE,EAAC,iCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ;AAMH;;AAgFDC,oBAAkB,CAACvC,OAAD,EAAU;AACxB,YAAQA,OAAR;AACA,WAAK,kBAAL;AACI,eACI,8BAAC,oCAAD;AACI,YAAE,EAAC,wCADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;;AAMJ;AACI,eAAO,IAAP;AATJ;AAWH;;AAED1C,QAAM,GAAG;AACL,UAAMO,WAAW,GAAG,KAAKT,KAAL,CAAWS,WAAX,IAA0B,IAA9C;AACA,QAAI2E,eAAJ;;AAEA,QAAI,KAAKtG,KAAL,CAAWqB,aAAX,KAA6B,kBAAjC,EAAqD;AACjD,YAAMkF,cAAc,GAAG,CACnB,KAAKrF,KAAL,CAAW+B,QAAX,CAAoBC,kBAApB,KAA2C,MADxB,EAEnB,KAAKhC,KAAL,CAAW+B,QAAX,CAAoBC,kBAApB,KAA2C,OAA3C,IAAsD,KAAKhC,KAAL,CAAW+B,QAAX,CAAoBG,qBAApB,KAA8C,MAFjF,EAGnB,KAAKlC,KAAL,CAAW+B,QAAX,CAAoBC,kBAApB,KAA2C,OAA3C,IAAsD,KAAKhC,KAAL,CAAW+B,QAAX,CAAoBG,qBAApB,KAA8C,OAHjF,CAAvB;AAMA,YAAMoD,MAAM,GAAG,CACX;AAAK,WAAG,EAAC;AAAT,SACI;AAAK,iBAAS,EAAC;AAAf,SACI,6CACI;AACI,UAAE,EAAC,YADP;AAEI,YAAI,EAAC,OAFT;AAGI,YAAI,EAAC,iBAHT;AAII,eAAO,EAAED,cAAc,CAAC,CAAD,CAJ3B;AAKI,gBAAQ,EAAE,MAAM;AACZ,eAAKZ,aAAL,CAAmB,oBAAnB,EAAyC,MAAzC;AACA,eAAKA,aAAL,CAAmB,uBAAnB,EAA4C,MAA5C;AACH;AARL,QADJ,EAWI,8BAAC,oCAAD;AACI,UAAE,EAAC,wCADP;AAEI,sBAAc,EAAC;AAFnB,QAXJ,CADJ,EAiBI,yCAjBJ,CADJ,EAoBI;AAAK,iBAAS,EAAC;AAAf,SACI,6CACI;AACI,UAAE,EAAC,mBADP;AAEI,YAAI,EAAC,OAFT;AAGI,YAAI,EAAC,iBAHT;AAII,eAAO,EAAEY,cAAc,CAAC,CAAD,CAJ3B;AAKI,gBAAQ,EAAE,MAAM;AACZ,eAAKZ,aAAL,CAAmB,oBAAnB,EAAyC,OAAzC;AACA,eAAKA,aAAL,CAAmB,uBAAnB,EAA4C,MAA5C;AACH;AARL,QADJ,EAWI,8BAAC,oCAAD;AACI,UAAE,EAAC,iCADP;AAEI,sBAAc,EAAC;AAFnB,QAXJ,CADJ,EAiBI,yCAjBJ,CApBJ,EAuCI;AAAK,iBAAS,EAAC;AAAf,SACI,6CACI;AACI,UAAE,EAAC,aADP;AAEI,YAAI,EAAC,OAFT;AAGI,YAAI,EAAC,iBAHT;AAII,eAAO,EAAEY,cAAc,CAAC,CAAD,CAJ3B;AAKI,gBAAQ,EAAE,MAAM;AACZ,eAAKZ,aAAL,CAAmB,oBAAnB,EAAyC,OAAzC;AACA,eAAKA,aAAL,CAAmB,uBAAnB,EAA4C,OAA5C;AACH;AARL,QADJ,EAWI,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC;AAFnB,QAXJ,CADJ,EAiBI,yCAjBJ,CAvCJ,EA0DI,2CACI,yCADJ,EAEI,8BAAC,oCAAD;AACI,UAAE,EAAC,gCADP;AAEI,sBAAc,EAAC;AAFnB,QAFJ,CA1DJ,CADW,CAAf;AAoEAW,qBAAe,GACX,8BAAC,mCAAD;AACI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,iCADP;AAEI,wBAAc,EAAC;AAFnB,UAFR;AAOI,cAAM,EAAEE,MAPZ;AAQI,cAAM,EAAE,KAAK/E,YAAL,CAAkBmE,IAAlB,CAAuB,IAAvB,EAA6B,CAAC,oBAAD,EAAuB,uBAAvB,CAA7B,CARZ;AASI,cAAM,EAAE,KAAK1E,KAAL,CAAWQ,QATvB;AAUI,oBAAY,EAAEC,WAVlB;AAWI,qBAAa,EAAE,KAAKC;AAXxB,QADJ;AAeH,KA1FD,MA0FO;AACH0E,qBAAe,GACX,8BAAC,mCAAD;AACI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,iCADP;AAEI,wBAAc,EAAC;AAFnB,UAFR;AAOI,gBAAQ,EAAE,KAAKJ,oBAAL,EAPd;AAQI,eAAO,EAAE,KAAKlG,KAAL,CAAW8B,iBAAX,KAAiC,KAAK+D,YAAL,CAAkBC,gBARhE;AASI,eAAO,EAAE,kBATb;AAUI,qBAAa,EAAE,KAAKlE;AAVxB,QADJ;AAcH;;AAED,UAAM6E,iBAAiB,GAAG,KAAKC,uBAAL,EAA1B;AACA,QAAIC,wBAAwB,GAAG,IAA/B;;AACA,QAAIF,iBAAJ,EAAuB;AACnBE,8BAAwB,GAAG;AAAK,iBAAS,EAAC;AAAf,QAA3B;AACH;;AAED,QAAIC,sBAAJ;AACA,QAAIC,6BAAJ;;AACA,QAAI,KAAK3F,KAAL,CAAW+C,sBAAX,IAAqC,KAAK/C,KAAL,CAAWsC,sBAAX,CAAkCsD,MAAlC,GAA2C,CAApF,EAAuF;AACnFD,mCAA6B,GACzB;AAAK,iBAAS,EAAC;AAAf,QADJ;;AAIA,UAAI,KAAK7G,KAAL,CAAWqB,aAAX,KAA6B,yBAAjC,EAA4D;AACxD,cAAMmF,MAAM,GAAG,EAAf;AAEA,aAAKtF,KAAL,CAAWsC,sBAAX,CAAkCgB,OAAlC,CAA2CX,GAAD,IAAS;AAC/C,gBAAMC,OAAO,GAAG,KAAK5C,KAAL,CAAWkD,kBAAX,CAA8BP,GAA9B,CAAhB;AACA2C,gBAAM,CAAC7B,IAAP,CACI;AAAK,eAAG,EAAE,6BAA6Bb,OAAO,CAACE;AAA/C,aACI;AAAK,qBAAS,EAAC;AAAf,aACI,6CACI;AACI,cAAE,EAAE,4BAA4BF,OAAO,CAACE,KAD5C;AAEI,gBAAI,EAAC,UAFT;AAGI,mBAAO,EAAE,KAAK9C,KAAL,CAAW+B,QAAX,CAAoBL,4BAAS,CAACmB,mBAAV,GAAgCD,OAAO,CAACE,KAA5D,MAAuE,MAHpF;AAII,oBAAQ,EAAG/D,CAAD,IAAO;AACb,mBAAK8G,aAAL,CAAmBjD,OAAO,CAACE,KAA3B,EAAkC/D,CAAC,CAAC+G,MAAF,CAAS1C,OAA3C;AACH;AANL,YADJ,EASK,KAAK+B,kBAAL,CAAwBxC,GAAxB,CATL,CADJ,CADJ,CADJ;AAiBH,SAnBD;AAqBA2C,cAAM,CAAC7B,IAAP,CACI;AAAK,aAAG,EAAC;AAAT,WACI,yCADJ,EAEI,8BAAC,oCAAD;AACI,YAAE,EAAC,sCADP;AAEI,wBAAc,EAAC;AAFnB,UAFJ,CADJ;AASAiC,8BAAsB,GAClB,8BAAC,mCAAD;AACI,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,uCADP;AAEI,0BAAc,EAAC;AAFnB,YAFR;AAOI,gBAAM,EAAEJ,MAPZ;AAQI,gBAAM,EAAE,KAAKS,mBARjB;AASI,gBAAM,EAAE,KAAK/F,KAAL,CAAWQ,QATvB;AAUI,sBAAY,EAAEC,WAVlB;AAWI,uBAAa,EAAE,KAAKC;AAXxB,UADJ;AAeH,OAhDD,MAgDO;AACHgF,8BAAsB,GAClB,8BAAC,mCAAD;AACI,eAAK,EAAEM,iCAAA,CAAsB,uCAAtB,EAA+D,8BAA/D,CADX;AAEI,kBAAQ,EACJ,8BAAC,oCAAD;AACI,cAAE,EAAC,uCADP;AAEI,0BAAc,EAAC,yEAFnB;AAGI,kBAAM,EAAE;AAACC,mBAAK,EAAE,KAAKjG,KAAL,CAAWyC;AAAnB;AAHZ,YAHR;AASI,iBAAO,EAAE,KAAK3D,KAAL,CAAW8B,iBAAX,KAAiC,KAAK+D,YAAL,CAAkBE,uBAThE;AAUI,iBAAO,EAAE,yBAVb;AAWI,uBAAa,EAAE,KAAKnE;AAXxB,UADJ;AAeH;AACJ;;AAED,QAAIwF,wBAAwB,GAAG,EAA/B;AACA,QAAIC,qBAAqB,GAAG,EAA5B;AACA,UAAMxC,WAAW,GAAG,KAAK7E,KAAL,CAAW6E,WAA/B;;AAEA,QAAIA,WAAW,CAACyC,YAAZ,KAA6B,EAA7B,IAAmC,KAAKtH,KAAL,CAAWuH,sBAAlD,EAA0E;AACtE,UAAI,KAAKvH,KAAL,CAAWqB,aAAX,KAA6B,mBAAjC,EAAsD;AAClD+F,gCAAwB,GACpB,8BAAC,mCAAD;AACI,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,8CADP;AAEI,0BAAc,EAAC;AAFnB,YAFR;AAOI,gBAAM,EAAE,CACJ;AAAK,eAAG,EAAC;AAAT,aACI,2CACI,yCADJ,EAEI,8BAAC,oCAAD;AACI,cAAE,EAAC,sCADP;AAEI,0BAAc,EAAC;AAFnB,YAFJ,CADJ,CADI,CAPZ;AAkBI,wBAAc,EAAE,YAlBpB;AAmBI,iBAAO,EAAE,mBAnBb;AAoBI,gBAAM,EAAE,KAAKI,gCApBjB;AAqBI,gBAAM,EAAE,KAAKtG,KAAL,CAAWQ,QArBvB;AAsBI,sBAAY,EAAE,KAAKR,KAAL,CAAWS,WAtB7B;AAuBI,uBAAa,EAAE,KAAKC;AAvBxB,UADJ;AA2BH,OA5BD,MA4BO;AACHwF,gCAAwB,GACpB,8BAAC,mCAAD;AACI,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,8CADP;AAEI,0BAAc,EAAC;AAFnB,YAFR;AAOI,kBAAQ,EACJ,8BAAC,oCAAD;AACI,cAAE,EAAC,2CADP;AAEI,0BAAc,EAAC;AAFnB,YARR;AAaI,iBAAO,EAAE,KAAKpH,KAAL,CAAW8B,iBAAX,KAAiC,KAAK+D,YAAL,CAAkBG,iBAbhE;AAcI,iBAAO,EAAE,mBAdb;AAeI,uBAAa,EAAE,KAAKpE;AAfxB,UADJ;AAmBH;;AAED,YAAM6F,kBAAkB,GAAG,gBAA3B;AACA,YAAMC,sBAAsB,GACxB,8BAAC,oCAAD;AACI,UAAE,EAAC,gEADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAOAL,2BAAqB,GACjB,8BAAC,gCAAD;AACI,YAAI,EAAE,KAAKnG,KAAL,CAAWiD,0BADrB;AAEI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,qDADP;AAEI,wBAAc,EAAC;AAFnB,UAHR;AAQI,eAAO,EACH,8BAAC,oCAAD;AACI,YAAE,EAAC,6CADP;AAEI,wBAAc,EAAC;AAFnB,UATR;AAcI,0BAAkB,EAAEsD,kBAdxB;AAeI,yBAAiB,EAAEC,sBAfvB;AAgBI,iBAAS,EAAE,KAAKC,6BAhBpB;AAiBI,gBAAQ,EAAE,KAAKC;AAjBnB,QADJ;AAqBH;;AAED,WACI,2CACI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,aADP;AAEI,UAAI,EAAC,QAFT;AAGI,eAAS,EAAC,OAHd;AAII,sBAAa,OAJjB;AAKI,oBAAW,OALf;AAMI,aAAO,EAAE,KAAK5H,KAAL,CAAW6H;AANxB,OAQI;AAAM,qBAAY;AAAlB,OAA0B,GAA1B,CARJ,CADJ,EAWI;AACI,eAAS,EAAC,aADd;AAEI,SAAG,EAAC;AAFR,OAII;AAAK,eAAS,EAAC;AAAf,OACI;AAAM,aAAO,EAAE,KAAK7H,KAAL,CAAW8H;AAA1B,OACI,8BAAC,4BAAD,OADJ,CADJ,CAJJ,EASI,8BAAC,oCAAD;AACI,QAAE,EAAC,6BADP;AAEI,oBAAc,EAAC;AAFnB,MATJ,CAXJ,CADJ,EA2BI;AAAK,eAAS,EAAC;AAAf,OACI;AAAI,eAAS,EAAC;AAAd,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,6BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,EAOI;AAAK,eAAS,EAAC;AAAf,MAPJ,EAQKxB,eARL,EASKK,wBATL,EAUKF,iBAVL,EAWI;AAAK,eAAS,EAAC;AAAf,MAXJ,EAYI,8BAAC,kBAAD;AACI,mBAAa,EAAE,KAAKzG,KAAL,CAAWqB,aAD9B;AAEI,qBAAe,EAAE,KAAKO,mBAF1B;AAGI,uBAAiB,EAAE,KAAK5B,KAAL,CAAW8B,iBAHlC;AAII,sBAAgB,EAAE,KAAKD;AAJ3B,MAZJ,EAkBKgF,6BAlBL,EAmBKD,sBAnBL,EAoBKD,wBApBL,EAqBKS,wBArBL,EAsBI;AAAK,eAAS,EAAC;AAAf,MAtBJ,EAuBKC,qBAvBL,CA3BJ,CADJ;AAuDH;;AA7nBoE;;sCAApDvE,8C,eACE;AACf+B,aAAW,EAAE9C,oBAAS,CAACgG,MAAV,CAAiB9F,UADf;AAEfe,0BAAwB,EAAEjB,oBAAS,CAACiG,KAAV,CAAgB/F,UAF3B;AAGfkB,iBAAe,EAAEpB,oBAAS,CAACC,MAAV,CAAiBC,UAHnB;AAIfoB,sBAAoB,EAAEtB,oBAAS,CAACkG,IAJjB;AAKf3E,YAAU,EAAEvB,oBAAS,CAACC,MAAV,CAAiBC,UALd;AAMf1B,WAAS,EAAEwB,oBAAS,CAACC,MAAV,CAAiBC,UANb;AAOfyD,eAAa,EAAE3D,oBAAS,CAACG,IAPV;AAQfb,eAAa,EAAEU,oBAAS,CAACC,MARV;AASfF,mBAAiB,EAAEC,oBAAS,CAACC,MATd;AAUf6F,YAAU,EAAE9F,oBAAS,CAACG,IAAV,CAAeD,UAVZ;AAWf6F,eAAa,EAAE/F,oBAAS,CAACG,IAAV,CAAeD,UAXf;AAYfiC,uBAAqB,EAAEnC,oBAAS,CAACkG,IAZlB;AAafV,wBAAsB,EAAExF,oBAAS,CAACkG,IAbnB;AAcfxH,SAAO,EAAEsB,oBAAS,CAACI,KAAV,CAAgB;AACrBhB,mBAAe,EAAEY,oBAAS,CAACG,IAAV,CAAeD,UADX;AAErBiD,oBAAgB,EAAEnD,oBAAS,CAACG,IAAV,CAAeD,UAFZ;AAGrBsD,4BAAwB,EAAExD,oBAAS,CAACG,IAAV,CAAeD;AAHpB,GAAhB,EAINA;AAlBY,C;;ACpBvB;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,SAASiG,mBAAT,GAA+B;AAC3B,QAAMC,2BAA2B,GAAGC,+CAAe,EAAnD;AAEA,SAAQlH,KAAD,IAAW;AACd,UAAMmH,MAAM,GAAGC,4BAAS,CAACpH,KAAD,CAAxB;AAEA,UAAMgD,qBAAqB,GAAGmE,MAAM,CAACE,qBAAP,KAAiC,MAA/D;AACA,UAAMhB,sBAAsB,GAAGc,MAAM,CAACG,sBAAP,KAAkC,MAAjE;AAEA,WAAO;AACHxF,8BAAwB,EAAEmF,2BAA2B,CAACjH,KAAD,EAAQL,gCAAW,CAACC,0BAApB,CADlD;AAEHqC,qBAAe,EAAEsF,mCAAG,CAACvH,KAAD,EAAQL,gCAAW,CAACC,0BAApB,EAAgD,oBAAhD,EAAsE,OAAtE,CAFjB;AAGHuC,0BAAoB,EAAEoF,mCAAG,CAACvH,KAAD,EAAQL,gCAAW,CAACC,0BAApB,EAAgD,uBAAhD,EAAyE,MAAzE,CAHtB;AAIHwC,gBAAU,EAAEmF,mCAAG,CAACvH,KAAD,EAAQL,gCAAW,CAACC,0BAApB,EAAgD,YAAhD,EAA8D,MAA9D,CAJZ;AAKHP,eAAS,EAAEkI,mCAAG,CAACvH,KAAD,EAAQL,gCAAW,CAACC,0BAApB,EAAgD,YAAhD,EAA8D,MAA9D,CALX;AAMH+D,iBAAW,EAAE6D,+BAAc,CAACxH,KAAD,CANxB;AAOHgD,2BAPG;AAQHqD;AARG,KAAP;AAUH,GAhBD;AAiBH;;AAED,SAAShF,2BAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH/B,WAAO,EAAEgC,mCAAkB,CAAC;AACxBtB,6DADwB;AAExB+D,yDAFwB;AAGxBK,yEAAwBA;AAHA,KAAD,EAIxB/C,QAJwB;AADxB,GAAP;AAOH;;AAEcE,kEAAO,CAACwF,mBAAD,EAAsB3F,2BAAtB,CAAP,CAAiDO,8CAAjD,CAAf,E;;;;;;;;;;;;;;;;;AChDA;AACA;AAEe,gDAAC;AAAE6F,OAAF;AAASC,SAAO,GAAG,EAAnB;AAAuB,KAAGC;AAA1B,CAAD,KAAsC;AACnD,SACE;AAAK,aAAS,EAAC;AAAf,KACE,0CAAKF,KAAL,CADF,EAEE,8BAAC,2BAAD,CAAO,KAAP,EAAiBE,IAAjB,EACGD,OAAO,CAACE,GAAR,CAAYC,IAAI,IACf,8BAAC,2BAAD;AAAO,OAAG,EAAEA,IAAI,CAAC7I,KAAjB;AAAwB,SAAK,EAAE6I,IAAI,CAAC7I;AAApC,KAA4C6I,IAAI,CAAC/E,KAAjD,CADD,CADH,CAFF,CADF;AAUD,CAXD,E;;;;;;;;;ACHA;AACA;AAEe,oDAAC;AAAEgF,gBAAc,GAAG,CAAC,SAAD,EAAY,SAAZ;AAAnB,CAAD,KAAiD;AAC9D,QAAMjE,EAAE,GAAGkE,YAAI,EAAf;AACA,SACE;AAAK,UAAM,EAAC,IAAZ;AAAiB,WAAO,EAAC,YAAzB;AAAsC,SAAK,EAAC,KAA5C;AACE,SAAK,EAAC,4BADR;AAEE,cAAU,EAAC;AAFb,KAGE,4CACE;AAAM,MAAE,EAAC,GAAT;AAAa,UAAM,EAAC,IAApB;AAAyB,MAAE,EAAC,GAA5B;AAAgC,SAAK,EAAC;AAAtC,IADF,EAEE;AAAQ,MAAE,EAAC,GAAX;AAAe,UAAM,EAAC,QAAtB;AAA+B,SAAK,EAAC,QAArC;AAA8C,KAAC,EAAC,OAAhD;AAAwD,KAAC,EAAC;AAA1D,KACE;AAAU,MAAE,EAAC,GAAb;AAAiB,MAAE,EAAC,GAApB;AAAwB,MAAE,EAAC,aAA3B;AAAyC,UAAM,EAAC;AAAhD,IADF,EAEE;AAAgB,MAAE,EAAC,oBAAnB;AAAwC,UAAM,EAAC,kBAA/C;AAAkE,gBAAY,EAAC;AAA/E,IAFF,EAGE;AAAe,MAAE,EAAC,kBAAlB;AAAqC,QAAI,EAAC,QAA1C;AAAmD,UAAM,EAAC;AAA1D,IAHF,CAFF,EAOE;AAAgB,MAAE,EAAG,GAAElE,EAAG,IAA1B;AAA+B,MAAE,EAAC,KAAlC;AAAwC,MAAE,EAAC,KAA3C;AAAiD,MAAE,EAAC,IAApD;AAAyD,MAAE,EAAC;AAA5D,KACE;AAAM,UAAM,EAAC,GAAb;AAAiB,aAAS,EAAEiE,cAAc,CAAC,CAAD;AAA1C,IADF,EAEE;AAAM,UAAM,EAAC,GAAb;AAAiB,aAAS,EAAEA,cAAc,CAAC,CAAD;AAA1C,IAFF,CAPF,CAHF,EAeE;AAAG,QAAI,EAAC,MAAR;AAAe,YAAQ,EAAC,SAAxB;AAAkC,aAAS,EAAC;AAA5C,KACE;AAAK,QAAI,EAAC,MAAV;AAAiB,UAAM,EAAC,SAAxB;AAAkC,aAAS,EAAC;AAA5C,IADF,EAEE;AAAK,QAAI,EAAC,MAAV;AAAiB,YAAQ,EAAC,SAA1B;AAAoC,aAAS,EAAC;AAA9C,IAFF,EAGE;AAAG,QAAI,EAAC;AAAR,KACE;AAAM,UAAM,EAAC,GAAb;AAAiB,MAAE,EAAC,GAApB;AAAwB,SAAK,EAAC,IAA9B;AAAmC,KAAC,EAAC,IAArC;AAA0C,KAAC,EAAC;AAA5C,IADF,EAEE;AAAM,UAAM,EAAC,GAAb;AAAiB,MAAE,EAAC,GAApB;AAAwB,SAAK,EAAC,IAA9B;AAAmC,KAAC,EAAC,IAArC;AAA0C,KAAC,EAAC;AAA5C,IAFF,EAGE;AAAM,UAAM,EAAC,IAAb;AAAkB,MAAE,EAAC,GAArB;AAAyB,SAAK,EAAC,IAA/B;AAAoC,KAAC,EAAC,IAAtC;AAA2C,KAAC,EAAC;AAA7C,IAHF,EAIE;AAAM,UAAM,EAAC,GAAb;AAAiB,MAAE,EAAC,GAApB;AAAwB,SAAK,EAAC,IAA9B;AAAmC,KAAC,EAAC,IAArC;AAA0C,KAAC,EAAC;AAA5C,IAJF,EAKE;AAAM,UAAM,EAAC,GAAb;AAAiB,MAAE,EAAC,GAApB;AAAwB,SAAK,EAAC,IAA9B;AAAmC,KAAC,EAAC,IAArC;AAA0C,KAAC,EAAC;AAA5C,IALF,CAHF,EAUE;AAAM,KAAC,EAAC,oGAAR;AAA6G,QAAI,EAAG,QAAOjE,EAAG;AAA9H,IAVF,CAfF,CADF;AA8BD,CAhCD,E;;ACHA;AACA;AACA;AACA;AAEA,MAAMmE,UAAU,GAAG,CACjB,CAAC,SAAD,EAAY,SAAZ,CADiB,EAEjB,CAAC,SAAD,EAAY,SAAZ,CAFiB,EAGjB,CAAC,SAAD,EAAY,SAAZ,CAHiB,EAIjB,CAAC,SAAD,EAAY,SAAZ,CAJiB,CAAnB,C,CAOA;;AACA,MAAMC,QAAQ,GAAGC,GAAG,IAAK,GAAEA,GAAG,CAAC,CAAD,CAAI,IAAGA,GAAG,CAAC,CAAD,CAAI,EAA5C;;AAEA,MAAMR,2BAAO,GAAG,CACd;AACE5E,OAAK,EAAE,8BAAC,cAAD;AAAe,kBAAc,EAAEkF,UAAU,CAAC,CAAD;AAAzC,IADT;AAEEhJ,OAAK,EAAEiJ,QAAQ,CAACD,UAAU,CAAC,CAAD,CAAX;AAFjB,CADc,EAKd;AACElF,OAAK,EAAE,8BAAC,cAAD;AAAe,kBAAc,EAAEkF,UAAU,CAAC,CAAD;AAAzC,IADT;AAEEhJ,OAAK,EAAEiJ,QAAQ,CAACD,UAAU,CAAC,CAAD,CAAX;AAFjB,CALc,EASd;AACElF,OAAK,EAAE,8BAAC,cAAD;AAAe,kBAAc,EAAEkF,UAAU,CAAC,CAAD;AAAzC,IADT;AAEEhJ,OAAK,EAAEiJ,QAAQ,CAACD,UAAU,CAAC,CAAD,CAAX;AAFjB,CATc,EAad;AACElF,OAAK,EAAE,8BAAC,cAAD;AAAe,kBAAc,EAAEkF,UAAU,CAAC,CAAD;AAAzC,IADT;AAEEhJ,OAAK,EAAEiJ,QAAQ,CAACD,UAAU,CAAC,CAAD,CAAX;AAFjB,CAbc,CAAhB;AAmBA,MAAMG,WAAW,GAAG;AAClBC,WAAS,EAAE,SADO;AAElBC,aAAW,EAAE,SAFK;AAGlBC,mBAAiB,EAAE,SAHD;AAIlBC,oBAAkB,EAAE,SAJF;AAKlBC,yBAAuB,EAAE,SALP;AAMlBC,wBAAsB,EAAE,SANN;AAOlBC,iBAAe,EAAE,SAPC;AAQlBC,wBAAsB,EAAE,SARN;AASlBC,iBAAe,EAAE,SATC;AAUlBC,eAAa,EAAE,SAVG;AAWlBC,cAAY,EAAE,SAXI;AAYlBC,WAAS,EAAE,SAZO;AAalBC,cAAY,EAAE,SAbI;AAclBC,iBAAe,EAAE,SAdC;AAelBC,oBAAkB,EAAE,SAfF;AAgBlBC,qBAAmB,EAAE,SAhBH;AAiBlBC,WAAS,EAAE,SAjBO;AAkBlBC,UAAQ,EAAE,SAlBQ;AAmBlBC,aAAW,EAAE,SAnBK;AAoBlBC,gBAAc,EAAE,SApBE;AAqBlBC,oBAAkB,EAAE,SArBF;AAsBlBC,sBAAoB,EAAE,SAtBJ;AAuBlBC,WAAS,EAAE,QAvBO;AAwBlBC,WAAS,EAAE;AAxBO,CAApB;AA2Be7K,6DAAK,IAAI;AACtB,MAAI8K,MAAM,GAAG9K,KAAK,CAAC+K,KAAnB;;AAEA,QAAMC,cAAc,GAAG,MAAM/K,CAAN,IAAW;AAChC,UAAMmJ,GAAG,GAAGnJ,CAAC,CAAC+G,MAAF,CAAS9G,KAAT,CAAe+K,KAAf,CAAqB,GAArB,CAAZ;AACA,UAAMF,KAAK,GAAG,EACZ,GAAG1B,WADS;AAEZO,qBAAe,EAAER,GAAG,CAAC,CAAD,CAFR;AAGZE,eAAS,EAAEF,GAAG,CAAC,CAAD;AAHF,KAAd;AAKAlC,+BAAA,CAAiB6D,KAAjB;AACA,UAAM/K,KAAK,CAACS,OAAN,CAAcyK,SAAd,CAAwB,EAAxB,EAA4BH,KAA5B,CAAN;;AACA,QAAI/K,KAAK,CAACmL,eAAV,EAA2B;AACzB,YAAMnL,KAAK,CAACS,OAAN,CAAc2K,wBAAd,EAAN;AACD;AACF,GAZD;;AAcA,SACE,8BAAC,UAAD;AACE,aAAS,EAAC,OADZ;AAEE,SAAK,EAAC,0BAFR;AAGE,QAAI,EAAC,OAHP;AAIE,WAAO,EAAExC,2BAJX,CAKE;AALF;AAME,gBAAY,EAAGkC,MAAM,CAAClB,eAAP,KAA2B,SAA3B,IAAwCkB,MAAM,CAACxB,SAAP,KAAqB,SAA9D,GAA2E,iBAA3E,GAAgG,GAAEwB,MAAM,CAAClB,eAAgB,IAAGkB,MAAM,CAACxB,SAAU,EAN7J;AAOE,YAAQ,EAAE0B;AAPZ,IADF;AAWD,CA5BD,E;;AC7DA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;;AAEA,SAAS9C,uCAAT,GAA+B;AAC7B,QAAMmD,gBAAgB,GAAGjD,+CAAe,EAAxC;AAEA,SAAQlH,KAAD,IAAW;AAChB,WAAO;AACLoK,mBAAa,EAAEC,iCAAgB,CAACrK,KAAD,CAD1B;AAEL6J,WAAK,EAAES,wCAAQ,CAACtK,KAAD,CAFV;AAGLiK,qBAAe,EAAEE,gBAAgB,CAACnK,KAAD,EAAQL,gCAAW,CAAC4K,cAApB,CAAhB,CAAoD3E,MAApD,IAA8D,CAH1E;AAIL4E,0BAAoB,EAAEC,gCAAe,CAACzK,KAAD,CAAf,GAAyB;AAJ1C,KAAP;AAMD,GAPD;AAQD;;AAED,SAASqB,sCAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACL/B,WAAO,EAAEgC,mCAAkB,CAAC;AAC1ByI,iDAD0B;AAE1BE,+EAAwBA;AAFE,KAAD,EAGxB5I,QAHwB;AADtB,GAAP;AAMD;;AAEcE,qFAAO,CAACwF,uCAAD,EAAsB3F,sCAAtB,CAAP,CAAiDqJ,mBAAjD,CAAf,E;;ACrCA;AACA;AACA;AACA;AAEA,MAAM/K,WAAW,GAAG+B,4BAAS,CAAC/B,WAA9B;AAEgBb,0DAAD,IAAW;AACxB,QAAM8E,MAAM,GAAG9E,KAAK,CAAC6L,IAAN,CAAW9G,EAA1B;AACA,MAAI+G,cAAc,GAAG;AACnB/K,WAAO,EAAE+D,MADU;AAEnBlE,YAAQ,EAAEC,WAAW,CAACkL,yBAFH;AAGnB/K,QAAI,EAAEH,WAAW,CAACmL;AAHC,GAArB;;AAKA,QAAMC,YAAY,GAAIhM,CAAD,IAAO;AAC1BD,SAAK,CAACS,OAAN,CAAcU,eAAd,CAA8B2D,MAA9B,EAAsC,CACpC,EACE,GAAGgH,cADL;AAEE5L,WAAK,EAAED,CAAC,CAAC+G,MAAF,CAAS9G;AAFlB,KADoC,CAAtC;AAMD,GAPD;;AAQA,SACE,8BAAC,UAAD;AACI,SAAK,EAAC,0BADV;AAEI,WAAO,EAAE,CACP;AAAE8D,WAAK,EAAE,kBAAT;AAA6B9D,WAAK,EAAE;AAApC,KADO,EAEP;AAAE8D,WAAK,EAAE,iBAAT;AAA4B9D,WAAK,EAAE;AAAnC,KAFO,CAFb;AAMI,gBAAY,EAAEF,KAAK,CAACkM,YANxB;AAOI,YAAQ,EAAED;AAPd,IADF;AAWD,CA1BD,E,CA6BA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,iE;;ACjFA;AACA;AACA;AAEA;;AAEA,SAAS1J,mCAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AAAC/B,WAAO,EAAEgC,mCAAkB,CAAC;AAACtB,6DAAeA;AAAhB,KAAD,EAAoBqB,QAApB;AAA5B,GAAP;AACH;;AAEcE,kFAAO,CAAC,IAAD,EAAOH,mCAAP,CAAP,CAAkC4J,gBAAlC,CAAf,E;;;;;ACVA;AACA;AACA;AAEgBnM,0DAAD,IAAW;AACxB,QAAMiM,YAAY,GAAIhM,CAAD,IAAO;AAC1BD,SAAK,CAACS,OAAN,CAAc2L,QAAd,CAAuB,EACrB,GAAGpM,KAAK,CAAC6L,IADY;AAErBQ,YAAM,EAAEpM,CAAC,CAAC+G,MAAF,CAAS9G;AAFI,KAAvB,EAIGiF,IAJH,CAIQ,CAAC;AAACG,UAAD;AAAOF,WAAK,EAAEkH;AAAd,KAAD,KAAwB;AAC5B,UAAIhH,IAAJ,EAAU;AACRiH,eAAO,CAACC,IAAR,CAAa,oBAAb;AACD,OAFD,MAEO;AACL,YAAI7K,WAAW,GAAG2K,GAAlB;;AACA,YAAIA,GAAG,CAACjH,OAAR,EAAiB;AACf1D,qBAAW,GAAG2K,GAAG,CAACjH,OAAlB;AACD;;AACDA,kCAAO,CAACD,KAAR,CAAckH,GAAd;AACD;AACF,KAdH;AAeD,GAhBD;;AAiBA,QAAM;AAAED;AAAF,MAAarM,KAAK,CAAC6L,IAAzB;AACA,SACE,8BAAC,UAAD;AACE,SAAK,EAAC,cADR;AAEE,gBAAY,EAAEQ,MAFhB;AAGE,WAAO,EAAE,CACP;AAAErI,WAAK,EAAE,QAAT;AAAmB9D,WAAK,EAAE;AAA1B,KADO,EAEP;AAAE8D,WAAK,EAAE,SAAT;AAAoB9D,WAAK,EAAE;AAA3B,KAFO,CAHX;AAOE,YAAQ,EAAE+L;AAPZ,IADF;AAWD,CA9BD,E;;ACJA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAAS1J,mCAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AAAC/B,WAAO,EAAEgC,mCAAkB,CAAC;AAAC2J,yCAAQA;AAAT,KAAD,EAAa5J,QAAb;AAA5B,GAAP;AACH;;AAEcE,kFAAO,CAAC,IAAD,EAAOH,mCAAP,CAAP,CAAkCkK,gBAAlC,CAAf,E;;;;;ACZA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEezM,mEAAK,IAAI;AACtB;AACA,SACE;AAAK,aAAS,EAAC;AAAf,KACE,8BAAC,2BAAD,EAAkBA,KAAlB,CADF,EAEE,8BAAC,wBAAD,EAAqBA,KAArB,CAFF,EAGE,8BAAC,wBAAD,EAAqBA,KAArB,CAHF,CADF;AAOD,CATD,E;;ACTA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,SAASoC,uBAAT,CAAyBlB,KAAzB,EAAgC;AAC5B,QAAMmH,MAAM,GAAGC,4BAAS,CAACpH,KAAD,CAAxB;AACA,QAAMwL,SAAS,GAAGC,wCAAY,CAACzL,KAAD,CAA9B;AACA,QAAMR,aAAa,GAAG4B,iCAAgB,CAACpB,KAAD,CAAtC;AACA,QAAM0L,YAAY,GAAGC,4CAAe,CAAC3L,KAAD,EAAQR,aAAR,CAApC;AACA,QAAMoM,uBAAuB,GAAGF,YAAY,IAAIA,YAAY,CAACG,oBAA7B,IAAqD,CAACH,YAAY,CAACI,iBAAnG;AACA,QAAMC,wBAAwB,GAAG,CAACL,YAAD,IAAiBE,uBAAlD;AAEA,QAAMI,iBAAiB,GAAG7E,MAAM,CAAC8E,iBAAP,KAA6B,MAAvD;AACA,QAAMC,kBAAkB,GAAG/E,MAAM,CAACgF,kBAAP,KAA8B,MAAzD;AACA,QAAMC,mBAAmB,GAAGjF,MAAM,CAACkF,mBAAnC;AACA,QAAMC,oBAAoB,GAAGnF,MAAM,CAACoF,oBAAP,KAAgC,MAA7D;AACA,QAAMC,cAAc,GAAGrF,MAAM,CAACsF,oBAAP,KAAgC,MAAvD;AACA,QAAMC,yBAAyB,GAAGvF,MAAM,CAACwF,mBAAzC;AAEA,SAAO;AACHX,qBADG;AAEHU,6BAFG;AAGHR,sBAHG;AAIHE,uBAJG;AAKHE,wBALG;AAMHE,kBANG;AAOHhB,aAPG;AAQHE,gBARG;AASHK,4BATG;AAUHa,uBAAmB,EAAEC,gDAAsB,CAACnB,YAAD,CAVxC;AAWHV,gBAAY,EAAEzD,mCAAG,CAACvH,KAAD,EAAQL,gCAAW,CAACkL,yBAApB,EAA+ClL,gCAAW,CAACmL,iBAA3D,EAA8EnL,gCAAW,CAACmN,yBAA1F,CAXd;AAYHC,uBAAmB,EAAExF,mCAAG,CAACvH,KAAD,EAAQL,gCAAW,CAACkL,yBAApB,EAA+ClL,gCAAW,CAACqN,gBAA3D,EAA6EN,yBAA7E,CAZrB;AAaHO,sBAAkB,EAAE1F,mCAAG,CAACvH,KAAD,EAAQL,gCAAW,CAACkL,yBAApB,EAA+ClL,gCAAW,CAACuN,oBAA3D,EAAiFvN,gCAAW,CAACwN,4BAA7F,CAbpB;AAcHC,kBAAc,EAAE7F,mCAAG,CAACvH,KAAD,EAAQL,gCAAW,CAACkL,yBAApB,EAA+ClL,gCAAW,CAAC0N,eAA3D,EAA4E1N,gCAAW,CAAC2N,uBAAxF,CAdhB;AAeHC,mBAAe,EAAEhG,mCAAG,CAACvH,KAAD,EAAQL,gCAAW,CAACkL,yBAApB,EAA+ClL,gCAAW,CAAC6N,gBAA3D,EAA6E7N,gCAAW,CAAC8N,wBAAzF,CAfjB;AAgBHC,sBAAkB,EAAEnG,mCAAG,CAACvH,KAAD,EAAQL,gCAAW,CAACkL,yBAApB,EAA+ClL,gCAAW,CAACgO,oBAA3D,EAAiFhO,gCAAW,CAACiO,4BAA7F;AAhBpB,GAAP;AAkBH;;AAED,SAASvM,0BAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH/B,WAAO,EAAEgC,mCAAkB,CAAC;AACxBsM,qEADwB;AAExBC,wDAFwB;AAGxB7N,6DAAeA;AAHS,KAAD,EAIxBqB,QAJwB;AADxB,GAAP;AAOH;;AAEcE,8FAAO,CAACN,uBAAD,EAAkBG,0BAAlB,CAAP,CAA6C0M,yBAA7C,CAAf,E;;;;;;;;;;;;;;;;;AChEA;AACA;AAEe,qDAAC;AAAElK,IAAF;AAAMmK,mBAAN;AAAyBC,gBAAc,GAAG,KAA1C;AAAiDC;AAAjD,CAAD,KAAqE;AAClF,QAAMC,gBAAgB,GAAIpP,CAAD,IAAO;AAC9B,QAAIqP,WAAW,GAAG,IAAlB;;AACA,QAAIrP,CAAC,CAAC+G,MAAF,CAASuI,KAAT,IAAkBtP,CAAC,CAAC+G,MAAF,CAASuI,KAAT,CAAe,CAAf,CAAtB,EAAyC;AACvCD,iBAAW,GAAGrP,CAAC,CAAC+G,MAAF,CAASuI,KAAT,CAAe,CAAf,CAAd;AACD;;AACDH,gBAAY,IAAIA,YAAY,CAACE,WAAD,CAA5B;AACD,GAND;;AAOA,SACE;AAAK,aAAS,EAAC;AAAf,KACE;AACE,OAAG,EAAE,EADP;AAEE,aAAS,EAAC,eAFZ;AAGE,OAAG,EAAEE,iBAAO,CAACC,oBAAR,CAA6B1K,EAA7B,EAAiCmK,iBAAjC;AAHP,IADF,EAME;AACE,UAAM,EAAC,gBADT;AAEE,QAAI,EAAC,MAFP;AAGE,YAAQ,EAAEG,gBAHZ;AAIE,YAAQ,EAAEF,cAJZ;AAKE,aAAS,EAAC;AALZ,IANF,EAaE,2CAbF,CADF;AAiBD,CAzBD,E;;;;;ACHA;AACA;AACA;AACA;;AAEA,MAAMO,KAAK,GAAG,CAAC;AAAEC,YAAU,GAAG;AAAf,CAAD,KAAyB;AACnC,SACI,8BAAC,sBAAD,QACKA,UAAU,CAAC7G,GAAX,CAAe,CAACC,IAAD,EAAO6G,GAAP,KACZ,8BAAC,sBAAD;AAAK,QAAI,EAAE,EAAX;AAAe,OAAG,EAAEA;AAApB,KACI,6CAAQ7G,IAAI,CAAC/E,KAAb,CADJ,EAEI;AAAM,SAAK,EAAE+E,IAAI,CAAC7I;AAAlB,KAA0B6I,IAAI,CAAC7I,KAAL,IAAc,GAAxC,CAFJ,CADH,CADL,CADJ;AAUH,CAXD;;AAagBF,mEAAD,IAAW;AACtB;AACA,QAAM,CAACmP,cAAD,EAAiBU,iBAAjB,IAAsCC,yBAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAEC,YAAF;AAAYC,YAAZ;AAAsBC,SAAtB;AAA6BC,SAA7B;AAAoCC,YAApC;AAA8CC,OAA9C;AAAmDrL,MAAnD;AAAuDsL,uBAAvD;AAA4EC,mBAA5E;AAA6FC;AAA7F,MAA2GvQ,KAAK,CAAC6L,IAAN,IAAc,EAA/H;;AACA,QAAMwD,gBAAgB,GAAImB,IAAD,IAAU;AAC/B;AACAX,qBAAiB,CAAC,IAAD,CAAjB;AACA7P,SAAK,CAACS,OAAN,CAAcgQ,kBAAd,CAAiC1L,EAAjC,EAAqCyL,IAArC,EACKrL,IADL,CACU,CAAC;AAACG,UAAD;AAAOF,WAAK,EAAEkH;AAAd,KAAD,KAAwB;AAC1B,UAAIhH,IAAJ,EAAU,CACN;AACH,OAFD,MAEO,IAAIgH,GAAJ,EAAS;AACZC,eAAO,CAACnH,KAAR,CAAc,WAAd,EAA2BkH,GAA3B;AACAjH,kCAAO,CAACD,KAAR,CAAckH,GAAd;AACH;;AACDuD,uBAAiB,CAAC,KAAD,CAAjB;AACH,KATL;AAUH,GAbD;;AAcA,SACI;AAAK,aAAS,EAAC;AAAf,KACI,8BAAC,uBAAD,QACI;AAAK,aAAS,EAAC;AAAf,KACI,2CACI,0CACKE,QAAQ,IAAIC,QADjB,EAEKI,GAAG,IAAI;AAAM,aAAS,EAAEA,GAAG,KAAK,CAAR,GAAY,QAAZ,GAAuB;AAAxC,IAFZ,CADJ,EAKI,yCAAIE,eAAJ,CALJ,CADJ,EAQI,8BAAC,eAAD;AACI,MAAE,EAAEvL,EADR;AAEI,qBAAiB,EAAEsL,mBAFvB;AAGI,gBAAY,EAAEhB,gBAHlB;AAII,kBAAc,EAAEF;AAJpB,IARJ,CADJ,EAgBI,8BAAC,KAAD;AAAO,cAAU,EAAE,CACf;AAAEnL,WAAK,EAAE,IAAT;AAAe9D,WAAK,EAAE+P;AAAtB,KADe,EAEf;AAAEjM,WAAK,EAAE,IAAT;AAAe9D,WAAK,EAAEoQ;AAAtB,KAFe,EAGf;AAAEtM,WAAK,EAAE,IAAT;AAAe9D,WAAK,EAAE;AAAtB,KAHe,EAIf;AAAE8D,WAAK,EAAE,IAAT;AAAe9D,WAAK,EAAEiQ;AAAtB,KAJe,EAKf;AAAEnM,WAAK,EAAE,IAAT;AAAe9D,WAAK,EAAEgQ;AAAtB,KALe,EAMf;AAAElM,WAAK,EAAE,IAAT;AAAe9D,WAAK,EAAEqQ;AAAtB,KANe;AAAnB,IAhBJ,CADJ,CADJ;AA6BH,CA/CD,E;;AClBA;AACA;AAEA;AACA;AACA;AAOA;AACA;AAEA;;AAEA,SAASnO,uBAAT,CAAyBlB,KAAzB,EAAgC;AAC5B,QAAMmH,MAAM,GAAGC,4BAAS,CAACpH,KAAD,CAAxB;AAEA,QAAMwP,sBAAsB,GAAGrI,MAAM,CAACsI,sBAAP,KAAkC,MAAjE;AACA,QAAMC,wBAAwB,GAAGvI,MAAM,CAACwI,wBAAP,KAAoC,MAArE;AACA,QAAMC,WAAW,GAAGC,QAAQ,CAAC1I,MAAM,CAAC2I,WAAR,EAAqB,EAArB,CAA5B;AACA,QAAMC,yBAAyB,GAAG5I,MAAM,CAAC6I,yBAAP,KAAqC,MAAvE;AACA,QAAMC,wBAAwB,GAAG9I,MAAM,CAAC+I,wBAAP,KAAoC,MAArE;AACA,QAAMC,yBAAyB,GAAGhJ,MAAM,CAACiJ,yBAAP,KAAqC,MAAvE;AACA,QAAMC,wBAAwB,GAAGlJ,MAAM,CAACmJ,wBAAP,KAAoC,MAArE;AACA,QAAMC,wBAAwB,GAAGpJ,MAAM,CAACqJ,wBAAP,KAAoC,MAArE;AACA,QAAMC,wBAAwB,GAAGtJ,MAAM,CAACuJ,wBAAP,KAAoC,MAArE;AACA,QAAMC,wBAAwB,GAAGxJ,MAAM,CAACyJ,wBAAP,KAAoC,MAArE;AACA,QAAMC,wBAAwB,GAAG1J,MAAM,CAAC2J,wBAAP,KAAoC,MAArE;AAEA,SAAO;AACHtB,0BADG;AAEHE,4BAFG;AAGHE,eAHG;AAIHG,6BAJG;AAKHE,4BALG;AAMHE,6BANG;AAOHE,4BAPG;AAQHE,4BARG;AASHE,4BATG;AAUHE,4BAVG;AAWHE;AAXG,GAAP;AAaH;;AAED,SAASxP,0BAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH/B,WAAO,EAAEgC,mCAAkB,CAAC;AACxBwP,kCADwB;AAExBC,wCAFwB;AAGxBC,mCAHwB;AAIxB/F,yCAJwB;AAKxBgG,mEALwB;AAMxBC,qEANwB;AAOxB5B,6DAAkBA;AAPM,KAAD,EAQxBjO,QARwB;AADxB,GAAP;AAWH;;AAEcE,8FAAO,CAACN,uBAAD,EAAkBG,0BAAlB,CAAP,CAA6C+P,yBAA7C,CAAf,E;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG,OAAnB;AAEA,MAAMC,UAAU,GAAG,CACjB;AAAExO,OAAK,EAAE,IAAT;AAAe9D,OAAK,EAAE;AAAtB,CADiB,EAEjB;AAAE8D,OAAK,EAAE,IAAT;AAAe9D,OAAK,EAAE;AAAtB,CAFiB,CAAnB;AAKeF,yEAAK,IAAI;AACtB;AACA,QAAM;AAAEyS,WAAF;AAAWC,YAAX;AAAqBC,iBAArB;AAAoCC,cAAU,GAAG,EAAjD;AAAqDC,YAAQ,GAAG,EAAhE;AAAoEC,UAApE;AAA4EC;AAA5E,MAAsG/S,KAAK,CAAC6L,IAAN,CAAWmH,YAAvH;AACA,QAAM,CAAC9R,KAAD,EAAQd,QAAR,IAAoB6S,2BAAU,CAAC,CAACC,CAAD,EAAIC,CAAJ,MAAW,EAAE,GAAGD,CAAL;AAAQ,OAAGC;AAAX,GAAX,CAAD,EAA6B;AAC/DP,cAD+D;AAE/DC,YAF+D;AAG/DO,YAAQ,EAAER,UAAU,CAAC9L,MAAX,GAAoB,CAApB,IAAyB+L,QAAQ,CAAC/L,MAAT,GAAkB,CAHU;AAI/DuM,uBAAmB,EAAEN,qBAAqB,KAAK;AAJgB,GAA7B,CAApC;;AAMA,QAAM9G,YAAY,GAAG,CAAChM,CAAD,EAAIqF,IAAJ,KAAa;AAChC,UAAMtE,IAAI,GAAGf,CAAC,CAAC+G,MAAF,CAAShG,IAAtB;AACA,QAAIoI,GAAJ;;AACA,QAAInJ,CAAC,CAAC+G,MAAF,CAASsM,IAAT,KAAkB,UAAtB,EAAkC;AAChClK,SAAG,GAAI,GAAEnJ,CAAC,CAAC+G,MAAF,CAAS1C,OAAQ,EAA1B;AACAlE,cAAQ,CAAC;AACPiT,2BAAmB,EAAEpT,CAAC,CAAC+G,MAAF,CAAS1C;AADvB,OAAD,CAAR;AAGD,KALD,MAKO;AACL8E,SAAG,GAAGnJ,CAAC,CAAC+G,MAAF,CAAS9G,KAAf;AACD;;AACD,QAAIqT,CAAC,GAAG,EACN,GAAGvT,KAAK,CAAC6L,IAAN,CAAWmH,YADR;AAEN,SAAG1N;AAFG,KAAR;;AAIA,QAAItE,IAAJ,EAAU;AACRuS,OAAC,CAACvS,IAAD,CAAD,GAAUoI,GAAV;AACD;;AACDpJ,SAAK,CAACS,OAAN,CACG2L,QADH,CACY;AACR4G,kBAAY,EAAEO;AADN,KADZ,EAIGpO,IAJH,CAIQ,CAAC;AAAEG,UAAI,EAAEkO,MAAR;AAAgBpO,WAAK,EAAEkH;AAAvB,KAAD,KAAkC;AACtC,UAAIkH,MAAJ,EAAY,CACV;AACD,OAFD,MAEO,IAAIlH,GAAJ,EAAS;AACd;AACAjH,kCAAO,CAACD,KAAR,CAAckH,GAAd;AACD;AACF,KAXH;AAYD,GA9BD;;AA+BA,QAAMmH,cAAc,GAAGxT,CAAC,IAAI;AAC1B,UAAMmJ,GAAG,GAAGnJ,CAAC,CAAC+G,MAAF,CAAS1C,OAArB;AACA,UAAMtD,IAAI,GAAGf,CAAC,CAAC+G,MAAF,CAAShG,IAAtB;AACAiL,gBAAY,CAAC;AACXjF,YAAM,EAAE;AACNhG,YAAI,EAAEf,CAAC,CAAC+G,MAAF,CAAShG,IADT;AAENd,aAAK,EAAG,GAAEkJ,GAAI;AAFR;AADG,KAAD,CAAZ;AAMD,GATD;;AAUA,QAAMsK,gBAAgB,GAAG,CAACzT,CAAD,EAAIqT,IAAJ,KAAa;AACpC,UAAMlK,GAAG,GAAGuK,gBAAM,CAAC1T,CAAD,CAAN,CAAU2T,MAAV,CAAiB,UAAjB,CAAZ;AACAxT,YAAQ,CAAC;AAAE,OAACkT,IAAD,GAAQlK;AAAV,KAAD,CAAR,CAFoC,CAGpC;;AACA,QAAInJ,CAAC,IAAI,IAAT,EAAe;AACb,UAAIqT,IAAI,KAAK,YAAT,IAAyBpS,KAAK,CAAC2R,QAAnC,EAA6C;AAC3C5G,oBAAY,CAAC;AACXjF,gBAAM,EAAE;AACNhG,gBAAI,EAAE,YADA;AAENd,iBAAK,EAAEkJ;AAFD;AADG,SAAD,EAKT;AAAEyJ,kBAAQ,EAAE3R,KAAK,CAAC2R;AAAlB,SALS,CAAZ;AAMD;;AACD,UAAIS,IAAI,KAAK,UAAT,IAAuBpS,KAAK,CAAC0R,UAAjC,EAA6C;AAC3C3G,oBAAY,CAAC;AACXjF,gBAAM,EAAE;AACNhG,gBAAI,EAAE,UADA;AAENd,iBAAK,EAAEkJ;AAFD;AADG,SAAD,EAKT;AAAEwJ,oBAAU,EAAE1R,KAAK,CAAC0R;AAApB,SALS,CAAZ;AAMD;AACF;AACF,GAtBD;;AAuBA,QAAMiB,YAAY,GAAG5T,CAAC,IAAI;AACxBG,YAAQ,CAAC;AAAEgT,cAAQ,EAAEnT,CAAC,CAAC+G,MAAF,CAAS1C;AAArB,KAAD,CAAR;;AACA,QAAI,CAACrE,CAAC,CAAC+G,MAAF,CAAS1C,OAAd,EAAuB;AACrBlE,cAAQ,CAAC;AACPwS,kBAAU,EAAE,EADL;AAEPC,gBAAQ,EAAE;AAFH,OAAD,CAAR;AAIA5G,kBAAY,CAAC;AAAEjF,cAAM,EAAE;AAAV,OAAD,EAAiB;AAC3B4L,kBAAU,EAAE,EADe;AAE3BC,gBAAQ,EAAE;AAFiB,OAAjB,CAAZ;AAID;AACF,GAZD;;AAaA,SACE;AAAK,aAAS,EAAC;AAAf,KACE,8BAAC,UAAD;AACE,SAAK,EAAC,sCADR;AAEE,QAAI,EAAC,QAFP;AAGE,WAAO,EAAEL,UAHX,CAIE;AAJF;AAKE,gBAAY,EAAEM,MAAM,IAAI,MAL1B;AAME,YAAQ,EAAE7G;AANZ,IADF,EAYE,8BAAC,UAAD;AACE,SAAK,EAAC,sCADR;AAEE,QAAI,EAAC,SAFP;AAGE,WAAO,EAAE,CACP;AAAEjI,WAAK,EAAE,MAAT;AAAiB9D,WAAK,EAAE;AAAxB,KADO,EAEP;AAAE8D,WAAK,EAAE,OAAT;AAAkB9D,WAAK,EAAE;AAAzB,KAFO,EAGP;AAAE8D,WAAK,EAAE,KAAT;AAAgB9D,WAAK,EAAE;AAAvB,KAHO,CAHX;AAQE,YAAQ,EAAE+L,YARZ;AASE,gBAAY,EAAEwG;AAThB,IAZF,EAuBE,8BAAC,UAAD;AACE,SAAK,EAAC,0BADR;AAEE,QAAI,EAAC,UAFP;AAGE,WAAO,EAAE,CACP;AAAEzO,WAAK,EAAE,kBAAT;AAA6B9D,WAAK,EAAE;AAApC,KADO,EAEP;AAAE8D,WAAK,EAAE,cAAT;AAAyB9D,WAAK,EAAE;AAAhC,KAFO,EAGP;AAAE8D,WAAK,EAAE,mBAAT;AAA8B9D,WAAK,EAAE;AAArC,KAHO,CAHX;AAQE,YAAQ,EAAE+L,YARZ;AASE,gBAAY,EAAEyG;AAThB,IAvBF,EAkCE,8BAAC,UAAD;AACE,SAAK,EAAC,8DADR;AAEE,QAAI,EAAC,eAFP;AAGE,WAAO,EAAE,CACP;AAAE1O,WAAK,EAAE,IAAT;AAAe9D,WAAK,EAAE;AAAtB,KADO,EAEP;AAAE8D,WAAK,EAAE,IAAT;AAAe9D,WAAK,EAAE;AAAtB,KAFO,CAHX;AAOE,YAAQ,EAAE+L,YAPZ;AAQE,gBAAY,EAAE0G;AARhB,IAlCF,EA4CE,8BAAC,0BAAD,OA5CF,EA6CE;AAAK,aAAS,EAAC;AAAf,KACE;AAAK,aAAS,EAAC;AAAf,KACE,8BAAC,8BAAD;AACE,QAAI,EAAC,QADP;AAEE,YAAQ,EAAEkB,YAFZ;AAGE,WAAO,EAAE3S,KAAK,CAACkS;AAHjB,4CADF,EAQE;AAAK,aAAS,EAAC;AAAf,KACE,8BAAC,8BAAD;AACE,SAAK,EAAElS,KAAK,CAAC0R,UAAN,GAAmBe,gBAAM,CAACzS,KAAK,CAAC0R,UAAP,EAAmB,OAAnB,CAAzB,GAAuD,IADhE;AAEE,YAAQ,EAAE3S,CAAC,IAAIyT,gBAAgB,CAACzT,CAAD,EAAI,YAAJ,CAFjC;AAGE,UAAM,EAAEsS,UAHV;AAIE,eAAW,EAAC,OAJd;AAKE,YAAQ,EAAE,CAACrR,KAAK,CAACkS;AALnB,IADF,EAQE,8BAAC,8BAAD;AACE,SAAK,EAAElS,KAAK,CAAC2R,QAAN,GAAiBc,gBAAM,CAACzS,KAAK,CAAC2R,QAAP,EAAiB,OAAjB,CAAvB,GAAmD,IAD5D;AAEE,YAAQ,EAAE5S,CAAC,IAAIyT,gBAAgB,CAACzT,CAAD,EAAI,UAAJ,CAFjC;AAGE,UAAM,EAAEsS,UAHV;AAIE,eAAW,EAAC,OAJd;AAKE,YAAQ,EAAE,CAACrR,KAAK,CAACkS;AALnB,IARF,CARF,CADF,EA0BE,8BAAC,8BAAD;AAAU,QAAI,EAAC,uBAAf;AAAuC,WAAO,EAAEL,qBAAqB,KAAK,MAA1E;AAAkF,YAAQ,EAAE9G;AAA5F,wGA1BF,CA7CF,CADF;AA8ED,CApKD,E,CAsKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sB;;AC5LA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAAS7J,6BAAT,CAAyBlB,KAAzB,EAAgC;AAC5B,QAAMmH,MAAM,GAAGC,4BAAS,CAACpH,KAAD,CAAxB;AAEA,QAAM4S,QAAQ,GAAGzL,MAAM,CAAC0L,QAAxB;AACA,QAAMC,qBAAqB,GAAG3L,MAAM,CAAC4L,qBAAP,KAAiC,MAA/D;AACA,QAAMC,mBAAmB,GAAG7L,MAAM,CAAC8L,kCAAP,KAA8C,MAA1E;AAEA,QAAMtP,WAAW,GAAG6D,+BAAc,CAACxH,KAAD,CAAlC;;AAEA,MAAI,CAAC2D,WAAL,EAAkB;AACd,WAAO,EAAP;AACH;;AAED,QAAMC,MAAM,GAAGD,WAAW,CAACE,EAA3B;AAEA,SAAO;AACHD,UADG;AAEHgP,YAFG;AAGHE,yBAHG;AAIHE,uBAJG;AAKHE,UAAM,EAAEC,mCAAkB,CAACnT,KAAD,EAAQ4D,MAAR;AALvB,GAAP;AAOH;;AAED,SAASvC,gCAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH/B,WAAO,EAAEgC,mCAAkB,CAAC;AACxB2J,yCADwB;AAExBkI,2CAASA;AAFe,KAAD,EAGxB9R,QAHwB;AADxB,GAAP;AAMH;;AAEcE,uEAAO,CAACN,6BAAD,EAAkBG,gCAAlB,CAAP,CAA6CgS,+BAA7C,CAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA,MAAMC,WAAW,GAAG,KAApB;AAEe,MAAMC,sBAAN,SAAyB5U,eAAK,CAACC,aAA/B,CAA6C;AAAA;AAAA;;AAAA,8CAmBhD;AACJ6B,iBAAW,EAAE;AADT,KAnBgD;;AAAA,iDAuB5C1B,CAAD,IAAO;AACdA,OAAC,CAACyU,cAAF;AAEAC,+CAAc,CAAChQ,IAAf,CAAoB,YAApB;AACH,KA3BuD;;AAAA,kDA6B5C,MAAO1E,CAAP,IAAa;AACrBA,OAAC,CAACyU,cAAF;AAEA,YAAM;AAACtP;AAAD,UAAU,MAAM,KAAKpF,KAAL,CAAWS,OAAX,CAAmBmU,aAAnB,EAAtB;;AAEA,UAAIxP,KAAJ,EAAW;AACP,aAAKhF,QAAL,CAAc;AACVuB,qBAAW,EAAEyD,KAAK,CAACC;AADT,SAAd;AAGA;AACH;;AAED,UAAI,KAAKrF,KAAL,CAAW6U,WAAf,EAA4B;AACxBF,iDAAc,CAAChQ,IAAf,CAAoB,YAApB;AACA;AACH;;AAED,WAAK3E,KAAL,CAAW0F,aAAX,CAAyB,EAAzB;AACA,WAAKtF,QAAL,CAAc;AACVuB,mBAAW,EAAE;AADH,OAAd;AAGH,KAlDuD;;AAAA,oDAoD1C,MAAM;AAChB,aACI,8BAAC,oCAAD;AACI,UAAE,EAAC,yBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH,KA3DuD;;AAAA,0DA6DpC,MAAM;AACtB,UAAI,KAAK3B,KAAL,CAAW8U,SAAf,EAA0B;AACtB,eACI,8BAAC,oCAAD;AACI,YAAE,EAAC,+BADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMH;;AAED,aACI,8BAAC,oCAAD;AACI,UAAE,EAAC,iCADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH,KA7EuD;;AAAA,sDA+ExC,MAAM;AAClB,UAAIC,OAAJ;;AAEA,UAAI,KAAK/U,KAAL,CAAW8U,SAAf,EAA0B;AACtB,YAAIE,UAAJ;;AAEA,YAAI,KAAKhV,KAAL,CAAW6U,WAAf,EAA4B;AACxBG,oBAAU,GACN,8BAAC,oCAAD;AACI,cAAE,EAAC,yBADP;AAEI,0BAAc,EAAC;AAFnB,YADJ;AAMH,SAPD,MAOO;AACHA,oBAAU,GACN,8BAAC,oCAAD;AACI,cAAE,EAAC,0BADP;AAEI,0BAAc,EAAC;AAFnB,YADJ;AAMH;;AAEDD,eAAO,GACH;AACI,mBAAS,EAAC,iBADd;AAEI,cAAI,EAAC,GAFT;AAGI,iBAAO,EAAE,KAAKE;AAHlB,WAKKD,UALL,CADJ;AASH,OA5BD,MA4BO;AACHD,eAAO,GACH;AACI,mBAAS,EAAC,iBADd;AAEI,cAAI,EAAC,GAFT;AAGI,iBAAO,EAAE,KAAKG;AAHlB,WAKI,8BAAC,oCAAD;AACI,YAAE,EAAC,uBADP;AAEI,wBAAc,EAAC;AAFnB,UALJ,CADJ;AAYH;;AAED,aACI;AAAK,iBAAS,EAAC;AAAf,SACKH,OADL,EAEI,yCAFJ,CADJ;AAMH,KAnIuD;;AAAA,uDAqIvC,MAAM;AACnB,UAAI,KAAK/U,KAAL,CAAW8U,SAAf,EAA0B;AACtB,YAAI,KAAK9U,KAAL,CAAW6U,WAAf,EAA4B;AACxB,iBACI,8BAAC,oCAAD;AACI,cAAE,EAAC,gCADP;AAEI,0BAAc,EAAC;AAFnB,YADJ;AAMH;;AAED,eACI,8BAAC,oCAAD;AACI,YAAE,EAAC,8BADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMH;;AAED,aACI,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH,KA9JuD;AAAA;;AAgKxDzT,QAAM,GAAG;AACL,UAAMuH,KAAK,GAAG,KAAKwM,WAAL,EAAd;;AAEA,QAAI,CAAC,KAAKnV,KAAL,CAAWoV,YAAhB,EAA8B;AAC1B,aAAO,IAAP;AACH;;AAED,QAAI,CAAC,KAAKpV,KAAL,CAAWqV,MAAhB,EAAwB;AACpB,aACI,8BAAC,mCAAD;AACI,aAAK,EAAE1M,KADX;AAEI,gBAAQ,EAAE,KAAK2M,iBAAL,EAFd;AAGI,eAAO,EAAEd,WAHb;AAII,qBAAa,EAAE,KAAKxU,KAAL,CAAW0F;AAJ9B,QADJ;AAQH;;AAED,WACI,8BAAC,mCAAD;AACI,WAAK,EAAEiD,KADX;AAEI,YAAM,EAAE,KAAK4M,aAAL,EAFZ;AAGI,eAAS,EAAE,KAAKC,cAAL,EAHf;AAII,iBAAW,EAAE,KAAKtU,KAAL,CAAWS,WAJ5B;AAKI,mBAAa,EAAE,KAAK3B,KAAL,CAAW0F,aAL9B;AAMI,WAAK,EAAC;AANV,MADJ;AAUH;;AA5LuD;;2BAAvC+O,sB,eACE;AACfY,QAAM,EAAEtT,oBAAS,CAACkG,IAAV,CAAehG,UADR;AAGf;AACA6S,WAAS,EAAE/S,oBAAS,CAACkG,IAAV,CAAehG,UAJX;AAMf;AACAmT,cAAY,EAAErT,oBAAS,CAACkG,IAAV,CAAehG,UAPd;AASf;AACA4S,aAAW,EAAE9S,oBAAS,CAACkG,IAAV,CAAehG,UAVb;AAYfyD,eAAa,EAAE3D,oBAAS,CAACG,IAAV,CAAeD,UAZf;AAafxB,SAAO,EAAEsB,oBAAS,CAACI,KAAV,CAAgB;AACrByS,iBAAa,EAAE7S,oBAAS,CAACG,IAAV,CAAeD;AADT,GAAhB;AAbM,C;;ACdvB;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AAEA,SAASG,2BAAT,CAAyBlB,KAAzB,EAAgC;AAC5B,QAAMuU,OAAO,GAAGC,6BAAU,CAACxU,KAAD,CAA1B;AACA,QAAMmH,MAAM,GAAGC,4BAAS,CAACpH,KAAD,CAAxB;AAEA,QAAMyU,WAAW,GAAGF,OAAO,IAAIA,OAAO,CAACG,UAAR,KAAuB,MAAlC,IAA4CH,OAAO,CAACI,GAAR,KAAgB,MAAhF;AAEA,QAAMC,UAAU,GAAGzN,MAAM,CAAC0N,+BAAP,KAA2C,MAA9D;AACA,QAAMlB,WAAW,GAAGc,WAAW,IAAItN,MAAM,CAAC2N,gCAAP,KAA4C,MAA/E;AAEA,QAAMnK,IAAI,GAAGnD,+BAAc,CAACxH,KAAD,CAA3B;AAEA,MAAI4T,SAAS,GAAG,KAAhB;AACA,MAAIM,YAAY,GAAG,KAAnB;;AACA,MAAIvJ,IAAJ,EAAU;AACNiJ,aAAS,GAAGjJ,IAAI,CAACoK,UAAjB;AACAb,gBAAY,GAAGU,UAAU,KAAKjK,IAAI,CAACvE,YAAL,KAAsB,EAAtB,IAA4BuE,IAAI,CAACvE,YAAL,KAAsB1E,4BAAS,CAACsT,YAAjE,CAAzB;AACH;;AAED,SAAO;AACHpB,aADG;AAEHM,gBAFG;AAGHP;AAHG,GAAP;AAKH;;AAED,SAAStS,8BAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH/B,WAAO,EAAEgC,mCAAkB,CAAC;AACxBmS,iDAAaA;AADW,KAAD,EAExBpS,QAFwB;AADxB,GAAP;AAKH;;AAEcE,qEAAO,CAACN,2BAAD,EAAkBG,8BAAlB,CAAP,CAA6CkS,sBAA7C,CAAf,E;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,MAAM0B,cAAc,GAAG,QAAvB;AACA,MAAMC,cAAc,GAAG,UAAvB;AACA,MAAMC,aAAa,GAAG,SAAtB;AACA,MAAMC,kBAAkB,GAAG,cAA3B;AAEe,MAAMC,gDAAN,SAAqC1W,eAAK,CAAC2W,SAA3C,CAAqD;AAsBhEzW,aAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,yEAgCE,MAAM;AACvB,WAAKI,QAAL,CAAc;AAACqW,0BAAkB,EAAEL;AAArB,OAAd;AACH,KAlCkB;;AAAA,wEAoCC,MAAM;AACtB,WAAKhW,QAAL,CAAc;AAACqW,0BAAkB,EAAEH,kBAArB;AAAyCI,cAAM,EAAE;AAAjD,OAAd;AACH,KAtCkB;;AAAA,wEAwCC,YAAY;AAC5B,WAAKC,mBAAL;AAEA,YAAMC,WAAW,GAAG,KAAKC,IAAL,CAAUC,mBAAV,GAAgC,KAAKD,IAAL,CAAUC,mBAAV,CAA8B5W,KAA9D,GAAsE,EAA1F;;AAEA,UAAI0W,WAAW,KAAK,EAApB,EAAwB;AACpB,aAAKxW,QAAL,CAAc;AAAC2W,oBAAU,EAAE7P,iCAAA,CAAsB,mCAAtB,EAA2D,6BAA3D;AAAb,SAAd;AACA;AACH;;AAED,WAAK9G,QAAL,CAAc;AAAC2W,kBAAU,EAAE,EAAb;AAAiBL,cAAM,EAAE;AAAzB,OAAd;AACA,WAAK1W,KAAL,CAAWgX,iBAAX,CAA6B,IAA7B,EAAmC,KAAKC,gBAAxC;AAEA,YAAMnS,MAAM,GAAG,KAAK9E,KAAL,CAAW6L,IAAX,GAAkB,KAAK7L,KAAL,CAAW6L,IAAX,CAAgB9G,EAAlC,GAAuC,EAAtD;AACA,YAAM;AAACO,YAAD;AAAOF;AAAP,UAAgB,MAAM,KAAKpF,KAAL,CAAWS,OAAX,CAAmByW,qBAAnB,CAAyCpS,MAAzC,EAAiD8R,WAAjD,CAA5B;;AAEA,UAAItR,IAAI,IAAI,KAAKpE,KAAL,CAAWuV,kBAAX,KAAkCL,cAA9C,EAA8D;AAC1D,aAAKhW,QAAL,CAAc;AAACqW,4BAAkB,EAAEJ,aAArB;AAAoCc,kBAAQ,EAAE7R,IAA9C;AAAoDoR,gBAAM,EAAE;AAA5D,SAAd;AACH,OAFD,MAEO,IAAItR,KAAJ,EAAW;AACd,aAAKhF,QAAL,CAAc;AAACuB,qBAAW,EAAEyD,KAAK,CAACC,OAApB;AAA6BqR,gBAAM,EAAE;AAArC,SAAd;AACH;AACJ,KA7DkB;;AAAA,uEA+DCU,aAAD,IAAmB;AAClC,WAAKhX,QAAL,CAAc;AACViX,wBAAgB,EAAE,IADR;AAEVC,oBAAY,EACR,8BAAC,oCAAD;AACI,YAAE,EAAC,uCADP;AAEI,wBAAc,EAAC;AAFnB,UAHM;AAQVC,sBAAc,EAAGrW,KAAD,IACZ,2CACI,8BAAC,wCAAD;AACI,YAAE,EAAC,yCADP;AAEI,wBAAc,EAAC;AAFnB,UADJ,EAKI,yCALJ,EAMI,yCANJ,EAOKA,KAAK,CAACuV,kBAAN,KAA6BL,cAA7B,GACG,2CACI;AAAQ,mBAAS,EAAC;AAAlB,WACI,8BAAC,oCAAD;AACI,YAAE,EAAC,4BADP;AAEI,wBAAc,EAAC;AAFnB,UADJ,CADJ,EAOI,8BAAC,oCAAD;AACI,YAAE,EAAC,mCADP;AAEI,wBAAc,EAAC;AAFnB,UAPJ,CADH,GAcG;AAAQ,mBAAS,EAAC;AAAlB,WACI,8BAAC,oCAAD;AACI,YAAE,EAAC,4BADP;AAEI,wBAAc,EAAC;AAFnB,UADJ,EAKKlV,KAAK,CAACiW,QAAN,CAAeK,KALpB,CArBR,CATM;AAwCVC,qBAAa,EACT,8BAAC,oCAAD;AACI,YAAE,EAAC,wCADP;AAEI,wBAAc,EAAC;AAFnB,UAzCM;AA8CVC,uBAAe,EAAE,MAAM;AACnB,eAAKf,mBAAL;AACAS,uBAAa;AAChB,SAjDS;AAkDVO,yBAAiB,EAAE;AAlDT,OAAd;AAoDH,KApHkB;;AAAA,0EAsHG,MAAM;AACxB,WAAKvX,QAAL,CAAc;AACViX,wBAAgB,EAAE,KADR;AAEVC,oBAAY,EAAE,IAFJ;AAGVC,sBAAc,EAAE,IAHN;AAIVE,qBAAa,EAAE,IAJL;AAKVC,uBAAe,EAAE,IALP;AAMVC,yBAAiB,EAAE;AANT,OAAd;AAQH,KA/HkB;;AAAA,yEAiIE,MAAM;AACvB,UAAI,CAACC,2BAAA,CAAwB,KAAK5X,KAAL,CAAW6L,IAAX,CAAgBgM,KAAxC,CAAL,EAAqD;AACjD,aAAKC,iBAAL;AACA;AACH;;AAED,WAAK1X,QAAL,CAAc;AACViX,wBAAgB,EAAE,IADR;AAEVC,oBAAY,EACR,8BAAC,oCAAD;AACI,YAAE,EAAC,yCADP;AAEI,wBAAc,EAAC;AAFnB,UAHM;AAQVC,sBAAc,EAAE,MACZ;AAAK,mBAAS,EAAC;AAAf,WACI,8BAAC,wCAAD;AACI,YAAE,EAAC,2CADP;AAEI,wBAAc,EAAC;AAFnB,UADJ,CATM;AAgBVE,qBAAa,EACT,8BAAC,oCAAD;AACI,YAAE,EAAC,0CADP;AAEI,wBAAc,EAAC;AAFnB,UAjBM;AAsBVC,uBAAe,EAAE,MAAM;AACnB,eAAKI,iBAAL;AACAC,2DAAU,CAAC,UAAD,EAAa,uCAAb,CAAV;AACH;AAzBS,OAAd;AA2BH,KAlKkB;;AAAA,wEAoKE9X,CAAD,IAAO;AACvB,UAAIiH,6BAAA,CAAmBjH,CAAnB,EAAsB2C,4BAAS,CAACoV,QAAV,CAAmBC,KAAzC,CAAJ,EAAqD;AACjD,aAAKC,kBAAL;AACH;AACJ,KAxKkB;;AAAA,yEA0KGC,OAAD,IAAa;AAC9B,YAAMX,KAAK,GAAG,KAAKxX,KAAL,CAAWoY,gBAAX,CAA4BD,OAA5B,CAAd;AAEA,WAAK/X,QAAL,CAAc;AACViX,wBAAgB,EAAE,IADR;AAEVC,oBAAY,EACR,8BAAC,oCAAD;AACI,YAAE,EAAC,yCADP;AAEI,wBAAc,EAAC;AAFnB,UAHM;AAQVC,sBAAc,EAAE,MACZ;AAAK,mBAAS,EAAC;AAAf,WACI,8BAAC,6CAAD;AACI,YAAE,EAAC,2CADP;AAEI,wBAAc,EAAC,qLAFnB;AAGI,gBAAM,EAAE;AACJX,uBAAW,EAAEY,KAAK,CAACZ;AADf;AAHZ,UADJ,CATM;AAmBVa,qBAAa,EACT,8BAAC,oCAAD;AACI,YAAE,EAAC,0CADP;AAEI,wBAAc,EAAC;AAFnB,UApBM;AAyBVC,uBAAe,EAAE,MAAM;AACnB,eAAKW,WAAL,CAAiBF,OAAjB;AACAJ,2DAAU,CAAC,UAAD,EAAa,0BAAb,CAAV;AACH;AA5BS,OAAd;AA8BH,KA3MkB;;AAAA,kEA6ML,MAAOI,OAAP,IAAmB;AAC7B,YAAM;AAAC/S;AAAD,UAAU,MAAM,KAAKpF,KAAL,CAAWS,OAAX,CAAmB6X,qBAAnB,CAAyCH,OAAzC,CAAtB;;AACA,UAAI/S,KAAJ,EAAW;AACP,aAAKhF,QAAL,CAAc;AAACuB,qBAAW,EAAEyD,KAAK,CAACC;AAApB,SAAd;AACH;;AACD,WAAKsR,mBAAL;AACH,KAnNkB;;AAAA,oEAqNH,MAAOwB,OAAP,IAAmB;AAC/B,YAAM;AAAC/S;AAAD,UAAU,MAAM,KAAKpF,KAAL,CAAWS,OAAX,CAAmB8X,qBAAnB,CAAyCJ,OAAzC,CAAtB;;AACA,UAAI/S,KAAJ,EAAW;AACP,aAAKhF,QAAL,CAAc;AAACuB,qBAAW,EAAEyD,KAAK,CAACC;AAApB,SAAd;AACH,OAFD,MAEO;AACH0S,yDAAU,CAAC,UAAD,EAAa,4BAAb,CAAV;AACH;AACJ,KA5NkB;;AAAA,sEA8ND,MAAOI,OAAP,IAAmB;AACjC,YAAM;AAAC/S;AAAD,UAAU,MAAM,KAAKpF,KAAL,CAAWS,OAAX,CAAmB+X,sBAAnB,CAA0CL,OAA1C,CAAtB;;AACA,UAAI/S,KAAJ,EAAW;AACP,aAAKhF,QAAL,CAAc;AAACuB,qBAAW,EAAEyD,KAAK,CAACC;AAApB,SAAd;AACH,OAFD,MAEO;AACH0S,yDAAU,CAAC,UAAD,EAAa,8BAAb,CAAV;AACH;AACJ,KArOkB;;AAGf,SAAK7W,KAAL,GAAa;AACTmW,sBAAgB,EAAE,KADT;AAETF,cAAQ,EAAE,IAFD;AAGTV,wBAAkB,EAAEH,kBAHX;AAITS,gBAAU,EAAE,EAJH;AAKTpV,iBAAW,EAAE,IALJ;AAMT+U,YAAM,EAAE;AANC,KAAb;AAQH;;AAED+B,mBAAiB,GAAG;AAChB,SAAKzY,KAAL,CAAWS,OAAX,CAAmBiY,qBAAnB;AACA,UAAM5T,MAAM,GAAG,KAAK9E,KAAL,CAAW6L,IAAX,GAAkB,KAAK7L,KAAL,CAAW6L,IAAX,CAAgB9G,EAAlC,GAAuC,EAAtD;AACA,SAAK/E,KAAL,CAAWS,OAAX,CAAmBkY,0BAAnB,CAA8C7T,MAA9C,EAAsD,CAAtD,EAAyD,GAAzD;AACH;;AAED8T,kCAAgC,CAACC,SAAD,EAAY;AAAE;AAC1C,QAAI,CAACA,SAAS,CAACxD,MAAX,IAAqB,KAAKrV,KAAL,CAAWqV,MAApC,EAA4C;AACxC,WAAKjV,QAAL,CAAc;AACViX,wBAAgB,EAAE,KADR;AAEVF,gBAAQ,EAAE,IAFA;AAGVV,0BAAkB,EAAEH,kBAHV;AAIVS,kBAAU,EAAE,EAJF;AAKVpV,mBAAW,EAAE,IALH;AAMV+U,cAAM,EAAE;AANE,OAAd;AAQH;AACJ;;AAyMDtV,QAAM,GAAG;AACL,QAAI0X,cAAc,GAAG,EAArB;;AAEA,QAAI,CAAC,KAAK9Y,KAAL,CAAWqV,MAAhB,EAAwB;AACpB,YAAM0D,QAAQ,GAAG7R,iCAAA,CAAsB,kCAAtB,EAA0D,oDAA1D,CAAjB;AAEA,aACI,8BAAC,mCAAD;AACI,aAAK,EAAEA,iCAAA,CAAsB,4BAAtB,EAAoD,wBAApD,CADX;AAEI,gBAAQ,EAAE6R,QAFd;AAGI,eAAO,EAAE5C,cAHb;AAII,qBAAa,EAAE,KAAKnW,KAAL,CAAW0F;AAJ9B,QADJ;AAQH;;AAED,UAAMsT,SAAS,GAAG,EAAlB;AACAvV,UAAM,CAACwV,MAAP,CAAc,KAAKjZ,KAAL,CAAWoY,gBAAzB,EAA2C5T,OAA3C,CAAoDgT,KAAD,IAAW;AAC1D,UAAI,KAAKtW,KAAL,CAAWiW,QAAX,IAAuB,KAAKjW,KAAL,CAAWiW,QAAX,CAAoBpS,EAApB,KAA2ByS,KAAK,CAACzS,EAA5D,EAAgE;AAC5D;AACH;;AAED,UAAImU,UAAJ;AACA,UAAIC,YAAJ;;AAEA,UAAI3B,KAAK,CAAC4B,SAAV,EAAqB;AACjBF,kBAAU,GACN;AACI,cAAI,EAAE1B,KAAK,CAACzS,EAAN,GAAW,aADrB;AAEI,cAAI,EAAC,GAFT;AAGI,iBAAO,EAAG9E,CAAD,IAAO;AACZA,aAAC,CAACyU,cAAF;AACA,iBAAK2E,eAAL,CAAqB7B,KAAK,CAACzS,EAA3B;AACH;AANL,WAQI,8BAAC,oCAAD;AACI,YAAE,EAAC,iCADP;AAEI,wBAAc,EAAC;AAFnB,UARJ,CADJ;AAcH,OAfD,MAeO;AACHoU,oBAAY,GACR;AAAM,mBAAS,EAAC;AAAhB,WACI,8BAAC,oCAAD;AACI,YAAE,EAAC,yCADP;AAEI,wBAAc,EAAC;AAFnB,UADJ,CADJ;AAQAD,kBAAU,GACN;AACI,cAAI,EAAE1B,KAAK,CAACzS,EAAN,GAAW,WADrB;AAEI,cAAI,EAAC,GAFT;AAGI,iBAAO,EAAG9E,CAAD,IAAO;AACZA,aAAC,CAACyU,cAAF;AACA,iBAAK4E,aAAL,CAAmB9B,KAAK,CAACzS,EAAzB;AACH;AANL,WAQI,8BAAC,oCAAD;AACI,YAAE,EAAC,+BADP;AAEI,wBAAc,EAAC;AAFnB,UARJ,CADJ;AAeH;;AAEDiU,eAAS,CAACrU,IAAV,CACI;AACI,WAAG,EAAE6S,KAAK,CAACzS,EADf;AAEI,iBAAS,EAAC;AAFd,SAII;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,gCADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,EAKKyS,KAAK,CAACZ,WALX,EAMKuC,YANL,CAJJ,EAYI;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,8BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,EAKK3B,KAAK,CAACzS,EALX,CAZJ,EAmBI,2CACKmU,UADL,EAEK,KAFL,EAGI;AACI,YAAI,EAAE1B,KAAK,CAACzS,EAAN,GAAW,SADrB;AAEI,YAAI,EAAC,GAFT;AAGI,eAAO,EAAG9E,CAAD,IAAO;AACZA,WAAC,CAACyU,cAAF;AACA,eAAK6E,kBAAL,CAAwB/B,KAAK,CAACzS,EAA9B;AACH;AANL,SAQI,8BAAC,oCAAD;AACI,UAAE,EAAC,6BADP;AAEI,sBAAc,EAAC;AAFnB,QARJ,CAHJ,CAnBJ,EAoCI;AAAI,iBAAS,EAAC;AAAd,QApCJ,CADJ;AAwCH,KAzFD;AA2FA,QAAIyU,WAAJ;;AACA,QAAIR,SAAS,CAAClS,MAAV,KAAqB,CAAzB,EAA4B;AACxB0S,iBAAW,GACP,8BAAC,oCAAD;AACI,WAAG,EAAC,UADR;AAEI,UAAE,EAAC,2CAFP;AAGI,sBAAc,EAAC;AAHnB,QADJ;AAOH;;AAED,QAAIC,SAAJ;;AACA,QAAIC,sCAAQ,EAAZ,EAAgB;AACZD,eAAS,GACL,4CACI,8BAAC,6CAAD;AACI,UAAE,EAAC,yCADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CADJ;AAQH,KATD,MASO;AACHA,eAAS,GACL,4CACI,8BAAC,6CAAD;AACI,UAAE,EAAC,kCADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CADJ;AAQH;;AAED,QAAIE,eAAJ;;AACA,QAAI,KAAKzY,KAAL,CAAWuV,kBAAX,KAAkCL,cAAtC,EAAsD;AAClDuD,qBAAe,GACX;AAAK,iBAAS,EAAC;AAAf,SACI;AAAK,iBAAS,EAAC;AAAf,SACI;AAAO,iBAAS,EAAC;AAAjB,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CADJ,EAOI;AAAK,iBAAS,EAAC;AAAf,SACI;AACI,iBAAS,EAAE,IADf;AAEI,WAAG,EAAC,qBAFR;AAGI,iBAAS,EAAC,cAHd;AAII,YAAI,EAAC,MAJT;AAKI,iBAAS,EAAE,EALf;AAMI,kBAAU,EAAE,KAAKC;AANrB,QADJ,CAPJ,CADJ,EAmBI,2CACI;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,+BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,CADJ,EAOI,2CACI;AACI,UAAE,EAAC,aADP;AAEI,iBAAS,EAAC;AAFd,SAIK,KAAK1Y,KAAL,CAAW6V,UAJhB,CADJ,CAPJ,EAeI,8BAAC,8BAAD;AACI,gBAAQ,EAAC,aADb;AAEI,qBAAa,EACT,8BAAC,oCAAD;AACI,YAAE,EAAC,2BADP;AAEI,wBAAc,EAAC;AAFnB,UAHR;AAQI,cAAM,EAAE,KAAK7V,KAAL,CAAWwV,MARvB;AASI,eAAO,EAAE,KAAKwB;AATlB,QAfJ,EA0BI;AACI,iBAAS,EAAC,cADd;AAEI,eAAO,EAAE,KAAK2B;AAFlB,SAII,8BAAC,oCAAD;AACI,UAAE,EAAC,6BADP;AAEI,sBAAc,EAAC;AAFnB,QAJJ,CA1BJ,CAnBJ,CADJ;AA0DH,KA3DD,MA2DO,IAAI,KAAK3Y,KAAL,CAAWuV,kBAAX,KAAkCJ,aAAtC,EAAqD;AACxD,UAAI2C,SAAS,CAAClS,MAAV,KAAqB,CAAzB,EAA4B;AACxBgS,sBAAc,GAAG,SAAjB;AACH;;AAEDa,qBAAe,GACX;AACI,iBAAS,EAAC;AADd,SAGI,8BAAC,+BAAD;AAAa,2BAAmB,EAAC;AAAjC,QAHJ,EAII,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC;AAFnB,QAJJ,EAQI,yCARJ,EASI,yCATJ,EAUI;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,EAKK,KAAKzY,KAAL,CAAWiW,QAAX,CAAoBP,WALzB,CAVJ,EAiBI;AAAK,iBAAS,EAAC;AAAf,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,yBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,EAKK,KAAK1V,KAAL,CAAWiW,QAAX,CAAoBpS,EALzB,CAjBJ,EAwBI;AAAQ,iBAAS,EAAC;AAAlB,SACI,8BAAC,oCAAD;AACI,UAAE,EAAC,4BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ,EAKK,KAAK7D,KAAL,CAAWiW,QAAX,CAAoBK,KALzB,CAxBJ,CADJ;AAkCH,KAvCM,MAuCA;AACHmC,qBAAe,GACX;AACI,iBAAS,EAAC,iBADd;AAEI,YAAI,EAAC,GAFT;AAGI,eAAO,EAAE,KAAKG;AAHlB,SAKI,8BAAC,oCAAD;AACI,UAAE,EAAC,6BADP;AAEI,sBAAc,EAAC;AAFnB,QALJ,CADJ;AAYH;;AAED,UAAMtT,MAAM,GAAG,EAAf;AACAA,UAAM,CAAC7B,IAAP,CACI;AACI,SAAG,EAAC,eADR;AAEI,eAAS,EAAC;AAFd,OAII;AAAK,SAAG,EAAC;AAAT,OACI;AAAK,eAAS,EAAE,4BAA4BmU;AAA5C,OACKE,SADL,EAEKQ,WAFL,CADJ,EAKKG,eALL,CAJJ,CADJ;AAeA,WACI,2CACI,8BAAC,mCAAD;AACI,WAAK,EAAEzS,iCAAA,CAAsB,4BAAtB,EAAoD,wBAApD,CADX;AAEI,YAAM,EAAEV,MAFZ;AAGI,eAAS,EAAEiT,SAHf;AAII,kBAAY,EAAC,KAJjB;AAKI,iBAAW,EAAE,KAAKvY,KAAL,CAAWS,WAL5B;AAMI,mBAAa,EAAE,KAAK3B,KAAL,CAAW0F,aAN9B;AAOI,WAAK,EAAC,MAPV;AAQI,YAAM,EAAE,KAAKxE,KAAL,CAAWwV,MARvB;AASI,sBAAgB,EACZ,8BAAC,oCAAD;AACI,UAAE,EAAC,8BADP;AAEI,sBAAc,EAAC;AAFnB;AAVR,MADJ,EAiBI,8BAAC,gCAAD;AACI,WAAK,EAAE,KAAKxV,KAAL,CAAWoW,YADtB;AAEI,aAAO,EAAE,KAAKpW,KAAL,CAAWqW,cAAX,GAA4B,KAAKrW,KAAL,CAAWqW,cAAX,CAA0B,KAAKrW,KAA/B,CAA5B,GAAoE,IAFjF;AAGI,uBAAiB,EAAE,KAAKA,KAAL,CAAWuW,aAHlC;AAII,UAAI,EAAE,KAAKvW,KAAL,CAAWmW,gBAJrB;AAKI,eAAS,EAAE,KAAKnW,KAAL,CAAWwW,eAAX,KAA+B,MAAM,CAAE,CAAvC,CALf,CAKyD;AALzD;AAMI,cAAQ,EAAE,KAAKf,mBANnB;AAOI,gBAAU,EAAE,KAAKzV,KAAL,CAAWyW;AAP3B,MAjBJ,CADJ;AA6BH;;AAxiB+D;;yCAA/CpB,gD,eACE;AACf1K,MAAI,EAAE9J,oBAAS,CAACgG,MADD;AAEfsN,QAAM,EAAEtT,oBAAS,CAACkG,IAFH;AAGfvC,eAAa,EAAE3D,oBAAS,CAACG,IAHV;AAIfkW,kBAAgB,EAAErW,oBAAS,CAACgG,MAJb;AAKfiP,mBAAiB,EAAEjV,oBAAS,CAACG,IAAV,CAAeD,UALnB;AAMfxB,SAAO,EAAEsB,oBAAS,CAACI,KAAV,CAAgB;AACrBwW,8BAA0B,EAAE5W,oBAAS,CAACG,IAAV,CAAeD,UADtB;AAErBiV,yBAAqB,EAAEnV,oBAAS,CAACG,IAAV,CAAeD,UAFjB;AAGrBqW,yBAAqB,EAAEvW,oBAAS,CAACG,IAAV,CAAeD,UAHjB;AAIrBsW,yBAAqB,EAAExW,oBAAS,CAACG,IAAV,CAAeD,UAJjB;AAKrBuW,0BAAsB,EAAEzW,oBAAS,CAACG,IAAV,CAAeD,UALlB;AAMrByW,yBAAqB,EAAE3W,oBAAS,CAACG,IAAV,CAAeD;AANjB,GAAhB,EAONA;AAbY,C;;yCADFsU,gD,kBAiBK;AAClB1K,MAAI,EAAE,EADY;AAElBwJ,QAAM,EAAE;AAFU,C;;AC1C1B;AACA;AAEA;AACA;AACA;AAEA;;AAEA,SAASjT,yCAAT,CAAyBlB,KAAzB,EAAgC;AAC5B,SAAO;AACHkX,oBAAgB,EAAElX,KAAK,CAAC6Y,QAAN,CAAeC,KAAf,CAAqBC;AADpC,GAAP;AAGH;;AAED,SAAS1X,4CAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH/B,WAAO,EAAEgC,mCAAkB,CAAC;AACxBkW,6EADwB;AAExBzB,mEAFwB;AAGxBoB,mEAHwB;AAIxBC,mEAJwB;AAKxBC,qEALwB;AAMxBE,mEAAqBA;AANG,KAAD,EAOxBlW,QAPwB;AADxB,GAAP;AAUH;;AAEcE,mFAAO,CAACN,yCAAD,EAAkBG,4CAAlB,CAAP,CAA6CgU,gDAA7C,CAAf,E;;;;AC5BA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,MAAM/B,kCAAW,GAAG,KAApB;AACA,MAAM0F,gBAAgB,GAAG,UAAzB;AACA,MAAMC,cAAc,GAAG,QAAvB;AACA,MAAMC,YAAY,GAAG,MAArB;AACA,MAAMjE,qCAAc,GAAG,QAAvB;AAEe,MAAMkE,kCAAN,SAA0Bxa,eAAK,CAACC,aAAhC,CAA8C;AAsDzDC,aAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,2EAyBO,YAAY;AAClC,YAAM;AAACsF,YAAD;AAAOF;AAAP,UAAgB,MAAM,KAAKpF,KAAL,CAAWS,OAAX,CAAmB6Z,sBAAnB,EAA5B;;AACA,UAAIhV,IAAJ,EAAU;AACN,aAAKlF,QAAL,CAAc;AAACma,wBAAc,EAAEjV,IAAjB;AAAuB3D,qBAAW,EAAE;AAApC,SAAd,EADM,CACoD;AAC7D,OAFD,MAEO,IAAIyD,KAAJ,EAAW;AACd,aAAKhF,QAAL,CAAc;AAACuB,qBAAW,EAAEyD,KAAK,CAACC;AAApB,SAAd,EADc,CAC+B;AAChD;AACJ,KAhCkB;;AAAA,kEAkCF,YAAY;AACzB,YAAMwG,IAAI,GAAG,KAAK7L,KAAL,CAAW6L,IAAxB;AACA,YAAM2O,eAAe,GAAG,KAAKtZ,KAAL,CAAWsZ,eAAnC;AACA,YAAMC,WAAW,GAAG,KAAKvZ,KAAL,CAAWuZ,WAA/B;AACA,YAAMC,eAAe,GAAG,KAAKxZ,KAAL,CAAWwZ,eAAnC;;AAEA,UAAIF,eAAe,KAAK,EAAxB,EAA4B;AACxB,aAAKpa,QAAL,CAAc;AAACua,uBAAa,EAAEzT,iCAAA,CAAsB,6CAAtB,EAAqE,qCAArE,CAAhB;AAA6HvF,qBAAW,EAAE;AAA1I,SAAd;AACA;AACH;;AAED,YAAM;AAACiZ,aAAD;AAAQxV;AAAR,UAAiB8B,iCAAA,CAAsBuT,WAAtB,EAAmC,KAAKza,KAAL,CAAW6a,cAA9C,CAAvB;;AACA,UAAI,CAACD,KAAD,IAAUxV,KAAd,EAAqB;AACjB,aAAKhF,QAAL,CAAc;AACVua,uBAAa,EAAEvV,KADL;AAEVzD,qBAAW,EAAE;AAFH,SAAd;AAIA;AACH;;AAED,UAAI8Y,WAAW,KAAKC,eAApB,EAAqC;AACjC,cAAMI,YAAY,GAAGrX,MAAM,CAACsX,MAAP,CAAc,KAAKC,eAAL,EAAd,EAAsC;AAACL,uBAAa,EAAEzT,iCAAA,CAAsB,2CAAtB,EAAmE,6CAAnE,CAAhB;AAAmIvF,qBAAW,EAAE;AAAhJ,SAAtC,CAArB;AACA,aAAKvB,QAAL,CAAc0a,YAAd;AACA;AACH;;AAED,WAAK1a,QAAL,CAAc;AAAC6a,sBAAc,EAAE;AAAjB,OAAd;AAEA,YAAM;AAAC3V,YAAD;AAAOF,aAAK,EAAEkH;AAAd,UAAqB,MAAM,KAAKtM,KAAL,CAAWS,OAAX,CAAmBya,kBAAnB,CAC7BrP,IAAI,CAAC9G,EADwB,EAE7ByV,eAF6B,EAG7BC,WAH6B,CAAjC;;AAKA,UAAInV,IAAJ,EAAU;AACN,aAAKtF,KAAL,CAAW0F,aAAX,CAAyB,EAAzB;AACA,aAAK1F,KAAL,CAAWS,OAAX,CAAmB0R,KAAnB;AACA,aAAK/R,QAAL,CAAc,KAAK4a,eAAL,EAAd;AACH,OAJD,MAIO,IAAI1O,GAAJ,EAAS;AACZ,cAAMpL,KAAK,GAAG,KAAK8Z,eAAL,EAAd;;AACA,YAAI1O,GAAG,CAACjH,OAAR,EAAiB;AACbnE,eAAK,CAACS,WAAN,GAAoB2K,GAAG,CAACjH,OAAxB;AACH,SAFD,MAEO;AACHnE,eAAK,CAACS,WAAN,GAAoB2K,GAApB;AACH;;AACDpL,aAAK,CAACyZ,aAAN,GAAsB,EAAtB;AACA,aAAKva,QAAL,CAAcc,KAAd;AACH;AACJ,KAjFkB;;AAAA,yEAmFMjB,CAAD,IAAO;AAC3B,WAAKG,QAAL,CAAc;AAACoa,uBAAe,EAAEva,CAAC,CAAC+G,MAAF,CAAS9G;AAA3B,OAAd;AACH,KArFkB;;AAAA,qEAuFED,CAAD,IAAO;AACvB,WAAKG,QAAL,CAAc;AAACqa,mBAAW,EAAExa,CAAC,CAAC+G,MAAF,CAAS9G;AAAvB,OAAd;AACH,KAzFkB;;AAAA,yEA2FMD,CAAD,IAAO;AAC3B,WAAKG,QAAL,CAAc;AAACsa,uBAAe,EAAEza,CAAC,CAAC+G,MAAF,CAAS9G;AAA3B,OAAd;AACH,KA7FkB;;AAAA,kEA+FF,MAAOD,CAAP,IAAa;AAC1BA,OAAC,CAACyU,cAAF;AAEA,YAAMyG,KAAK,GAAGlb,CAAC,CAACE,aAAF,CAAgBib,YAAhB,CAA6B,UAA7B,CAAd;AAEA,YAAM;AAAC9V,YAAD;AAAOF;AAAP,UAAgB,MAAM,KAAKpF,KAAL,CAAWS,OAAX,CAAmB4a,mBAAnB,CAAuCF,KAAvC,CAA5B;;AACA,UAAI7V,IAAJ,EAAU;AACN,cAAMiV,cAAc,GAAG,KAAKrZ,KAAL,CAAWqZ,cAAX,CAA0Be,MAA1B,CAAkCC,GAAD,IAAS;AAC7D,iBAAOA,GAAG,CAACxW,EAAJ,KAAWoW,KAAlB;AACH,SAFsB,CAAvB;AAGA,aAAK/a,QAAL,CAAc;AAACma,wBAAD;AAAiB5Y,qBAAW,EAAE;AAA9B,SAAd;AACH,OALD,MAKO,IAAIyD,KAAJ,EAAW;AACd,aAAKhF,QAAL,CAAc;AAACuB,qBAAW,EAAEyD,KAAK,CAACC;AAApB,SAAd;AACH;AACJ,KA7GkB;;AAAA,uEA+GI/E,OAAD,IAAa;AAC/B,UAAIA,OAAJ,EAAa;AACT,aAAKN,KAAL,CAAW0F,aAAX,CAAyBpF,OAAzB;AACH,OAFD,MAEO;AACH,gBAAQ,KAAKN,KAAL,CAAWqB,aAAnB;AACA,eAAKmT,kCAAL;AACA,eAAK2F,cAAL;AACA,eAAKhE,qCAAL;AACA,eAAKiE,YAAL;AACI,iBAAKha,QAAL,CAAc;AACVuB,yBAAW,EAAE;AADH,aAAd;AAGA;;AACJ,eAAKuY,gBAAL;AACI,iBAAK9Z,QAAL,CAAc;AACVoa,6BAAe,EAAE,EADP;AAEVC,yBAAW,EAAE,EAFH;AAGVC,6BAAe,EAAE,EAHP;AAIV/Y,yBAAW,EAAE,IAJH;AAKVgZ,2BAAa,EAAE;AALL,aAAd;AAOA;;AACJ;AAlBA;;AAqBA,aAAK3a,KAAL,CAAW0F,aAAX,CAAyB,EAAzB;AACH;AACJ,KA1IkB;;AAAA,yEA4IK,MAAM;AAC1B,UAAI,KAAK1F,KAAL,CAAWqB,aAAX,KAA6B6Y,gBAAjC,EAAmD;AAC/C,cAAM1T,MAAM,GAAG,EAAf;AACA,YAAIgV,MAAJ;;AAEA,YAAI,KAAKxb,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC,EAArC,EAAyC;AACrCkU,gBAAM,GAAG,KAAKC,cAAd;AAEAjV,gBAAM,CAAC7B,IAAP,CACI;AACI,eAAG,EAAC,2BADR;AAEI,qBAAS,EAAC;AAFd,aAII;AAAO,qBAAS,EAAC;AAAjB,aACI,8BAAC,oCAAD;AACI,cAAE,EAAC,wCADP;AAEI,0BAAc,EAAC;AAFnB,YADJ,CAJJ,EAUI;AAAK,qBAAS,EAAC;AAAf,aACI;AACI,cAAE,EAAC,iBADP;AAEI,qBAAS,EAAE,IAFf;AAGI,qBAAS,EAAC,cAHd;AAII,gBAAI,EAAC,UAJT;AAKI,oBAAQ,EAAE,KAAK+W,qBALnB;AAMI,iBAAK,EAAE,KAAKxa,KAAL,CAAWsZ;AANtB,YADJ,CAVJ,CADJ;AAuBAhU,gBAAM,CAAC7B,IAAP,CACI;AACI,eAAG,EAAC,uBADR;AAEI,qBAAS,EAAC;AAFd,aAII;AAAO,qBAAS,EAAC;AAAjB,aACI,8BAAC,oCAAD;AACI,cAAE,EAAC,oCADP;AAEI,0BAAc,EAAC;AAFnB,YADJ,CAJJ,EAUI;AAAK,qBAAS,EAAC;AAAf,aACI;AACI,cAAE,EAAC,aADP;AAEI,qBAAS,EAAC,cAFd;AAGI,gBAAI,EAAC,UAHT;AAII,oBAAQ,EAAE,KAAKgX,iBAJnB;AAKI,iBAAK,EAAE,KAAKza,KAAL,CAAWuZ;AALtB,YADJ,CAVJ,CADJ;AAsBAjU,gBAAM,CAAC7B,IAAP,CACI;AACI,eAAG,EAAC,6BADR;AAEI,qBAAS,EAAC;AAFd,aAII;AAAO,qBAAS,EAAC;AAAjB,aACI,8BAAC,oCAAD;AACI,cAAE,EAAC,uCADP;AAEI,0BAAc,EAAC;AAFnB,YADJ,CAJJ,EAUI;AAAK,qBAAS,EAAC;AAAf,aACI;AACI,cAAE,EAAC,iBADP;AAEI,qBAAS,EAAC,cAFd;AAGI,gBAAI,EAAC,UAHT;AAII,oBAAQ,EAAE,KAAKiX,qBAJnB;AAKI,iBAAK,EAAE,KAAK1a,KAAL,CAAWwZ;AALtB,YADJ,CAVJ,CADJ;AAsBH,SAtED,MAsEO,IAAI,KAAK1a,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACiZ,cAA/C,EAA+D;AAClErV,gBAAM,CAAC7B,IAAP,CACI;AACI,eAAG,EAAC,gBADR;AAEI,qBAAS,EAAC;AAFd,aAII;AAAK,qBAAS,EAAC;AAAf,aACI,8BAAC,oCAAD;AACI,cAAE,EAAC,iDADP;AAEI,0BAAc,EAAC;AAFnB,YADJ,CAJJ,CADJ;AAaH,SAdM,MAcA,IAAI,KAAK3E,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACsT,YAA/C,EAA6D;AAChE1P,gBAAM,CAAC7B,IAAP,CACI;AACI,eAAG,EAAC,gBADR;AAEI,qBAAS,EAAC;AAFd,aAII;AAAK,qBAAS,EAAC;AAAf,aACI,8BAAC,oCAAD;AACI,cAAE,EAAC,+CADP;AAEI,0BAAc,EAAC;AAFnB,YADJ,CAJJ,CADJ;AAaH,SAdM,MAcA,IAAI,KAAK3E,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACkZ,YAA/C,EAA6D;AAChEtV,gBAAM,CAAC7B,IAAP,CACI;AACI,eAAG,EAAC,gBADR;AAEI,qBAAS,EAAC;AAFd,aAII;AAAK,qBAAS,EAAC;AAAf,aACI,8BAAC,oCAAD;AACI,cAAE,EAAC,+CADP;AAEI,0BAAc,EAAC;AAFnB,YADJ,CAJJ,CADJ;AAaH,SAdM,MAcA,IAAI,KAAK3E,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACmZ,cAA/C,EAA+D;AAClEvV,gBAAM,CAAC7B,IAAP,CACI;AACI,eAAG,EAAC,gBADR;AAEI,qBAAS,EAAC;AAFd,aAII;AAAK,qBAAS,EAAC;AAAf,aACI,8BAAC,oCAAD;AACI,cAAE,EAAC,iDADP;AAEI,0BAAc,EAAC;AAFnB,YADJ,CAJJ,CADJ;AAaH,SAdM,MAcA,IAAI,KAAK3E,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACoZ,iBAA/C,EAAkE;AACrExV,gBAAM,CAAC7B,IAAP,CACI;AACI,eAAG,EAAC,gBADR;AAEI,qBAAS,EAAC;AAFd,aAII;AAAK,qBAAS,EAAC;AAAf,aACI,8BAAC,oCAAD;AACI,cAAE,EAAC,oDADP;AAEI,0BAAc,EAAC;AAFnB,YADJ,CAJJ,CADJ;AAaH;;AAED,eACI,8BAAC,mCAAD;AACI,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,iCADP;AAEI,0BAAc,EAAC;AAFnB,YAFR;AAOI,gBAAM,EAAE6B,MAPZ;AAQI,gBAAM,EAAEgV,MARZ;AASI,gBAAM,EAAE,KAAKta,KAAL,CAAW+Z,cATvB;AAUI,qBAAW,EAAE,KAAK/Z,KAAL,CAAWS,WAV5B;AAWI,qBAAW,EAAE,KAAKT,KAAL,CAAWyZ,aAX5B;AAYI,uBAAa,EAAE,KAAK/Y;AAZxB,UADJ;AAgBH;;AAED,UAAImX,QAAJ;;AAEA,UAAI,KAAK/Y,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC,EAArC,EAAyC;AACrC,cAAMiM,CAAC,GAAG,IAAI0I,IAAJ,CAAS,KAAKjc,KAAL,CAAW6L,IAAX,CAAgBqQ,oBAAzB,CAAV;AAEAnD,gBAAQ,GACJ,8BAAC,oCAAD;AACI,YAAE,EAAC,oCADP;AAEI,wBAAc,EAAC,+BAFnB;AAGI,gBAAM,EAAE;AACJoD,gBAAI,EACA,8BAAC,iCAAD;AACI,mBAAK,EAAE5I,CADX;AAEI,iBAAG,EAAC,SAFR;AAGI,mBAAK,EAAC,OAHV;AAII,kBAAI,EAAC;AAJT,cAFA;AASJ6I,gBAAI,EACA,8BAAC,iCAAD;AACI,mBAAK,EAAE7I,CADX;AAEI,oBAAM,EAAE,CAAC,KAAKvT,KAAL,CAAWkM,YAFxB;AAGI,kBAAI,EAAC,SAHT;AAII,oBAAM,EAAC;AAJX;AAVA;AAHZ,UADJ;AAwBH,OA3BD,MA2BO,IAAI,KAAKlM,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACiZ,cAA/C,EAA+D;AAClE9C,gBAAQ,GACJ,8BAAC,oCAAD;AACI,YAAE,EAAC,oCADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMH,OAPM,MAOA,IAAI,KAAK/Y,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACsT,YAA/C,EAA6D;AAChE6C,gBAAQ,GACJ,8BAAC,oCAAD;AACI,YAAE,EAAC,kCADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMH,OAPM,MAOA,IAAI,KAAK/Y,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACkZ,YAA/C,EAA6D;AAChE/C,gBAAQ,GACJ,8BAAC,oCAAD;AACI,YAAE,EAAC,kCADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMH,OAPM,MAOA,IAAI,KAAK/Y,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACmZ,cAA/C,EAA+D;AAClEhD,gBAAQ,GACJ,8BAAC,oCAAD;AACI,YAAE,EAAC,oCADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMH,OAPM,MAOA,IAAI,KAAK/Y,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACoZ,iBAA/C,EAAkE;AACrEjD,gBAAQ,GACJ,8BAAC,oCAAD;AACI,YAAE,EAAC,uCADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMH;;AAED,aACI,8BAAC,mCAAD;AACI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,iCADP;AAEI,wBAAc,EAAC;AAFnB,UAFR;AAOI,gBAAQ,EAAEA,QAPd;AAQI,eAAO,EAAEmB,gBARb;AASI,qBAAa,EAAE,KAAKtY,mBATxB;AAUI,eAAO,EAAE;AAVb,QADJ;AAcH,KAjYkB;;AAAA,uEAmYG,MAAM;AACxB,YAAMiK,IAAI,GAAG,KAAK7L,KAAL,CAAW6L,IAAxB;;AAEA,UAAI,KAAK7L,KAAL,CAAWqB,aAAX,KAA6B8Y,cAAjC,EAAiD;AAC7C,YAAIkC,WAAJ;AACA,YAAIC,YAAJ;AACA,YAAIC,YAAJ;AACA,YAAIC,eAAJ;AACA,YAAIC,UAAJ;AACA,YAAIC,UAAJ;;AAEA,YAAI7Q,IAAI,CAACvE,YAAL,KAAsB,EAA1B,EAA8B;AAC1B,cAAI,KAAKtH,KAAL,CAAW2c,sBAAf,EAAuC;AACnCL,wBAAY,GACR;AAAK,uBAAS,EAAC;AAAf,eACI,8BAAC,gCAAD;AACI,uBAAS,EAAC,iBADd;AAEI,gBAAE,EAAE,iCAAiCM,kBAAkB,CAAC/Q,IAAI,CAACqE,KAAN,CAAnD,GAAkE,YAAlE,GAAiFrE,IAAI,CAACvE,YAAtF,GAAqG,YAArG,GAAoH1E,4BAAS,CAACiZ;AAFtI,eAII,8BAAC,oCAAD;AACI,gBAAE,EAAC,qCADP;AAEI,4BAAc,EAAC;AAFnB,cAJJ,CADJ,EAUI,yCAVJ,CADJ;AAcH;;AAED,cAAI,KAAK7b,KAAL,CAAW6c,sBAAf,EAAuC;AACnCN,wBAAY,GACR;AAAK,uBAAS,EAAC;AAAf,eACI,8BAAC,gCAAD;AACI,uBAAS,EAAC,iBADd;AAEI,gBAAE,EAAE,iCAAiCK,kBAAkB,CAAC/Q,IAAI,CAACqE,KAAN,CAAnD,GAAkE,YAAlE,GAAiFrE,IAAI,CAACvE,YAAtF,GAAqG,YAArG,GAAoH1E,4BAAS,CAACmZ;AAFtI,eAII,8BAAC,oCAAD;AACI,gBAAE,EAAC,qCADP;AAEI,4BAAc,EAAC;AAFnB,cAJJ,CADJ,EAUI,yCAVJ,CADJ;AAcH;;AAED,cAAI,KAAK/b,KAAL,CAAW8c,yBAAf,EAA0C;AACtCN,2BAAe,GACX;AAAK,uBAAS,EAAC;AAAf,eACI,8BAAC,gCAAD;AACI,uBAAS,EAAC,iBADd;AAEI,gBAAE,EAAE,iCAAiCI,kBAAkB,CAAC/Q,IAAI,CAACqE,KAAN,CAAnD,GAAkE,YAAlE,GAAiFrE,IAAI,CAACvE,YAAtF,GAAqG,YAArG,GAAoH1E,4BAAS,CAACoZ;AAFtI,eAII,8BAAC,oCAAD;AACI,gBAAE,EAAC,wCADP;AAEI,4BAAc,EAAC;AAFnB,cAJJ,CADJ,EAUI,yCAVJ,CADJ;AAcH;;AAED,cAAI,KAAKhc,KAAL,CAAW+c,UAAf,EAA2B;AACvBN,sBAAU,GACN;AAAK,uBAAS,EAAC;AAAf,eACI,8BAAC,gCAAD;AACI,uBAAS,EAAC,iBADd;AAEI,gBAAE,EAAE,gCAAgCG,kBAAkB,CAAC/Q,IAAI,CAACqE,KAAN;AAF1D,eAII,8BAAC,oCAAD;AACI,gBAAE,EAAC,mCADP;AAEI,4BAAc,EAAC;AAFnB,cAJJ,CADJ,EAUI,yCAVJ,CADJ;AAcH;;AAED,cAAI,KAAKlQ,KAAL,CAAWgd,UAAf,EAA2B;AACvBN,sBAAU,GACN;AAAK,uBAAS,EAAC;AAAf,eACI,8BAAC,gCAAD;AACI,uBAAS,EAAC,iBADd;AAEI,gBAAE,EAAE,iCAAiCE,kBAAkB,CAAC/Q,IAAI,CAACqE,KAAN,CAAnD,GAAkE,YAAlE,GAAiFrE,IAAI,CAACvE,YAAtF,GAAqG,YAArG,GAAoH1E,4BAAS,CAACkZ;AAFtI,eAII,8BAAC,oCAAD;AACI,gBAAE,EAAC,mCADP;AAEI,4BAAc,EAAC;AAFnB,cAJJ,CADJ,EAUI,yCAVJ,CADJ;AAcH;AACJ,SArFD,MAqFO,IAAI,KAAK9b,KAAL,CAAWid,qBAAf,EAAsC;AACzC,cAAIC,IAAJ;;AACA,cAAIrR,IAAI,CAACvE,YAAL,KAAsB1E,4BAAS,CAACsT,YAApC,EAAkD;AAC9CgH,gBAAI,GAAG,gCAAgCN,kBAAkB,CAAC/Q,IAAI,CAACqE,KAAN,CAAzD;AACH,WAFD,MAEO;AACHgN,gBAAI,GAAG,iCAAiCN,kBAAkB,CAAC/Q,IAAI,CAACqE,KAAN,CAAnD,GAAkE,YAAlE,GAAiFrE,IAAI,CAACvE,YAA7F;AACH;;AAED+U,qBAAW,GACP;AAAK,qBAAS,EAAC;AAAf,aACI,8BAAC,gCAAD;AACI,qBAAS,EAAC,iBADd;AAEI,cAAE,EAAEa;AAFR,aAII,8BAAC,oCAAD;AACI,cAAE,EAAC,oCADP;AAEI,0BAAc,EAAC;AAFnB,YAJJ,CADJ,EAUI,yCAVJ,CADJ;AAcH;;AAED,cAAM1W,MAAM,GAAG,EAAf;AACAA,cAAM,CAAC7B,IAAP,CACI;AAAK,aAAG,EAAC;AAAT,WACK0X,WADL,EAEKC,YAFL,EAGKC,YAHL,EAIKC,eAJL,EAKKC,UALL,EAMKC,UANL,CADJ;AAWA,cAAMjD,SAAS,GACX,4CACI,8BAAC,oCAAD;AACI,YAAE,EAAC,kCADP;AAEI,wBAAc,EAAC;AAFnB,UADJ,CADJ;AASA,eACI,8BAAC,mCAAD;AACI,eAAK,EAAEvS,iCAAA,CAAsB,+BAAtB,EAAuD,gBAAvD,CADX;AAEI,mBAAS,EAAEuS,SAFf;AAGI,gBAAM,EAAEjT,MAHZ;AAII,qBAAW,EAAE,KAAKtF,KAAL,CAAWS,WAJ5B;AAKI,uBAAa,EAAE,KAAKC;AALxB,UADJ;AASH;;AAED,UAAImX,QAAQ,GACR,8BAAC,oCAAD;AACI,UAAE,EAAC,iCADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;;AAMA,UAAI,KAAK/Y,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACiZ,cAA/C,EAA+D;AAC3D9C,gBAAQ,GACJ,8BAAC,oCAAD;AACI,YAAE,EAAC,+BADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMH,OAPD,MAOO,IAAI,KAAK/Y,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACmZ,cAA/C,EAA+D;AAClEhD,gBAAQ,GACJ,8BAAC,oCAAD;AACI,YAAE,EAAC,+BADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMH,OAPM,MAOA,IAAI,KAAK/Y,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACoZ,iBAA/C,EAAkE;AACrEjD,gBAAQ,GACJ,8BAAC,oCAAD;AACI,YAAE,EAAC,kCADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMH,OAPM,MAOA,IAAI,KAAK/Y,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACsT,YAA/C,EAA6D;AAChE6C,gBAAQ,GACJ,8BAAC,oCAAD;AACI,YAAE,EAAC,6BADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMH,OAPM,MAOA,IAAI,KAAK/Y,KAAL,CAAW6L,IAAX,CAAgBvE,YAAhB,KAAiC1E,4BAAS,CAACkZ,YAA/C,EAA6D;AAChE/C,gBAAQ,GACJ,8BAAC,oCAAD;AACI,YAAE,EAAC,6BADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMH;;AAED,aACI,8BAAC,mCAAD;AACI,aAAK,EAAE7R,iCAAA,CAAsB,+BAAtB,EAAuD,gBAAvD,CADX;AAEI,gBAAQ,EAAE6R,QAFd;AAGI,eAAO,EAAEoB,cAHb;AAII,qBAAa,EAAE,KAAKvY;AAJxB,QADJ;AAQH,KA9kBkB;;AAAA,0EAglBM,MAAM;AAC3B,UAAI,KAAK5B,KAAL,CAAWqB,aAAX,KAA6B+Y,YAAjC,EAA+C;AAC3C,YAAI+C,IAAJ;;AACA,YAAI,KAAKjc,KAAL,CAAWqZ,cAAX,IAA6B,KAAKrZ,KAAL,CAAWqZ,cAAX,CAA0BzT,MAA1B,GAAmC,CAApE,EAAuE;AACnEqW,cAAI,GAAG,KAAKjc,KAAL,CAAWqZ,cAAX,CAA0BzR,GAA1B,CAA+ByS,GAAD,IAAS;AAC1C,kBAAM6B,QAAQ,GACV;AACI,kBAAI,EAAE7B,GAAG,CAAC6B,QADd;AAEI,oBAAM,EAAC,QAFX;AAGI,iBAAG,EAAC;AAHR,eAKK7B,GAAG,CAAC6B,QALT,CADJ;AAUA,mBACI;AACI,iBAAG,EAAE7B,GAAG,CAACxW,EADb;AAEI,uBAAS,EAAC;AAFd,eAII;AAAK,uBAAS,EAAC;AAAf,eACI;AAAK,uBAAS,EAAC;AAAf,eACKwW,GAAG,CAACva,IADT,EAEI;AAAM,uBAAS,EAAC;AAAhB,eACK,IADL,OACYoc,QADZ,CAFJ,CADJ,EAOI;AAAK,uBAAS,EAAC;AAAf,eAA8C7B,GAAG,CAAC3E,WAAlD,CAPJ,EAQI;AAAK,uBAAS,EAAC;AAAf,eACI;AACI,kBAAI,EAAC,GADT;AAEI,0BAAU2E,GAAG,CAACxW,EAFlB;AAGI,qBAAO,EAAE,KAAKsY;AAHlB,eAKI,8BAAC,oCAAD;AACI,gBAAE,EAAC,oCADP;AAEI,4BAAc,EAAC;AAFnB,cALJ,CADJ,CARJ,CAJJ,EAyBI;AAAK,uBAAS,EAAC;AAAf,eACI;AACI,iBAAG,EAAE9B,GAAG,CAACva,IADb;AAEI,iBAAG,EAAEua,GAAG,CAAC+B,QAAJ,IAAgBC,mBAAMA;AAF/B,cADJ,CAzBJ,EA+BI,yCA/BJ,CADJ;AAmCH,WA9CM,CAAP;AA+CH,SAhDD,MAgDO;AACHJ,cAAI,GACA;AAAK,qBAAS,EAAC;AAAf,aACI;AAAK,qBAAS,EAAC;AAAf,aACI,8BAAC,oCAAD;AACI,cAAE,EAAC,+BADP;AAEI,0BAAc,EAAC;AAFnB,YADJ,CADJ,CADJ;AAUH;;AAED,cAAM3W,MAAM,GAAG,EAAf;AACA,YAAIgX,YAAJ;AACA,YAAIC,QAAJ;;AACA,YAAIzY,KAAK,CAACC,OAAN,CAAckY,IAAd,CAAJ,EAAyB;AACrBK,sBAAY,GAAG,0BAAf;AAEAC,kBAAQ,GACJ;AAAK,qBAAS,EAAC;AAAf,aACI,8BAAC,oCAAD;AACI,cAAE,EAAC,sCADP;AAEI,0BAAc,EAAC;AAFnB,YADJ,CADJ;AAQH;;AAEDjX,cAAM,CAAC7B,IAAP,CACI;AACI,mBAAS,EAAE6Y,YADf;AAEI,aAAG,EAAC;AAFR,WAIKL,IAJL,CADJ;AASA,cAAMxU,KAAK,GACP,2CACI,8BAAC,oCAAD;AACI,YAAE,EAAC,kCADP;AAEI,wBAAc,EAAC;AAFnB,UADJ,EAKK8U,QALL,CADJ;AAUA,eACI,8BAAC,mCAAD;AACI,eAAK,EAAE9U,KADX;AAEI,gBAAM,EAAEnC,MAFZ;AAGI,qBAAW,EAAE,KAAKtF,KAAL,CAAWS,WAH5B;AAII,uBAAa,EAAE,KAAKC,mBAJxB;AAKI,eAAK,EAAC,MALV;AAMI,0BAAgB,EACZ,8BAAC,oCAAD;AACI,cAAE,EAAC,8BADP;AAEI,0BAAc,EAAC;AAFnB;AAPR,UADJ;AAeH;;AAED,aACI,8BAAC,mCAAD;AACI,aAAK,EAAEsF,iCAAA,CAAsB,kCAAtB,EAA0D,wBAA1D,CADX;AAEI,gBAAQ,EACJ,8BAAC,oCAAD;AACI,YAAE,EAAC,6CADP;AAEI,wBAAc,EAAC;AAFnB,UAHR;AAQI,eAAO,EAAEkT,YARb;AASI,qBAAa,EAAE,KAAKxY;AATxB,QADJ;AAaH,KAjtBkB;;AAGf,SAAKV,KAAL,GAAa,KAAK8Z,eAAL,EAAb;AACH;;AAEDA,iBAAe,GAAG;AACd,WAAO;AACHR,qBAAe,EAAE,EADd;AAEHC,iBAAW,EAAE,EAFV;AAGHC,qBAAe,EAAE,EAHd;AAIHC,mBAAa,EAAE,EAJZ;AAKHhZ,iBAAW,EAAE,EALV;AAMHoV,gBAAU,EAAE,EANT;AAOH2G,iBAAW,EAAE,KAAK1d,KAAL,CAAW6L,IAAX,CAAgBvE,YAP1B;AAQH2T,oBAAc,EAAE;AARb,KAAP;AAUH;;AAEDxC,mBAAiB,GAAG;AAChB,QAAI,KAAKzY,KAAL,CAAW2d,0BAAf,EAA2C;AACvC,WAAKC,uBAAL;AACH;AACJ;;AA4rBDxc,QAAM,GAAG;AACL,UAAMyK,IAAI,GAAG,KAAK7L,KAAL,CAAW6L,IAAxB;AAEA,UAAMgS,eAAe,GAAG,KAAKC,qBAAL,EAAxB;AAEA,QAAIC,UAAU,GAAG,CAAjB;AACAA,cAAU,GAAG,KAAK/d,KAAL,CAAW2c,sBAAX,GAAoCoB,UAAU,GAAG,CAAjD,GAAqDA,UAAlE;AACAA,cAAU,GAAG,KAAK/d,KAAL,CAAW6c,sBAAX,GAAoCkB,UAAU,GAAG,CAAjD,GAAqDA,UAAlE;AACAA,cAAU,GAAG,KAAK/d,KAAL,CAAW8c,yBAAX,GAAuCiB,UAAU,GAAG,CAApD,GAAwDA,UAArE;AACAA,cAAU,GAAG,KAAK/d,KAAL,CAAW+c,UAAX,GAAwBgB,UAAU,GAAG,CAArC,GAAyCA,UAAtD;AACAA,cAAU,GAAG,KAAK/d,KAAL,CAAWgd,UAAX,GAAwBe,UAAU,GAAG,CAArC,GAAyCA,UAAtD,CAVK,CAYL;;AACA,QAAIC,aAAJ;;AACA,QAAI,CAAC,KAAKhe,KAAL,CAAWid,qBAAX,IAAoCpR,IAAI,CAACvE,YAAL,KAAsB,EAA3D,KACAyW,UAAU,GAAG,CADb,IACkB,KAAK/d,KAAL,CAAWie,wCADjC,EAC2E;AACvED,mBAAa,GAAG,KAAKE,mBAAL,EAAhB;AACH;;AAED,QAAIC,YAAJ;;AACA,QAAI,KAAKne,KAAL,CAAW2d,0BAAf,EAA2C;AACvCQ,kBAAY,GAAG,KAAKC,sBAAL,EAAf;AACH;;AAED,QAAIC,aAAJ;;AACA,QAAI,KAAKre,KAAL,CAAWse,kBAAf,EAAmC;AAC/BD,mBAAa,GACT,8BAAC,yBAAD;AACI,YAAI,EAAE,KAAKre,KAAL,CAAW6L,IADrB;AAEI,cAAM,EAAE,KAAK7L,KAAL,CAAWqB,aAAX,KAA6B8U,qCAFzC;AAGI,qBAAa,EAAE,KAAKvU,mBAHxB;AAII,yBAAiB,EAAE,KAAK5B,KAAL,CAAWgX;AAJlC,QADJ;AAQH;;AAED,WACI,2CACI;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,8BADP;AAEI,oBAAc,EAAC;AAFnB,OAIMuH,SAAD,IACG;AACI,UAAI,EAAC,QADT;AAEI,eAAS,EAAC,OAFd;AAGI,sBAAa,OAHjB;AAII,oBAAYA,SAJhB;AAKI,aAAO,EAAE,KAAKve,KAAL,CAAW6H;AALxB,OAOI;AAAM,qBAAY;AAAlB,OAA0B,GAA1B,CAPJ,CALR,CADJ,EAiBI;AACI,eAAS,EAAC,aADd;AAEI,SAAG,EAAC;AAFR,OAII;AAAK,eAAS,EAAC;AAAf,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,wBADP;AAEI,oBAAc,EAAC;AAFnB,OAIMc,KAAD,IACG;AACI,eAAS,EAAC,kBADd;AAEI,WAAK,EAAEA,KAFX;AAGI,aAAO,EAAE,KAAK3I,KAAL,CAAW8H;AAHxB,MALR,CADJ,CAJJ,EAkBI,8BAAC,oCAAD;AACI,QAAE,EAAC,8BADP;AAEI,oBAAc,EAAC;AAFnB,MAlBJ,CAjBJ,CADJ,EA0CI;AAAK,eAAS,EAAC;AAAf,OACI;AAAI,eAAS,EAAC;AAAd,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,8BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CADJ,EAOI;AAAK,eAAS,EAAC;AAAf,MAPJ,EAQK+V,eARL,EASI;AAAK,eAAS,EAAC;AAAf,MATJ,EAUI,8BAAC,WAAD;AACI,YAAM,EAAE,KAAK7d,KAAL,CAAWqB,aAAX,KAA6BmT,kCADzC;AAEI,mBAAa,EAAE,KAAK5S;AAFxB,MAVJ,EAcI;AAAK,eAAS,EAAC;AAAf,MAdJ,EAeKuc,YAfL,EAgBI;AAAK,eAAS,EAAC;AAAf,MAhBJ,EAiBKE,aAjBL,EAkBI;AAAK,eAAS,EAAC;AAAf,MAlBJ,EAmBKL,aAnBL,EAoBI;AAAK,eAAS,EAAC;AAAf,MApBJ,EAqBI,yCArBJ,EAsBI,8BAAC,sCAAD;AACI,eAAS,EAAC,4BADd;AAEI,gBAAU,EAAEQ,uCAAkBA;AAFlC,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,yCADP;AAEI,oBAAc,EAAC;AAFnB,OAIM7V,KAAD,IACG;AACI,eAAS,EAAC,eADd;AAEI,WAAK,EAAEA;AAFX,MALR,CAJJ,EAeI,8BAAC,oCAAD;AACI,QAAE,EAAC,oCADP;AAEI,oBAAc,EAAC;AAFnB,MAfJ,CAtBJ,EA0CI,8BAAC,sCAAD;AACI,eAAS,EAAC,uCADd;AAEI,gBAAU,EAAE8V,qCAAgBA;AAFhC,OAII,8BAAC,oCAAD;AACI,QAAE,EAAC,kDADP;AAEI,oBAAc,EAAC;AAFnB,OAIM9V,KAAD,IACG;AACI,eAAS,EAAC,eADd;AAEI,WAAK,EAAEA;AAFX,MALR,CAJJ,EAeI,8BAAC,oCAAD;AACI,QAAE,EAAC,6CADP;AAEI,oBAAc,EAAC;AAFnB,MAfJ,CA1CJ,CA1CJ,CADJ;AA4GH;;AAz5BwD;;sCAAxC0R,kC,eACE;AACfxO,MAAI,EAAE9J,oBAAS,CAACgG,MADD;AAEf1G,eAAa,EAAEU,oBAAS,CAACC,MAFV;AAGf0D,eAAa,EAAE3D,oBAAS,CAACG,IAHV;AAIf2F,YAAU,EAAE9F,oBAAS,CAACG,IAAV,CAAeD,UAJZ;AAKf6F,eAAa,EAAE/F,oBAAS,CAACG,IAAV,CAAeD,UALf;AAMf+U,mBAAiB,EAAEjV,oBAAS,CAACG,IAAV,CAAeD,UANnB;;AAQf;;;AAGAqc,oBAAkB,EAAEvc,oBAAS,CAACkG,IAXf;AAaf;AACA0V,4BAA0B,EAAE5b,oBAAS,CAACkG,IAdvB;AAgBf;AACAgV,uBAAqB,EAAElb,oBAAS,CAACkG,IAjBlB;AAmBf;AACA0U,wBAAsB,EAAE5a,oBAAS,CAACkG,IApBnB;AAsBf;AACA4U,wBAAsB,EAAE9a,oBAAS,CAACkG,IAvBnB;AAyBf;AACA8U,YAAU,EAAEhb,oBAAS,CAACkG,IA1BP;AA4Bf;AACA+U,YAAU,EAAEjb,oBAAS,CAACkG,IA7BP;AA+Bf;AACA6U,2BAAyB,EAAE/a,oBAAS,CAACkG,IAhCtB;AAkCf;AACAgW,0CAAwC,EAAElc,oBAAS,CAACkG,IAnCrC;AAqCf4S,gBAAc,EAAE9Y,oBAAS,CAACgG,MArCX;AAsCfmE,cAAY,EAAEnK,oBAAS,CAACkG,IAtCT;AAwCfxH,SAAO,EAAEsB,oBAAS,CAACI,KAAV,CAAgB;AACrBgQ,SAAK,EAAEpQ,oBAAS,CAACG,IAAV,CAAeD,UADD;AAErBiZ,sBAAkB,EAAEnZ,oBAAS,CAACG,IAAV,CAAeD,UAFd;AAGrBqY,0BAAsB,EAAEvY,oBAAS,CAACG,IAAV,CAAeD,UAHlB;AAIrBoZ,uBAAmB,EAAEtZ,oBAAS,CAACG,IAAV,CAAeD;AAJf,GAAhB,EAKNA;AA7CY,C;;sCADFoY,kC,kBAiDK;AAClBxO,MAAI,EAAE,EADY;AAElBxK,eAAa,EAAE;AAFG,C;;AC3E1B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA,SAASe,wBAAT,CAAyBlB,KAAzB,EAAgCwd,QAAhC,EAA0C;AACtC,QAAMrW,MAAM,GAAGC,4BAAS,CAACpH,KAAD,CAAxB;AAEA,QAAMyd,aAAa,GAAGtW,MAAM,CAACuW,sBAAP,KAAkC,MAAxD;AACA,QAAMC,gBAAgB,GAAGjH,oCAAA,CAAiC8G,QAAQ,CAAC7S,IAAT,CAAcgM,KAA/C,KAAyDD,2BAAA,CAAwB8G,QAAQ,CAAC7S,IAAT,CAAcgM,KAAtC,CAAlF;AAEA,QAAM8F,0BAA0B,GAAGtV,MAAM,CAACyW,0BAAP,KAAsC,MAAzE;AACA,QAAM7B,qBAAqB,GAAG5U,MAAM,CAAC0W,qBAAP,KAAiC,MAA/D;AACA,QAAMpC,sBAAsB,GAAGtU,MAAM,CAAC2W,sBAAP,KAAkC,MAAjE;AACA,QAAMnC,sBAAsB,GAAGxU,MAAM,CAAC4W,sBAAP,KAAkC,MAAjE;AACA,QAAMlC,UAAU,GAAG1U,MAAM,CAAC6W,UAAP,KAAsB,MAAzC;AACA,QAAMlC,UAAU,GAAG3U,MAAM,CAAC8W,UAAP,KAAsB,MAAzC;AACA,QAAMrC,yBAAyB,GAAGzU,MAAM,CAAC+W,yBAAP,KAAqC,MAAvE;AACA,QAAMnB,wCAAwC,GAAG5V,MAAM,CAACgX,wCAAP,KAAoD,MAArG;AAEA,SAAO;AACHf,sBAAkB,EAAEK,aAAa,IAAIE,gBADlC;AAEHlB,8BAFG;AAGHV,yBAHG;AAIHN,0BAJG;AAKHE,0BALG;AAMHE,cANG;AAOHC,cAPG;AAQHF,6BARG;AASHmB,4CATG;AAUHpD,kBAAc,EAAEyE,0CAAiB,CAACjX,MAAD,CAV9B;AAWH6D,gBAAY,EAAEqT,uCAAO,CAACre,KAAD,EAAQL,gCAAW,CAACkL,yBAApB,EAA+ClL,gCAAW,CAACmL,iBAA3D,EAA8E,KAA9E;AAXlB,GAAP;AAaH;;AAED,SAASzJ,2BAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH/B,WAAO,EAAEgC,mCAAkB,CAAC;AACxB0P,mCADwB;AAExB+I,6DAFwB;AAGxBZ,oEAHwB;AAIxBe,8DAAmBA;AAJK,KAAD,EAKxB7Y,QALwB;AADxB,GAAP;AAQH;;AAEcE,kEAAO,CAACN,wBAAD,EAAkBG,2BAAlB,CAAP,CAA6C8X,kCAA7C,CAAf,E;;;;;;;ACzDA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEe,MAAMmF,yCAAN,SAAkC3f,eAAK,CAAC2W,SAAxC,CAAkD;AAwE7DzW,aAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,oEAMC,MAAM;AACtB,YAAM;AACFyf,iCADE;AAEFC,6BAFE;AAGFC,yBAAiB,EAAE;AACfC,kBADe;AAEfC;AAFe,SAHjB;AAOFC,oBAPE;AAQFC;AARE,UASF,KAAK/f,KATT;AAWA,aAAO;AACHiD,gBAAQ,EAAE;AACN+c,sCAA4B,EAAEP,yBADxB;AAENQ,kCAAwB,EAAEP,qBAFpB;AAGNE,kBAHM;AAINE,sBAJM;AAKNC,uBALM;AAMNF;AANM,SADP;AASHne,gBAAQ,EAAE;AATP,OAAP;AAWH,KA7BkB;;AAAA,gFA+Bc2C,OAAD,IAAa;AACzC,UAAI,KAAKnD,KAAL,CAAW+B,QAAX,CAAoBoB,OAApB,MAAiC,KAAKrE,KAAL,CAAW2f,iBAAX,CAA6Btb,OAA7B,CAArC,EAA4E;AACxE0T,yDAAU,CAAC,UAAD,EAAa,sBAAb,EAAqC;AAACmI,eAAK,EAAE,aAAa7b,OAArB;AAA8BnE,eAAK,EAAE,KAAKgB,KAAL,CAAW+B,QAAX,CAAoBoB,OAApB;AAArC,SAArC,CAAV;AACH;AACJ,KAnCkB;;AAAA,gEAqCH,CAACA,OAAD,EAAUnE,KAAV,KAAoB;AAChC,YAAM+C,QAAQ,GAAG,KAAK/B,KAAL,CAAW+B,QAA5B;AACAA,cAAQ,CAACoB,OAAD,CAAR,GAAoBnE,KAApB;AAEA,WAAKE,QAAL,CAAc6C,QAAd;AACH,KA1CkB;;AAAA,+DA4CHoB,OAAD,IAAa;AACxB,YAAM;AAAC5D,eAAD;AAAUoL;AAAV,UAAkB,KAAK7L,KAA7B;AACA,YAAM4E,WAAW,GAAG,EAApB;;AAEA,UAAIP,OAAO,KAAK,kBAAZ,IAAkCA,OAAO,KAAK,iBAAlD,EAAqE;AACjE,cAAM8b,sBAAsB,GAAG;AAC3BP,kBAAQ,EAAE,KAAK1e,KAAL,CAAW+B,QAAX,CAAoB2c,QADH;AAE3BQ,wBAAc,EAAE,KAAKlf,KAAL,CAAW+B,QAAX,CAAoB6c,YAFT;AAG3BO,yBAAe,EAAE,KAAKnf,KAAL,CAAW+B,QAAX,CAAoB8c,aAHV;AAI3BF,iBAAO,EAAE,KAAK3e,KAAL,CAAW+B,QAAX,CAAoB4c;AAJF,SAA/B;AAOAjb,mBAAW,CAACD,IAAZ,CAAiB;AACb5D,iBAAO,EAAE8K,IAAI,CAAC9G,EADD;AAEbnE,kBAAQ,EAAEgC,4BAAS,CAAC/B,WAAV,CAAsByf,yBAFnB;AAGbtf,cAAI,EAAE,EAHO;AAIbd,eAAK,EAAEqgB,IAAI,CAACC,SAAL,CAAeL,sBAAf;AAJM,SAAjB;AAOA,aAAKM,6BAAL,CAAmC,UAAnC;AACA,aAAKA,6BAAL,CAAmC,SAAnC;AACA,aAAKA,6BAAL,CAAmC,cAAnC;AACA,aAAKA,6BAAL,CAAmC,eAAnC;AACH,OAnBD,MAmBO;AACH7b,mBAAW,CAACD,IAAZ,CAAiB;AACb5D,iBAAO,EAAE8K,IAAI,CAAC9G,EADD;AAEbnE,kBAAQ,EAAEgC,4BAAS,CAAC/B,WAAV,CAAsByf,yBAFnB;AAGbtf,cAAI,EAAEqD,OAHO;AAIbnE,eAAK,EAAE,KAAKgB,KAAL,CAAW+B,QAAX,CAAoBoB,OAApB;AAJM,SAAjB;AAOA0T,yDAAU,CAAC,UAAD,EAAa,sBAAb,EAAqC;AAACmI,eAAK,EAAE,aAAa7b,OAArB;AAA8BnE,eAAK,EAAE,KAAKgB,KAAL,CAAW+B,QAAX,CAAoBoB,OAApB;AAArC,SAArC,CAAV;AACH;;AAED,WAAKjE,QAAL,CAAc;AAACsB,gBAAQ,EAAE;AAAX,OAAd;AAEAjB,aAAO,CAACU,eAAR,CAAwB0K,IAAI,CAAC9G,EAA7B,EAAiCH,WAAjC,EAA8CO,IAA9C,CAAmD,MAAM;AACrD,aAAKO,aAAL,CAAmB,EAAnB;AACH,OAFD;AAGH,KAnFkB;;AAAA,gEAqFFpF,OAAD,IAAa;AACzB,UAAI,CAACA,OAAL,EAAc;AACV,aAAKF,QAAL,CAAc,KAAKqF,iBAAL,EAAd;AACH;;AACD,WAAKrF,QAAL,CAAc;AAACsB,gBAAQ,EAAE;AAAX,OAAd;AACA,WAAK1B,KAAL,CAAW0F,aAAX,CAAyBpF,OAAzB;AACH,KA3FkB;;AAAA,yEA6FOJ,KAAD,IAAW;AAChC,UAAIA,KAAK,KAAK,kBAAd,EAAkC;AAC9B,eACI,8BAAC,oCAAD;AACI,YAAE,EAAC,wCADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMH;;AAED,aACI,8BAAC,oCAAD;AACI,UAAE,EAAC,6BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH,KA7GkB;;AAAA,2EA+GQ,MAAM;AAC7B,UAAIwgB,QAAJ;;AAEA,UAAI,KAAK1gB,KAAL,CAAWqB,aAAX,KAA6B,aAAjC,EAAgD;AAC5Cqf,gBAAQ,GACJ,8BAAC,mCAAD;AACI,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,wCADP;AAEI,0BAAc,EAAC;AAFnB,YAFR;AAOI,gBAAM,EAAE,CACJ;AAAK,eAAG,EAAC;AAAT,aACI;AAAK,qBAAS,EAAC;AAAf,aACI,6CACI;AACI,cAAE,EAAC,2BADP;AAEI,gBAAI,EAAC,OAFT;AAGI,gBAAI,EAAC,aAHT;AAII,mBAAO,EAAE,KAAKxf,KAAL,CAAW+B,QAAX,CAAoB+c,4BAApB,KAAqD,kBAJlE;AAKI,oBAAQ,EAAE,KAAKra,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8B,8BAA9B,EAA8D,kBAA9D;AALd,YADJ,EAQI,8BAAC,oCAAD;AACI,cAAE,EAAC,wCADP;AAEI,0BAAc,EAAC;AAFnB,YARJ,CADJ,EAcI,yCAdJ,CADJ,EAiBI;AAAK,qBAAS,EAAC;AAAf,aACI,6CACI;AACI,cAAE,EAAC,kBADP;AAEI,gBAAI,EAAC,OAFT;AAGI,gBAAI,EAAC,aAHT;AAII,mBAAO,EAAE,KAAK1E,KAAL,CAAW+B,QAAX,CAAoB+c,4BAApB,KAAqD,OAJlE;AAKI,oBAAQ,EAAE,KAAKra,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8B,8BAA9B,EAA8D,OAA9D;AALd,YADJ,EAQI,8BAAC,oCAAD;AACI,cAAE,EAAC,6BADP;AAEI,0BAAc,EAAC;AAFnB,YARJ,CADJ,EAcI,yCAdJ,CAjBJ,EAiCI,2CACI,yCADJ,EAEI,8BAAC,oCAAD;AACI,cAAE,EAAC,uCADP;AAEI,0BAAc,EAAC;AAFnB,YAFJ,CAjCJ,CADI,CAPZ;AAkDI,iBAAO,EAAE,8BAlDb;AAmDI,gBAAM,EAAE,KAAKnE,YAnDjB;AAoDI,gBAAM,EAAE,KAAKP,KAAL,CAAWQ,QApDvB;AAqDI,sBAAY,EAAE,KAAKR,KAAL,CAAWS,WArD7B;AAsDI,uBAAa,EAAE,KAAK+D;AAtDxB,UADJ;AA0DH,OA3DD,MA2DO;AACHgb,gBAAQ,GACJ,8BAAC,mCAAD;AACI,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,wCADP;AAEI,0BAAc,EAAC;AAFnB,YAFR;AAOI,kBAAQ,EAAE,KAAKC,sBAAL,CAA4B,KAAKzf,KAAL,CAAW+B,QAAX,CAAoB+c,4BAAhD,CAPd;AAQI,iBAAO,EAAE,aARb;AASI,uBAAa,EAAE,KAAKta;AATxB,UADJ;AAaH;;AAED,aACI,8BAAC,eAAD,CAAO,QAAP,QACKgb,QADL,EAEI;AAAK,iBAAS,EAAC;AAAf,QAFJ,CADJ;AAMH,KAnMkB;;AAAA,0EAqMO,MAAM;AAC5B,YAAM;AACFf,yBAAiB,EAAE;AACfE,iBADe;AAEfD;AAFe,SADjB;AAKFE,oBALE;AAMFC;AANE,UAOF,KAAK/f,KAPT;AASA,YAAM4gB,QAAQ,GAAG,EAAjB;;AAEA,UAAIhB,QAAQ,KAAK,SAAjB,EAA4B;AACxBgB,gBAAQ,CAACjc,IAAT,CACI,8BAAC,oCAAD;AACI,aAAG,EAAC,SADR;AAEI,YAAE,EAAC,wCAFP;AAGI,wBAAc,EAAC;AAHnB,UADJ;AAOH,OARD,MAQO;AACHic,gBAAQ,CAACjc,IAAT,CACI,8BAAC,oCAAD;AACI,aAAG,EAAC,MADR;AAEI,YAAE,EAAC,wCAFP;AAGI,wBAAc,EAAC;AAHnB,UADJ;AAOH;;AAED,UAAIkc,SAAJ;AACA,UAAIC,qBAAJ;;AACA,UAAIjB,OAAO,KAAK,OAAhB,EAAyB;AACrBgB,iBAAS,GAAGE,yBAAC,CAAC,sCAAD,CAAb;AACAD,6BAAqB,GAAG,uBAAxB;AACH,OAHD,MAGO;AACHD,iBAAS,GAAGE,yBAAC,CAAC,uCAAD,CAAb;AACAD,6BAAqB,GAAG,mBAAxB;AACH;;AAEDF,cAAQ,CAACjc,IAAT,CACI;AAAM,WAAG,EAAC;AAAV,SAAmB,IAAnB,CADJ;AAIAic,cAAQ,CAACjc,IAAT,CACI,8BAAC,oCAAD;AACI,WAAG,EAAC,SADR;AAEI,UAAE,EAAEkc,SAFR;AAGI,sBAAc,EAAEC;AAHpB,QADJ;AAQA,UAAIE,OAAO,GAAG,IAAd;AACA,UAAIC,mBAAmB,GAAG,IAA1B;;AACA,UAAInB,YAAY,KAAK,MAAjB,IAA2BC,aAAa,KAAK,OAAjD,EAA0D;AACtDiB,eAAO,GAAGD,yBAAC,CAAC,oCAAD,CAAX;AACAE,2BAAmB,GAAG,4BAAtB;AACH,OAHD,MAGO,IAAInB,YAAY,KAAK,OAAjB,IAA4BC,aAAa,KAAK,MAAlD,EAA0D;AAC7DiB,eAAO,GAAGD,yBAAC,CAAC,sCAAD,CAAX;AACAE,2BAAmB,GAAG,8BAAtB;AACH,OAHM,MAGA,IAAInB,YAAY,KAAK,MAAjB,IAA2BC,aAAa,KAAK,MAAjD,EAAyD;AAC5DiB,eAAO,GAAGD,yBAAC,CAAC,6CAAD,CAAX;AACAE,2BAAmB,GAAG,0CAAtB;AACH;;AAED,UAAID,OAAJ,EAAa;AACTJ,gBAAQ,CAACjc,IAAT,CACI;AAAI,aAAG,EAAC;AAAR,UADJ;AAIAic,gBAAQ,CAACjc,IAAT,CACI,8BAAC,oCAAD;AACI,aAAG,EAAC,OADR;AAEI,YAAE,EAAEqc,OAFR;AAGI,wBAAc,EAAEC;AAHpB,UADJ;AAOH;;AAED,aAAOL,QAAP;AACH,KArRkB;;AAAA,6EAuRW1gB,KAAD,IAAW;AACpC,UAAIA,KAAK,KAAK,MAAd,EAAsB;AAClB,eACI,8BAAC,oCAAD;AACI,YAAE,EAAC,0BADP;AAEI,wBAAc,EAAC;AAFnB,UADJ;AAMH;;AAED,aACI,8BAAC,oCAAD;AACI,UAAE,EAAC,2BADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH,KAvSkB;;AAAA,mFAySgB,MAAM;AACrC,YAAM;AACF0f,gBADE;AAEFC;AAFE,UAGF,KAAK3e,KAAL,CAAW+B,QAHf;AAKA,UAAIyd,QAAJ;;AAEA,UAAI,KAAK1gB,KAAL,CAAWqB,aAAX,KAA6B,eAAjC,EAAkD;AAC9C,cAAMmF,MAAM,GAAG,EAAf;AAEAA,cAAM,CAAC7B,IAAP,CACI;AAAK,aAAG,EAAC;AAAT,WACI,6CACI,8BAAC,oCAAD;AACI,YAAE,EAAC,0CADP;AAEI,wBAAc,EAAC;AAFnB,UADJ,CADJ,EAOI,yCAPJ,EAQI;AAAK,mBAAS,EAAC;AAAf,WACI,6CACI;AACI,YAAE,EAAC,cADP;AAEI,cAAI,EAAC,OAFT;AAGI,cAAI,EAAC,eAHT;AAII,iBAAO,EAAEib,QAAQ,KAAK,SAJ1B;AAKI,kBAAQ,EAAE,KAAKja,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8B,UAA9B,EAA0C,SAA1C;AALd,UADJ,EAQI,8BAAC,oCAAD;AACI,YAAE,EAAC,mCADP;AAEI,wBAAc,EAAC;AAFnB,UARJ,CADJ,EAcI,yCAdJ,CARJ,EAwBI;AAAK,mBAAS,EAAC;AAAf,WACI,6CACI;AACI,YAAE,EAAC,YADP;AAEI,cAAI,EAAC,OAFT;AAGI,cAAI,EAAC,eAHT;AAII,iBAAO,EAAEga,QAAQ,KAAK,MAJ1B;AAKI,kBAAQ,EAAE,KAAKja,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8B,UAA9B,EAA0C,MAA1C;AALd,UADJ,EAQI,8BAAC,oCAAD;AACI,YAAE,EAAC,mCADP;AAEI,wBAAc,EAAC;AAFnB,UARJ,CADJ,EAcI,yCAdJ,CAxBJ,EAwCI,2CACI,yCADJ,EAEI,8BAAC,oCAAD;AACI,YAAE,EAAC,iCADP;AAEI,wBAAc,EAAC;AAFnB,UAFJ,CAxCJ,CADJ;AAmDAY,cAAM,CAAC7B,IAAP,CAAY;AAAI,aAAG,EAAC;AAAR,UAAZ;AAEA6B,cAAM,CAAC7B,IAAP,CACI;AAAK,aAAG,EAAC;AAAT,WACI,6CACI,8BAAC,oCAAD;AACI,YAAE,EAAC,yCADP;AAEI,wBAAc,EAAC;AAFnB,UADJ,CADJ,EAOI,yCAPJ,EAQI;AAAK,mBAAS,EAAC;AAAf,WACI,6CACI;AACI,YAAE,EAAC,sBADP;AAEI,cAAI,EAAC,OAFT;AAGI,cAAI,EAAC,cAHT;AAII,iBAAO,EAAEkb,OAAO,KAAK,QAJzB;AAKI,kBAAQ,EAAE,KAAKla,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8B,SAA9B,EAAyC,QAAzC;AALd,UADJ,EAQI,8BAAC,oCAAD;AACI,YAAE,EAAC,kCADP;AAEI,wBAAc,EAAC;AAFnB,UARJ,CADJ,EAcI,yCAdJ,CARJ,EAwBI;AAAK,mBAAS,EAAC;AAAf,WACI,6CACI;AACI,YAAE,EAAC,qBADP;AAEI,cAAI,EAAC,OAFT;AAGI,cAAI,EAAC,cAHT;AAII,iBAAO,EAAEia,OAAO,KAAK,OAJzB;AAKI,kBAAQ,EAAE,KAAKla,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8B,SAA9B,EAAyC,OAAzC;AALd,UADJ,EAQI,8BAAC,oCAAD;AACI,YAAE,EAAC,iCADP;AAEI,wBAAc,EAAC;AAFnB,UARJ,CADJ,EAcI,yCAdJ,CAxBJ,EAwCI,2CACI,yCADJ,EAEI,8BAAC,oCAAD;AACI,YAAE,EAAC,gCADP;AAEI,wBAAc,EAAC;AAFnB,UAFJ,CAxCJ,CADJ;AAmDAY,cAAM,CAAC7B,IAAP,CAAY;AAAI,aAAG,EAAC;AAAR,UAAZ;AAEA6B,cAAM,CAAC7B,IAAP,CACI;AAAK,aAAG,EAAC;AAAT,WACI;AAAK,mBAAS,EAAC;AAAf,WACI,6CACI;AACI,YAAE,EAAC,mBADP;AAEI,cAAI,EAAC,UAFT;AAGI,iBAAO,EAAE,KAAKzD,KAAL,CAAW+B,QAAX,CAAoB6c,YAApB,KAAqC,MAHlD;AAII,kBAAQ,EAAG7f,CAAD,IAAO,KAAK0F,aAAL,CAAmB,cAAnB,EAAoC1F,CAAC,CAAC+G,MAAF,CAAS1C,OAAV,CAAmB4c,QAAnB,EAAnC;AAJrB,UADJ,EAOI,8BAAC,oCAAD;AACI,YAAE,EAAC,+BADP;AAEI,wBAAc,EAAC;AAFnB,UAPJ,CADJ,CADJ,EAeI,2CACI,yCADJ,EAEI,8BAAC,oCAAD;AACI,YAAE,EAAC,mCADP;AAEI,wBAAc,EAAC;AAFnB,UAFJ,CAfJ,CADJ;AA0BA1a,cAAM,CAAC7B,IAAP,CAAY;AAAI,aAAG,EAAC;AAAR,UAAZ;AAEA6B,cAAM,CAAC7B,IAAP,CACI;AAAK,aAAG,EAAC;AAAT,WACI;AAAK,mBAAS,EAAC;AAAf,WACI,6CACI;AACI,YAAE,EAAC,qBADP;AAEI,cAAI,EAAC,UAFT;AAGI,iBAAO,EAAE,KAAKzD,KAAL,CAAW+B,QAAX,CAAoB8c,aAApB,KAAsC,MAHnD;AAII,kBAAQ,EAAG9f,CAAD,IAAO,KAAK0F,aAAL,CAAmB,eAAnB,EAAqC1F,CAAC,CAAC+G,MAAF,CAAS1C,OAAV,CAAmB4c,QAAnB,EAApC;AAJrB,UADJ,EAOI,8BAAC,oCAAD;AACI,YAAE,EAAC,iCADP;AAEI,wBAAc,EAAC;AAFnB,UAPJ,CADJ,CADJ,EAeI,2CACI,yCADJ,EAEI,8BAAC,oCAAD;AACI,YAAE,EAAC,qCADP;AAEI,wBAAc,EAAC;AAFnB,UAFJ,CAfJ,CADJ;AA0BAR,gBAAQ,GACJ,8BAAC,mCAAD;AACI,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,iDADP;AAEI,0BAAc,EAAC;AAFnB,YAFR;AAOI,gBAAM,EAAEla,MAPZ;AAQI,iBAAO,EAAE,kBARb;AASI,gBAAM,EAAE,KAAK/E,YATjB;AAUI,gBAAM,EAAE,KAAKP,KAAL,CAAWQ,QAVvB;AAWI,sBAAY,EAAE,KAAKR,KAAL,CAAWS,WAX7B;AAYI,uBAAa,EAAE,KAAK+D;AAZxB,UADJ;AAgBH,OAnLD,MAmLO;AACHgb,gBAAQ,GACJ,8BAAC,mCAAD;AACI,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,iDADP;AAEI,0BAAc,EAAC;AAFnB,YAFR;AAOI,kBAAQ,EAAE,KAAKS,uBAAL,EAPd;AAQI,iBAAO,EAAE,eARb;AASI,uBAAa,EAAE,KAAKzb;AATxB,UADJ;AAaH;;AAED,aACI,8BAAC,eAAD,CAAO,QAAP,QACKgb,QADL,EAEI;AAAK,iBAAS,EAAC;AAAf,QAFJ,CADJ;AAMH,KA1fkB;;AAAA,+EA4fY,MAAM;AACjC,UAAIU,4BAA4B,GAAGL,yBAAC,CAAC,0DAAD,CAApC;AACA,UAAIM,iCAAiC,GAAG,kJAAxC;;AACA,UAAIC,8BAAK,EAAT,EAAa;AACTF,oCAA4B,GAAGL,yBAAC,CAAC,sDAAD,CAAhC;AACAM,yCAAiC,GAAG,iJAApC;AACH;;AAED,YAAME,uBAAuB,GACzB,8BAAC,oCAAD;AACI,UAAE,EAAEH,4BADR;AAEI,sBAAc,EAAEC;AAFpB,QADJ;;AAOA,UAAI,KAAKrhB,KAAL,CAAWqB,aAAX,KAA6B,iBAAjC,EAAoD;AAChD,eACI,8BAAC,mCAAD;AACI,eAAK,EACD,8BAAC,oCAAD;AACI,cAAE,EAAC,mDADP;AAEI,0BAAc,EAAC;AAFnB,YAFR;AAOI,gBAAM,EAAE,CACJ;AAAK,eAAG,EAAC;AAAT,aACI;AACI,cAAE,EAAC,wBADP;AAEI,qBAAS,EAAC;AAFd,aAII,6CACI;AACI,cAAE,EAAC,+BADP;AAEI,gBAAI,EAAC,OAFT;AAGI,gBAAI,EAAC,iBAHT;AAII,mBAAO,EAAE,KAAKH,KAAL,CAAW+B,QAAX,CAAoBgd,wBAApB,KAAiD,MAJ9D;AAKI,oBAAQ,EAAE,KAAKta,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8B,0BAA9B,EAA0D,MAA1D;AALd,YADJ,EAQI,8BAAC,oCAAD;AACI,cAAE,EAAC,0BADP;AAEI,0BAAc,EAAC;AAFnB,YARJ,CAJJ,EAiBI,yCAjBJ,CADJ,EAoBI;AACI,cAAE,EAAC,yBADP;AAEI,qBAAS,EAAC;AAFd,aAII,6CACI;AACI,cAAE,EAAC,2BADP;AAEI,gBAAI,EAAC,OAFT;AAGI,gBAAI,EAAC,iBAHT;AAII,mBAAO,EAAE,KAAK1E,KAAL,CAAW+B,QAAX,CAAoBgd,wBAApB,KAAiD,OAJ9D;AAKI,oBAAQ,EAAE,KAAKta,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8B,0BAA9B,EAA0D,OAA1D;AALd,YADJ,EAQI,8BAAC,oCAAD;AACI,cAAE,EAAC,2BADP;AAEI,0BAAc,EAAC;AAFnB,YARJ,CAJJ,EAiBI,yCAjBJ,CApBJ,EAuCI;AAAK,cAAE,EAAC;AAAR,aACI,yCADJ,EAEK2b,uBAFL,CAvCJ,CADI,CAPZ;AAqDI,iBAAO,EAAE,0BArDb;AAsDI,gBAAM,EAAE,KAAK9f,YAtDjB;AAuDI,gBAAM,EAAE,KAAKP,KAAL,CAAWQ,QAvDvB;AAwDI,sBAAY,EAAE,KAAKR,KAAL,CAAWS,WAxD7B;AAyDI,uBAAa,EAAE,KAAK+D;AAzDxB,UADJ;AA6DH;;AAED,aACI,8BAAC,mCAAD;AACI,aAAK,EACD,8BAAC,oCAAD;AACI,YAAE,EAAC,mDADP;AAEI,wBAAc,EAAC;AAFnB,UAFR;AAOI,gBAAQ,EAAE,KAAK8b,0BAAL,CAAgC,KAAKtgB,KAAL,CAAW+B,QAAX,CAAoBgd,wBAApD,CAPd;AAQI,eAAO,EAAE,iBARb;AASI,qBAAa,EAAE,KAAKva,aATxB;AAUI,eAAO,EAAE;AAVb,QADJ;AAcH,KAzlBkB;;AAGf,SAAKxE,KAAL,GAAa,KAAKuE,iBAAL,EAAb;AACH;;AAulBDrE,QAAM,GAAG;AACL,UAAM;AAACqgB,sBAAD;AAAmBC;AAAnB,QAA8C,KAAK1hB,KAAzD;AACA,UAAM;AAAC2hB;AAAD,QAAkB,KAAKC,OAAL,CAAaC,IAArC;AAEA,UAAMC,0BAA0B,GAAGJ,uBAAuB,GAAG,KAAKK,gCAAL,EAAH,GAA6C,IAAvG;AACA,UAAMC,kBAAkB,GAAGP,gBAAgB,GAAG,KAAKQ,wBAAL,EAAH,GAAqC,IAAhF;AACA,UAAMC,sBAAsB,GAAG,KAAKC,4BAAL,EAA/B;AAEA,WACI,2CACI;AAAK,eAAS,EAAC;AAAf,OACI;AACI,QAAE,EAAC,aADP;AAEI,UAAI,EAAC,QAFT;AAGI,eAAS,EAAC,OAHd;AAII,sBAAa,OAJjB;AAKI,oBAAW,OALf;AAMI,aAAO,EAAE,KAAKniB,KAAL,CAAW6H;AANxB,OAQI;AAAM,qBAAY;AAAlB,OAA0B,GAA1B,CARJ,CADJ,EAWI;AACI,eAAS,EAAC,aADd;AAEI,SAAG,EAAC;AAFR,OAII;AAAK,eAAS,EAAC;AAAf,OACI;AACI,eAAS,EAAC,kBADd;AAEI,WAAK,EAAE8Z,aAAa,CAAC;AAAC5c,UAAE,EAAE,wBAAL;AAA+Bqd,sBAAc,EAAE;AAA/C,OAAD,CAFxB;AAGI,aAAO,EAAE,KAAKpiB,KAAL,CAAW8H;AAHxB,MADJ,CAJJ,EAWI,8BAAC,oCAAD;AACI,QAAE,EAAC,6BADP;AAEI,oBAAc,EAAC;AAFnB,MAXJ,CAXJ,CADJ,EA6BI;AACI,QAAE,EAAC,cADP;AAEI,eAAS,EAAC;AAFd,OAII;AAAI,eAAS,EAAC;AAAd,OACI,8BAAC,oCAAD;AACI,QAAE,EAAC,6BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CAJJ,EAUI;AAAK,eAAS,EAAC;AAAf,MAVJ,EAWKga,0BAXL,EAYKI,sBAZL,EAaKT,gBAAgB,GAAG;AAAK,eAAS,EAAC;AAAf,MAAH,GAAsC;AAAK,eAAS,EAAC;AAAf,MAb3D,EAcKO,kBAdL,CA7BJ,CADJ;AAgDH;;AA3tB4D;;qCAA5CxC,yC,eACE;AACf/e,SAAO,EAAEsB,oBAAS,CAACI,KAAV,CAAgB;AAErB;;;AAGAhB,mBAAe,EAAEY,oBAAS,CAACG,IAAV,CAAeD;AALX,GAAhB,EAMNA,UAPY;;AASf;;;AAGA4J,MAAI,EAAE9J,oBAAS,CAACgG,MAZD;;AAcf;;;AAGA0X,2BAAyB,EAAE1d,oBAAS,CAACC,MAAV,CAAiBC,UAjB7B;;AAmBf;;;AAGAwf,kBAAgB,EAAE1f,oBAAS,CAACkG,IAAV,CAAehG,UAtBlB;;AAwBf;;;AAGAyf,yBAAuB,EAAE3f,oBAAS,CAACkG,IAAV,CAAehG,UA3BzB;;AA6Bf;;;AAGAyd,uBAAqB,EAAE3d,oBAAS,CAACC,MAAV,CAAiBC,UAhCzB;;AAkCf;;;;AAIA0d,mBAAiB,EAAE5d,oBAAS,CAACI,KAAV,CAAgB;AAE/B;;;AAGAyd,YAAQ,EAAE7d,oBAAS,CAACC,MAAV,CAAiBC,UALI;;AAO/B;;;AAGA4d,WAAO,EAAE9d,oBAAS,CAACC,MAAV,CAAiBC;AAVK,GAAhB,EAWhBA,UAjDY;;AAmDf;;;AAGA6d,cAAY,EAAE/d,oBAAS,CAACC,MAAV,CAAiBC,UAtDhB;;AAwDf;;;AAGA8d,eAAa,EAAEhe,oBAAS,CAACC,MAAV,CAAiBC,UA3DjB;AA6DfyD,eAAa,EAAE3D,oBAAS,CAACG,IA7DV;AA8Dfb,eAAa,EAAEU,oBAAS,CAACC,MA9DV;AA+Df6F,YAAU,EAAE9F,oBAAS,CAACG,IAAV,CAAeD,UA/DZ;AAgEf6F,eAAa,EAAE/F,oBAAS,CAACG,IAAV,CAAeD;AAhEf,C;;qCADFud,yC,kBAoEK;AAClBqC,MAAI,EAAEQ,6BAAS,CAACpgB;AADE,C;;ACpF1B;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASG,uBAAT,CAAyBlB,KAAzB,EAAgC;AAC5B,QAAMmH,MAAM,GAAGC,4BAAS,CAACpH,KAAD,CAAxB;AAEA,QAAMue,yBAAyB,GAAGpd,mCAAa,CAC3CnB,KAD2C,EAE3CL,yCAAW,CAACyf,yBAF+B,EAG3C,8BAH2C,EAI3C,kBAJ2C,CAA/C;AAOA,QAAMZ,qBAAqB,GAAGrd,mCAAa,CACvCnB,KADuC,EAEvCL,yCAAW,CAACyf,yBAF2B,EAGvC,0BAHuC,EAIvC,MAJuC,CAA3C;AAOA,QAAMX,iBAAiB,GAAG2C,qDAAqB,CAACphB,KAAD,CAA/C;AAEA,SAAO;AACHue,6BADG;AAEHE,qBAFG;AAGHG,gBAAY,EAAEH,iBAAiB,CAACS,cAH7B;AAIHL,iBAAa,EAAEJ,iBAAiB,CAACU,eAJ9B;AAKHX,yBALG;AAMHgC,2BAAuB,EAAErZ,MAAM,CAACka,+BAAP,KAA2C,MANjE;AAOHd,oBAAgB,EAAEpZ,MAAM,CAACma,yBAAP,KAAqC,MAPpD;AAQH3W,QAAI,EAAEnD,+BAAc,CAACxH,KAAD;AARjB,GAAP;AAUH;;AAED,SAASqB,0BAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH/B,WAAO,EAAEgC,mCAAkB,CAAC;AACxBtB,6DAAeA;AADS,KAAD,EAExBqB,QAFwB;AADxB,GAAP;AAKH;;AAEcE,iEAAO,CAACN,uBAAD,EAAkBG,0BAAlB,CAAP,CAA6Cid,yCAA7C,CAAf,E;;;;ACrDA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEe,MAAMiD,0BAAN,SAA2B5iB,eAAK,CAACC,aAAjC,CAA+C;AAc1DsB,QAAM,GAAG;AACL,QAAI,KAAKpB,KAAL,CAAW0iB,SAAX,KAAyB,SAA7B,EAAwC;AACpC,aACI,2CACI,8BAAC,oCAAD;AACI,YAAI,EAAE,KAAK1iB,KAAL,CAAW6L,IADrB;AAEI,qBAAa,EAAE,KAAK7L,KAAL,CAAWqB,aAF9B;AAGI,yBAAiB,EAAE,KAAKrB,KAAL,CAAW8B,iBAHlC;AAII,qBAAa,EAAE,KAAK9B,KAAL,CAAW0F,aAJ9B;AAKI,iBAAS,EAAE,KAAK1F,KAAL,CAAW2iB,SAL1B;AAMI,kBAAU,EAAE,KAAK3iB,KAAL,CAAW6H,UAN3B;AAOI,qBAAa,EAAE,KAAK7H,KAAL,CAAW8H;AAP9B,QADJ,CADJ;AAaH,KAdD,MAcO,IAAI,KAAK9H,KAAL,CAAW0iB,SAAX,KAAyB,UAA7B,EAAyC;AAC5C,aACI,2CACI,8BAAC,QAAD;AACI,YAAI,EAAE,KAAK1iB,KAAL,CAAW6L,IADrB;AAEI,qBAAa,EAAE,KAAK7L,KAAL,CAAWqB,aAF9B;AAGI,yBAAiB,EAAE,KAAKrB,KAAL,CAAW8B,iBAHlC;AAII,qBAAa,EAAE,KAAK9B,KAAL,CAAW0F,aAJ9B;AAKI,kBAAU,EAAE,KAAK1F,KAAL,CAAW6H,UAL3B;AAMI,qBAAa,EAAE,KAAK7H,KAAL,CAAW8H,aAN9B;AAOI,yBAAiB,EAAE,KAAK9H,KAAL,CAAWgX;AAPlC,QADJ,CADJ;AAaH,KAdM,MAcA,IAAI,KAAKhX,KAAL,CAAW0iB,SAAX,KAAyB,eAA7B,EAA8C;AACjD,aACI,2CACI,8BAAC,aAAD;AACI,YAAI,EAAE,KAAK1iB,KAAL,CAAW6L,IADrB;AAEI,qBAAa,EAAE,KAAK7L,KAAL,CAAWqB,aAF9B;AAGI,yBAAiB,EAAE,KAAKrB,KAAL,CAAW8B,iBAHlC;AAII,qBAAa,EAAE,KAAK9B,KAAL,CAAW0F,aAJ9B;AAKI,kBAAU,EAAE,KAAK1F,KAAL,CAAW6H,UAL3B;AAMI,qBAAa,EAAE,KAAK7H,KAAL,CAAW8H;AAN9B,QADJ,CADJ;AAYH,KAbM,MAaA,IAAI,KAAK9H,KAAL,CAAW0iB,SAAX,KAAyB,SAA7B,EAAwC;AAC3C,aACI,2CACI,8BAAC,oCAAD;AACI,YAAI,EAAE,KAAK1iB,KAAL,CAAW6L,IADrB;AAEI,qBAAa,EAAE,KAAK7L,KAAL,CAAWqB,aAF9B;AAGI,yBAAiB,EAAE,KAAKrB,KAAL,CAAW8B,iBAHlC;AAII,qBAAa,EAAE,KAAK9B,KAAL,CAAW0F,aAJ9B;AAKI,kBAAU,EAAE,KAAK1F,KAAL,CAAW6H,UAL3B;AAMI,qBAAa,EAAE,KAAK7H,KAAL,CAAW8H,aAN9B;AAOI,uBAAe,EAAE,KAAK9H,KAAL,CAAW4iB,eAPhC;AAQI,yBAAiB,EAAE,KAAK5iB,KAAL,CAAWgX;AARlC,QADJ,CADJ;AAcH,KAfM,MAeA,IAAI,KAAKhX,KAAL,CAAW0iB,SAAX,KAAyB,SAA7B,EAAwC;AAC3C,aACI,2CACI,8BAAC,OAAD;AACI,qBAAa,EAAE,KAAK1iB,KAAL,CAAWqB,aAD9B;AAEI,yBAAiB,EAAE,KAAKrB,KAAL,CAAW8B,iBAFlC;AAGI,qBAAa,EAAE,KAAK9B,KAAL,CAAW0F,aAH9B;AAII,kBAAU,EAAE,KAAK1F,KAAL,CAAW6H,UAJ3B;AAKI,qBAAa,EAAE,KAAK7H,KAAL,CAAW8H;AAL9B,QADJ,CADJ;AAWH,KAZM,MAYA,IAAI,KAAK9H,KAAL,CAAW0iB,SAAX,KAAyB,UAA7B,EAAyC;AAC5C,aACI,2CACI,8BAAC,QAAD;AACI,qBAAa,EAAE,KAAK1iB,KAAL,CAAWqB,aAD9B;AAEI,yBAAiB,EAAE,KAAKrB,KAAL,CAAW8B,iBAFlC;AAGI,qBAAa,EAAE,KAAK9B,KAAL,CAAW0F,aAH9B;AAII,kBAAU,EAAE,KAAK1F,KAAL,CAAW6H,UAJ3B;AAKI,qBAAa,EAAE,KAAK7H,KAAL,CAAW8H;AAL9B,QADJ,CADJ;AAWH;;AAED,WAAO,0CAAP;AACH;;AAlGyD;;6BAAzC2a,0B,eACE;AACf5W,MAAI,EAAE9J,oBAAS,CAACgG,MAAV,CAAiB9F,UADR;AAEfygB,WAAS,EAAE3gB,oBAAS,CAACC,MAFN;AAGfX,eAAa,EAAEU,oBAAS,CAACC,MAHV;AAIfF,mBAAiB,EAAEC,oBAAS,CAACC,MAJd;AAKf0D,eAAa,EAAE3D,oBAAS,CAACG,IALV;AAMfygB,WAAS,EAAE5gB,oBAAS,CAACG,IANN;AAOf2F,YAAU,EAAE9F,oBAAS,CAACG,IAAV,CAAeD,UAPZ;AAQf6F,eAAa,EAAE/F,oBAAS,CAACG,IAAV,CAAeD,UARf;AASf2gB,iBAAe,EAAE7gB,oBAAS,CAACG,IAAV,CAAeD,UATjB;AAUf+U,mBAAiB,EAAEjV,oBAAS,CAACG,IAAV,CAAeD;AAVnB,C;;ACdvB;AACA;AAEA;AACA;AAEA;;AAEA,SAASG,iCAAT,CAAyBlB,KAAzB,EAAgC;AAC5B,SAAO;AACH2K,QAAI,EAAEnD,+BAAc,CAACxH,KAAD;AADjB,GAAP;AAGH;;AAEcwB,4GAAO,CAACN,iCAAD,CAAP,CAAyBqgB,0BAAzB,CAAf,E","file":"9.333bfcfedeee3cdcaa39.js","sourcesContent":["// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {Preferences} from 'mattermost-redux/constants';\r\n\r\nimport SettingItemMax from 'components/setting_item_max.jsx';\r\nimport SettingItemMin from 'components/setting_item_min.jsx';\r\n\r\nimport {AdvancedSections} from 'utils/constants.jsx';\r\n\r\nexport default class JoinLeaveSection extends React.PureComponent {\r\n    static propTypes = {\r\n        activeSection: PropTypes.string,\r\n        currentUserId: PropTypes.string.isRequired,\r\n        joinLeave: PropTypes.string,\r\n        onUpdateSection: PropTypes.func.isRequired,\r\n        prevActiveSection: PropTypes.string,\r\n        renderOnOffLabel: PropTypes.func.isRequired,\r\n        actions: PropTypes.shape({\r\n            savePreferences: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            joinLeaveState: props.joinLeave,\r\n        };\r\n    }\r\n\r\n    handleOnChange = (e) => {\r\n        const value = e.currentTarget.value;\r\n\r\n        this.setState({joinLeaveState: value});\r\n    }\r\n\r\n    handleUpdateSection = (section) => {\r\n        if (!section) {\r\n            this.setState({joinLeaveState: this.props.joinLeave});\r\n        }\r\n\r\n        this.props.onUpdateSection(section);\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const {actions, currentUserId, onUpdateSection} = this.props;\r\n        const joinLeavePreference = {category: Preferences.CATEGORY_ADVANCED_SETTINGS, user_id: currentUserId, name: Preferences.ADVANCED_FILTER_JOIN_LEAVE, value: this.state.joinLeaveState};\r\n        actions.savePreferences(currentUserId, [joinLeavePreference]);\r\n\r\n        onUpdateSection();\r\n    }\r\n\r\n    render() {\r\n        const {joinLeaveState} = this.state;\r\n        if (this.props.activeSection === AdvancedSections.JOIN_LEAVE) {\r\n            return (\r\n                <SettingItemMax\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='user.settings.advance.joinLeaveTitle'\r\n                            defaultMessage='Enable Join/Leave Messages'\r\n                        />\r\n                    }\r\n                    inputs={[\r\n                        <div key='joinLeaveSetting'>\r\n                            <div className='radio'>\r\n                                <label>\r\n                                    <input\r\n                                        id='joinLeaveOn'\r\n                                        type='radio'\r\n                                        value={'true'}\r\n                                        name={AdvancedSections.JOIN_LEAVE}\r\n                                        checked={joinLeaveState === 'true'}\r\n                                        onChange={this.handleOnChange}\r\n                                    />\r\n                                    <FormattedMessage\r\n                                        id='user.settings.advance.on'\r\n                                        defaultMessage='On'\r\n                                    />\r\n                                </label>\r\n                                <br/>\r\n                            </div>\r\n                            <div className='radio'>\r\n                                <label>\r\n                                    <input\r\n                                        id='joinLeaveOff'\r\n                                        type='radio'\r\n                                        value={'false'}\r\n                                        name={AdvancedSections.JOIN_LEAVE}\r\n                                        checked={joinLeaveState === 'false'}\r\n                                        onChange={this.handleOnChange}\r\n                                    />\r\n                                    <FormattedMessage\r\n                                        id='user.settings.advance.off'\r\n                                        defaultMessage='Off'\r\n                                    />\r\n                                </label>\r\n                                <br/>\r\n                            </div>\r\n                            <div>\r\n                                <br/>\r\n                                <FormattedMessage\r\n                                    id='user.settings.advance.joinLeaveDesc'\r\n                                    defaultMessage='When \"On\", System Messages saying a user has joined or left a channel will be visible. When \"Off\", the System Messages about joining or leaving a channel will be hidden. A message will still show up when you are added to a channel, so you can receive a notification.'\r\n                                />\r\n                            </div>\r\n                        </div>,\r\n                    ]}\r\n                    setting={AdvancedSections.JOIN_LEAVE}\r\n                    submit={this.handleSubmit}\r\n                    saving={this.state.isSaving}\r\n                    server_error={this.state.serverError}\r\n                    updateSection={this.handleUpdateSection}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <SettingItemMin\r\n                title={\r\n                    <FormattedMessage\r\n                        id='user.settings.advance.joinLeaveTitle'\r\n                        defaultMessage='Enable Join/Leave Messages'\r\n                    />\r\n                }\r\n                describe={this.props.renderOnOffLabel(joinLeaveState)}\r\n                focused={this.props.prevActiveSection === AdvancedSections.JOIN_LEAVE}\r\n                section={AdvancedSections.JOIN_LEAVE}\r\n                updateSection={this.handleUpdateSection}\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {savePreferences} from 'mattermost-redux/actions/preferences';\r\nimport {Preferences} from 'mattermost-redux/constants';\r\nimport {get as getPreference} from 'mattermost-redux/selectors/entities/preferences';\r\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\r\n\r\nimport JoinLeaveSection from './join_leave_section.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const joinLeave = getPreference(\r\n        state,\r\n        Preferences.CATEGORY_ADVANCED_SETTINGS,\r\n        Preferences.ADVANCED_FILTER_JOIN_LEAVE,\r\n        'true'\r\n    );\r\n\r\n    return {\r\n        currentUserId: getCurrentUserId(state),\r\n        joinLeave,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            savePreferences,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinLeaveSection);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\r\nimport Constants from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport SettingItemMax from 'components/setting_item_max.jsx';\r\nimport SettingItemMin from 'components/setting_item_min.jsx';\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\nimport BackIcon from 'components/icon/back_icon';\r\n\r\nimport JoinLeaveSection from './join_leave_section';\r\n\r\nconst PreReleaseFeatures = Constants.PRE_RELEASE_FEATURES;\r\n\r\nexport default class AdvancedSettingsDisplay extends React.PureComponent {\r\n    static propTypes = {\r\n        currentUser: PropTypes.object.isRequired,\r\n        advancedSettingsCategory: PropTypes.array.isRequired,\r\n        sendOnCtrlEnter: PropTypes.string.isRequired,\r\n        codeBlockOnCtrlEnter: PropTypes.bool,\r\n        formatting: PropTypes.string.isRequired,\r\n        joinLeave: PropTypes.string.isRequired,\r\n        updateSection: PropTypes.func,\r\n        activeSection: PropTypes.string,\r\n        prevActiveSection: PropTypes.string,\r\n        closeModal: PropTypes.func.isRequired,\r\n        collapseModal: PropTypes.func.isRequired,\r\n        enablePreviewFeatures: PropTypes.bool,\r\n        enableUserDeactivation: PropTypes.bool,\r\n        actions: PropTypes.shape({\r\n            savePreferences: PropTypes.func.isRequired,\r\n            updateUserActive: PropTypes.func.isRequired,\r\n            revokeAllSessionsForUser: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = this.getStateFromProps();\r\n\r\n        this.prevSections = {\r\n            advancedCtrlSend: 'dummySectionName', // dummy value that should never match any section name\r\n            formatting: 'advancedCtrlSend',\r\n            join_leave: 'formatting',\r\n            advancedPreviewFeatures: 'join_leave',\r\n            deactivateAccount: 'advancedPreviewFeatures',\r\n        };\r\n    }\r\n\r\n    getStateFromProps = () => {\r\n        const advancedSettings = this.props.advancedSettingsCategory;\r\n        const settings = {\r\n            send_on_ctrl_enter: this.props.sendOnCtrlEnter,\r\n            code_block_ctrl_enter: this.props.codeBlockOnCtrlEnter,\r\n            formatting: this.props.formatting,\r\n            join_leave: this.props.joinLeave,\r\n        };\r\n\r\n        const preReleaseFeaturesKeys = Object.keys(PreReleaseFeatures);\r\n        let enabledFeatures = 0;\r\n        for (const as of advancedSettings) {\r\n            for (const key of preReleaseFeaturesKeys) {\r\n                const feature = PreReleaseFeatures[key];\r\n\r\n                if (as.name === Constants.FeatureTogglePrefix + feature.label) {\r\n                    settings[as.name] = as.value;\r\n\r\n                    if (as.value === 'true') {\r\n                        enabledFeatures += 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const isSaving = false;\r\n\r\n        const previewFeaturesEnabled = this.props.enablePreviewFeatures;\r\n        const showDeactivateAccountModal = false;\r\n\r\n        return {\r\n            preReleaseFeatures: PreReleaseFeatures,\r\n            settings,\r\n            preReleaseFeaturesKeys,\r\n            enabledFeatures,\r\n            isSaving,\r\n            previewFeaturesEnabled,\r\n            showDeactivateAccountModal,\r\n        };\r\n    }\r\n\r\n    updateSetting = (setting, value) => {\r\n        const settings = this.state.settings;\r\n        settings[setting] = value;\r\n        this.setState(settings);\r\n    }\r\n\r\n    toggleFeature = (feature, checked) => {\r\n        const settings = this.state.settings;\r\n        settings[Constants.FeatureTogglePrefix + feature] = String(checked);\r\n\r\n        let enabledFeatures = 0;\r\n        Object.keys(this.state.settings).forEach((setting) => {\r\n            if (setting.lastIndexOf(Constants.FeatureTogglePrefix) === 0 && this.state.settings[setting] === 'true') {\r\n                enabledFeatures++;\r\n            }\r\n        });\r\n\r\n        this.setState({settings, enabledFeatures});\r\n    }\r\n\r\n    saveEnabledFeatures = () => {\r\n        const features = [];\r\n        Object.keys(this.state.settings).forEach((setting) => {\r\n            if (setting.lastIndexOf(Constants.FeatureTogglePrefix) === 0) {\r\n                features.push(setting);\r\n            }\r\n        });\r\n\r\n        this.handleSubmit(features);\r\n    }\r\n\r\n    handleSubmit = async (settings) => {\r\n        const preferences = [];\r\n        const {actions, currentUser} = this.props;\r\n        const userId = currentUser.id;\r\n\r\n        // this should be refactored so we can actually be certain about what type everything is\r\n        (Array.isArray(settings) ? settings : [settings]).forEach((setting) => {\r\n            preferences.push({\r\n                user_id: userId,\r\n                category: Constants.Preferences.CATEGORY_ADVANCED_SETTINGS,\r\n                name: setting,\r\n                value: this.state.settings[setting],\r\n            });\r\n        });\r\n\r\n        this.setState({isSaving: true});\r\n        await actions.savePreferences(userId, preferences);\r\n\r\n        this.handleUpdateSection('');\r\n    }\r\n\r\n    handleDeactivateAccountSubmit = async () => {\r\n        const userId = this.props.currentUser.id;\r\n\r\n        this.setState({isSaving: true});\r\n\r\n        this.props.actions.updateUserActive(userId, false).\r\n            then(({error}) => {\r\n                if (error) {\r\n                    this.setState({serverError: error.message});\r\n                }\r\n            });\r\n\r\n        const {data, error} = await this.props.actions.revokeAllSessionsForUser(userId);\r\n        if (data) {\r\n            emitUserLoggedOutEvent();\r\n        } else if (error) {\r\n            this.setState({serverError: error.message});\r\n        }\r\n    }\r\n\r\n    handleShowDeactivateAccountModal = () => {\r\n        this.setState({\r\n            showDeactivateAccountModal: true,\r\n        });\r\n    }\r\n\r\n    handleHideDeactivateAccountModal = () => {\r\n        this.setState({\r\n            showDeactivateAccountModal: false,\r\n        });\r\n    }\r\n\r\n    handleUpdateSection = (section) => {\r\n        if (!section) {\r\n            this.setState(this.getStateFromProps());\r\n        }\r\n        this.setState({isSaving: false});\r\n        this.props.updateSection(section);\r\n    }\r\n\r\n    renderOnOffLabel(enabled) {\r\n        if (enabled === 'false') {\r\n            return (\r\n                <FormattedMessage\r\n                    id='user.settings.advance.off'\r\n                    defaultMessage='Off'\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <FormattedMessage\r\n                id='user.settings.advance.on'\r\n                defaultMessage='On'\r\n            />\r\n        );\r\n    }\r\n\r\n    renderCtrlEnterLabel() {\r\n        const ctrlEnter = this.state.settings.send_on_ctrl_enter;\r\n        const codeBlockCtrlEnter = this.state.settings.code_block_ctrl_enter;\r\n        if (ctrlEnter === 'false' && codeBlockCtrlEnter === 'false') {\r\n            return (\r\n                <FormattedMessage\r\n                    id='user.settings.advance.off'\r\n                    defaultMessage='Off'\r\n                />\r\n            );\r\n        } else if (ctrlEnter === 'true' && codeBlockCtrlEnter === 'true') {\r\n            return (\r\n                <FormattedMessage\r\n                    id='user.settings.advance.onForAllMessages'\r\n                    defaultMessage='On for all messages'\r\n                />\r\n            );\r\n        }\r\n        return (\r\n            <FormattedMessage\r\n                id='user.settings.advance.onForCode'\r\n                defaultMessage='On only for code blocks starting with ```'\r\n            />\r\n        );\r\n    }\r\n\r\n    renderFormattingSection = () => {\r\n        if (this.props.activeSection === 'formatting') {\r\n            return (\r\n                <SettingItemMax\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='user.settings.advance.formattingTitle'\r\n                            defaultMessage='Enable Post Formatting'\r\n                        />\r\n                    }\r\n                    inputs={[\r\n                        <div key='formattingSetting'>\r\n                            <div className='radio'>\r\n                                <label>\r\n                                    <input\r\n                                        id='postFormattingOn'\r\n                                        type='radio'\r\n                                        name='formatting'\r\n                                        checked={this.state.settings.formatting !== 'false'}\r\n                                        onChange={this.updateSetting.bind(this, 'formatting', 'true')}\r\n                                    />\r\n                                    <FormattedMessage\r\n                                        id='user.settings.advance.on'\r\n                                        defaultMessage='On'\r\n                                    />\r\n                                </label>\r\n                                <br/>\r\n                            </div>\r\n                            <div className='radio'>\r\n                                <label>\r\n                                    <input\r\n                                        id='postFormattingOff'\r\n                                        type='radio'\r\n                                        name='formatting'\r\n                                        checked={this.state.settings.formatting === 'false'}\r\n                                        onChange={this.updateSetting.bind(this, 'formatting', 'false')}\r\n                                    />\r\n                                    <FormattedMessage\r\n                                        id='user.settings.advance.off'\r\n                                        defaultMessage='Off'\r\n                                    />\r\n                                </label>\r\n                                <br/>\r\n                            </div>\r\n                            <div>\r\n                                <br/>\r\n                                <FormattedMessage\r\n                                    id='user.settings.advance.formattingDesc'\r\n                                    defaultMessage='If enabled, posts will be formatted to create links, show emoji, style the text, and add line breaks. By default, this setting is enabled.'\r\n                                />\r\n                            </div>\r\n                        </div>,\r\n                    ]}\r\n                    setting={'formatting'}\r\n                    submit={this.handleSubmit}\r\n                    saving={this.state.isSaving}\r\n                    server_error={this.state.serverError}\r\n                    updateSection={this.handleUpdateSection}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <SettingItemMin\r\n                title={\r\n                    <FormattedMessage\r\n                        id='user.settings.advance.formattingTitle'\r\n                        defaultMessage='Enable Post Formatting'\r\n                    />\r\n                }\r\n                describe={this.renderOnOffLabel(this.state.settings.formatting)}\r\n                focused={this.props.prevActiveSection === this.prevSections.formatting}\r\n                section={'formatting'}\r\n                updateSection={this.handleUpdateSection}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderFeatureLabel(feature) {\r\n        switch (feature) {\r\n        case 'MARKDOWN_PREVIEW':\r\n            return (\r\n                <FormattedMessage\r\n                    id='user.settings.advance.markdown_preview'\r\n                    defaultMessage='Show markdown preview option in message input box'\r\n                />\r\n            );\r\n        default:\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const serverError = this.state.serverError || null;\r\n        let ctrlSendSection;\r\n\r\n        if (this.props.activeSection === 'advancedCtrlSend') {\r\n            const ctrlSendActive = [\r\n                this.state.settings.send_on_ctrl_enter === 'true',\r\n                this.state.settings.send_on_ctrl_enter === 'false' && this.state.settings.code_block_ctrl_enter === 'true',\r\n                this.state.settings.send_on_ctrl_enter === 'false' && this.state.settings.code_block_ctrl_enter === 'false',\r\n            ];\r\n\r\n            const inputs = [\r\n                <div key='ctrlSendSetting'>\r\n                    <div className='radio'>\r\n                        <label>\r\n                            <input\r\n                                id='ctrlSendOn'\r\n                                type='radio'\r\n                                name='sendOnCtrlEnter'\r\n                                checked={ctrlSendActive[0]}\r\n                                onChange={() => {\r\n                                    this.updateSetting('send_on_ctrl_enter', 'true');\r\n                                    this.updateSetting('code_block_ctrl_enter', 'true');\r\n                                }}\r\n                            />\r\n                            <FormattedMessage\r\n                                id='user.settings.advance.onForAllMessages'\r\n                                defaultMessage='On for all messages'\r\n                            />\r\n                        </label>\r\n                        <br/>\r\n                    </div>\r\n                    <div className='radio'>\r\n                        <label>\r\n                            <input\r\n                                id='ctrlSendOnForCode'\r\n                                type='radio'\r\n                                name='sendOnCtrlEnter'\r\n                                checked={ctrlSendActive[1]}\r\n                                onChange={() => {\r\n                                    this.updateSetting('send_on_ctrl_enter', 'false');\r\n                                    this.updateSetting('code_block_ctrl_enter', 'true');\r\n                                }}\r\n                            />\r\n                            <FormattedMessage\r\n                                id='user.settings.advance.onForCode'\r\n                                defaultMessage='On only for code blocks starting with ```'\r\n                            />\r\n                        </label>\r\n                        <br/>\r\n                    </div>\r\n                    <div className='radio'>\r\n                        <label>\r\n                            <input\r\n                                id='ctrlSendOff'\r\n                                type='radio'\r\n                                name='sendOnCtrlEnter'\r\n                                checked={ctrlSendActive[2]}\r\n                                onChange={() => {\r\n                                    this.updateSetting('send_on_ctrl_enter', 'false');\r\n                                    this.updateSetting('code_block_ctrl_enter', 'false');\r\n                                }}\r\n                            />\r\n                            <FormattedMessage\r\n                                id='user.settings.advance.off'\r\n                                defaultMessage='Off'\r\n                            />\r\n                        </label>\r\n                        <br/>\r\n                    </div>\r\n                    <div>\r\n                        <br/>\r\n                        <FormattedMessage\r\n                            id='user.settings.advance.sendDesc'\r\n                            defaultMessage='When enabled, CTRL + ENTER will send the message and ENTER inserts a new line.'\r\n                        />\r\n                    </div>\r\n                </div>,\r\n            ];\r\n            ctrlSendSection = (\r\n                <SettingItemMax\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='user.settings.advance.sendTitle'\r\n                            defaultMessage='Send messages on CTRL+ENTER'\r\n                        />\r\n                    }\r\n                    inputs={inputs}\r\n                    submit={this.handleSubmit.bind(this, ['send_on_ctrl_enter', 'code_block_ctrl_enter'])}\r\n                    saving={this.state.isSaving}\r\n                    server_error={serverError}\r\n                    updateSection={this.handleUpdateSection}\r\n                />\r\n            );\r\n        } else {\r\n            ctrlSendSection = (\r\n                <SettingItemMin\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='user.settings.advance.sendTitle'\r\n                            defaultMessage='Send messages on CTRL+ENTER'\r\n                        />\r\n                    }\r\n                    describe={this.renderCtrlEnterLabel()}\r\n                    focused={this.props.prevActiveSection === this.prevSections.advancedCtrlSend}\r\n                    section={'advancedCtrlSend'}\r\n                    updateSection={this.handleUpdateSection}\r\n                />\r\n            );\r\n        }\r\n\r\n        const formattingSection = this.renderFormattingSection();\r\n        let formattingSectionDivider = null;\r\n        if (formattingSection) {\r\n            formattingSectionDivider = <div className='divider-light'/>;\r\n        }\r\n\r\n        let previewFeaturesSection;\r\n        let previewFeaturesSectionDivider;\r\n        if (this.state.previewFeaturesEnabled && this.state.preReleaseFeaturesKeys.length > 0) {\r\n            previewFeaturesSectionDivider = (\r\n                <div className='divider-light'/>\r\n            );\r\n\r\n            if (this.props.activeSection === 'advancedPreviewFeatures') {\r\n                const inputs = [];\r\n\r\n                this.state.preReleaseFeaturesKeys.forEach((key) => {\r\n                    const feature = this.state.preReleaseFeatures[key];\r\n                    inputs.push(\r\n                        <div key={'advancedPreviewFeatures_' + feature.label}>\r\n                            <div className='checkbox'>\r\n                                <label>\r\n                                    <input\r\n                                        id={'advancedPreviewFeatures' + feature.label}\r\n                                        type='checkbox'\r\n                                        checked={this.state.settings[Constants.FeatureTogglePrefix + feature.label] === 'true'}\r\n                                        onChange={(e) => {\r\n                                            this.toggleFeature(feature.label, e.target.checked);\r\n                                        }}\r\n                                    />\r\n                                    {this.renderFeatureLabel(key)}\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                });\r\n\r\n                inputs.push(\r\n                    <div key='advancedPreviewFeatures_helptext'>\r\n                        <br/>\r\n                        <FormattedMessage\r\n                            id='user.settings.advance.preReleaseDesc'\r\n                            defaultMessage=\"Check any pre-released features you'd like to preview.  You may also need to refresh the page before the setting will take effect.\"\r\n                        />\r\n                    </div>\r\n                );\r\n                previewFeaturesSection = (\r\n                    <SettingItemMax\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='user.settings.advance.preReleaseTitle'\r\n                                defaultMessage='Preview pre-release features'\r\n                            />\r\n                        }\r\n                        inputs={inputs}\r\n                        submit={this.saveEnabledFeatures}\r\n                        saving={this.state.isSaving}\r\n                        server_error={serverError}\r\n                        updateSection={this.handleUpdateSection}\r\n                    />\r\n                );\r\n            } else {\r\n                previewFeaturesSection = (\r\n                    <SettingItemMin\r\n                        title={Utils.localizeMessage('user.settings.advance.preReleaseTitle', 'Preview pre-release features')}\r\n                        describe={\r\n                            <FormattedMessage\r\n                                id='user.settings.advance.enabledFeatures'\r\n                                defaultMessage='{count, number} {count, plural, one {Feature} other {Features}} Enabled'\r\n                                values={{count: this.state.enabledFeatures}}\r\n                            />\r\n                        }\r\n                        focused={this.props.prevActiveSection === this.prevSections.advancedPreviewFeatures}\r\n                        section={'advancedPreviewFeatures'}\r\n                        updateSection={this.handleUpdateSection}\r\n                    />\r\n                );\r\n            }\r\n        }\r\n\r\n        let deactivateAccountSection = '';\r\n        let makeConfirmationModal = '';\r\n        const currentUser = this.props.currentUser;\r\n\r\n        if (currentUser.auth_service === '' && this.props.enableUserDeactivation) {\r\n            if (this.props.activeSection === 'deactivateAccount') {\r\n                deactivateAccountSection = (\r\n                    <SettingItemMax\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='user.settings.advance.deactivateAccountTitle'\r\n                                defaultMessage='Deactivate Account'\r\n                            />\r\n                        }\r\n                        inputs={[\r\n                            <div key='formattingSetting'>\r\n                                <div>\r\n                                    <br/>\r\n                                    <FormattedMessage\r\n                                        id='user.settings.advance.deactivateDesc'\r\n                                        defaultMessage='Deactivating your account removes your ability to log in to this server and disables all email and mobile notifications. To reactivate your account, contact your System Administrator.'\r\n                                    />\r\n                                </div>\r\n                            </div>,\r\n                        ]}\r\n                        saveButtonText={'Deactivate'}\r\n                        setting={'deactivateAccount'}\r\n                        submit={this.handleShowDeactivateAccountModal}\r\n                        saving={this.state.isSaving}\r\n                        server_error={this.state.serverError}\r\n                        updateSection={this.handleUpdateSection}\r\n                    />\r\n                );\r\n            } else {\r\n                deactivateAccountSection = (\r\n                    <SettingItemMin\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='user.settings.advance.deactivateAccountTitle'\r\n                                defaultMessage='Deactivate Account'\r\n                            />\r\n                        }\r\n                        describe={\r\n                            <FormattedMessage\r\n                                id='user.settings.advance.deactivateDescShort'\r\n                                defaultMessage=\"Click 'Edit' to deactivate your account\"\r\n                            />\r\n                        }\r\n                        focused={this.props.prevActiveSection === this.prevSections.deactivateAccount}\r\n                        section={'deactivateAccount'}\r\n                        updateSection={this.handleUpdateSection}\r\n                    />\r\n                );\r\n            }\r\n\r\n            const confirmButtonClass = 'btn btn-danger';\r\n            const deactivateMemberButton = (\r\n                <FormattedMessage\r\n                    id='user.settings.advance.deactivate_member_modal.deactivateButton'\r\n                    defaultMessage='Yes, deactivate my account'\r\n                />\r\n            );\r\n\r\n            makeConfirmationModal = (\r\n                <ConfirmModal\r\n                    show={this.state.showDeactivateAccountModal}\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='user.settings.advance.confirmDeactivateAccountTitle'\r\n                            defaultMessage='Confirm Deactivation'\r\n                        />\r\n                    }\r\n                    message={\r\n                        <FormattedMessage\r\n                            id='user.settings.advance.confirmDeactivateDesc'\r\n                            defaultMessage='Are you sure you want to deactivate your account? This can only be reversed by your System Administrator.'\r\n                        />\r\n                    }\r\n                    confirmButtonClass={confirmButtonClass}\r\n                    confirmButtonText={deactivateMemberButton}\r\n                    onConfirm={this.handleDeactivateAccountSubmit}\r\n                    onCancel={this.handleHideDeactivateAccountModal}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className='modal-header'>\r\n                    <button\r\n                        id='closeButton'\r\n                        type='button'\r\n                        className='close'\r\n                        data-dismiss='modal'\r\n                        aria-label='Close'\r\n                        onClick={this.props.closeModal}\r\n                    >\r\n                        <span aria-hidden='true'>{'×'}</span>\r\n                    </button>\r\n                    <h4\r\n                        className='modal-title'\r\n                        ref='title'\r\n                    >\r\n                        <div className='modal-back'>\r\n                            <span onClick={this.props.collapseModal}>\r\n                                <BackIcon/>\r\n                            </span>\r\n                        </div>\r\n                        <FormattedMessage\r\n                            id='user.settings.advance.title'\r\n                            defaultMessage='Advanced Settings'\r\n                        />\r\n                    </h4>\r\n                </div>\r\n                <div className='user-settings'>\r\n                    <h3 className='tab-header'>\r\n                        <FormattedMessage\r\n                            id='user.settings.advance.title'\r\n                            defaultMessage='Advanced Settings'\r\n                        />\r\n                    </h3>\r\n                    <div className='divider-dark first'/>\r\n                    {ctrlSendSection}\r\n                    {formattingSectionDivider}\r\n                    {formattingSection}\r\n                    <div className='divider-light'/>\r\n                    <JoinLeaveSection\r\n                        activeSection={this.props.activeSection}\r\n                        onUpdateSection={this.handleUpdateSection}\r\n                        prevActiveSection={this.props.prevActiveSection}\r\n                        renderOnOffLabel={this.renderOnOffLabel}\r\n                    />\r\n                    {previewFeaturesSectionDivider}\r\n                    {previewFeaturesSection}\r\n                    {formattingSectionDivider}\r\n                    {deactivateAccountSection}\r\n                    <div className='divider-dark'/>\r\n                    {makeConfirmationModal}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\r\nimport {get, makeGetCategory} from 'mattermost-redux/selectors/entities/preferences';\r\nimport {savePreferences} from 'mattermost-redux/actions/preferences';\r\nimport {updateUserActive, revokeAllSessionsForUser} from 'mattermost-redux/actions/users';\r\n\r\nimport {Preferences} from 'utils/constants.jsx';\r\n\r\nimport AdvancedSettingsDisplay from './user_settings_advanced.jsx';\r\n\r\nfunction makeMapStateToProps() {\r\n    const getAdvancedSettingsCategory = makeGetCategory();\r\n\r\n    return (state) => {\r\n        const config = getConfig(state);\r\n\r\n        const enablePreviewFeatures = config.EnablePreviewFeatures === 'true';\r\n        const enableUserDeactivation = config.EnableUserDeactivation === 'true';\r\n\r\n        return {\r\n            advancedSettingsCategory: getAdvancedSettingsCategory(state, Preferences.CATEGORY_ADVANCED_SETTINGS),\r\n            sendOnCtrlEnter: get(state, Preferences.CATEGORY_ADVANCED_SETTINGS, 'send_on_ctrl_enter', 'false'),\r\n            codeBlockOnCtrlEnter: get(state, Preferences.CATEGORY_ADVANCED_SETTINGS, 'code_block_ctrl_enter', 'true'),\r\n            formatting: get(state, Preferences.CATEGORY_ADVANCED_SETTINGS, 'formatting', 'true'),\r\n            joinLeave: get(state, Preferences.CATEGORY_ADVANCED_SETTINGS, 'join_leave', 'true'),\r\n            currentUser: getCurrentUser(state),\r\n            enablePreviewFeatures,\r\n            enableUserDeactivation,\r\n        };\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            savePreferences,\r\n            updateUserActive,\r\n            revokeAllSessionsForUser,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps)(AdvancedSettingsDisplay);\r\n","import React from 'react';\nimport { Radio } from 'antd';\n\nexport default ({ title, options = [], ...rest }) => {\n  return (\n    <div className=\"radio__item\">\n      <h3>{title}</h3>\n      <Radio.Group {...rest}>\n        {options.map(item => (\n          <Radio key={item.value} value={item.value}>{item.label}</Radio>\n        ))}\n      </Radio.Group>\n    </div>\n  )\n}\n","import React from 'react';\nimport uuid from 'uuid/v4';\n\nexport default ({ linearGradient = ['#845b74', '#3a3b51'] }) => {\n  const id = uuid();\n  return (\n    <svg height=\"85\" viewBox=\"0 0 130 85\" width=\"130\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n      <defs>\n        <rect id=\"a\" height=\"75\" rx=\"4\" width=\"120\"/>\n        <filter id=\"b\" height=\"121.3%\" width=\"113.3%\" x=\"-6.7%\" y=\"-9.3%\">\n          <feOffset dx=\"0\" dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"/>\n          <feGaussianBlur in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" stdDeviation=\"2.5\"/>\n          <feColorMatrix in=\"shadowBlurOuter1\" type=\"matrix\" values=\"0 0 0 0 0.914034194   0 0 0 0 0.914034194   0 0 0 0 0.914034194  0 0 0 1 0\"/>\n        </filter>\n        <linearGradient id={`${id}-c`} x1=\"50%\" x2=\"50%\" y1=\"0%\" y2=\"100%\">\n          <stop offset=\"0\" stopColor={linearGradient[0]}/>\n          <stop offset=\"1\" stopColor={linearGradient[1]}/>\n        </linearGradient>\n      </defs>\n      <g fill=\"none\" fillRule=\"evenodd\" transform=\"translate(5 4)\">\n        <use fill=\"#000\" filter=\"url(#b)\" xlinkHref=\"#a\"/>\n        <use fill=\"#fff\" fillRule=\"evenodd\" xlinkHref=\"#a\"/>\n        <g fill=\"#f5f5f5\">\n          <rect height=\"6\" rx=\"3\" width=\"36\" x=\"30\" y=\"14\"/>\n          <rect height=\"6\" rx=\"3\" width=\"36\" x=\"30\" y=\"43\"/>\n          <rect height=\"48\" rx=\"4\" width=\"24\" x=\"86\" y=\"14\"/>\n          <rect height=\"6\" rx=\"3\" width=\"36\" x=\"40\" y=\"27\"/>\n          <rect height=\"6\" rx=\"3\" width=\"36\" x=\"40\" y=\"56\"/>\n        </g>\n        <path d=\"m4 0h20v67c0 4.418278-3.581722 8-8 8h-12c-2.209139 0-4-1.790861-4-4v-67c0-2.209139 1.790861-4 4-4z\" fill={`url(#${id}-c)`} />\n      </g>\n    </svg>\n  )\n}","import React, { useEffect } from \"react\";\nimport * as Utils from \"utils/utils.jsx\";\nimport RadioItems from \"../../RadioItems\";\nimport ThemeSkeleton from \"./theme_skeleton\";\n\nconst themeStyle = [\n  [\"#845b74\", \"#3a3b51\"],\n  [\"#34776f\", \"#353d51\"],\n  [\"#446e80\", \"#363c52\"],\n  [\"#5b6a91\", \"#383d54\"]\n];\n\n// const colorFormat = idx => `linear-gradient(180deg, ${themeStyle[idx][0]} 0%, ${themeStyle[idx][1]} 100%)`;\nconst colorVal = val => `${val[0]},${val[1]}`;\n\nconst options = [\n  {\n    label: <ThemeSkeleton linearGradient={themeStyle[0]} />,\n    value: colorVal(themeStyle[0])\n  },\n  {\n    label: <ThemeSkeleton linearGradient={themeStyle[1]} />,\n    value: colorVal(themeStyle[1])\n  },\n  {\n    label: <ThemeSkeleton linearGradient={themeStyle[2]} />,\n    value: colorVal(themeStyle[2])\n  },\n  {\n    label: <ThemeSkeleton linearGradient={themeStyle[3]} />,\n    value: colorVal(themeStyle[3])\n  }\n];\n\nconst themeConfig = {\n  sidebarBg: '#3a3b51',\n  sidebarText: '#ffffff',\n  sidebarUnreadText: '#ffffff',\n  sidebarTextHoverBg: '#136197',\n  sidebarTextActiveBorder: '#7ab0d6',\n  sidebarTextActiveColor: '#ffffff',\n  sidebarHeaderBg: '#845b74',\n  sidebarHeaderTextColor: '#ffffff',\n  onlineIndicator: '#7dbe00',\n  awayIndicator: '#dcbd4e',\n  dndIndicator: '#ff6a6a',\n  mentionBj: '#fbfbfb',\n  mentionColor: '#2071f7',\n  centerChannelBg: '#f2f4f8',\n  centerChannelColor: '#333333',\n  newMessageSeparator: '#ff8800',\n  linkColor: '#2f81b7',\n  buttonBg: '#1dacfc',\n  buttonColor: '#ffffff',\n  errorTextColor: '#a94442',\n  mentionHighlightBg: '#f3e197',\n  mentionHighlightLink: '#2f81b7',\n  codeTheme: \"github\",\n  mentionBg: '#fbfbfb'\n};\n\nexport default props => {\n  let _theme = props.theme;\n\n  const handleSetTheme = async e => {\n    const val = e.target.value.split(\",\");\n    const theme = {\n      ...themeConfig,\n      sidebarHeaderBg: val[0],\n      sidebarBg: val[1],\n    };\n    Utils.applyTheme(theme);\n    await props.actions.saveTheme(\"\", theme);\n    if (props.applyToAllTeams) {\n      await props.actions.deleteTeamSpecificThemes();\n    }\n  };\n\n  return (\n    <RadioItems\n      className=\"theme\"\n      title=\"主题颜色\"\n      name=\"theme\"\n      options={options}\n      //defaultValue={`${_theme.sidebarHeaderBg},${_theme.sidebarBg}`}\n      defaultValue={(_theme.sidebarHeaderBg !== '#5b6a91' || _theme.sidebarBg !== '#383d54') ? '#5b6a91,#383d54' : `${_theme.sidebarHeaderBg},${_theme.sidebarBg}`}\n      onChange={handleSetTheme}\n    />\n  );\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getTheme, makeGetCategory} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentTeamId, getMyTeamsCount} from 'mattermost-redux/selectors/entities/teams';\n\nimport {saveTheme, deleteTeamSpecificThemes} from 'mattermost-redux/actions/preferences';\n\nimport {Preferences} from 'utils/constants.jsx';\n\nimport UserSettingsTheme from './user_settings_theme.jsx';\n\nfunction makeMapStateToProps() {\n  const getThemeCategory = makeGetCategory();\n\n  return (state) => {\n    return {\n      currentTeamId: getCurrentTeamId(state),\n      theme: getTheme(state),\n      applyToAllTeams: getThemeCategory(state, Preferences.CATEGORY_THEME).length <= 1,\n      showAllTeamsCheckbox: getMyTeamsCount(state) > 1,\n    };\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      saveTheme,\n      deleteTeamSpecificThemes,\n    }, dispatch),\n  };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(UserSettingsTheme);\n","import React from 'react';\nimport { message } from 'antd';\nimport Constants from 'utils/constants.jsx';\nimport RadioItems from \"../../RadioItems\";\n\nconst Preferences = Constants.Preferences;\n\nexport default (props) => {\n  const userId = props.user.id;\n  let timePreference = {\n    user_id: userId,\n    category: Preferences.CATEGORY_DISPLAY_SETTINGS,\n    name: Preferences.USE_MILITARY_TIME,\n  };\n  const handleChange = (e) => {\n    props.actions.savePreferences(userId, [\n      {\n        ...timePreference,\n        value: e.target.value,\n      }\n    ]);\n  }\n  return (\n    <RadioItems\n        title=\"时钟显示\"\n        options={[\n          { label: \"12小时格式（如：4:00pm）\", value: 'false' },\n          { label: \"24小时格式（如：16:00）\", value: 'true' }\n        ]}\n        defaultValue={props.militaryTime}\n        onChange={handleChange}\n      />\n  );\n}\n\n\n// const userId = this.props.user.id;\n\n\n// const teammateNameDisplayPreference = {\n//     user_id: userId,\n//     category: Preferences.CATEGORY_DISPLAY_SETTINGS,\n//     name: Preferences.NAME_NAME_FORMAT,\n//     value: this.state.teammateNameDisplay,\n// };\n// const channelDisplayModePreference = {\n//     user_id: userId,\n//     category: Preferences.CATEGORY_DISPLAY_SETTINGS,\n//     name: Preferences.CHANNEL_DISPLAY_MODE,\n//     value: this.state.channelDisplayMode,\n// };\n// const messageDisplayPreference = {\n//     user_id: userId,\n//     category: Preferences.CATEGORY_DISPLAY_SETTINGS,\n//     name: Preferences.MESSAGE_DISPLAY,\n//     value: this.state.messageDisplay,\n// };\n// const collapseDisplayPreference = {\n//     user_id: userId,\n//     category: Preferences.CATEGORY_DISPLAY_SETTINGS,\n//     name: Preferences.COLLAPSE_DISPLAY,\n//     value: this.state.collapseDisplay,\n// };\n// const linkPreviewDisplayPreference = {\n//     user_id: userId,\n//     category: Preferences.CATEGORY_DISPLAY_SETTINGS,\n//     name: Preferences.LINK_PREVIEW_DISPLAY,\n//     value: this.state.linkPreviewDisplay,\n// };\n\n// this.setState({isSaving: true});\n\n// const preferences = [\n//     timePreference,\n//     channelDisplayModePreference,\n//     messageDisplayPreference,\n//     collapseDisplayPreference,\n//     linkPreviewDisplayPreference,\n//     teammateNameDisplayPreference,\n// ];\n\n// await this.props.actions.savePreferences(userId, preferences);","import {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {savePreferences} from 'mattermost-redux/actions/preferences';\r\n\r\nimport ManageTimezones from './manage_timezones';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {actions: bindActionCreators({savePreferences}, dispatch)};\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ManageTimezones);\r\n","import React from 'react';\nimport { message } from 'antd';\nimport RadioItems from \"../../RadioItems\";\n\nexport default (props) => {\n  const handleChange = (e) => {\n    props.actions.updateMe({\n      ...props.user,\n      locale: e.target.value,\n    })\n      .then(({data, error: err}) => {\n        if (data) {\n          console.info('update lanuages ok');\n        } else {\n          let serverError = err;\n          if (err.message) {\n            serverError = err.message;\n          }\n          message.error(err);\n        }\n      })\n  }\n  const { locale } = props.user;\n  return (\n    <RadioItems\n      title=\"语言\"\n      defaultValue={locale}\n      options={[\n        { label: \"中文(简体)\", value: \"zh-CN\" },\n        { label: \"English\", value: \"en\" }\n      ]}\n      onChange={handleChange}\n    />\n  );\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {updateMe} from 'mattermost-redux/actions/users';\r\n\r\nimport ManageLanguages from './manage_languages';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {actions: bindActionCreators({updateMe}, dispatch)};\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ManageLanguages);\r\n","import React, { useEffect, useReducer } from \"react\";\nimport * as Utils from 'utils/utils.jsx';\n\nimport RadioItems from \"../RadioItems\";\nimport ThemeSetting from './user_settings_theme';\nimport ManageTimezones from './manage_timezones';\nimport ManageLanguages from './manage_languages';\nimport \"./display.scss\";\n\nexport default props => {\n  //console.log(props);\n  return (\n    <div className=\"setting__display\">\n      <ThemeSetting {...props} />\n      <ManageTimezones {...props} />\n      <ManageLanguages {...props} />\n    </div>\n  );\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {savePreferences} from 'mattermost-redux/actions/preferences';\nimport {getSupportedTimezones} from 'mattermost-redux/actions/general';\nimport {autoUpdateTimezone} from 'mattermost-redux/actions/timezone';\nimport {getConfig, getSupportedTimezones as getTimezones} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {get} from 'mattermost-redux/selectors/entities/preferences';\nimport {getUserTimezone} from 'mattermost-redux/selectors/entities/timezone';\nimport {getUserCurrentTimezone} from 'mattermost-redux/utils/timezone_utils';\n\nimport {Preferences} from 'utils/constants.jsx';\n\nimport NewUserSettingsDisplay from './new_user_settings_display.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const timezones = getTimezones(state);\n    const currentUserId = getCurrentUserId(state);\n    const userTimezone = getUserTimezone(state, currentUserId);\n    const automaticTimezoneNotSet = userTimezone && userTimezone.useAutomaticTimezone && !userTimezone.automaticTimezone;\n    const shouldAutoUpdateTimezone = !userTimezone || automaticTimezoneNotSet;\n\n    const allowCustomThemes = config.AllowCustomThemes === 'true';\n    const enableLinkPreviews = config.EnableLinkPreviews === 'true';\n    const defaultClientLocale = config.DefaultClientLocale;\n    const enableThemeSelection = config.EnableThemeSelection === 'true';\n    const enableTimezone = config.ExperimentalTimezone === 'true';\n    const configTeammateNameDisplay = config.TeammateNameDisplay;\n\n    return {\n        allowCustomThemes,\n        configTeammateNameDisplay,\n        enableLinkPreviews,\n        defaultClientLocale,\n        enableThemeSelection,\n        enableTimezone,\n        timezones,\n        userTimezone,\n        shouldAutoUpdateTimezone,\n        currentUserTimezone: getUserCurrentTimezone(userTimezone),\n        militaryTime: get(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.USE_MILITARY_TIME, Preferences.USE_MILITARY_TIME_DEFAULT),\n        teammateNameDisplay: get(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.NAME_NAME_FORMAT, configTeammateNameDisplay),\n        channelDisplayMode: get(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.CHANNEL_DISPLAY_MODE, Preferences.CHANNEL_DISPLAY_MODE_DEFAULT),\n        messageDisplay: get(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.MESSAGE_DISPLAY, Preferences.MESSAGE_DISPLAY_DEFAULT),\n        collapseDisplay: get(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.COLLAPSE_DISPLAY, Preferences.COLLAPSE_DISPLAY_DEFAULT),\n        linkPreviewDisplay: get(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.LINK_PREVIEW_DISPLAY, Preferences.LINK_PREVIEW_DISPLAY_DEFAULT),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getSupportedTimezones,\n            autoUpdateTimezone,\n            savePreferences,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUserSettingsDisplay);\n","import React from 'react';\nimport { Client4 } from 'mattermost-redux/client';\n\nexport default ({ id, lastPictureUpdate, loadingPicture = false, onFileChange }) => {\n  const handleFileChange = (e) => {\n    let pictureFile = null;\n    if (e.target.files && e.target.files[0]) {\n      pictureFile = e.target.files[0];\n    }\n    onFileChange && onFileChange(pictureFile);\n  }\n  return (\n    <div className=\"profile-picture\">\n      <img\n        alt={''}\n        className='user__picture'\n        src={Client4.getProfilePictureUrl(id, lastPictureUpdate)}\n      />\n      <input\n        accept='.jpg,.png,.bmp'\n        type='file'\n        onChange={handleFileChange}\n        disabled={loadingPicture}\n        className=\"upload__picture\"\n      />\n      <span />\n    </div>\n  )\n}","import React, { useState } from 'react';\r\nimport { Card, Row, Col, message } from 'antd';\r\nimport ProfilePicture from './profile_picture';\r\nimport './general.scss';\r\n\r\nconst Items = ({ dataSource = [] }) => {\r\n    return (\r\n        <Row>\r\n            {dataSource.map((item, idx) => (\r\n                <Col span={12} key={idx}>\r\n                    <label>{item.label}</label>\r\n                    <span title={item.value}>{item.value || ' '}</span>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default (props) => {\r\n    // console.log(props);\r\n    const [loadingPicture, setLoadingPicture] = useState(false);\r\n    const { nickname, username, phone, email, position, sex, id, last_picture_update, department_name, job_grade } = props.user || {};\r\n    const handleFileChange = (file) => {\r\n        // console.log(file, '-----profile-picture');\r\n        setLoadingPicture(true);\r\n        props.actions.uploadProfileImage(id, file)\r\n            .then(({data, error: err}) => {\r\n                if (data) {\r\n                    // console.log('file ok');\r\n                } else if (err) {\r\n                    console.error('file fail', err);\r\n                    message.error(err);\r\n                }\r\n                setLoadingPicture(false);\r\n            });\r\n    }\r\n    return (\r\n        <div className=\"settings__general\">\r\n            <Card>\r\n                <div className=\"user_base_info\">\r\n                    <div>\r\n                        <h3>\r\n                            {nickname || username}\r\n                            {sex && <span className={sex === 1 ? 'female' : 'male'} />}\r\n                        </h3>\r\n                        <p>{department_name}</p>\r\n                    </div>\r\n                    <ProfilePicture\r\n                        id={id}\r\n                        lastPictureUpdate={last_picture_update}\r\n                        onFileChange={handleFileChange}\r\n                        loadingPicture={loadingPicture}\r\n                    />\r\n                </div>\r\n                <Items dataSource={[\r\n                    { label: '手机', value: phone },\r\n                    { label: '部门', value: department_name },\r\n                    { label: '座机', value: '无' },\r\n                    { label: '岗位', value: position },\r\n                    { label: '邮箱', value: email },\r\n                    { label: '职级', value: job_grade },\r\n                ]} />\r\n            </Card>\r\n        </div>\r\n    );\r\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {\r\n    getMe,\r\n    updateMe,\r\n    sendVerificationEmail,\r\n    setDefaultProfileImage,\r\n    uploadProfileImage,\r\n} from 'mattermost-redux/actions/users';\r\nimport {clearErrors, logError} from 'mattermost-redux/actions/errors';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport NewUserSettingsGeneralTab from './new_user_settings_general.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n\r\n    const sendEmailNotifications = config.SendEmailNotifications === 'true';\r\n    const requireEmailVerification = config.RequireEmailVerification === 'true';\r\n    const maxFileSize = parseInt(config.MaxFileSize, 10);\r\n    const ldapFirstNameAttributeSet = config.LdapFirstNameAttributeSet === 'true';\r\n    const ldapLastNameAttributeSet = config.LdapLastNameAttributeSet === 'true';\r\n    const samlFirstNameAttributeSet = config.SamlFirstNameAttributeSet === 'true';\r\n    const samlLastNameAttributeSet = config.SamlLastNameAttributeSet === 'true';\r\n    const ldapNicknameAttributeSet = config.LdapNicknameAttributeSet === 'true';\r\n    const samlNicknameAttributeSet = config.SamlNicknameAttributeSet === 'true';\r\n    const samlPositionAttributeSet = config.SamlPositionAttributeSet === 'true';\r\n    const ldapPositionAttributeSet = config.LdapPositionAttributeSet === 'true';\r\n\r\n    return {\r\n        sendEmailNotifications,\r\n        requireEmailVerification,\r\n        maxFileSize,\r\n        ldapFirstNameAttributeSet,\r\n        ldapLastNameAttributeSet,\r\n        samlFirstNameAttributeSet,\r\n        samlLastNameAttributeSet,\r\n        ldapNicknameAttributeSet,\r\n        samlNicknameAttributeSet,\r\n        samlPositionAttributeSet,\r\n        ldapPositionAttributeSet,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            logError,\r\n            clearErrors,\r\n            getMe,\r\n            updateMe,\r\n            sendVerificationEmail,\r\n            setDefaultProfileImage,\r\n            uploadProfileImage,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUserSettingsGeneralTab);\r\n","import React, { useReducer, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { Checkbox, Divider, TimePicker, message } from \"antd\";\nimport RadioItems from \"../RadioItems\";\nimport \"./notific.scss\";\nconst dateDormat = \"HH:mm\";\n\nconst unreadOpts = [\n  { label: \"开启\", value: \"true\" },\n  { label: \"关闭\", value: \"false\" },\n];\n\nexport default props => {\n  // console.log(props, '-------notific props');\n  const { desktop, comments, desktop_sound, start_time = '', end_time = '', unread, meeting_notify_status } = props.user.notify_props;\n  const [state, setState] = useReducer((o, n) => ({ ...o, ...n }), {\n    start_time,\n    end_time,\n    isEnable: start_time.length > 0 && end_time.length > 0,\n    meetingNotifyStatus: meeting_notify_status === 'true',\n  })\n  const handleChange = (e, data) => {\n    const name = e.target.name;\n    let val;\n    if (e.target.type === \"checkbox\") {\n      val = `${e.target.checked}`\n      setState({\n        meetingNotifyStatus: e.target.checked,\n      })\n    } else {\n      val = e.target.value\n    }\n    let d = {\n      ...props.user.notify_props,\n      ...data,\n    }\n    if (name) {\n      d[name] = val;\n    }\n    props.actions\n      .updateMe({\n        notify_props: d,\n      })\n      .then(({ data: result, error: err }) => {\n        if (result) {\n          // console.log(\"notific update ok\", result);\n        } else if (err) {\n          // console.error(\"notific update fail\", err);\n          message.error(err);\n        }\n      });\n  };\n  const handleCheckbox = e => {\n    const val = e.target.checked;\n    const name = e.target.name;\n    handleChange({\n      target: {\n        name: e.target.name,\n        value: `${val}`\n      }\n    });\n  };\n  const handleTimePicker = (e, type) => {\n    const val = moment(e).format(\"HH:mm:ss\");\n    setState({ [type]: val });\n    // console.log(e, 'time')\n    if (e != null) {\n      if (type === 'start_time' && state.end_time) {\n        handleChange({\n          target: {\n            name: 'start_time',\n            value: val,\n          }\n        }, { end_time: state.end_time })\n      }\n      if (type === 'end_time' && state.start_time) {\n        handleChange({\n          target: {\n            name: 'end_time',\n            value: val,\n          }\n        }, { start_time: state.start_time })\n      }\n    }\n  };\n  const handlePeriod = e => {\n    setState({ isEnable: e.target.checked });\n    if (!e.target.checked) {\n      setState({\n        start_time: '',\n        end_time: '',\n      })\n      handleChange({ target: {} }, {\n        start_time: '',\n        end_time: '',\n      })\n    }\n  };\n  return (\n    <div className=\"setting__notific\">\n      <RadioItems\n        title=\"未读消息计数\"\n        name=\"unread\"\n        options={unreadOpts}\n        // value={unreadOpts[0].value}\n        defaultValue={unread || 'true'}\n        onChange={handleChange}\n      />\n      {/* <Checkbox name=\"meeting_notify_status\" checked={meeting_notify_status === 'true'} onChange={handleChange}>\n          当我在开会或内部通话时将通知静音\n        </Checkbox> */}\n      <RadioItems\n        title=\"桌面推送通知\"\n        name=\"desktop\"\n        options={[\n          { label: \"所有消息\", value: \"all\" },\n          { label: \"私聊或提及\", value: \"mention\" },\n          { label: \"不提醒\", value: \"none\" }\n        ]}\n        onChange={handleChange}\n        defaultValue={desktop}\n      />\n      <RadioItems\n        title=\"回复通知\"\n        name=\"comments\"\n        options={[\n          { label: \"在我开头或回复过的消息串触发通知\", value: \"any\" },\n          { label: \"在我开头的消息串触发通知\", value: \"root\" },\n          { label: \"回复串信息只有在我被提及时触发通知\", value: \"never\" }\n        ]}\n        onChange={handleChange}\n        defaultValue={comments}\n      />\n      <RadioItems\n        title=\"收到新消息时播放声音\"\n        name=\"desktop_sound\"\n        options={[\n          { label: \"开启\", value: \"true\" },\n          { label: \"关闭\", value: \"false\" }\n        ]}\n        onChange={handleChange}\n        defaultValue={desktop_sound}\n      />\n      <Divider />\n      <div className=\"ant-checkbox-group\">\n        <div className=\"time\">\n          <Checkbox\n            name=\"period\"\n            onChange={handlePeriod}\n            checked={state.isEnable}\n          >\n            免打扰时段：\n          </Checkbox>\n          <div className=\"time-pick\">\n            <TimePicker\n              value={state.start_time ? moment(state.start_time, 'HH:mm') : null}\n              onChange={e => handleTimePicker(e, \"start_time\")}\n              format={dateDormat}\n              placeholder=\"00:00\"\n              disabled={!state.isEnable}\n            />\n            <TimePicker\n              value={state.end_time ? moment(state.end_time, 'HH:mm') : null }\n              onChange={e => handleTimePicker(e, \"end_time\")}\n              format={dateDormat}\n              placeholder=\"23:59\"\n              disabled={!state.isEnable}\n            />\n          </div>\n        </div>\n        <Checkbox name=\"meeting_notify_status\" checked={meeting_notify_status === 'true'} onChange={handleChange}>\n          当我在开会或内部通话时将通知静音\n        </Checkbox>\n      </div>\n    </div>\n  );\n};\n\n// auto_responder_active: \"false\"\n// auto_responder_message: \"你好，我现在已离开办公室并无法回复消息。\"\n// channel: \"true\"\n// comments: \"root\"\n// desktop: \"mention\"\n// desktop_sound: \"false\"\n// email: \"true\"\n// first_name: \"false\"\n// mention_keys: \"\"\n// push: \"mention\"\n// push_status: \"away\"\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {updateMe, setStatus} from 'mattermost-redux/actions/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUser, getStatusForUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport NewUserSettingsNotifications from './new_user_settings_notifications';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const sendPushNotifications = config.SendPushNotifications === 'true';\n    const enableAutoResponder = config.ExperimentalEnableAutomaticReplies === 'true';\n\n    const currentUser = getCurrentUser(state);\n\n    if (!currentUser) {\n        return {};\n    }\n\n    const userId = currentUser.id;\n\n    return {\n        userId,\n        siteName,\n        sendPushNotifications,\n        enableAutoResponder,\n        status: getStatusForUserId(state, userId),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateMe,\n            setStatus,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUserSettingsNotifications);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport SettingItemMax from 'components/setting_item_max.jsx';\r\nimport SettingItemMin from 'components/setting_item_min.jsx';\r\nimport {browserHistory} from 'utils/browser_history';\r\n\r\nconst SECTION_MFA = 'mfa';\r\n\r\nexport default class MfaSection extends React.PureComponent {\r\n    static propTypes = {\r\n        active: PropTypes.bool.isRequired,\r\n\r\n        // Whether or not the current user has MFA enabled\r\n        mfaActive: PropTypes.bool.isRequired,\r\n\r\n        // Whether or not the current user can enable MFA based on their authentication type and the server's settings\r\n        mfaAvailable: PropTypes.bool.isRequired,\r\n\r\n        // Whether or not this server enforces that all users have MFA\r\n        mfaEnforced: PropTypes.bool.isRequired,\r\n\r\n        updateSection: PropTypes.func.isRequired,\r\n        actions: PropTypes.shape({\r\n            deactivateMfa: PropTypes.func.isRequired,\r\n        }),\r\n    };\r\n\r\n    state = {\r\n        serverError: null,\r\n    };\r\n\r\n    setupMfa = (e) => {\r\n        e.preventDefault();\r\n\r\n        browserHistory.push('/mfa/setup');\r\n    };\r\n\r\n    removeMfa = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const {error} = await this.props.actions.deactivateMfa();\r\n\r\n        if (error) {\r\n            this.setState({\r\n                serverError: error.message,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (this.props.mfaEnforced) {\r\n            browserHistory.push('/mfa/setup');\r\n            return;\r\n        }\r\n\r\n        this.props.updateSection('');\r\n        this.setState({\r\n            serverError: null,\r\n        });\r\n    };\r\n\r\n    renderTitle = () => {\r\n        return (\r\n            <FormattedMessage\r\n                id='user.settings.mfa.title'\r\n                defaultMessage='Multi-factor Authentication'\r\n            />\r\n        );\r\n    };\r\n\r\n    renderDescription = () => {\r\n        if (this.props.mfaActive) {\r\n            return (\r\n                <FormattedMessage\r\n                    id='user.settings.security.active'\r\n                    defaultMessage='Active'\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <FormattedMessage\r\n                id='user.settings.security.inactive'\r\n                defaultMessage='Inactive'\r\n            />\r\n        );\r\n    };\r\n\r\n    renderContent = () => {\r\n        let content;\r\n\r\n        if (this.props.mfaActive) {\r\n            let buttonText;\r\n\r\n            if (this.props.mfaEnforced) {\r\n                buttonText = (\r\n                    <FormattedMessage\r\n                        id='user.settings.mfa.reset'\r\n                        defaultMessage='Reset MFA on your account'\r\n                    />\r\n                );\r\n            } else {\r\n                buttonText = (\r\n                    <FormattedMessage\r\n                        id='user.settings.mfa.remove'\r\n                        defaultMessage='Remove MFA from your account'\r\n                    />\r\n                );\r\n            }\r\n\r\n            content = (\r\n                <a\r\n                    className='btn btn-primary'\r\n                    href='#'\r\n                    onClick={this.removeMfa}\r\n                >\r\n                    {buttonText}\r\n                </a>\r\n            );\r\n        } else {\r\n            content = (\r\n                <a\r\n                    className='btn btn-primary'\r\n                    href='#'\r\n                    onClick={this.setupMfa}\r\n                >\r\n                    <FormattedMessage\r\n                        id='user.settings.mfa.add'\r\n                        defaultMessage='Add MFA to your account'\r\n                    />\r\n                </a>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='padding-top'>\r\n                {content}\r\n                <br/>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderHelpText = () => {\r\n        if (this.props.mfaActive) {\r\n            if (this.props.mfaEnforced) {\r\n                return (\r\n                    <FormattedMessage\r\n                        id='user.settings.mfa.requiredHelp'\r\n                        defaultMessage='Multi-factor authentication is required on this server. Resetting is only recommended when you need to switch code generation to a new mobile device. You will be required to set it up again immediately.'\r\n                    />\r\n                );\r\n            }\r\n\r\n            return (\r\n                <FormattedMessage\r\n                    id='user.settings.mfa.removeHelp'\r\n                    defaultMessage='Removing multi-factor authentication means you will no longer require a phone-based passcode to sign-in to your account.'\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <FormattedMessage\r\n                id='user.settings.mfa.addHelp'\r\n                defaultMessage='Adding multi-factor authentication will make your account more secure by requiring a code from your mobile phone each time you sign in.'\r\n            />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const title = this.renderTitle();\r\n\r\n        if (!this.props.mfaAvailable) {\r\n            return null;\r\n        }\r\n\r\n        if (!this.props.active) {\r\n            return (\r\n                <SettingItemMin\r\n                    title={title}\r\n                    describe={this.renderDescription()}\r\n                    section={SECTION_MFA}\r\n                    updateSection={this.props.updateSection}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <SettingItemMax\r\n                title={title}\r\n                inputs={this.renderContent()}\r\n                extraInfo={this.renderHelpText()}\r\n                serverError={this.state.serverError}\r\n                updateSection={this.props.updateSection}\r\n                width='medium'\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\r\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\r\n\r\nimport {deactivateMfa} from 'actions/views/mfa';\r\nimport Constants from 'utils/constants';\r\n\r\nimport MfaSection from './mfa_section';\r\n\r\nfunction mapStateToProps(state) {\r\n    const license = getLicense(state);\r\n    const config = getConfig(state);\r\n\r\n    const mfaLicensed = license && license.IsLicensed === 'true' && license.MFA === 'true';\r\n\r\n    const mfaEnabled = config.EnableMultifactorAuthentication === 'true';\r\n    const mfaEnforced = mfaLicensed && config.EnforceMultifactorAuthentication === 'true';\r\n\r\n    const user = getCurrentUser(state);\r\n\r\n    let mfaActive = false;\r\n    let mfaAvailable = false;\r\n    if (user) {\r\n        mfaActive = user.mfa_active;\r\n        mfaAvailable = mfaEnabled && (user.auth_service === '' || user.auth_service === Constants.LDAP_SERVICE);\r\n    }\r\n\r\n    return {\r\n        mfaActive,\r\n        mfaAvailable,\r\n        mfaEnforced,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            deactivateMfa,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MfaSection);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\r\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\r\n\r\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\r\nimport Constants from 'utils/constants.jsx';\r\nimport {isMobile} from 'utils/user_agent.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\nimport SettingItemMax from 'components/setting_item_max.jsx';\r\nimport SettingItemMin from 'components/setting_item_min.jsx';\r\nimport SaveButton from 'components/save_button.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\nimport WarningIcon from 'components/icon/warning_icon';\r\n\r\nconst SECTION_TOKENS = 'tokens';\r\nconst TOKEN_CREATING = 'creating';\r\nconst TOKEN_CREATED = 'created';\r\nconst TOKEN_NOT_CREATING = 'not_creating';\r\n\r\nexport default class UserAccessTokenSection extends React.Component {\r\n    static propTypes = {\r\n        user: PropTypes.object,\r\n        active: PropTypes.bool,\r\n        updateSection: PropTypes.func,\r\n        userAccessTokens: PropTypes.object,\r\n        setRequireConfirm: PropTypes.func.isRequired,\r\n        actions: PropTypes.shape({\r\n            getUserAccessTokensForUser: PropTypes.func.isRequired,\r\n            createUserAccessToken: PropTypes.func.isRequired,\r\n            revokeUserAccessToken: PropTypes.func.isRequired,\r\n            enableUserAccessToken: PropTypes.func.isRequired,\r\n            disableUserAccessToken: PropTypes.func.isRequired,\r\n            clearUserAccessTokens: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    static defaultProps = {\r\n        user: {},\r\n        active: false,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showConfirmModal: false,\r\n            newToken: null,\r\n            tokenCreationState: TOKEN_NOT_CREATING,\r\n            tokenError: '',\r\n            serverError: null,\r\n            saving: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.actions.clearUserAccessTokens();\r\n        const userId = this.props.user ? this.props.user.id : '';\r\n        this.props.actions.getUserAccessTokensForUser(userId, 0, 200);\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\r\n        if (!nextProps.active && this.props.active) {\r\n            this.setState({\r\n                showConfirmModal: false,\r\n                newToken: null,\r\n                tokenCreationState: TOKEN_NOT_CREATING,\r\n                tokenError: '',\r\n                serverError: null,\r\n                saving: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    startCreatingToken = () => {\r\n        this.setState({tokenCreationState: TOKEN_CREATING});\r\n    }\r\n\r\n    stopCreatingToken = () => {\r\n        this.setState({tokenCreationState: TOKEN_NOT_CREATING, saving: false});\r\n    }\r\n\r\n    handleCreateToken = async () => {\r\n        this.handleCancelConfirm();\r\n\r\n        const description = this.refs.newtokendescription ? this.refs.newtokendescription.value : '';\r\n\r\n        if (description === '') {\r\n            this.setState({tokenError: Utils.localizeMessage('user.settings.tokens.nameRequired', 'Please enter a description.')});\r\n            return;\r\n        }\r\n\r\n        this.setState({tokenError: '', saving: true});\r\n        this.props.setRequireConfirm(true, this.confirmCopyToken);\r\n\r\n        const userId = this.props.user ? this.props.user.id : '';\r\n        const {data, error} = await this.props.actions.createUserAccessToken(userId, description);\r\n\r\n        if (data && this.state.tokenCreationState === TOKEN_CREATING) {\r\n            this.setState({tokenCreationState: TOKEN_CREATED, newToken: data, saving: false});\r\n        } else if (error) {\r\n            this.setState({serverError: error.message, saving: false});\r\n        }\r\n    }\r\n\r\n    confirmCopyToken = (confirmAction) => {\r\n        this.setState({\r\n            showConfirmModal: true,\r\n            confirmTitle: (\r\n                <FormattedMessage\r\n                    id='user.settings.tokens.confirmCopyTitle'\r\n                    defaultMessage='Have you copied your token?'\r\n                />\r\n            ),\r\n            confirmMessage: (state) => (\r\n                <div>\r\n                    <FormattedHTMLMessage\r\n                        id='user.settings.tokens.confirmCopyMessage'\r\n                        defaultMessage=\"Make sure you have copied and saved the access token below. You won't be able to see it again!\"\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    {state.tokenCreationState === TOKEN_CREATING ? (\r\n                        <div>\r\n                            <strong className='word-break--all'>\r\n                                <FormattedMessage\r\n                                    id='user.settings.tokens.token'\r\n                                    defaultMessage='Access Token: '\r\n                                />\r\n                            </strong>\r\n                            <FormattedMessage\r\n                                id='user.settings.tokens.tokenLoading'\r\n                                defaultMessage='Loading...'\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <strong className='word-break--all'>\r\n                            <FormattedMessage\r\n                                id='user.settings.tokens.token'\r\n                                defaultMessage='Access Token: '\r\n                            />\r\n                            {state.newToken.token}\r\n                        </strong>\r\n                    )}\r\n                </div>\r\n            ),\r\n            confirmButton: (\r\n                <FormattedMessage\r\n                    id='user.settings.tokens.confirmCopyButton'\r\n                    defaultMessage='Yes, I have copied the token'\r\n                />\r\n            ),\r\n            confirmComplete: () => {\r\n                this.handleCancelConfirm();\r\n                confirmAction();\r\n            },\r\n            confirmHideCancel: true,\r\n        });\r\n    }\r\n\r\n    handleCancelConfirm = () => {\r\n        this.setState({\r\n            showConfirmModal: false,\r\n            confirmTitle: null,\r\n            confirmMessage: null,\r\n            confirmButton: null,\r\n            confirmComplete: null,\r\n            confirmHideCancel: false,\r\n        });\r\n    }\r\n\r\n    confirmCreateToken = () => {\r\n        if (!UserUtils.isSystemAdmin(this.props.user.roles)) {\r\n            this.handleCreateToken();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            showConfirmModal: true,\r\n            confirmTitle: (\r\n                <FormattedMessage\r\n                    id='user.settings.tokens.confirmCreateTitle'\r\n                    defaultMessage='Create System Admin Personal Access Token'\r\n                />\r\n            ),\r\n            confirmMessage: () => (\r\n                <div className='alert alert-danger'>\r\n                    <FormattedHTMLMessage\r\n                        id='user.settings.tokens.confirmCreateMessage'\r\n                        defaultMessage='You are generating a personal access token with System Admin permissions. Are you sure want to create this token?'\r\n                    />\r\n                </div>\r\n            ),\r\n            confirmButton: (\r\n                <FormattedMessage\r\n                    id='user.settings.tokens.confirmCreateButton'\r\n                    defaultMessage='Yes, Create'\r\n                />\r\n            ),\r\n            confirmComplete: () => {\r\n                this.handleCreateToken();\r\n                trackEvent('settings', 'system_admin_create_user_access_token');\r\n            },\r\n        });\r\n    }\r\n\r\n    saveTokenKeyPress = (e) => {\r\n        if (Utils.isKeyPressed(e, Constants.KeyCodes.ENTER)) {\r\n            this.confirmCreateToken();\r\n        }\r\n    }\r\n\r\n    confirmRevokeToken = (tokenId) => {\r\n        const token = this.props.userAccessTokens[tokenId];\r\n\r\n        this.setState({\r\n            showConfirmModal: true,\r\n            confirmTitle: (\r\n                <FormattedMessage\r\n                    id='user.settings.tokens.confirmDeleteTitle'\r\n                    defaultMessage='Delete Token?'\r\n                />\r\n            ),\r\n            confirmMessage: () => (\r\n                <div className='alert alert-danger'>\r\n                    <FormattedMarkdownMessage\r\n                        id='user.settings.tokens.confirmDeleteMessage'\r\n                        defaultMessage='Any integrations using this token will no longer be able to access the Mattermost API. You cannot undo this action. \\n \\nAre you sure want to delete the **{description}** token?'\r\n                        values={{\r\n                            description: token.description,\r\n                        }}\r\n                    />\r\n                </div>\r\n            ),\r\n            confirmButton: (\r\n                <FormattedMessage\r\n                    id='user.settings.tokens.confirmDeleteButton'\r\n                    defaultMessage='Yes, Delete'\r\n                />\r\n            ),\r\n            confirmComplete: () => {\r\n                this.revokeToken(tokenId);\r\n                trackEvent('settings', 'revoke_user_access_token');\r\n            },\r\n        });\r\n    }\r\n\r\n    revokeToken = async (tokenId) => {\r\n        const {error} = await this.props.actions.revokeUserAccessToken(tokenId);\r\n        if (error) {\r\n            this.setState({serverError: error.message});\r\n        }\r\n        this.handleCancelConfirm();\r\n    }\r\n\r\n    activateToken = async (tokenId) => {\r\n        const {error} = await this.props.actions.enableUserAccessToken(tokenId);\r\n        if (error) {\r\n            this.setState({serverError: error.message});\r\n        } else {\r\n            trackEvent('settings', 'activate_user_access_token');\r\n        }\r\n    }\r\n\r\n    deactivateToken = async (tokenId) => {\r\n        const {error} = await this.props.actions.disableUserAccessToken(tokenId);\r\n        if (error) {\r\n            this.setState({serverError: error.message});\r\n        } else {\r\n            trackEvent('settings', 'deactivate_user_access_token');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let tokenListClass = '';\r\n\r\n        if (!this.props.active) {\r\n            const describe = Utils.localizeMessage('user.settings.tokens.clickToEdit', \"Click 'Edit' to manage your personal access tokens\");\r\n\r\n            return (\r\n                <SettingItemMin\r\n                    title={Utils.localizeMessage('user.settings.tokens.title', 'Personal Access Tokens')}\r\n                    describe={describe}\r\n                    section={SECTION_TOKENS}\r\n                    updateSection={this.props.updateSection}\r\n                />\r\n            );\r\n        }\r\n\r\n        const tokenList = [];\r\n        Object.values(this.props.userAccessTokens).forEach((token) => {\r\n            if (this.state.newToken && this.state.newToken.id === token.id) {\r\n                return;\r\n            }\r\n\r\n            let activeLink;\r\n            let activeStatus;\r\n\r\n            if (token.is_active) {\r\n                activeLink = (\r\n                    <a\r\n                        name={token.id + '_deactivate'}\r\n                        href='#'\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.deactivateToken(token.id);\r\n                        }}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.deactivate'\r\n                            defaultMessage='Disable'\r\n                        />\r\n                    </a>);\r\n            } else {\r\n                activeStatus = (\r\n                    <span className='has-error setting-box__inline-error'>\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.deactivatedWarning'\r\n                            defaultMessage='(Disabled)'\r\n                        />\r\n                    </span>\r\n                );\r\n                activeLink = (\r\n                    <a\r\n                        name={token.id + '_activate'}\r\n                        href='#'\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.activateToken(token.id);\r\n                        }}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.activate'\r\n                            defaultMessage='Enable'\r\n                        />\r\n                    </a>\r\n                );\r\n            }\r\n\r\n            tokenList.push(\r\n                <div\r\n                    key={token.id}\r\n                    className='setting-box__item'\r\n                >\r\n                    <div className='whitespace--nowrap overflow--ellipsis'>\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.tokenDesc'\r\n                            defaultMessage='Token Description: '\r\n                        />\r\n                        {token.description}\r\n                        {activeStatus}\r\n                    </div>\r\n                    <div className='setting-box__token-id whitespace--nowrap overflow--ellipsis'>\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.tokenId'\r\n                            defaultMessage='Token ID: '\r\n                        />\r\n                        {token.id}\r\n                    </div>\r\n                    <div>\r\n                        {activeLink}\r\n                        {' - '}\r\n                        <a\r\n                            name={token.id + '_delete'}\r\n                            href='#'\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.confirmRevokeToken(token.id);\r\n                            }}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='user.settings.tokens.delete'\r\n                                defaultMessage='Delete'\r\n                            />\r\n                        </a>\r\n                    </div>\r\n                    <hr className='margin-bottom margin-top x2'/>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        let noTokenText;\r\n        if (tokenList.length === 0) {\r\n            noTokenText = (\r\n                <FormattedMessage\r\n                    key='notokens'\r\n                    id='user.settings.tokens.userAccessTokensNone'\r\n                    defaultMessage='No personal access tokens.'\r\n                />\r\n            );\r\n        }\r\n\r\n        let extraInfo;\r\n        if (isMobile()) {\r\n            extraInfo = (\r\n                <span>\r\n                    <FormattedMarkdownMessage\r\n                        id='user.settings.tokens.description_mobile'\r\n                        defaultMessage='[Personal access tokens](!https://about.mattermost.com/default-user-access-tokens) function similarly to session tokens and can be used by integrations to [authenticate against the REST API](!https://about.mattermost.com/default-api-authentication). Create new tokens on your desktop.'\r\n                    />\r\n                </span>\r\n            );\r\n        } else {\r\n            extraInfo = (\r\n                <span>\r\n                    <FormattedMarkdownMessage\r\n                        id='user.settings.tokens.description'\r\n                        defaultMessage='[Personal access tokens](!https://about.mattermost.com/default-user-access-tokens) function similarly to session tokens and can be used by integrations to [authenticate against the REST API](!https://about.mattermost.com/default-api-authentication).'\r\n                    />\r\n                </span>\r\n            );\r\n        }\r\n\r\n        let newTokenSection;\r\n        if (this.state.tokenCreationState === TOKEN_CREATING) {\r\n            newTokenSection = (\r\n                <div className='padding-left x2'>\r\n                    <div className='row'>\r\n                        <label className='col-sm-auto control-label padding-right x2'>\r\n                            <FormattedMessage\r\n                                id='user.settings.tokens.name'\r\n                                defaultMessage='Token Description: '\r\n                            />\r\n                        </label>\r\n                        <div className='col-sm-5'>\r\n                            <input\r\n                                autoFocus={true}\r\n                                ref='newtokendescription'\r\n                                className='form-control'\r\n                                type='text'\r\n                                maxLength={64}\r\n                                onKeyPress={this.saveTokenKeyPress}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className='padding-top x2'>\r\n                            <FormattedMessage\r\n                                id='user.settings.tokens.nameHelp'\r\n                                defaultMessage='Enter a description for your token to remember what it does.'\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label\r\n                                id='clientError'\r\n                                className='has-error margin-top margin-bottom'\r\n                            >\r\n                                {this.state.tokenError}\r\n                            </label>\r\n                        </div>\r\n                        <SaveButton\r\n                            btnClass='btn-primary'\r\n                            savingMessage={\r\n                                <FormattedMessage\r\n                                    id='user.settings.tokens.save'\r\n                                    defaultMessage='Save'\r\n                                />\r\n                            }\r\n                            saving={this.state.saving}\r\n                            onClick={this.confirmCreateToken}\r\n                        />\r\n                        <button\r\n                            className='btn btn-link'\r\n                            onClick={this.stopCreatingToken}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='user.settings.tokens.cancel'\r\n                                defaultMessage='Cancel'\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (this.state.tokenCreationState === TOKEN_CREATED) {\r\n            if (tokenList.length === 0) {\r\n                tokenListClass = ' hidden';\r\n            }\r\n\r\n            newTokenSection = (\r\n                <div\r\n                    className='alert alert-warning'\r\n                >\r\n                    <WarningIcon additionalClassName='margin-right'/>\r\n                    <FormattedMessage\r\n                        id='user.settings.tokens.copy'\r\n                        defaultMessage=\"Please copy the access token below. You won't be able to see it again!\"\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <div className='whitespace--nowrap overflow--ellipsis'>\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.name'\r\n                            defaultMessage='Token Description: '\r\n                        />\r\n                        {this.state.newToken.description}\r\n                    </div>\r\n                    <div className='whitespace--nowrap overflow--ellipsis'>\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.id'\r\n                            defaultMessage='Token ID: '\r\n                        />\r\n                        {this.state.newToken.id}\r\n                    </div>\r\n                    <strong className='word-break--all'>\r\n                        <FormattedMessage\r\n                            id='user.settings.tokens.token'\r\n                            defaultMessage='Access Token: '\r\n                        />\r\n                        {this.state.newToken.token}\r\n                    </strong>\r\n                </div>\r\n            );\r\n        } else {\r\n            newTokenSection = (\r\n                <a\r\n                    className='btn btn-primary'\r\n                    href='#'\r\n                    onClick={this.startCreatingToken}\r\n                >\r\n                    <FormattedMessage\r\n                        id='user.settings.tokens.create'\r\n                        defaultMessage='Create New Token'\r\n                    />\r\n                </a>\r\n            );\r\n        }\r\n\r\n        const inputs = [];\r\n        inputs.push(\r\n            <div\r\n                key='tokensSetting'\r\n                className='padding-top'\r\n            >\r\n                <div key='tokenList'>\r\n                    <div className={'alert alert-transparent' + tokenListClass}>\r\n                        {tokenList}\r\n                        {noTokenText}\r\n                    </div>\r\n                    {newTokenSection}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <SettingItemMax\r\n                    title={Utils.localizeMessage('user.settings.tokens.title', 'Personal Access Tokens')}\r\n                    inputs={inputs}\r\n                    extraInfo={extraInfo}\r\n                    infoPosition='top'\r\n                    serverError={this.state.serverError}\r\n                    updateSection={this.props.updateSection}\r\n                    width='full'\r\n                    saving={this.state.saving}\r\n                    cancelButtonText={\r\n                        <FormattedMessage\r\n                            id='user.settings.security.close'\r\n                            defaultMessage='Close'\r\n                        />\r\n                    }\r\n                />\r\n                <ConfirmModal\r\n                    title={this.state.confirmTitle}\r\n                    message={this.state.confirmMessage ? this.state.confirmMessage(this.state) : null}\r\n                    confirmButtonText={this.state.confirmButton}\r\n                    show={this.state.showConfirmModal}\r\n                    onConfirm={this.state.confirmComplete || (() => {})} //eslint-disable-line no-empty-function\r\n                    onCancel={this.handleCancelConfirm}\r\n                    hideCancel={this.state.confirmHideCancel}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {clearUserAccessTokens, createUserAccessToken, getUserAccessTokensForUser, revokeUserAccessToken, enableUserAccessToken, disableUserAccessToken} from 'mattermost-redux/actions/users';\r\n\r\nimport UserAccessTokenSection from './user_access_token_section.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userAccessTokens: state.entities.users.myUserAccessTokens,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getUserAccessTokensForUser,\r\n            createUserAccessToken,\r\n            revokeUserAccessToken,\r\n            enableUserAccessToken,\r\n            disableUserAccessToken,\r\n            clearUserAccessTokens,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAccessTokenSection);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedDate, FormattedMessage, FormattedTime} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Constants from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport icon50 from 'images/icon50x50.png';\r\nimport AccessHistoryModal from 'components/access_history_modal';\r\nimport ActivityLogModal from 'components/activity_log_modal';\r\nimport SettingItemMax from 'components/setting_item_max.jsx';\r\nimport SettingItemMin from 'components/setting_item_min.jsx';\r\nimport ToggleModalButton from 'components/toggle_modal_button.jsx';\r\n\r\nimport MfaSection from './mfa_section';\r\nimport UserAccessTokenSection from './user_access_token_section';\r\n\r\nconst SECTION_MFA = 'mfa';\r\nconst SECTION_PASSWORD = 'password';\r\nconst SECTION_SIGNIN = 'signin';\r\nconst SECTION_APPS = 'apps';\r\nconst SECTION_TOKENS = 'tokens';\r\n\r\nexport default class SecurityTab extends React.PureComponent {\r\n    static propTypes = {\r\n        user: PropTypes.object,\r\n        activeSection: PropTypes.string,\r\n        updateSection: PropTypes.func,\r\n        closeModal: PropTypes.func.isRequired,\r\n        collapseModal: PropTypes.func.isRequired,\r\n        setRequireConfirm: PropTypes.func.isRequired,\r\n\r\n        /*\r\n         * Set if access tokens are enabled and this user can use them\r\n         */\r\n        canUseAccessTokens: PropTypes.bool,\r\n\r\n        // Whether or not OAuth applications are enabled.\r\n        enableOAuthServiceProvider: PropTypes.bool,\r\n\r\n        // Whether or not sign-up with email is enabled.\r\n        enableSignUpWithEmail: PropTypes.bool,\r\n\r\n        // Whether or not sign-up with GitLab is enabled.\r\n        enableSignUpWithGitLab: PropTypes.bool,\r\n\r\n        // Whether or not sign-up with Google is enabled.\r\n        enableSignUpWithGoogle: PropTypes.bool,\r\n\r\n        // Whether or not sign-up with LDAP is enabled.\r\n        enableLdap: PropTypes.bool,\r\n\r\n        // Whether or not sign-up with SAML is enabled.\r\n        enableSaml: PropTypes.bool,\r\n\r\n        // Whether or not sign-up with Office 365 is enabled.\r\n        enableSignUpWithOffice365: PropTypes.bool,\r\n\r\n        // Whether or not the experimental authentication transfer is enabled.\r\n        experimentalEnableAuthenticationTransfer: PropTypes.bool,\r\n\r\n        passwordConfig: PropTypes.object,\r\n        militaryTime: PropTypes.bool,\r\n\r\n        actions: PropTypes.shape({\r\n            getMe: PropTypes.func.isRequired,\r\n            updateUserPassword: PropTypes.func.isRequired,\r\n            getAuthorizedOAuthApps: PropTypes.func.isRequired,\r\n            deauthorizeOAuthApp: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    static defaultProps = {\r\n        user: {},\r\n        activeSection: '',\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = this.getDefaultState();\r\n    }\r\n\r\n    getDefaultState() {\r\n        return {\r\n            currentPassword: '',\r\n            newPassword: '',\r\n            confirmPassword: '',\r\n            passwordError: '',\r\n            serverError: '',\r\n            tokenError: '',\r\n            authService: this.props.user.auth_service,\r\n            savingPassword: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.enableOAuthServiceProvider) {\r\n            this.loadAuthorizedOAuthApps();\r\n        }\r\n    }\r\n\r\n    loadAuthorizedOAuthApps = async () => {\r\n        const {data, error} = await this.props.actions.getAuthorizedOAuthApps();\r\n        if (data) {\r\n            this.setState({authorizedApps: data, serverError: null}); //eslint-disable-line react/no-did-mount-set-state\r\n        } else if (error) {\r\n            this.setState({serverError: error.message}); //eslint-disable-line react/no-did-mount-set-state\r\n        }\r\n    }\r\n\r\n    submitPassword = async () => {\r\n        const user = this.props.user;\r\n        const currentPassword = this.state.currentPassword;\r\n        const newPassword = this.state.newPassword;\r\n        const confirmPassword = this.state.confirmPassword;\r\n\r\n        if (currentPassword === '') {\r\n            this.setState({passwordError: Utils.localizeMessage('user.settings.security.currentPasswordError', 'Please enter your current password.'), serverError: ''});\r\n            return;\r\n        }\r\n\r\n        const {valid, error} = Utils.isValidPassword(newPassword, this.props.passwordConfig);\r\n        if (!valid && error) {\r\n            this.setState({\r\n                passwordError: error,\r\n                serverError: '',\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (newPassword !== confirmPassword) {\r\n            const defaultState = Object.assign(this.getDefaultState(), {passwordError: Utils.localizeMessage('user.settings.security.passwordMatchError', 'The new passwords you entered do not match.'), serverError: ''});\r\n            this.setState(defaultState);\r\n            return;\r\n        }\r\n\r\n        this.setState({savingPassword: true});\r\n\r\n        const {data, error: err} = await this.props.actions.updateUserPassword(\r\n            user.id,\r\n            currentPassword,\r\n            newPassword\r\n        );\r\n        if (data) {\r\n            this.props.updateSection('');\r\n            this.props.actions.getMe();\r\n            this.setState(this.getDefaultState());\r\n        } else if (err) {\r\n            const state = this.getDefaultState();\r\n            if (err.message) {\r\n                state.serverError = err.message;\r\n            } else {\r\n                state.serverError = err;\r\n            }\r\n            state.passwordError = '';\r\n            this.setState(state);\r\n        }\r\n    }\r\n\r\n    updateCurrentPassword = (e) => {\r\n        this.setState({currentPassword: e.target.value});\r\n    }\r\n\r\n    updateNewPassword = (e) => {\r\n        this.setState({newPassword: e.target.value});\r\n    }\r\n\r\n    updateConfirmPassword = (e) => {\r\n        this.setState({confirmPassword: e.target.value});\r\n    }\r\n\r\n    deauthorizeApp = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const appId = e.currentTarget.getAttribute('data-app');\r\n\r\n        const {data, error} = await this.props.actions.deauthorizeOAuthApp(appId);\r\n        if (data) {\r\n            const authorizedApps = this.state.authorizedApps.filter((app) => {\r\n                return app.id !== appId;\r\n            });\r\n            this.setState({authorizedApps, serverError: null});\r\n        } else if (error) {\r\n            this.setState({serverError: error.message});\r\n        }\r\n    }\r\n\r\n    handleUpdateSection = (section) => {\r\n        if (section) {\r\n            this.props.updateSection(section);\r\n        } else {\r\n            switch (this.props.activeSection) {\r\n            case SECTION_MFA:\r\n            case SECTION_SIGNIN:\r\n            case SECTION_TOKENS:\r\n            case SECTION_APPS:\r\n                this.setState({\r\n                    serverError: null,\r\n                });\r\n                break;\r\n            case SECTION_PASSWORD:\r\n                this.setState({\r\n                    currentPassword: '',\r\n                    newPassword: '',\r\n                    confirmPassword: '',\r\n                    serverError: null,\r\n                    passwordError: null,\r\n                });\r\n                break;\r\n            default:\r\n            }\r\n\r\n            this.props.updateSection('');\r\n        }\r\n    }\r\n\r\n    createPasswordSection = () => {\r\n        if (this.props.activeSection === SECTION_PASSWORD) {\r\n            const inputs = [];\r\n            let submit;\r\n\r\n            if (this.props.user.auth_service === '') {\r\n                submit = this.submitPassword;\r\n\r\n                inputs.push(\r\n                    <div\r\n                        key='currentPasswordUpdateForm'\r\n                        className='form-group'\r\n                    >\r\n                        <label className='col-sm-5 control-label'>\r\n                            <FormattedMessage\r\n                                id='user.settings.security.currentPassword'\r\n                                defaultMessage='Current Password'\r\n                            />\r\n                        </label>\r\n                        <div className='col-sm-7'>\r\n                            <input\r\n                                id='currentPassword'\r\n                                autoFocus={true}\r\n                                className='form-control'\r\n                                type='password'\r\n                                onChange={this.updateCurrentPassword}\r\n                                value={this.state.currentPassword}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                );\r\n                inputs.push(\r\n                    <div\r\n                        key='newPasswordUpdateForm'\r\n                        className='form-group'\r\n                    >\r\n                        <label className='col-sm-5 control-label'>\r\n                            <FormattedMessage\r\n                                id='user.settings.security.newPassword'\r\n                                defaultMessage='New Password'\r\n                            />\r\n                        </label>\r\n                        <div className='col-sm-7'>\r\n                            <input\r\n                                id='newPassword'\r\n                                className='form-control'\r\n                                type='password'\r\n                                onChange={this.updateNewPassword}\r\n                                value={this.state.newPassword}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                );\r\n                inputs.push(\r\n                    <div\r\n                        key='retypeNewPasswordUpdateForm'\r\n                        className='form-group'\r\n                    >\r\n                        <label className='col-sm-5 control-label'>\r\n                            <FormattedMessage\r\n                                id='user.settings.security.retypePassword'\r\n                                defaultMessage='Retype New Password'\r\n                            />\r\n                        </label>\r\n                        <div className='col-sm-7'>\r\n                            <input\r\n                                id='confirmPassword'\r\n                                className='form-control'\r\n                                type='password'\r\n                                onChange={this.updateConfirmPassword}\r\n                                value={this.state.confirmPassword}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else if (this.props.user.auth_service === Constants.GITLAB_SERVICE) {\r\n                inputs.push(\r\n                    <div\r\n                        key='oauthEmailInfo'\r\n                        className='form-group'\r\n                    >\r\n                        <div className='padding-bottom x2'>\r\n                            <FormattedMessage\r\n                                id='user.settings.security.passwordGitlabCantUpdate'\r\n                                defaultMessage='Login occurs through GitLab. Password cannot be updated.'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else if (this.props.user.auth_service === Constants.LDAP_SERVICE) {\r\n                inputs.push(\r\n                    <div\r\n                        key='oauthEmailInfo'\r\n                        className='form-group'\r\n                    >\r\n                        <div className='padding-bottom x2'>\r\n                            <FormattedMessage\r\n                                id='user.settings.security.passwordLdapCantUpdate'\r\n                                defaultMessage='Login occurs through AD/LDAP. Password cannot be updated.'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else if (this.props.user.auth_service === Constants.SAML_SERVICE) {\r\n                inputs.push(\r\n                    <div\r\n                        key='oauthEmailInfo'\r\n                        className='form-group'\r\n                    >\r\n                        <div className='padding-bottom x2'>\r\n                            <FormattedMessage\r\n                                id='user.settings.security.passwordSamlCantUpdate'\r\n                                defaultMessage='This field is handled through your login provider. If you want to change it, you need to do so through your login provider.'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else if (this.props.user.auth_service === Constants.GOOGLE_SERVICE) {\r\n                inputs.push(\r\n                    <div\r\n                        key='oauthEmailInfo'\r\n                        className='form-group'\r\n                    >\r\n                        <div className='padding-bottom x2'>\r\n                            <FormattedMessage\r\n                                id='user.settings.security.passwordGoogleCantUpdate'\r\n                                defaultMessage='Login occurs through Google Apps. Password cannot be updated.'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else if (this.props.user.auth_service === Constants.OFFICE365_SERVICE) {\r\n                inputs.push(\r\n                    <div\r\n                        key='oauthEmailInfo'\r\n                        className='form-group'\r\n                    >\r\n                        <div className='padding-bottom x2'>\r\n                            <FormattedMessage\r\n                                id='user.settings.security.passwordOffice365CantUpdate'\r\n                                defaultMessage='Login occurs through Office 365. Password cannot be updated.'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <SettingItemMax\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='user.settings.security.password'\r\n                            defaultMessage='Password'\r\n                        />\r\n                    }\r\n                    inputs={inputs}\r\n                    submit={submit}\r\n                    saving={this.state.savingPassword}\r\n                    serverError={this.state.serverError}\r\n                    clientError={this.state.passwordError}\r\n                    updateSection={this.handleUpdateSection}\r\n                />\r\n            );\r\n        }\r\n\r\n        let describe;\r\n\r\n        if (this.props.user.auth_service === '') {\r\n            const d = new Date(this.props.user.last_password_update);\r\n\r\n            describe = (\r\n                <FormattedMessage\r\n                    id='user.settings.security.lastUpdated'\r\n                    defaultMessage='Last updated {date} at {time}'\r\n                    values={{\r\n                        date: (\r\n                            <FormattedDate\r\n                                value={d}\r\n                                day='2-digit'\r\n                                month='short'\r\n                                year='numeric'\r\n                            />\r\n                        ),\r\n                        time: (\r\n                            <FormattedTime\r\n                                value={d}\r\n                                hour12={!this.props.militaryTime}\r\n                                hour='2-digit'\r\n                                minute='2-digit'\r\n                            />\r\n                        ),\r\n                    }}\r\n                />\r\n            );\r\n        } else if (this.props.user.auth_service === Constants.GITLAB_SERVICE) {\r\n            describe = (\r\n                <FormattedMessage\r\n                    id='user.settings.security.loginGitlab'\r\n                    defaultMessage='Login done through GitLab'\r\n                />\r\n            );\r\n        } else if (this.props.user.auth_service === Constants.LDAP_SERVICE) {\r\n            describe = (\r\n                <FormattedMessage\r\n                    id='user.settings.security.loginLdap'\r\n                    defaultMessage='Login done through AD/LDAP'\r\n                />\r\n            );\r\n        } else if (this.props.user.auth_service === Constants.SAML_SERVICE) {\r\n            describe = (\r\n                <FormattedMessage\r\n                    id='user.settings.security.loginSaml'\r\n                    defaultMessage='Login done through SAML'\r\n                />\r\n            );\r\n        } else if (this.props.user.auth_service === Constants.GOOGLE_SERVICE) {\r\n            describe = (\r\n                <FormattedMessage\r\n                    id='user.settings.security.loginGoogle'\r\n                    defaultMessage='Login done through Google Apps'\r\n                />\r\n            );\r\n        } else if (this.props.user.auth_service === Constants.OFFICE365_SERVICE) {\r\n            describe = (\r\n                <FormattedMessage\r\n                    id='user.settings.security.loginOffice365'\r\n                    defaultMessage='Login done through Office 365'\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <SettingItemMin\r\n                title={\r\n                    <FormattedMessage\r\n                        id='user.settings.security.password'\r\n                        defaultMessage='Password'\r\n                    />\r\n                }\r\n                describe={describe}\r\n                section={SECTION_PASSWORD}\r\n                updateSection={this.handleUpdateSection}\r\n                focused={true}\r\n            />\r\n        );\r\n    }\r\n\r\n    createSignInSection = () => {\r\n        const user = this.props.user;\r\n\r\n        if (this.props.activeSection === SECTION_SIGNIN) {\r\n            let emailOption;\r\n            let gitlabOption;\r\n            let googleOption;\r\n            let office365Option;\r\n            let ldapOption;\r\n            let samlOption;\r\n\r\n            if (user.auth_service === '') {\r\n                if (this.props.enableSignUpWithGitLab) {\r\n                    gitlabOption = (\r\n                        <div className='padding-bottom x2'>\r\n                            <Link\r\n                                className='btn btn-primary'\r\n                                to={'/claim/email_to_oauth?email=' + encodeURIComponent(user.email) + '&old_type=' + user.auth_service + '&new_type=' + Constants.GITLAB_SERVICE}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='user.settings.security.switchGitlab'\r\n                                    defaultMessage='Switch to using GitLab SSO'\r\n                                />\r\n                            </Link>\r\n                            <br/>\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                if (this.props.enableSignUpWithGoogle) {\r\n                    googleOption = (\r\n                        <div className='padding-bottom x2'>\r\n                            <Link\r\n                                className='btn btn-primary'\r\n                                to={'/claim/email_to_oauth?email=' + encodeURIComponent(user.email) + '&old_type=' + user.auth_service + '&new_type=' + Constants.GOOGLE_SERVICE}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='user.settings.security.switchGoogle'\r\n                                    defaultMessage='Switch to using Google SSO'\r\n                                />\r\n                            </Link>\r\n                            <br/>\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                if (this.props.enableSignUpWithOffice365) {\r\n                    office365Option = (\r\n                        <div className='padding-bottom x2'>\r\n                            <Link\r\n                                className='btn btn-primary'\r\n                                to={'/claim/email_to_oauth?email=' + encodeURIComponent(user.email) + '&old_type=' + user.auth_service + '&new_type=' + Constants.OFFICE365_SERVICE}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='user.settings.security.switchOffice365'\r\n                                    defaultMessage='Switch to using Office 365 SSO'\r\n                                />\r\n                            </Link>\r\n                            <br/>\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                if (this.props.enableLdap) {\r\n                    ldapOption = (\r\n                        <div className='padding-bottom x2'>\r\n                            <Link\r\n                                className='btn btn-primary'\r\n                                to={'/claim/email_to_ldap?email=' + encodeURIComponent(user.email)}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='user.settings.security.switchLdap'\r\n                                    defaultMessage='Switch to using AD/LDAP'\r\n                                />\r\n                            </Link>\r\n                            <br/>\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                if (this.props.enableSaml) {\r\n                    samlOption = (\r\n                        <div className='padding-bottom x2'>\r\n                            <Link\r\n                                className='btn btn-primary'\r\n                                to={'/claim/email_to_oauth?email=' + encodeURIComponent(user.email) + '&old_type=' + user.auth_service + '&new_type=' + Constants.SAML_SERVICE}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='user.settings.security.switchSaml'\r\n                                    defaultMessage='Switch to using SAML SSO'\r\n                                />\r\n                            </Link>\r\n                            <br/>\r\n                        </div>\r\n                    );\r\n                }\r\n            } else if (this.props.enableSignUpWithEmail) {\r\n                let link;\r\n                if (user.auth_service === Constants.LDAP_SERVICE) {\r\n                    link = '/claim/ldap_to_email?email=' + encodeURIComponent(user.email);\r\n                } else {\r\n                    link = '/claim/oauth_to_email?email=' + encodeURIComponent(user.email) + '&old_type=' + user.auth_service;\r\n                }\r\n\r\n                emailOption = (\r\n                    <div className='padding-bottom x2'>\r\n                        <Link\r\n                            className='btn btn-primary'\r\n                            to={link}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='user.settings.security.switchEmail'\r\n                                defaultMessage='Switch to using email and password'\r\n                            />\r\n                        </Link>\r\n                        <br/>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            const inputs = [];\r\n            inputs.push(\r\n                <div key='userSignInOption'>\r\n                    {emailOption}\r\n                    {gitlabOption}\r\n                    {googleOption}\r\n                    {office365Option}\r\n                    {ldapOption}\r\n                    {samlOption}\r\n                </div>\r\n            );\r\n\r\n            const extraInfo = (\r\n                <span>\r\n                    <FormattedMessage\r\n                        id='user.settings.security.oneSignin'\r\n                        defaultMessage='You may only have one sign-in method at a time. Switching sign-in method will send an email notifying you if the change was successful.'\r\n                    />\r\n                </span>\r\n            );\r\n\r\n            return (\r\n                <SettingItemMax\r\n                    title={Utils.localizeMessage('user.settings.security.method', 'Sign-in Method')}\r\n                    extraInfo={extraInfo}\r\n                    inputs={inputs}\r\n                    serverError={this.state.serverError}\r\n                    updateSection={this.handleUpdateSection}\r\n                />\r\n            );\r\n        }\r\n\r\n        let describe = (\r\n            <FormattedMessage\r\n                id='user.settings.security.emailPwd'\r\n                defaultMessage='Email and Password'\r\n            />\r\n        );\r\n        if (this.props.user.auth_service === Constants.GITLAB_SERVICE) {\r\n            describe = (\r\n                <FormattedMessage\r\n                    id='user.settings.security.gitlab'\r\n                    defaultMessage='GitLab'\r\n                />\r\n            );\r\n        } else if (this.props.user.auth_service === Constants.GOOGLE_SERVICE) {\r\n            describe = (\r\n                <FormattedMessage\r\n                    id='user.settings.security.google'\r\n                    defaultMessage='Google'\r\n                />\r\n            );\r\n        } else if (this.props.user.auth_service === Constants.OFFICE365_SERVICE) {\r\n            describe = (\r\n                <FormattedMessage\r\n                    id='user.settings.security.office365'\r\n                    defaultMessage='Office 365'\r\n                />\r\n            );\r\n        } else if (this.props.user.auth_service === Constants.LDAP_SERVICE) {\r\n            describe = (\r\n                <FormattedMessage\r\n                    id='user.settings.security.ldap'\r\n                    defaultMessage='AD/LDAP'\r\n                />\r\n            );\r\n        } else if (this.props.user.auth_service === Constants.SAML_SERVICE) {\r\n            describe = (\r\n                <FormattedMessage\r\n                    id='user.settings.security.saml'\r\n                    defaultMessage='SAML'\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <SettingItemMin\r\n                title={Utils.localizeMessage('user.settings.security.method', 'Sign-in Method')}\r\n                describe={describe}\r\n                section={SECTION_SIGNIN}\r\n                updateSection={this.handleUpdateSection}\r\n            />\r\n        );\r\n    }\r\n\r\n    createOAuthAppsSection = () => {\r\n        if (this.props.activeSection === SECTION_APPS) {\r\n            let apps;\r\n            if (this.state.authorizedApps && this.state.authorizedApps.length > 0) {\r\n                apps = this.state.authorizedApps.map((app) => {\r\n                    const homepage = (\r\n                        <a\r\n                            href={app.homepage}\r\n                            target='_blank'\r\n                            rel='noopener noreferrer'\r\n                        >\r\n                            {app.homepage}\r\n                        </a>\r\n                    );\r\n\r\n                    return (\r\n                        <div\r\n                            key={app.id}\r\n                            className='padding-bottom x2 authorized-app'\r\n                        >\r\n                            <div className='col-sm-10'>\r\n                                <div className='authorized-app__name'>\r\n                                    {app.name}\r\n                                    <span className='authorized-app__url'>\r\n                                        {' -'} {homepage}\r\n                                    </span>\r\n                                </div>\r\n                                <div className='authorized-app__description'>{app.description}</div>\r\n                                <div className='authorized-app__deauthorize'>\r\n                                    <a\r\n                                        href='#'\r\n                                        data-app={app.id}\r\n                                        onClick={this.deauthorizeApp}\r\n                                    >\r\n                                        <FormattedMessage\r\n                                            id='user.settings.security.deauthorize'\r\n                                            defaultMessage='Deauthorize'\r\n                                        />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-sm-2 pull-right'>\r\n                                <img\r\n                                    alt={app.name}\r\n                                    src={app.icon_url || icon50}\r\n                                />\r\n                            </div>\r\n                            <br/>\r\n                        </div>\r\n                    );\r\n                });\r\n            } else {\r\n                apps = (\r\n                    <div className='padding-bottom x2 authorized-app'>\r\n                        <div className='setting-list__hint'>\r\n                            <FormattedMessage\r\n                                id='user.settings.security.noApps'\r\n                                defaultMessage='No OAuth 2.0 Applications are authorized.'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            const inputs = [];\r\n            let wrapperClass;\r\n            let helpText;\r\n            if (Array.isArray(apps)) {\r\n                wrapperClass = 'authorized-apps__wrapper';\r\n\r\n                helpText = (\r\n                    <div className='authorized-apps__help'>\r\n                        <FormattedMessage\r\n                            id='user.settings.security.oauthAppsHelp'\r\n                            defaultMessage='Applications act on your behalf to access your data based on the permissions you grant them.'\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            inputs.push(\r\n                <div\r\n                    className={wrapperClass}\r\n                    key='authorizedApps'\r\n                >\r\n                    {apps}\r\n                </div>\r\n            );\r\n\r\n            const title = (\r\n                <div>\r\n                    <FormattedMessage\r\n                        id='user.settings.security.oauthApps'\r\n                        defaultMessage='OAuth 2.0 Applications'\r\n                    />\r\n                    {helpText}\r\n                </div>\r\n            );\r\n\r\n            return (\r\n                <SettingItemMax\r\n                    title={title}\r\n                    inputs={inputs}\r\n                    serverError={this.state.serverError}\r\n                    updateSection={this.handleUpdateSection}\r\n                    width='full'\r\n                    cancelButtonText={\r\n                        <FormattedMessage\r\n                            id='user.settings.security.close'\r\n                            defaultMessage='Close'\r\n                        />\r\n                    }\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <SettingItemMin\r\n                title={Utils.localizeMessage('user.settings.security.oauthApps', 'OAuth 2.0 Applications')}\r\n                describe={\r\n                    <FormattedMessage\r\n                        id='user.settings.security.oauthAppsDescription'\r\n                        defaultMessage=\"Click 'Edit' to manage your OAuth 2.0 Applications\"\r\n                    />\r\n                }\r\n                section={SECTION_APPS}\r\n                updateSection={this.handleUpdateSection}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.user;\r\n\r\n        const passwordSection = this.createPasswordSection();\r\n\r\n        let numMethods = 0;\r\n        numMethods = this.props.enableSignUpWithGitLab ? numMethods + 1 : numMethods;\r\n        numMethods = this.props.enableSignUpWithGoogle ? numMethods + 1 : numMethods;\r\n        numMethods = this.props.enableSignUpWithOffice365 ? numMethods + 1 : numMethods;\r\n        numMethods = this.props.enableLdap ? numMethods + 1 : numMethods;\r\n        numMethods = this.props.enableSaml ? numMethods + 1 : numMethods;\r\n\r\n        // If there are other sign-in methods and either email is enabled or the user's account is email, then allow switching\r\n        let signInSection;\r\n        if ((this.props.enableSignUpWithEmail || user.auth_service === '') &&\r\n            numMethods > 0 && this.props.experimentalEnableAuthenticationTransfer) {\r\n            signInSection = this.createSignInSection();\r\n        }\r\n\r\n        let oauthSection;\r\n        if (this.props.enableOAuthServiceProvider) {\r\n            oauthSection = this.createOAuthAppsSection();\r\n        }\r\n\r\n        let tokensSection;\r\n        if (this.props.canUseAccessTokens) {\r\n            tokensSection = (\r\n                <UserAccessTokenSection\r\n                    user={this.props.user}\r\n                    active={this.props.activeSection === SECTION_TOKENS}\r\n                    updateSection={this.handleUpdateSection}\r\n                    setRequireConfirm={this.props.setRequireConfirm}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className='modal-header'>\r\n                    <FormattedMessage\r\n                        id='user.settings.security.close'\r\n                        defaultMessage='Close'\r\n                    >\r\n                        {(ariaLabel) => (\r\n                            <button\r\n                                type='button'\r\n                                className='close'\r\n                                data-dismiss='modal'\r\n                                aria-label={ariaLabel}\r\n                                onClick={this.props.closeModal}\r\n                            >\r\n                                <span aria-hidden='true'>{'×'}</span>\r\n                            </button>\r\n                        )}\r\n                    </FormattedMessage>\r\n                    <h4\r\n                        className='modal-title'\r\n                        ref='title'\r\n                    >\r\n                        <div className='modal-back'>\r\n                            <FormattedMessage\r\n                                id='generic_icons.collapse'\r\n                                defaultMessage='Collapse Icon'\r\n                            >\r\n                                {(title) => (\r\n                                    <i\r\n                                        className='fa fa-angle-left'\r\n                                        title={title}\r\n                                        onClick={this.props.collapseModal}\r\n                                    />\r\n                                )}\r\n                            </FormattedMessage>\r\n                        </div>\r\n                        <FormattedMessage\r\n                            id='user.settings.security.title'\r\n                            defaultMessage='Security Settings'\r\n                        />\r\n                    </h4>\r\n                </div>\r\n                <div className='user-settings'>\r\n                    <h3 className='tab-header'>\r\n                        <FormattedMessage\r\n                            id='user.settings.security.title'\r\n                            defaultMessage='Security Settings'\r\n                        />\r\n                    </h3>\r\n                    <div className='divider-dark first'/>\r\n                    {passwordSection}\r\n                    <div className='divider-light'/>\r\n                    <MfaSection\r\n                        active={this.props.activeSection === SECTION_MFA}\r\n                        updateSection={this.handleUpdateSection}\r\n                    />\r\n                    <div className='divider-light'/>\r\n                    {oauthSection}\r\n                    <div className='divider-light'/>\r\n                    {tokensSection}\r\n                    <div className='divider-light'/>\r\n                    {signInSection}\r\n                    <div className='divider-dark'/>\r\n                    <br/>\r\n                    <ToggleModalButton\r\n                        className='security-links color--link'\r\n                        dialogType={AccessHistoryModal}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='user.settings.security.viewHistory.icon'\r\n                            defaultMessage='Access History Icon'\r\n                        >\r\n                            {(title) => (\r\n                                <i\r\n                                    className='fa fa-clock-o'\r\n                                    title={title}\r\n                                />\r\n                            )}\r\n                        </FormattedMessage>\r\n                        <FormattedMessage\r\n                            id='user.settings.security.viewHistory'\r\n                            defaultMessage='View Access History'\r\n                        />\r\n                    </ToggleModalButton>\r\n                    <ToggleModalButton\r\n                        className='security-links color--link margin-top'\r\n                        dialogType={ActivityLogModal}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='user.settings.security.logoutActiveSessions.icon'\r\n                            defaultMessage='Active Sessions Icon'\r\n                        >\r\n                            {(title) => (\r\n                                <i\r\n                                    className='fa fa-clock-o'\r\n                                    title={title}\r\n                                />\r\n                            )}\r\n                        </FormattedMessage>\r\n                        <FormattedMessage\r\n                            id='user.settings.security.logoutActiveSessions'\r\n                            defaultMessage='View and Logout of Active Sessions'\r\n                        />\r\n                    </ToggleModalButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getMe, updateUserPassword} from 'mattermost-redux/actions/users';\r\nimport {getAuthorizedOAuthApps, deauthorizeOAuthApp} from 'mattermost-redux/actions/integrations';\r\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {getBool} from 'mattermost-redux/selectors/entities/preferences';\r\n\r\nimport {getPasswordConfig} from 'utils/utils.jsx';\r\nimport {Preferences} from 'utils/constants';\r\n\r\nimport SecurityTab from './user_settings_security.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const config = getConfig(state);\r\n\r\n    const tokensEnabled = config.EnableUserAccessTokens === 'true';\r\n    const userHasTokenRole = UserUtils.hasUserAccessTokenRole(ownProps.user.roles) || UserUtils.isSystemAdmin(ownProps.user.roles);\r\n\r\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\r\n    const enableSignUpWithEmail = config.EnableSignUpWithEmail === 'true';\r\n    const enableSignUpWithGitLab = config.EnableSignUpWithGitLab === 'true';\r\n    const enableSignUpWithGoogle = config.EnableSignUpWithGoogle === 'true';\r\n    const enableLdap = config.EnableLdap === 'true';\r\n    const enableSaml = config.EnableSaml === 'true';\r\n    const enableSignUpWithOffice365 = config.EnableSignUpWithOffice365 === 'true';\r\n    const experimentalEnableAuthenticationTransfer = config.ExperimentalEnableAuthenticationTransfer === 'true';\r\n\r\n    return {\r\n        canUseAccessTokens: tokensEnabled && userHasTokenRole,\r\n        enableOAuthServiceProvider,\r\n        enableSignUpWithEmail,\r\n        enableSignUpWithGitLab,\r\n        enableSignUpWithGoogle,\r\n        enableLdap,\r\n        enableSaml,\r\n        enableSignUpWithOffice365,\r\n        experimentalEnableAuthenticationTransfer,\r\n        passwordConfig: getPasswordConfig(config),\r\n        militaryTime: getBool(state, Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.USE_MILITARY_TIME, false),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getMe,\r\n            updateUserPassword,\r\n            getAuthorizedOAuthApps,\r\n            deauthorizeOAuthApp,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SecurityTab);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage, intlShape} from 'react-intl';\r\n\r\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\r\n\r\nimport Constants from 'utils/constants.jsx';\r\nimport {isMac} from 'utils/utils.jsx';\r\nimport {t} from 'utils/i18n';\r\n\r\nimport SettingItemMax from 'components/setting_item_max.jsx';\r\nimport SettingItemMin from 'components/setting_item_min.jsx';\r\n\r\nexport default class UserSettingsSidebar extends React.Component {\r\n    static propTypes = {\r\n        actions: PropTypes.shape({\r\n\r\n            /*\r\n             * Function to save the user's preferences\r\n             */\r\n            savePreferences: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n\r\n        /**\r\n         * Current user object\r\n         */\r\n        user: PropTypes.object,\r\n\r\n        /**\r\n         * The preferences for closing the unused direct messages channels\r\n         */\r\n        closeUnusedDirectMessages: PropTypes.string.isRequired,\r\n\r\n        /**\r\n         * Display the close unused direct messages channels options\r\n         */\r\n        showUnusedOption: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * Display the channel grouping and sorting sections options\r\n         */\r\n        showChannelOrganization: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * The preferences to show the channel switcher in the sidebar\r\n         */\r\n        channelSwitcherOption: PropTypes.string.isRequired,\r\n\r\n        /**\r\n         * Display the unread channels sections options\r\n         * The preferences to display channels in sidebar\r\n         */\r\n        sidebarPreference: PropTypes.shape({\r\n\r\n            /**\r\n             * Group channels by type or none\r\n             */\r\n            grouping: PropTypes.string.isRequired,\r\n\r\n            /**\r\n             * Sort channels by recency or alphabetical order\r\n             */\r\n            sorting: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n\r\n        /**\r\n         * Option for including unread channels at top\r\n         */\r\n        unreadsAtTop: PropTypes.string.isRequired,\r\n\r\n        /**\r\n         * Option for including favorite channels at top\r\n         */\r\n        favoriteAtTop: PropTypes.string.isRequired,\r\n\r\n        updateSection: PropTypes.func,\r\n        activeSection: PropTypes.string,\r\n        closeModal: PropTypes.func.isRequired,\r\n        collapseModal: PropTypes.func.isRequired,\r\n    };\r\n\r\n    static contextTypes = {\r\n        intl: intlShape.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = this.getStateFromProps();\r\n    }\r\n\r\n    getStateFromProps = () => {\r\n        const {\r\n            closeUnusedDirectMessages,\r\n            channelSwitcherOption,\r\n            sidebarPreference: {\r\n                grouping,\r\n                sorting,\r\n            },\r\n            unreadsAtTop,\r\n            favoriteAtTop,\r\n        } = this.props;\r\n\r\n        return {\r\n            settings: {\r\n                close_unused_direct_messages: closeUnusedDirectMessages,\r\n                channel_switcher_section: channelSwitcherOption,\r\n                grouping,\r\n                unreadsAtTop,\r\n                favoriteAtTop,\r\n                sorting,\r\n            },\r\n            isSaving: false,\r\n        };\r\n    };\r\n\r\n    trackSettingChangeIfNecessary = (setting) => {\r\n        if (this.state.settings[setting] !== this.props.sidebarPreference[setting]) {\r\n            trackEvent('settings', 'user_settings_update', {field: 'sidebar.' + setting, value: this.state.settings[setting]});\r\n        }\r\n    }\r\n\r\n    updateSetting = (setting, value) => {\r\n        const settings = this.state.settings;\r\n        settings[setting] = value;\r\n\r\n        this.setState(settings);\r\n    };\r\n\r\n    handleSubmit = (setting) => {\r\n        const {actions, user} = this.props;\r\n        const preferences = [];\r\n\r\n        if (setting === 'channel_grouping' || setting === 'channel_sorting') {\r\n            const updatedSidebarSettings = {\r\n                grouping: this.state.settings.grouping,\r\n                unreads_at_top: this.state.settings.unreadsAtTop,\r\n                favorite_at_top: this.state.settings.favoriteAtTop,\r\n                sorting: this.state.settings.sorting,\r\n            };\r\n\r\n            preferences.push({\r\n                user_id: user.id,\r\n                category: Constants.Preferences.CATEGORY_SIDEBAR_SETTINGS,\r\n                name: '',\r\n                value: JSON.stringify(updatedSidebarSettings),\r\n            });\r\n\r\n            this.trackSettingChangeIfNecessary('grouping');\r\n            this.trackSettingChangeIfNecessary('sorting');\r\n            this.trackSettingChangeIfNecessary('unreadsAtTop');\r\n            this.trackSettingChangeIfNecessary('favoriteAtTop');\r\n        } else {\r\n            preferences.push({\r\n                user_id: user.id,\r\n                category: Constants.Preferences.CATEGORY_SIDEBAR_SETTINGS,\r\n                name: setting,\r\n                value: this.state.settings[setting],\r\n            });\r\n\r\n            trackEvent('settings', 'user_settings_update', {field: 'sidebar.' + setting, value: this.state.settings[setting]});\r\n        }\r\n\r\n        this.setState({isSaving: true});\r\n\r\n        actions.savePreferences(user.id, preferences).then(() => {\r\n            this.updateSection('');\r\n        });\r\n    };\r\n\r\n    updateSection = (section) => {\r\n        if (!section) {\r\n            this.setState(this.getStateFromProps());\r\n        }\r\n        this.setState({isSaving: false});\r\n        this.props.updateSection(section);\r\n    };\r\n\r\n    renderAutoCloseDMLabel = (value) => {\r\n        if (value === 'after_seven_days') {\r\n            return (\r\n                <FormattedMessage\r\n                    id='user.settings.sidebar.after_seven_days'\r\n                    defaultMessage='After 7 days with no new messages'\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <FormattedMessage\r\n                id='user.settings.sidebar.never'\r\n                defaultMessage='Never'\r\n            />\r\n        );\r\n    };\r\n\r\n    renderAutoCloseDMSection = () => {\r\n        let contents;\r\n\r\n        if (this.props.activeSection === 'autoCloseDM') {\r\n            contents = (\r\n                <SettingItemMax\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='user.settings.sidebar.autoCloseDMTitle'\r\n                            defaultMessage='Automatically Close Direct Messages'\r\n                        />\r\n                    }\r\n                    inputs={[\r\n                        <div key='autoCloseDMSetting'>\r\n                            <div className='radio'>\r\n                                <label>\r\n                                    <input\r\n                                        id='autoCloseDMAfterSevenDays'\r\n                                        type='radio'\r\n                                        name='autoCloseDM'\r\n                                        checked={this.state.settings.close_unused_direct_messages === 'after_seven_days'}\r\n                                        onChange={this.updateSetting.bind(this, 'close_unused_direct_messages', 'after_seven_days')}\r\n                                    />\r\n                                    <FormattedMessage\r\n                                        id='user.settings.sidebar.after_seven_days'\r\n                                        defaultMessage='After 7 days with no new messages'\r\n                                    />\r\n                                </label>\r\n                                <br/>\r\n                            </div>\r\n                            <div className='radio'>\r\n                                <label>\r\n                                    <input\r\n                                        id='autoCloseDMNever'\r\n                                        type='radio'\r\n                                        name='autoCloseDM'\r\n                                        checked={this.state.settings.close_unused_direct_messages === 'never'}\r\n                                        onChange={this.updateSetting.bind(this, 'close_unused_direct_messages', 'never')}\r\n                                    />\r\n                                    <FormattedMessage\r\n                                        id='user.settings.sidebar.never'\r\n                                        defaultMessage='Never'\r\n                                    />\r\n                                </label>\r\n                                <br/>\r\n                            </div>\r\n                            <div>\r\n                                <br/>\r\n                                <FormattedMessage\r\n                                    id='user.settings.sidebar.autoCloseDMDesc'\r\n                                    defaultMessage='Direct Message conversations can be reopened with the “+” button in the sidebar or using the Channel Switcher (CTRL+K).'\r\n                                />\r\n                            </div>\r\n                        </div>,\r\n                    ]}\r\n                    setting={'close_unused_direct_messages'}\r\n                    submit={this.handleSubmit}\r\n                    saving={this.state.isSaving}\r\n                    server_error={this.state.serverError}\r\n                    updateSection={this.updateSection}\r\n                />\r\n            );\r\n        } else {\r\n            contents = (\r\n                <SettingItemMin\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='user.settings.sidebar.autoCloseDMTitle'\r\n                            defaultMessage='Automatically Close Direct Messages'\r\n                        />\r\n                    }\r\n                    describe={this.renderAutoCloseDMLabel(this.state.settings.close_unused_direct_messages)}\r\n                    section={'autoCloseDM'}\r\n                    updateSection={this.updateSection}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {contents}\r\n                <div className='divider-dark'/>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    renderOrganizationLabel = () => {\r\n        const {\r\n            sidebarPreference: {\r\n                sorting,\r\n                grouping,\r\n            },\r\n            unreadsAtTop,\r\n            favoriteAtTop,\r\n        } = this.props;\r\n\r\n        const messages = [];\r\n\r\n        if (grouping === 'by_type') {\r\n            messages.push(\r\n                <FormattedMessage\r\n                    key='by_type'\r\n                    id='user.settings.sidebar.groupByTypeShort'\r\n                    defaultMessage='Group by channel type'\r\n                />\r\n            );\r\n        } else {\r\n            messages.push(\r\n                <FormattedMessage\r\n                    key='none'\r\n                    id='user.settings.sidebar.groupByNoneShort'\r\n                    defaultMessage='No grouping'\r\n                />\r\n            );\r\n        }\r\n\r\n        let sortingId;\r\n        let sortingDefaultMessage;\r\n        if (sorting === 'alpha') {\r\n            sortingId = t('user.settings.sidebar.sortAlphaShort');\r\n            sortingDefaultMessage = 'sorted alphabetically';\r\n        } else {\r\n            sortingId = t('user.settings.sidebar.sortRecentShort');\r\n            sortingDefaultMessage = 'sorted by recency';\r\n        }\r\n\r\n        messages.push(\r\n            <span key='comma'>{', '}</span>\r\n        );\r\n\r\n        messages.push(\r\n            <FormattedMessage\r\n                key='sorting'\r\n                id={sortingId}\r\n                defaultMessage={sortingDefaultMessage}\r\n            />\r\n        );\r\n\r\n        let atTopId = null;\r\n        let atTopDefaultMessage = null;\r\n        if (unreadsAtTop === 'true' && favoriteAtTop === 'false') {\r\n            atTopId = t('user.settings.sidebar.unreadsShort');\r\n            atTopDefaultMessage = 'Unreads grouped separately';\r\n        } else if (unreadsAtTop === 'false' && favoriteAtTop === 'true') {\r\n            atTopId = t('user.settings.sidebar.favoritesShort');\r\n            atTopDefaultMessage = 'Favorites grouped separately';\r\n        } else if (unreadsAtTop === 'true' && favoriteAtTop === 'true') {\r\n            atTopId = t('user.settings.sidebar.unreadsFavoritesShort');\r\n            atTopDefaultMessage = 'Unreads and favorites grouped separately';\r\n        }\r\n\r\n        if (atTopId) {\r\n            messages.push(\r\n                <br key='break'/>\r\n            );\r\n\r\n            messages.push(\r\n                <FormattedMessage\r\n                    key='atTop'\r\n                    id={atTopId}\r\n                    defaultMessage={atTopDefaultMessage}\r\n                />\r\n            );\r\n        }\r\n\r\n        return messages;\r\n    };\r\n\r\n    renderChannelSwitcherLabel = (value) => {\r\n        if (value === 'true') {\r\n            return (\r\n                <FormattedMessage\r\n                    id='user.settings.sidebar.on'\r\n                    defaultMessage='On'\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <FormattedMessage\r\n                id='user.settings.sidebar.off'\r\n                defaultMessage='Off'\r\n            />\r\n        );\r\n    };\r\n\r\n    renderChannelOrganizationSection = () => {\r\n        const {\r\n            grouping,\r\n            sorting,\r\n        } = this.state.settings;\r\n\r\n        let contents;\r\n\r\n        if (this.props.activeSection === 'groupChannels') {\r\n            const inputs = [];\r\n\r\n            inputs.push(\r\n                <div key='groupingSectionSetting'>\r\n                    <label>\r\n                        <FormattedMessage\r\n                            id='user.settings.sidebar.groupChannelsTitle'\r\n                            defaultMessage='Channel grouping'\r\n                        />\r\n                    </label>\r\n                    <br/>\r\n                    <div className='radio'>\r\n                        <label>\r\n                            <input\r\n                                id='byTypeOption'\r\n                                type='radio'\r\n                                name='groupChannels'\r\n                                checked={grouping === 'by_type'}\r\n                                onChange={this.updateSetting.bind(this, 'grouping', 'by_type')}\r\n                            />\r\n                            <FormattedMessage\r\n                                id='user.settings.sidebar.groupByType'\r\n                                defaultMessage='Channels grouped by type'\r\n                            />\r\n                        </label>\r\n                        <br/>\r\n                    </div>\r\n                    <div className='radio'>\r\n                        <label>\r\n                            <input\r\n                                id='noneOption'\r\n                                type='radio'\r\n                                name='groupChannels'\r\n                                checked={grouping === 'none'}\r\n                                onChange={this.updateSetting.bind(this, 'grouping', 'none')}\r\n                            />\r\n                            <FormattedMessage\r\n                                id='user.settings.sidebar.groupByNone'\r\n                                defaultMessage='Combine all channel types'\r\n                            />\r\n                        </label>\r\n                        <br/>\r\n                    </div>\r\n                    <div>\r\n                        <br/>\r\n                        <FormattedMessage\r\n                            id='user.settings.sidebar.groupDesc'\r\n                            defaultMessage='Group channels by type, or combine all types into a list.'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n            inputs.push(<hr key='sortingDivider'/>);\r\n\r\n            inputs.push(\r\n                <div key='sortingOptions'>\r\n                    <label>\r\n                        <FormattedMessage\r\n                            id='user.settings.sidebar.sortChannelsTitle'\r\n                            defaultMessage='Channel sorting'\r\n                        />\r\n                    </label>\r\n                    <br/>\r\n                    <div className='radio'>\r\n                        <label>\r\n                            <input\r\n                                id='recentSectionEnabled'\r\n                                type='radio'\r\n                                name='sortChannels'\r\n                                checked={sorting === 'recent'}\r\n                                onChange={this.updateSetting.bind(this, 'sorting', 'recent')}\r\n                            />\r\n                            <FormattedMessage\r\n                                id='user.settings.sidebar.sortRecent'\r\n                                defaultMessage='Recency'\r\n                            />\r\n                        </label>\r\n                        <br/>\r\n                    </div>\r\n                    <div className='radio'>\r\n                        <label>\r\n                            <input\r\n                                id='alphaSectionEnabled'\r\n                                type='radio'\r\n                                name='sortChannels'\r\n                                checked={sorting === 'alpha'}\r\n                                onChange={this.updateSetting.bind(this, 'sorting', 'alpha')}\r\n                            />\r\n                            <FormattedMessage\r\n                                id='user.settings.sidebar.sortAlpha'\r\n                                defaultMessage='Alphabetically'\r\n                            />\r\n                        </label>\r\n                        <br/>\r\n                    </div>\r\n                    <div>\r\n                        <br/>\r\n                        <FormattedMessage\r\n                            id='user.settings.sidebar.sortDesc'\r\n                            defaultMessage='Sort channels alphabetically, or by most recent post.'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n            inputs.push(<hr key='divider'/>);\r\n\r\n            inputs.push(\r\n                <div key='unreadOption'>\r\n                    <div className='checkbox'>\r\n                        <label>\r\n                            <input\r\n                                id='unreadAtTopOption'\r\n                                type='checkbox'\r\n                                checked={this.state.settings.unreadsAtTop === 'true'}\r\n                                onChange={(e) => this.updateSetting('unreadsAtTop', (e.target.checked).toString())}\r\n                            />\r\n                            <FormattedMessage\r\n                                id='user.settings.sidebar.unreads'\r\n                                defaultMessage='Unreads grouped separately'\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <br/>\r\n                        <FormattedMessage\r\n                            id='user.settings.sidebar.unreadsDesc'\r\n                            defaultMessage='Group unread channels separately until read.'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n            inputs.push(<hr key='groupingDivider'/>);\r\n\r\n            inputs.push(\r\n                <div key='favoriteOption'>\r\n                    <div className='checkbox'>\r\n                        <label>\r\n                            <input\r\n                                id='favoriteAtTopOption'\r\n                                type='checkbox'\r\n                                checked={this.state.settings.favoriteAtTop === 'true'}\r\n                                onChange={(e) => this.updateSetting('favoriteAtTop', (e.target.checked).toString())}\r\n                            />\r\n                            <FormattedMessage\r\n                                id='user.settings.sidebar.favorites'\r\n                                defaultMessage='Favorites grouped separately'\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <br/>\r\n                        <FormattedMessage\r\n                            id='user.settings.sidebar.favoritesDesc'\r\n                            defaultMessage='Channels marked as favorites will be grouped separately.'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n            contents = (\r\n                <SettingItemMax\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='user.settings.sidebar.groupAndSortChannelsTitle'\r\n                            defaultMessage='Channel grouping and sorting'\r\n                        />\r\n                    }\r\n                    inputs={inputs}\r\n                    setting={'channel_grouping'}\r\n                    submit={this.handleSubmit}\r\n                    saving={this.state.isSaving}\r\n                    server_error={this.state.serverError}\r\n                    updateSection={this.updateSection}\r\n                />\r\n            );\r\n        } else {\r\n            contents = (\r\n                <SettingItemMin\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='user.settings.sidebar.groupAndSortChannelsTitle'\r\n                            defaultMessage='Channel grouping and sorting'\r\n                        />\r\n                    }\r\n                    describe={this.renderOrganizationLabel()}\r\n                    section={'groupChannels'}\r\n                    updateSection={this.updateSection}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {contents}\r\n                <div className='divider-light'/>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    renderChannelSwitcherSection = () => {\r\n        let channelSwitcherSectionDescId = t('user.settings.sidebar.channelSwitcherSectionDesc.windows');\r\n        let channelSwitcherSectionDescDefault = 'The channel switcher is shown at the bottom of the sidebar and is used to jump between channels quickly. It can also be accessed using CTRL + K.';\r\n        if (isMac()) {\r\n            channelSwitcherSectionDescId = t('user.settings.sidebar.channelSwitcherSectionDesc.mac');\r\n            channelSwitcherSectionDescDefault = 'The channel switcher is shown at the bottom of the sidebar and is used to jump between channels quickly. It can also be accessed using CMD + K.';\r\n        }\r\n\r\n        const helpChannelSwitcherText = (\r\n            <FormattedMessage\r\n                id={channelSwitcherSectionDescId}\r\n                defaultMessage={channelSwitcherSectionDescDefault}\r\n            />\r\n        );\r\n\r\n        if (this.props.activeSection === 'channelSwitcher') {\r\n            return (\r\n                <SettingItemMax\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='user.settings.sidebar.channelSwitcherSectionTitle'\r\n                            defaultMessage='Channel Switcher'\r\n                        />\r\n                    }\r\n                    inputs={[\r\n                        <div key='channelSwitcherSectionSetting'>\r\n                            <div\r\n                                id='channelSwitcherRadioOn'\r\n                                className='radio'\r\n                            >\r\n                                <label>\r\n                                    <input\r\n                                        id='channelSwitcherSectionEnabled'\r\n                                        type='radio'\r\n                                        name='channelSwitcher'\r\n                                        checked={this.state.settings.channel_switcher_section === 'true'}\r\n                                        onChange={this.updateSetting.bind(this, 'channel_switcher_section', 'true')}\r\n                                    />\r\n                                    <FormattedMessage\r\n                                        id='user.settings.sidebar.on'\r\n                                        defaultMessage='On'\r\n                                    />\r\n                                </label>\r\n                                <br/>\r\n                            </div>\r\n                            <div\r\n                                id='channelSwitcherRadioOff'\r\n                                className='radio'\r\n                            >\r\n                                <label>\r\n                                    <input\r\n                                        id='channelSwitcherSectionOff'\r\n                                        type='radio'\r\n                                        name='channelSwitcher'\r\n                                        checked={this.state.settings.channel_switcher_section === 'false'}\r\n                                        onChange={this.updateSetting.bind(this, 'channel_switcher_section', 'false')}\r\n                                    />\r\n                                    <FormattedMessage\r\n                                        id='user.settings.sidebar.off'\r\n                                        defaultMessage='Off'\r\n                                    />\r\n                                </label>\r\n                                <br/>\r\n                            </div>\r\n                            <div id='channelSwitcherHelpText'>\r\n                                <br/>\r\n                                {helpChannelSwitcherText}\r\n                            </div>\r\n                        </div>,\r\n                    ]}\r\n                    setting={'channel_switcher_section'}\r\n                    submit={this.handleSubmit}\r\n                    saving={this.state.isSaving}\r\n                    server_error={this.state.serverError}\r\n                    updateSection={this.updateSection}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <SettingItemMin\r\n                title={\r\n                    <FormattedMessage\r\n                        id='user.settings.sidebar.channelSwitcherSectionTitle'\r\n                        defaultMessage='Channel Switcher'\r\n                    />\r\n                }\r\n                describe={this.renderChannelSwitcherLabel(this.state.settings.channel_switcher_section)}\r\n                section={'channelSwitcher'}\r\n                updateSection={this.updateSection}\r\n                focused={true}\r\n            />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {showUnusedOption, showChannelOrganization} = this.props;\r\n        const {formatMessage} = this.context.intl;\r\n\r\n        const channelOrganizationSection = showChannelOrganization ? this.renderChannelOrganizationSection() : null;\r\n        const autoCloseDMSection = showUnusedOption ? this.renderAutoCloseDMSection() : null;\r\n        const channelSwitcherSection = this.renderChannelSwitcherSection();\r\n\r\n        return (\r\n            <div>\r\n                <div className='modal-header'>\r\n                    <button\r\n                        id='closeButton'\r\n                        type='button'\r\n                        className='close'\r\n                        data-dismiss='modal'\r\n                        aria-label='Close'\r\n                        onClick={this.props.closeModal}\r\n                    >\r\n                        <span aria-hidden='true'>{'×'}</span>\r\n                    </button>\r\n                    <h4\r\n                        className='modal-title'\r\n                        ref='title'\r\n                    >\r\n                        <div className='modal-back'>\r\n                            <i\r\n                                className='fa fa-angle-left'\r\n                                title={formatMessage({id: 'generic_icons.collapse', defaultMessage: 'Collapse Icon'})}\r\n                                onClick={this.props.collapseModal}\r\n                            />\r\n                        </div>\r\n                        <FormattedMessage\r\n                            id='user.settings.sidebar.title'\r\n                            defaultMessage='Sidebar Settings'\r\n                        />\r\n                    </h4>\r\n                </div>\r\n                <div\r\n                    id='sidebarTitle'\r\n                    className='user-settings'\r\n                >\r\n                    <h3 className='tab-header'>\r\n                        <FormattedMessage\r\n                            id='user.settings.sidebar.title'\r\n                            defaultMessage='Sidebar Settings'\r\n                        />\r\n                    </h3>\r\n                    <div className='divider-dark first'/>\r\n                    {channelOrganizationSection}\r\n                    {channelSwitcherSection}\r\n                    {showUnusedOption ? <div className='divider-light'/> : <div className='divider-dark'/>}\r\n                    {autoCloseDMSection}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {savePreferences} from 'mattermost-redux/actions/preferences';\r\nimport {Preferences} from 'mattermost-redux/constants';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {get as getPreference, getSidebarPreferences} from 'mattermost-redux/selectors/entities/preferences';\r\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\r\n\r\nimport UserSettingsSidebar from './user_settings_sidebar.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n\r\n    const closeUnusedDirectMessages = getPreference(\r\n        state,\r\n        Preferences.CATEGORY_SIDEBAR_SETTINGS,\r\n        'close_unused_direct_messages',\r\n        'after_seven_days'\r\n    );\r\n\r\n    const channelSwitcherOption = getPreference(\r\n        state,\r\n        Preferences.CATEGORY_SIDEBAR_SETTINGS,\r\n        'channel_switcher_section',\r\n        'true'\r\n    );\r\n\r\n    const sidebarPreference = getSidebarPreferences(state);\r\n\r\n    return {\r\n        closeUnusedDirectMessages,\r\n        sidebarPreference,\r\n        unreadsAtTop: sidebarPreference.unreads_at_top,\r\n        favoriteAtTop: sidebarPreference.favorite_at_top,\r\n        channelSwitcherOption,\r\n        showChannelOrganization: config.ExperimentalChannelOrganization === 'true',\r\n        showUnusedOption: config.CloseUnusedDirectMessages === 'true',\r\n        user: getCurrentUser(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            savePreferences,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSettingsSidebar);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport AdvancedTab from './advanced';\r\nimport DisplayTab from './display';\r\nimport GeneralTab from './general';\r\nimport NotificationsTab from './notifications';\r\nimport SecurityTab from './security';\r\nimport SidebarTab from './sidebar';\r\n\r\nexport default class UserSettings extends React.PureComponent {\r\n    static propTypes = {\r\n        user: PropTypes.object.isRequired,\r\n        activeTab: PropTypes.string,\r\n        activeSection: PropTypes.string,\r\n        prevActiveSection: PropTypes.string,\r\n        updateSection: PropTypes.func,\r\n        updateTab: PropTypes.func,\r\n        closeModal: PropTypes.func.isRequired,\r\n        collapseModal: PropTypes.func.isRequired,\r\n        setEnforceFocus: PropTypes.func.isRequired,\r\n        setRequireConfirm: PropTypes.func.isRequired,\r\n    }\r\n\r\n    render() {\r\n        if (this.props.activeTab === 'general') {\r\n            return (\r\n                <div>\r\n                    <GeneralTab\r\n                        user={this.props.user}\r\n                        activeSection={this.props.activeSection}\r\n                        prevActiveSection={this.props.prevActiveSection}\r\n                        updateSection={this.props.updateSection}\r\n                        updateTab={this.props.updateTab}\r\n                        closeModal={this.props.closeModal}\r\n                        collapseModal={this.props.collapseModal}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (this.props.activeTab === 'security') {\r\n            return (\r\n                <div>\r\n                    <SecurityTab\r\n                        user={this.props.user}\r\n                        activeSection={this.props.activeSection}\r\n                        prevActiveSection={this.props.prevActiveSection}\r\n                        updateSection={this.props.updateSection}\r\n                        closeModal={this.props.closeModal}\r\n                        collapseModal={this.props.collapseModal}\r\n                        setRequireConfirm={this.props.setRequireConfirm}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (this.props.activeTab === 'notifications') {\r\n            return (\r\n                <div>\r\n                    <NotificationsTab\r\n                        user={this.props.user}\r\n                        activeSection={this.props.activeSection}\r\n                        prevActiveSection={this.props.prevActiveSection}\r\n                        updateSection={this.props.updateSection}\r\n                        closeModal={this.props.closeModal}\r\n                        collapseModal={this.props.collapseModal}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (this.props.activeTab === 'display') {\r\n            return (\r\n                <div>\r\n                    <DisplayTab\r\n                        user={this.props.user}\r\n                        activeSection={this.props.activeSection}\r\n                        prevActiveSection={this.props.prevActiveSection}\r\n                        updateSection={this.props.updateSection}\r\n                        closeModal={this.props.closeModal}\r\n                        collapseModal={this.props.collapseModal}\r\n                        setEnforceFocus={this.props.setEnforceFocus}\r\n                        setRequireConfirm={this.props.setRequireConfirm}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (this.props.activeTab === 'sidebar') {\r\n            return (\r\n                <div>\r\n                    <SidebarTab\r\n                        activeSection={this.props.activeSection}\r\n                        prevActiveSection={this.props.prevActiveSection}\r\n                        updateSection={this.props.updateSection}\r\n                        closeModal={this.props.closeModal}\r\n                        collapseModal={this.props.collapseModal}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (this.props.activeTab === 'advanced') {\r\n            return (\r\n                <div>\r\n                    <AdvancedTab\r\n                        activeSection={this.props.activeSection}\r\n                        prevActiveSection={this.props.prevActiveSection}\r\n                        updateSection={this.props.updateSection}\r\n                        closeModal={this.props.closeModal}\r\n                        collapseModal={this.props.collapseModal}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return <div/>;\r\n    }\r\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\r\n\r\nimport UserSettings from './user_settings.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: getCurrentUser(state),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserSettings);\r\n"],"sourceRoot":""}