{"version":3,"sources":["webpack:///./components/icon/logout_icon.jsx","webpack:///./components/terms_of_service/terms_of_service.jsx","webpack:///./components/terms_of_service/index.js"],"names":["LogoutIcon","React","PureComponent","render","title","TermsOfService","constructor","props","setState","customTermsOfServiceId","customTermsOfServiceText","loading","data","actions","getTermsOfService","id","text","GlobalActions","Constants","GET_TERMS_ERROR","e","preventDefault","loadingAgree","serverError","registerUserAction","query","URLSearchParams","location","search","redirectTo","get","match","browserHistory","push","loadingDisagree","TERMS_REJECTED","accepted","success","updateMyTermsOfServiceStatus","state","formattedText","memoizeResult","formatText","componentDidMount","termsEnabled","termsMarkdownClasses","handleLogoutClick","messageHtmlToComponent","mentions","handleAcceptTerms","handleRejectTerms","Boolean","PropTypes","object","bool","isRequired","shape","func","mapStateToProps","config","getConfig","EnableCustomTermsOfService","mapDispatchToProps","dispatch","bindActionCreators","connect"],"mappings":"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","file":"26.c454ff029aa0c3a33c22.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default class LogoutIcon extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <FormattedMessage\r\n                id='generic_icons.logout'\r\n                defaultMessage='Logout Icon'\r\n            >\r\n                {(title) => (\r\n                    <i\r\n                        className='fa fa-1x fa-angle-left'\r\n                        title={title}\r\n                    />\r\n                )}\r\n            </FormattedMessage>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Button, ButtonGroup} from 'react-bootstrap';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {memoizeResult} from 'mattermost-redux/utils/helpers';\r\n\r\nimport * as GlobalActions from 'actions/global_actions.jsx';\r\nimport AnnouncementBar from 'components/announcement_bar';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\nimport LoadingSpinner from 'components/widgets/loading/loading_spinner.jsx';\r\nimport LogoutIcon from 'components/icon/logout_icon';\r\nimport WarningIcon from 'components/icon/warning_icon';\r\n\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport messageHtmlToComponent from 'utils/message_html_to_component';\r\nimport {formatText} from 'utils/text_formatting.jsx';\r\nimport {Constants} from 'utils/constants.jsx';\r\n\r\nexport default class TermsOfService extends React.PureComponent {\r\n    static propTypes = {\r\n        location: PropTypes.object,\r\n        termsEnabled: PropTypes.bool.isRequired,\r\n        actions: PropTypes.shape({\r\n            getTermsOfService: PropTypes.func.isRequired,\r\n            updateMyTermsOfServiceStatus: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            customTermsOfServiceId: '',\r\n            customTermsOfServiceText: '',\r\n            loading: true,\r\n            loadingAgree: false,\r\n            loadingDisagree: false,\r\n            serverError: null,\r\n        };\r\n\r\n        this.formattedText = memoizeResult((text) => formatText(text));\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.termsEnabled) {\r\n            this.getTermsOfService();\r\n        } else {\r\n            GlobalActions.redirectUserToDefaultTeam();\r\n        }\r\n    }\r\n\r\n    getTermsOfService = async () => {\r\n        this.setState({\r\n            customTermsOfServiceId: '',\r\n            customTermsOfServiceText: '',\r\n            loading: true,\r\n        });\r\n        const {data} = await this.props.actions.getTermsOfService();\r\n        if (data) {\r\n            this.setState({\r\n                customTermsOfServiceId: data.id,\r\n                customTermsOfServiceText: data.text,\r\n                loading: false,\r\n            });\r\n        } else {\r\n            GlobalActions.emitUserLoggedOutEvent(`/login?extra=${Constants.GET_TERMS_ERROR}`);\r\n        }\r\n    };\r\n\r\n    handleLogoutClick = (e) => {\r\n        e.preventDefault();\r\n        GlobalActions.emitUserLoggedOutEvent('/login');\r\n    };\r\n\r\n    handleAcceptTerms = () => {\r\n        this.setState({\r\n            loadingAgree: true,\r\n            serverError: null,\r\n        });\r\n        this.registerUserAction(\r\n            true,\r\n            () => {\r\n                const query = new URLSearchParams(this.props.location.search);\r\n                const redirectTo = query.get('redirect_to');\r\n                if (redirectTo && redirectTo.match(/^\\/([^/]|$)/)) {\r\n                    browserHistory.push(redirectTo);\r\n                } else {\r\n                    GlobalActions.redirectUserToDefaultTeam();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    handleRejectTerms = () => {\r\n        this.setState({\r\n            loadingDisagree: true,\r\n            serverError: null,\r\n        });\r\n        this.registerUserAction(\r\n            false,\r\n            () => {\r\n                GlobalActions.emitUserLoggedOutEvent(`/login?extra=${Constants.TERMS_REJECTED}`);\r\n            }\r\n        );\r\n    };\r\n\r\n    registerUserAction = async (accepted, success) => {\r\n        const {data} = await this.props.actions.updateMyTermsOfServiceStatus(this.state.customTermsOfServiceId, accepted);\r\n        if (data) {\r\n            success(data);\r\n        } else {\r\n            this.setState({\r\n                loadingAgree: false,\r\n                loadingDisagree: false,\r\n                serverError: (\r\n                    <FormattedMessage\r\n                        id='terms_of_service.api_error'\r\n                        defaultMessage='Unable to complete the request. If this issue persists, contact your System Administrator.'\r\n                    />\r\n                ),\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <LoadingScreen/>;\r\n        }\r\n\r\n        let termsMarkdownClasses = 'terms-of-service__markdown';\r\n        if (this.state.serverError) {\r\n            termsMarkdownClasses += ' terms-of-service-error__height--fill';\r\n        } else {\r\n            termsMarkdownClasses += ' terms-of-service__height--fill';\r\n        }\r\n        return (\r\n            <div>\r\n                <AnnouncementBar/>\r\n                <div className='signup-header'>\r\n                    <a\r\n                        href='#'\r\n                        onClick={this.handleLogoutClick}\r\n                    >\r\n                        <LogoutIcon/>\r\n                        <FormattedMessage\r\n                            id='web.header.logout'\r\n                            defaultMessage='Logout'\r\n                        />\r\n                    </a>\r\n                </div>\r\n                <div>\r\n                    <div className='signup-team__container terms-of-service__container'>\r\n                        <div className={termsMarkdownClasses}>\r\n                            <div className='medium-center'>\r\n                                {messageHtmlToComponent(this.formattedText(this.state.customTermsOfServiceText), false, {mentions: false})}\r\n                            </div>\r\n                        </div>\r\n                        <div className='terms-of-service__footer medium-center'>\r\n                            <ButtonGroup className='terms-of-service__button-group'>\r\n                                <Button\r\n                                    bsStyle={'primary'}\r\n                                    disabled={this.state.loadingAgree || this.state.loadingDisagree}\r\n                                    id='acceptTerms'\r\n                                    onClick={this.handleAcceptTerms}\r\n                                    type='submit'\r\n                                >\r\n                                    {this.state.loadingAgree && <LoadingSpinner/>}\r\n                                    <FormattedMessage\r\n                                        id='terms_of_service.agreeButton'\r\n                                        defaultMessage={'I Agree'}\r\n                                    />\r\n                                </Button>\r\n                                <Button\r\n                                    bsStyle={'link'}\r\n                                    disabled={this.state.loadingAgree || this.state.loadingDisagree}\r\n                                    id='rejectTerms'\r\n                                    onClick={this.handleRejectTerms}\r\n                                    type='reset'\r\n                                >\r\n                                    {this.state.loadingDisagree && <LoadingSpinner/>}\r\n                                    <FormattedMessage\r\n                                        id='terms_of_service.disagreeButton'\r\n                                        defaultMessage={'I Disagree'}\r\n                                    />\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                            {Boolean(this.state.serverError) && (\r\n                                <div className='terms-of-service__server-error alert alert-warning'>\r\n                                    <WarningIcon/>\r\n                                    {' '}\r\n                                    {this.state.serverError}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getTermsOfService, updateMyTermsOfServiceStatus} from 'mattermost-redux/actions/users';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport TermsOfService from './terms_of_service';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n    return {\r\n        termsEnabled: config.EnableCustomTermsOfService === 'true',\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getTermsOfService,\r\n            updateMyTermsOfServiceStatus,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TermsOfService);\r\n"],"sourceRoot":""}