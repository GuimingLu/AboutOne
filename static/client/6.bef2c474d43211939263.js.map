{"version":3,"sources":["webpack:///./actions/admin_actions.jsx","webpack:///./components/icon/next_icon.jsx","webpack:///./selectors/views/admin.js","webpack:///./mattermost-redux/selectors/entities/admin.js","webpack:///./components/icon/previous_icon.jsx","webpack:///./mattermost-redux/selectors/entities/bots.js","webpack:///./mattermost-redux/actions/bots.js","webpack:///./mattermost-redux/actions/schemes.js","webpack:///./mattermost-redux/selectors/entities/schemes.js","webpack:///./components/audit_table/audit_table.jsx","webpack:///./components/audit_table/index.js","webpack:///buffer (ignored)","webpack:///crypto (ignored)","webpack:///./mattermost-redux/actions/jobs.js","webpack:///./mattermost-redux/selectors/entities/jobs.js","webpack:///./mattermost-redux/constants/schemes.js","webpack:///./images/status_green.png","webpack:///./images/status_yellow.png","webpack:///./utils/policy_roles_adapter.js","webpack:///./components/admin_console/request_button/request_button.jsx","webpack:///./components/admin_console/set_by_env.jsx","webpack:///./components/admin_console/setting.jsx","webpack:///./components/admin_console/boolean_setting.jsx","webpack:///./components/admin_console/text_setting.jsx","webpack:///./components/admin_console/dropdown_setting.jsx","webpack:///./components/admin_console/multiselect_settings.jsx","webpack:///./components/admin_console/radio_setting.jsx","webpack:///./components/admin_console/color_setting.jsx","webpack:///./components/admin_console/generated_setting.jsx","webpack:///./components/admin_console/user_autocomplete_setting.jsx","webpack:///./components/admin_console/settings_group.jsx","webpack:///./components/admin_console/jobs/table.jsx","webpack:///./components/admin_console/jobs/index.jsx","webpack:///./components/admin_console/file_upload_setting.jsx","webpack:///./components/admin_console/remove_file_setting.jsx","webpack:///./components/admin_console/schema_text.jsx","webpack:///./components/widgets/admin_console/admin_header.jsx","webpack:///./components/widgets/admin_console/formatted_admin_header.jsx","webpack:///./components/admin_console/schema_admin_settings.jsx","webpack:///./components/discard_changes_modal.jsx","webpack:///./components/analytics/doughnut_chart.jsx","webpack:///./components/analytics/line_chart.jsx","webpack:///./components/analytics/statistic_count.jsx","webpack:///./components/analytics/format.jsx","webpack:///./components/analytics/system_analytics/system_analytics.jsx","webpack:///./components/analytics/system_analytics/index.js","webpack:///./components/admin_console/banner.jsx","webpack:///./components/analytics/table_chart.jsx","webpack:///./components/analytics/team_analytics/team_analytics.jsx","webpack:///./components/analytics/team_analytics/index.js","webpack:///./components/admin_console/admin_settings.jsx","webpack:///./components/admin_console/plugin_management/plugin_management.jsx","webpack:///./components/admin_console/plugin_management/index.js","webpack:///./components/admin_console/custom_plugin_settings/custom_plugin_settings.jsx","webpack:///./components/admin_console/custom_plugin_settings/index.js","webpack:///./components/icon/reload_icon.jsx","webpack:///./components/admin_console/compliance_reports/compliance_reports.jsx","webpack:///./components/admin_console/compliance_reports/index.js","webpack:///./components/admin_console/audits/audits.jsx","webpack:///./components/admin_console/audits/index.js","webpack:///./components/admin_console/custom_url_schemes_setting.jsx","webpack:///./components/admin_console/license_settings.jsx","webpack:///./components/widgets/admin_console/admin_panel.jsx","webpack:///./components/widgets/admin_console/admin_panel_with_link.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_scheme_summary/permissions_scheme_summary.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_scheme_summary/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_schemes_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/index.jsx","webpack:///./components/admin_console/blockable_link/blockable_link.jsx","webpack:///./components/admin_console/blockable_link/index.js","webpack:///./components/svg/accordion_toggle_icon.jsx","webpack:///./components/widgets/admin_console/admin_panel_togglable.jsx","webpack:///./components/svg/checkbox_checked_icon.jsx","webpack:///./components/svg/checkbox_partial_icon.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_checkbox.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_description.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_row.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_group.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_button/edit_post_time_limit_button.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_button/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_modal/edit_post_time_limit_modal.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_modal/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_tree/permissions_tree.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_tree/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_system_scheme_settings/index.jsx","webpack:///./components/team_info.jsx","webpack:///./components/team_selector_modal/team_selector_modal.jsx","webpack:///./components/team_selector_modal/index.js","webpack:///./components/widgets/admin_console/admin_panel_with_button.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/team_in_list/team_in_list.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/team_in_list/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/index.jsx","webpack:///./components/admin_console/manage_roles_modal/manage_roles_modal.jsx","webpack:///./components/admin_console/manage_roles_modal/index.js","webpack:///./components/admin_console/manage_teams_modal/manage_teams_dropdown.jsx","webpack:///./components/admin_console/manage_teams_modal/remove_from_team_button.jsx","webpack:///./components/admin_console/manage_teams_modal/manage_teams_modal.jsx","webpack:///./components/admin_console/manage_teams_modal/index.jsx","webpack:///./components/admin_console/revoke_token_button/revoke_token_button.jsx","webpack:///./components/admin_console/revoke_token_button/index.js","webpack:///./components/admin_console/manage_tokens_modal/manage_tokens_modal.jsx","webpack:///./components/admin_console/manage_tokens_modal/index.js","webpack:///./components/admin_console/reset_password_modal/reset_password_modal.jsx","webpack:///./components/admin_console/reset_password_modal/index.js","webpack:///./components/admin_console/reset_email_modal/reset_email_modal.jsx","webpack:///./components/user_list_row_with_error/user_list_row_with_error.jsx","webpack:///./components/user_list_row_with_error/index.js","webpack:///./components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx","webpack:///./components/admin_console/system_users/system_users_dropdown/index.js","webpack:///./components/admin_console/system_users/list/system_users_list.jsx","webpack:///./utils/get_users.js","webpack:///./components/admin_console/system_users/list/selectors.jsx","webpack:///./components/admin_console/system_users/list/index.js","webpack:///./components/admin_console/system_users/system_users.jsx","webpack:///./components/admin_console/system_users/index.js","webpack:///./components/admin_console/server_logs/log_list.jsx","webpack:///./components/admin_console/server_logs/logs.jsx","webpack:///./components/admin_console/server_logs/index.js","webpack:///./components/admin_console/brand_image_setting/upload_button.jsx","webpack:///./components/admin_console/brand_image_setting/brand_image_setting.jsx","webpack:///./components/admin_console/group_settings/group_row.jsx","webpack:///./components/admin_console/group_settings/groups_list/groups_list.jsx","webpack:///./components/admin_console/group_settings/groups_list/index.js","webpack:///./components/admin_console/group_settings/group_settings.jsx","webpack:///./components/admin_console/group_settings/group_details/group_profile.jsx","webpack:///./components/admin_console/group_settings/group_details/group_teams_and_channels_row.jsx","webpack:///./components/admin_console/group_settings/group_details/group_teams_and_channels.jsx","webpack:///./components/admin_console/group_settings/group_details/group_users_row.jsx","webpack:///./components/admin_console/group_settings/group_details/group_users.jsx","webpack:///./components/channel_selector_modal/channel_selector_modal.jsx","webpack:///./components/channel_selector_modal/index.js","webpack:///./components/admin_console/group_settings/group_details/group_details.jsx","webpack:///./components/admin_console/group_settings/group_details/index.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_image.jsx","webpack:///./components/admin_console/team_channel_settings/team/list/team_row.jsx","webpack:///./components/admin_console/team_channel_settings/abstract_list.jsx","webpack:///./components/admin_console/team_channel_settings/team/list/team_list.jsx","webpack:///./components/admin_console/team_channel_settings/team/list/index.js","webpack:///./components/admin_console/team_channel_settings/team/team_settings.jsx","webpack:///./components/admin_console/team_channel_settings/team/index.js","webpack:///./components/admin_console/team_channel_settings/remove_confirm_modal.jsx","webpack:///./components/admin_console/team_channel_settings/group/group_users_row.jsx","webpack:///./components/admin_console/team_channel_settings/group/group_users.jsx","webpack:///./components/admin_console/team_channel_settings/users_to_be_removed_modal.jsx","webpack:///./components/admin_console/team_channel_settings/errors.jsx","webpack:///./components/admin_console/team_channel_settings/save_changes_panel.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_profile.jsx","webpack:///./components/toggle.jsx","webpack:///./components/admin_console/team_channel_settings/line_switch.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_modes.jsx","webpack:///./components/admin_console/team_channel_settings/group/group_row.jsx","webpack:///./components/admin_console/team_channel_settings/group/group_list.jsx","webpack:///./components/admin_console/team_channel_settings/group/index.js","webpack:///./components/admin_console/team_channel_settings/team/details/team_groups.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_details.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/index.js","webpack:///./components/admin_console/team_channel_settings/channel/list/channel_row.jsx","webpack:///./components/admin_console/team_channel_settings/channel/list/channel_list.jsx","webpack:///./components/admin_console/team_channel_settings/channel/list/index.js","webpack:///./components/admin_console/team_channel_settings/channel/channel_settings.jsx","webpack:///./components/admin_console/team_channel_settings/channel/index.js","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_modes.jsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_groups.jsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_profile.jsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_details.jsx","webpack:///./components/admin_console/team_channel_settings/channel/details/index.js","webpack:///./components/admin_console/password_settings.jsx","webpack:///./components/admin_console/push_settings.jsx","webpack:///./components/admin_console/data_retention_settings.jsx","webpack:///./components/admin_console/message_export_settings.jsx","webpack:///./components/admin_console/database_settings.jsx","webpack:///./components/admin_console/elasticsearch_settings.jsx","webpack:///./components/admin_console/cluster_table.jsx","webpack:///./components/admin_console/cluster_table_container.jsx","webpack:///./components/admin_console/cluster_settings.jsx","webpack:///./components/admin_console/custom_terms_of_service_settings/custom_terms_of_service_settings.jsx","webpack:///./components/admin_console/custom_terms_of_service_settings/index.js","webpack:///./components/admin_console/upload/admin_download.jsx","webpack:///./components/admin_console/admin_definition_constants.jsx","webpack:///./components/admin_console/admin_definition.jsx","webpack:///./utils/admin_console_index.jsx","webpack:///./components/admin_console/admin_sidebar_category.jsx","webpack:///./components/widgets/menu/menu_items/menu_item_blockable_link.jsx","webpack:///./components/admin_console/admin_navbar_dropdown/admin_navbar_dropdown.jsx","webpack:///./components/admin_console/admin_navbar_dropdown/index.js","webpack:///./components/admin_console/admin_sidebar_header/admin_sidebar_header.jsx","webpack:///./components/admin_console/admin_sidebar_header/index.js","webpack:///./components/admin_console/admin_sidebar_section.jsx","webpack:///./components/admin_console/highlight.jsx","webpack:///./components/admin_console/admin_sidebar/admin_sidebar.jsx","webpack:///./components/admin_console/admin_sidebar/index.js","webpack:///./components/admin_console/admin_console.jsx","webpack:///./components/admin_console/index.js"],"names":["dispatch","store","getState","saveConfig","config","success","error","data","err","AdminActions","id","server_error_id","reloadConfig","adminResetMfa","userId","UserActions","getClusterStatus","ldapTest","invalidateAllCaches","recycleDatabaseConnection","adminResetPassword","currentPassword","password","adminResetEmail","user","samlCertificateStatus","getOAuthAppInfo","clientId","bindClientFunc","clientFunc","Client4","params","allowOAuth2","responseType","redirectUri","state","scope","authorizeOAuthApp","emailToLdap","loginId","token","ldapId","ldapPassword","emailToOAuth","newType","oauthToEmail","currentService","email","follow_link","emitUserLoggedOutEvent","uploadBrandImage","brandImage","uploadLicenseFile","file","removeLicenseFile","uploadPublicSamlCertificate","uploadPrivateSamlCertificate","uploadIdpSamlCertificate","removePublicSamlCertificate","removePrivateSamlCertificate","removeIdpSamlCertificate","getStandardAnalytics","teamId","getAdvancedAnalytics","getPostsPerDayAnalytics","getUsersPerDayAnalytics","elasticsearchTest","testS3Connection","elasticsearchPurgeIndexes","setNavigationBlocked","blocked","type","ActionTypes","SET_NAVIGATION_BLOCKED","deferNavigation","onNavigationConfirmed","DEFER_NAVIGATION","cancelNavigation","CANCEL_NAVIGATION","confirmNavigation","thunkDispatch","thunkGetState","callback","getOnNavigationConfirmed","CONFIRM_NAVIGATION","invalidateAllEmailInvites","TeamActions","testSmtp","NextIcon","React","PureComponent","render","className","props","additionalClassName","title","PropTypes","string","getNavigationBlocked","views","admin","navigationBlock","showNavigationPrompt","Object","defineProperty","exports","value","getLogs","getAudits","getConfig","getLdapGroups","getLdapGroupsCount","getEnvironmentConfig","getComplianceReports","getClusterInfo","getUserAccessTokens","entities","logs","audits","ldapGroups","ldapGroupsCount","environmentConfig","complianceReports","clusterInfo","userAccessTokens","PreviousIcon","getBotAccounts","bots","accounts","createBot","patchBot","loadBot","loadBots","disableBot","enableBot","assignBot","_client","require","_action_types","_helpers","BOTS_PER_PAGE_DEFAULT","bot","onSuccess","BotTypes","RECEIVED_BOT_ACCOUNT","botUserId","botPatch","getBot","page","arguments","length","undefined","perPage","getBotsIncludeDeleted","RECEIVED_BOT_ACCOUNTS","newOwnerId","getScheme","getSchemes","createScheme","deleteScheme","patchScheme","getSchemeTeams","getSchemeChannels","_constants","_reduxBatchedActions","_errors","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","args","apply","schemeId","onRequest","SchemeTypes","GET_SCHEME_REQUEST","RECEIVED_SCHEME","GET_SCHEME_SUCCESS","onFailure","GET_SCHEME_FAILURE","General","PAGE_SIZE_DEFAULT","GET_SCHEMES_REQUEST","RECEIVED_SCHEMES","GET_SCHEMES_SUCCESS","GET_SCHEMES_FAILURE","scheme","CREATE_SCHEME_REQUEST","CREATED_SCHEME","CREATE_SCHEME_SUCCESS","CREATE_SCHEME_FAILURE","_ref","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","DELETE_SCHEME_REQUEST","sent","t0","forceLogoutIfNecessary","batchActions","DELETE_SCHEME_FAILURE","logError","abrupt","DELETED_SCHEME","DELETE_SCHEME_SUCCESS","stop","_x","_x2","PATCH_SCHEME_REQUEST","PATCHED_SCHEME","PATCH_SCHEME_SUCCESS","PATCH_SCHEME_FAILURE","GET_SCHEME_TEAMS_REQUEST","RECEIVED_SCHEME_TEAMS","GET_SCHEME_TEAMS_SUCCESS","GET_SCHEME_TEAMS_FAILURE","GET_SCHEME_CHANNELS_REQUEST","RECEIVED_SCHEME_CHANNELS","GET_SCHEME_CHANNELS_SUCCESS","GET_SCHEME_CHANNELS_FAILURE","makeGetSchemeChannels","makeGetSchemeTeams","_reselect","_channels","_teams","_schemes","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","_i","_s","push","Array","isArray","schemes","createSelector","getAllChannels","allChannels","ScopeTypes","TEAM","msg","concat","console","log","schemeChannels","entries","forEach","item","_item","channel","scheme_id","getTeams","allTeams","CHANNEL","schemeTeams","_item2","team","holders","defineMessages","sessionRevoked","t","defaultMessage","channelCreated","establishedDM","nameUpdated","headerUpdated","channelDeleted","userAdded","userRemoved","attemptedRegisterApp","attemptedAllowOAuthAccess","successfullOAuthAccess","failedOAuthAccess","attemptedOAuthToken","successfullOAuthToken","oauthTokenFailed","attemptedLogin","authenticated","defauleMessage","successfullLogin","failedLogin","updatePicture","updateGeneral","attemptedPassword","successfullPassword","failedPassword","updatedRol","member","accountActive","accountInactive","by","byAdmin","sentEmail","attemptedReset","successfullReset","updateGlobalNotifications","attemptedWebhookCreate","succcessfullWebhookCreate","failedWebhookCreate","attemptedWebhookDelete","successfullWebhookDelete","failedWebhookDelete","logout","verified","revokedAll","loginAttempt","loginFailure","attemptedLicenseAdd","successfullLicenseAdd","failedExpiredLicenseAdd","failedInvalidLicenseAdd","licenseRemoved","AuditTable","accessList","formatMessage","intl","audit","auditInfo","formatAuditInfo","currentUser","getByName","getUser","uContent","showUserId","profile","iContent","showIp","ip","sContent","showSession","sessionId","descStyle","desc","toLowerCase","indexOf","timestamp","userIdContent","ipContent","sessionContent","propTypes","intlShape","isRequired","array","bool","object","func","injectIntl","actionURL","action","replace","auditDesc","channelInfo","extra_info","split","channelNameField","channelURL","channelObj","channelName","display_name","username","getDirectTeammate","userIdField","test","url","oauthInfo","clientIdField","oauthTokenFailure","trim","userInfo","userRoles","updateType","updateField","actingUserInfo","actingUser","isSystemAdmin","roles","webhookInfo","licenseInfo","toTitleCase","actionDesc","lastIndexOf","substring","extraInfoDesc","date","Date","create_at","user_id","ip_address","session_id","mapStateToProps","getCurrentUser","getChannelByName","connect","createJob","getJob","getJobs","getJobsByType","cancelJob","job","JobTypes","CREATE_JOB_REQUEST","RECEIVED_JOB","CREATE_JOB_SUCCESS","CREATE_JOB_FAILURE","GET_JOB_REQUEST","GET_JOB_SUCCESS","GET_JOB_FAILURE","JOBS_CHUNK_SIZE","GET_JOBS_REQUEST","RECEIVED_JOBS","GET_JOBS_SUCCESS","GET_JOBS_FAILURE","RECEIVED_JOBS_BY_TYPE","CANCEL_JOB_REQUEST","CANCEL_JOB_SUCCESS","CANCEL_JOB_FAILURE","getAllJobs","makeGetJobsByType","jobs","jobsByTypeList","jobsByType","MAPPING","enableTeamCreation","true","roleName","permission","Permissions","CREATE_TEAM","shouldHave","false","editOthersPosts","EDIT_OTHERS_POSTS","enableOnlyAdminIntegrations","MANAGE_INCOMING_WEBHOOKS","MANAGE_OUTGOING_WEBHOOKS","MANAGE_SLASH_COMMANDS","MANAGE_OAUTH","rolesFromMapping","mappingValues","rolesClone","JSON","parse","stringify","purgeNonPertinentRoles","keys","mappingKey","mutateRolesBasedOnMapping","roleClone","originalPermissionSet","Set","permissions","newPermissionSet","difference","filter","x","has","size","mappingValueFromRoles","o","mappingPartIterator","allConditionsAreMet","Error","pertinentRoleNames","roleNamesInMapping","includes","roleRules","role","addPermissionToRole","removePermissionFromRole","roleNames","values","v1","v2","names","map","mappingPart","hasOwnProperty","hasUnmetCondition","some","permissionIndex","splice","RequestButton","Component","constructor","handleRequest","bind","busy","fail","e","preventDefault","setState","doRequest","requestAction","errMsg","message","includeDetailedError","detailed_error","saveNeeded","saveConfigAction","errorMessage","showSuccessMessage","successMessage","widgetClassNames","label","disabled","loadingText","Utils","buttonText","alternativeActionElement","helpText","element","shape","Settings","children","setByEnv","inputId","node","BooleanSetting","handleChange","onChange","target","disabledText","trueText","falseText","AdminTextSetting","sharedProps","TextSetting","DropdownSetting","options","text","isDisabled","MultiSelectSetting","selected","reduce","found","find","newValue","n","mustBePresent","join","notPresent","UNSAFE_componentWillReceiveProps","newProps","getOptionLabel","noResultText","calculateValue","errorText","RadioSetting","ColorSetting","color","hex","showPicker","closest","getPickerClass","componentDidMount","document","addEventListener","closePicker","componentWillUnmount","removeEventListener","picker","onTextInput","togglePicker","backgroundColor","GeneratedSetting","placeholder","regenerateText","regenerateHelpText","defaultProps","regenerate","crypto","randomBytes","UserAutocompleteSetting","userSuggestionProviders","GenericUserProvider","handleUserSelected","SuggestionList","SettingsGroup","show","header","container","wrapperClass","contentClass","JobTable","status","JobStatuses","PENDING","IN_PROGRESS","SUCCESS","ERROR","CANCEL_REQUESTED","CANCELED","getExtraInfoText","millis","last_activity_at","start_at","runningMillis","now","lastActivity","formatDate","year","month","day","formatTime","hour","minute","second","seconds","Math","round","minutes","loading","actions","jobType","jobId","currentTarget","getAttribute","reload","cancelButton","handleCancelJob","interval","UNSAFE_componentWillMount","setInterval","clearInterval","items","getCancelButton","getStatus","getFinishAt","getRunLength","handleCreateJob","createJobButtonText","createJobHelpText","arrayOf","ownProps","Selectors","mapDispatchToProps","bindActionCreators","Table","FileUploadSetting","Setting","uploadingText","onSubmit","fileType","files","refs","fileInput","fileSelected","fileName","name","$","upload_button","button","serverError","btnClass","handleSubmit","RemoveFileSetting","remove_button","removeButtonText","removingText","handleRemove","SchemaText","isMarkdown","textDefault","textValues","html","marked","breaks","sanitize","renderer","CustomRenderer","__html","isTranslated","renderTranslated","renderUntranslated","oneOfType","AdminHeader","FormattedAdminHeader","SchemaAdminSettings","saving","settings","schema","rolesBinding","acc","val","Constants","SettingsTypes","TYPE_PERMISSION","permissions_mapping_name","updatedRoles","all","editRole","doSubmit","getStateFromConfig","translate","name_default","setting","label_markdown","label_values","label_default","help_text","helpTextValues","helpTextDefault","disabled_help_text","disabled_help_text_markdown","disabled_help_text_values","disabled_help_text_default","help_text_markdown","help_text_values","help_text_default","license","Boolean","isHidden","renderHelpText","loading_default","renderLabel","success_message","error_message","error_message_default","success_message_default","inputType","TYPE_NUMBER","TYPE_LONG_TEXT","dynamic_value","placeholder_default","isSetByEnv","max_length","handlePermissionChange","selectedValue","selectedOptionForHelpText","option","locales","I18n","l","order","sort","a","b","multiple","no_result","no_result_default","not_present","not_present_default","changedId","banner_type","renderBanner","regenerate_help_text","handleGeneratedChange","s","job_type","render_job","removeFile","successCallback","errorCallback","remove_action","remove_help_text","remove_help_text_default","remove_button_text","remove_button_text_default","removing_text","removing_text_default","uploadFile","filename","upload_action","uploading_text","uploading_text_default","idpCertificateFileError","CustomComponent","component","settingsList","buildSettingFunctions","isPlugin","footer","errorTooltip","elm","querySelector","isElipsis","offsetWidth","scrollWidth","getConfigFromState","savedConfig","handleSaved","serverErrorId","path","getConfigValue","customComponentWrapperClass","renderTitle","renderSettings","hybridSchemaAndComponent","canSave","openTooltip","closeTooltip","OVERLAY_TIME_DELAY","TYPE_TEXT","buildTextSetting","TYPE_COLOR","buildColorSetting","TYPE_BOOL","buildBoolSetting","buildPermissionSetting","TYPE_DROPDOWN","buildDropdownSetting","TYPE_RADIO","buildRadioSetting","TYPE_BANNER","buildBannerSetting","TYPE_GENERATED","buildGeneratedSetting","TYPE_USERNAME","buildUsernameSetting","TYPE_BUTTON","buildButtonSetting","TYPE_LANGUAGE","buildLanguageSetting","TYPE_JOBSTABLE","buildJobsTableSetting","TYPE_FILE_UPLOAD","buildFileUploadSetting","TYPE_CUSTOM","buildCustomSetting","getDerivedStateFromProps","prevSchemaId","setConfigValue","getSettingValue","previousValue","onConfigSave","onConfigLoad","default","getSetting","pathParts","obj","pathPart","setValue","part","slice","DiscardChangesModal","buttonClass","modalClass","onConfirm","onCancel","DoughnutChart","update","canvas","el","ReactDOM","findDOMNode","ctx","getContext","dataCopy","chart","Chart","initChart","componentDidUpdate","prevProps","destroy","content","width","height","number","LineChart","legend","display","chartOptions","UNSAFE_componentWillUpdate","nextProps","willHaveData","labels","hasChart","hasData","StatisticCount","icon","isNaN","count","formatChannelDoughtnutData","totalPublic","totalPrivate","channelTypeData","datasets","hoverBackgroundColor","formatPostDoughtnutData","filePosts","hashtagPosts","totalPosts","postTypeData","formatPostsPerDayData","chartData","fillColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","index","row","formatUsersWithPostsPerDayData","StatTypes","SystemAnalytics","isLicensed","stats","skippedIntensiveQueries","TOTAL_POSTS","postCountsDay","POST_PER_DAY","userCountsWithPostsDay","USERS_WITH_POSTS_PER_DAY","banner","postCount","postTotalGraph","activeUserGraph","advancedStats","advancedGraphs","sessionCount","commandCount","incomingCount","outgoingCount","TOTAL_SESSIONS","TOTAL_COMMANDS","TOTAL_IHOOKS","TOTAL_OHOOKS","TOTAL_WEBSOCKET_CONNECTIONS","TOTAL_MASTER_DB_CONNECTIONS","TOTAL_READ_DB_CONNECTIONS","TOTAL_PUBLIC_CHANNELS","TOTAL_PRIVATE_GROUPS","TOTAL_FILE_POSTS","TOTAL_HASHTAG_POSTS","postTypeGraph","userCount","TOTAL_USERS","teamCount","TOTAL_TEAMS","channelCount","dailyActiveUsers","DAILY_ACTIVE_USERS","monthlyActiveUsers","MONTHLY_ACTIVE_USERS","firstRow","secondRow","thirdRow","getLicense","IsLicensed","analytics","Banner","description","TableChart","tooltip","tip","LAST_ANALYTICS_TEAM","TeamAnalytics","recentlyActiveUsers","getProfilesInTeam","PROFILE_CHUNK_SIZE","newUsers","teams","BrowserStore","setGlobalItem","initialTeam","getData","nextState","totalPostsCount","userActiveGraph","recentActiveUsers","formatRecentUsersData","locale","newlyCreatedUsers","formatNewUsersData","aName","toUpperCase","bName","handleTeamChange","formattedData","getMonthLong","getTeamsList","getGlobalItem","getCurrentLocale","teamAnalytics","AdminSettings","str","defaultValue","parseInt","minimumValue","assign","localizeMessage","PluginItemState","PluginState","PLUGIN_STATE_NOT_RUNNING","PLUGIN_STATE_STARTING","PLUGIN_STATE_RUNNING","PLUGIN_STATE_FAILED_TO_START","PLUGIN_STATE_FAILED_TO_STAY_RUNNING","PLUGIN_STATE_STOPPING","PluginItemStateDescription","PluginItem","pluginStatus","removing","handleEnable","handleDisable","showInstances","hasSettings","activateButton","activating","deactivating","active","settingsButton","removeButton","is_prepackaged","prepackagedLabel","notices","instances","instance","version","cluster_id","clusterSummary","PluginManagement","lastMessage","force","uploading","uploadPlugin","confirmOverwriteUploadModal","overwritingUpload","getPlugins","helpSubmitUpload","pluginDownloadUrl","installing","installPluginFromUrl","confirmOverwriteInstallModal","overwritingInstall","installFromUrl","pluginId","removePlugin","enablePlugin","disablePlugin","overwriteButton","hideEnablePlugins","ExperimentalSettings","RestrictSystemAdmin","enable","PluginSettings","Enable","EnableUploads","enableUploads","AllowInsecureDownloadUrl","allowInsecureDownloadUrl","getPluginStatuses","uploadButtonText","installButtonText","pluginsList","pluginsContainer","pluginsListContainer","plugins","pluginStatuses","p","settings_schema","uploadHelpText","uploadBtnClass","overwriteUploadPluginModal","renderOverwritePluginModal","handleOverwriteUploadPlugin","handleOverwriteUploadPluginCancel","overwriteInstallPluginModal","handleOverwriteInstallPlugin","handleOverwriteInstallPluginCancel","renderEnablePluginsSetting","handleUpload","handleSubmitUpload","onPluginDownloadUrlChange","handleSubmitInstall","CustomPluginSettings","Plugins","configSettings","lowerKey","Reflect","deleteProperty","makeGetPluginSchema","plugin","makeMapStateToProps","getPluginSchema","match","plugin_id","getRoles","ReloadIcon","ComplianceReports","loadingReports","runningReport","emails","keywords","from","end_at","to","createComplianceReport","enabled","getDateTime","style","list","reports","report","download","getBaseRoute","greenStatus","redStatus","users","dataCell","runReport","margin","whiteSpace","marginTop","getUsersForReports","profiles","usersMap","r","u","ComplianceSettings","requests","createCompliance","selectComplianceReports","Audits","loadingAudits","h4Style","marginBottom","divStyle","clear","renderComplianceReports","activityLogHeader","Compliance","CustomUrlSchemesSetting","valueAsArray","stringToArray","arrayToString","LicenseSettings","window","location","edition","licenseType","licenseKey","issued","IssuedAt","startsAt","StartsAt","expiresAt","ExpiresAt","sku","SkuShortName","Name","Company","Users","AdminPanel","onHeaderClick","titleId","titleDefault","subtitleId","subtitleDefault","subtitleValues","AdminPanelWithLink","linkTextId","linkTextDefault","MAX_TEAMS_PER_SCHEME_SUMMARY","PermissionsSchemeSummary","schemeName","confirmButton","deleting","showConfirmModal","handleDeleteConfirmed","handleDeleteCanceled","stopPropagation","history","extraTeams","confirmModal","renderConfirmModal","goToEdit","delete","PAGE_SIZE","PHASE_2_MIGRATION_IMCOMPLETE_STATUS_CODE","PermissionSchemesSettings","loadingMore","loadSchemes","promises","loadSchemeTeams","phase2MigrationIsComplete","docLink","jobsAreEnabled","clusterIsEnabled","teamOverrideUnavalableView","defaultMsg","documentationLink","hasCustomSchemes","CustomPermissionsSchemes","teamOverrideView","teamOverrideSchemesMigrationView","loadMoreSchemes","renderTeamOverrideSchemes","status_code","RunJobs","EnableCluster","BlockableLink","browserHistory","handleClick","AccordionToggleIcon","AdminPanelTogglable","open","onToggle","CheckboxCheckedIcon","CheckboxPartialIcon","PermissionCheckbox","extraClass","PermissionDescription","isInheritLink","parentElement","selectRow","generateId","inherited","rowType","additionalValues","parentPermissionClicked","PermissionRow","readOnly","uniqId","classes","toggleSelect","PermissionGroup","expanded","result","getRecursivePermissions","ids","permissionsToToggle","fromParent","prevPermissions","PermissionsScope","isInScope","comesFromParent","parentRole","toggleSelectRow","g","toggleSelectSubGroup","combined","anyChecked","anyUnchecked","allPermissionsFromParent","root","hasPermissionsOnScope","permissionsRows","group","addVals","renderPermission","renderGroup","toggleSelectGroup","toggleExpanded","EditPostTimeLimitButton","messageID","timeLimit","UNSET_POST_EDIT_TIME_LIMIT","onClick","PostEditTimeLimit","INT32_MAX","EditPostTimeLimitModal","postEditTimeLimit","newConfig","ServiceSettings","updateConfig","onClose","ALLOW_EDIT_POST_ALWAYS","handleOptionChange","ALLOW_EDIT_POST_TIME_LIMIT","handleSecondsChange","save","PermissionsTree","integrationsGroup","groups","EnableIncomingWebhooks","EnableOutgoingWebhooks","EnableOAuthServiceProvider","EnableCommands","EnableCustomEmoji","editTimeLimitModalIsVisible","ADDITIONAL_VALUES","toggleGroup","closePostTimeLimitModal","edit_post","editTimeLimitButton","openPostTimeLimitModal","updateGroups","EXCLUDED_PERMISSIONS","VIEW_MEMBERS","JOIN_PUBLIC_TEAMS","LIST_PUBLIC_TEAMS","JOIN_PRIVATE_TEAMS","LIST_PRIVATE_TEAMS","PermissionSystemSchemeSettings","openRoles","all_users","scrollIntoView","behavior","block","toggleRole","setTimeout","selectedPermission","goToSelectedRow","system_user","team_user","channel_user","teamAdminPromise","team_admin","channelAdminPromise","channel_admin","restoreExcludedPermissions","deriveRolesFromAllUsers","systemUserPromise","teamUserPromise","channelUserPromise","results","roleId","newOpenRoles","newPermissions","newRolesState","DefaultRolePermissions","loaded","togglePermission","system_admin","showResetDefaultModal","resetDefaults","rolesNeeded","loadRolesIfNeeded","every","loadRolesIntoState","componentWillReceiveProps","displayName","rolesRequest","getRolesByNames","TeamInList","teamIconUrl","imageURLForTeam","backgroundImage","TEAMS_PER_PAGE","TeamSelectorModal","setModalSearchTerm","onModalDismissed","onTeamsSelected","handleHide","confirmed","modalID","ModalIdentifiers","ADD_TEAMS_TO_SCHEME","confirmAddModal","confirmAddTeam","teamIds","v","loadingState","loadingTeams","prevPage","setTeamsLoadingState","loadTeams","term","multiselectComponent","searchTimeoutId","search","searchTerm","clearTimeout","searchTeams","SEARCH_TIMEOUT_MILLISECONDS","renderOption","isSelected","onAdd","rowSelected","renderValue","confirmButtonText","addValue","numRemainingText","buttonSubmitText","delete_at","currentSchemeId","alreadySelected","handleExit","handlePageChange","handleDelete","modalSearch","startsWith","AdminPanelWithButton","onButtonClick","buttonTextId","buttonTextDefault","onRemoveTeam","getTeamStats","loadTeamStats","PermissionTeamSchemeSettings","default_team_user_role","default_team_admin_role","default_channel_user_role","default_channel_admin_role","teamUser","teamAdmin","channelUser","channelAdmin","isLoaded","baseTeam","baseChannel","schemeDescription","getStateRoles","allUsers","derived","newScheme","teamEditPromises","currentTeams","serverTeams","addedTeams","removedTeams","updateTeamScheme","addTeamOpen","closeAddTeam","addTeams","handleNameChange","handleDescriptionChange","openAddTeam","removeTeam","loadScheme","getStateFromProps","hasPostAllRole","UserUtils","hasPostAllPublicRole","hasUserAccessTokenRole","ManageRolesModal","checked","oldRoles","trackEvent","SYSTEM_USER_ACCESS_TOKEN_ROLE","SYSTEM_POST_ALL_ROLE","SYSTEM_POST_ALL_PUBLIC_ROLE","SYSTEM_USER_ROLE","SYSTEM_ADMIN_ROLE","updateUserRoles","trackRoleChanges","handleError","additionalRoles","is_bot","handlePostAllChange","handlePostAllPublicChange","userAccessTokenContent","userAccessTokensEnabled","handleUserAccessTokenChange","getProfilePictureUrl","last_picture_update","handleSystemAdminChange","nextUser","renderContents","handleSave","EnableUserAccessTokens","ManageTeamsDropdown","updateTeamMemberSchemeRoles","teamMember","team_id","onError","onMemberChange","handleRemoveUserFromTeam","isTeamAdmin","scheme_admin","makeTeamAdmin","makeMember","group_constrained","removeFromTeam","RemoveFromTeamButton","ManageTeamsModal","getTeamMembers","getTeamsForUser","filterAndSortTeamsByDisplayName","getTeamMembersForUser","teamMembers","removeUserFromTeam","handleMemberRemove","teamList","handleMemberChange","systemAdminIndicator","loadTeamsAndTeamMembers","nextUserId","RevokeTokenButton","revokeUserAccessToken","tokenId","ManageTokensModal","tokenList","userAccessTokensList","getUserAccessTokensForUser","userAccessTokensByUser","ResetPasswordModal","doCancel","serverErrorNewPass","serverErrorCurrentPass","errorMsg","valid","passwordConfig","onModalSubmit","urlClass","auth_service","newPasswordFocus","currentUserId","urlClassCurrentPass","getCurrentUserId","getPasswordConfig","ResetEmailModal","isEmail","UserListRowWithError","errorObj","buttons","Action","totalUsers","actionProps","actionUserProps","emailStyle","extraInfo","userCountID","userCountEmail","getStatusForUserId","UserListRow","ROWS_FROM_BOTTOM_TO_OPEN_UP","SystemUsersDropdown","updateUserActive","onUpdateActiveResult","doManageTeams","doManageRoles","doManageTokens","doPasswordReset","doEmailReset","shouldDisableBotsWhenOwnerIsDeactivated","Integrations","START_PAGE_NUM","showDeactivateMemberModal","warning","EMAIL_SERVICE","confirmationMessage","messageForUsersWithBotAccounts","owner_id","confirmButtonClass","deactivateMemberButton","handleDeactivateMember","handleDeactivateCancel","showRevokeSessionsModal","me","revokeAllSessionsForUser","revokeUserButtonButton","handleRevokeSessions","handleRevokeSessionsCancel","enableUserAccessTokens","messageId","DisableBotsWhenOwnerIsDeactivated","currentRoles","showMakeActive","showMakeNotActive","showManageTeams","showRevokeSessions","showMfaReset","mfaEnabled","mfa_active","disableActivationToggle","LDAP_SERVICE","deactivateMemberModal","renderDeactivateMemberModal","revokeSessionsModal","renderRevokeSessionsModal","openUp","renderAccessToken","handleMakeActive","handleShowDeactivateMemberModal","handleManageRoles","handleManageTeams","handleManageTokens","handleResetMfa","experimentalEnableAuthenticationTransfer","handleResetPassword","handleResetEmail","REVOKE_USER_ACCESS_TOKEN","handleShowRevokeSessionsModal","SystemUsersList","nextPage","showManageTeamsModal","showManageRolesModal","showManageTokensModal","showPasswordModal","showEmailModal","getInfoForUser","service","SAML_SERVICE","renderCount","total","startCount","endCount","isSearch","previousPage","onTermChange","doManageTeamsDismiss","doManageRolesDismiss","doManageTokensDismiss","doPasswordResetSubmit","doPasswordResetDismiss","doEmailResetSubmit","doEmailResetDismiss","usersPerPage","focusOnMount","renderFilterRow","getFilterOptions","SearchUserOptionsFilter","SYSTEM_ADMIN","UserSearchOptions","ROLE","ALLOW_INACTIVE","ALL_USERS","NO_TEAM","USER_ID_LENGTH","getUsers","filters","searchProfilesInTeam","searchProfiles","getProfiles","getProfilesWithoutTeam","getNonBotUsers","USERS_PER_PAGE","SystemUsers","loadProfilesWithoutTeam","loadProfilesAndTeamMembers","SearchUserTeamFilter","loadDataForTeam","setSystemUsersSearch","debounce","WITHOUT_TEAM","getUserByTokenOrId","getUserAccessToken","getUserById","doSearch","handleFilterChange","searching","siteName","handleTermChange","SiteName","EnableMultifactorAuthentication","ExperimentalEnableAuthenticationTransfer","systemUsersSearch","Stats","TOTAL_INACTIVE_USERS","total_member_count","NEXT_BUTTON_TIMEOUT","Logs","nextDisabled","nextTimeoutId","logPanel","createRef","current","scrollTop","scrollHeight","focus","nextButton","previousButton","fontFamily","loadingLogs","UploadButton","primaryClass","buttonContent","UploadStatuses","COMPLETE","LOADING","HTTP_STATUS_OK","BrandImageSetting","handleImageChange","handleImageSubmit","brandImageExists","brandImageTimestamp","DEFAULT","fetch","getBrandImageUrl","resp","image","reader","FileReader","img","onload","attr","readAsDataURL","prop","btnPrimaryClass","letbtnDefaultClass","GroupRow","onCheckToggle","primary_key","link","unlink","mattermost_group_id","has_syncables","failed","unlinkHandler","linkHandler","onRowClick","renderLinked","renderActions","LDAP_GROUPS_PAGE_SIZE","FILTER_STATE_SEARCH_KEY_MAPPING","filterIsConfigured","is_configured","filterIsUnconfigured","filterIsLinked","is_linked","filterIsUnlinked","GroupsList","showFilters","searchGroups","newChecked","hasSelectedLinked","selectionActionButtonType","linkSelectedGroups","unlinkSelectedGroups","RegExp","searchString","newState","q","opts","re","regex","KeyCodes","ENTER","k","stateKey","newSearchString","stringFilterPresent","updates","nativeEvent","stopImmediatePropagation","handleFilterCheck","lastPage","firstPage","handleGroupSearchKeyUp","resetFiltersAndSearch","closeFilters","once","renderSearchFilters","renderSelectionActionButton","renderRows","getSortedListOfLdapGroups","localeCompare","fetchLdapGroups","linkLdapGroup","unlinkLdapGroup","GroupSettings","siteURL","getSiteURL","GroupProfile","GroupTeamsAndChannelsRow","onRemoveItem","showConfirmationModal","onToggleCollapse","extraClasses","arrowIcon","hasChildren","collapsed","toggleCollapse","teamIcon","channelIcon","displayType","removeItem","implicit","GroupTeamsAndChannels","Groups","SYNCABLE_TYPE_TEAM","getGroupSyncables","SYNCABLE_TYPE_CHANNEL","channels","existingTeams","teamEntries","add","team_type","team_display_name","channelEntriesByTeam","channel_type","channel_display_name","channel_id","teamChannels","teamsAndChannelsToEntries","entry","GroupUsersRow","lastPictureUpdate","GROUP_MEMBERS_PAGE_SIZE","GroupUsers","getMembers","groupID","members","first_name","last_name","renderPagination","CHANNELS_PER_PAGE","ChannelSelectorModal","onChannelsSelected","findIndex","loadingChannels","setChannelsLoadingState","loadChannels","response","stateChannelIDs","stateChannel","serverChannel","compareChannels","searchChannels","searchAllChannels","GroupDetails","addChannelOpen","auto_add","finally","groupTeams","groupChannels","memberCount","openAddChannel","loadingTeamsAndChannels","closeAddChannel","addChannels","getGroup","group_id","getGroupTeams","getGroupChannels","getGroupMembers","getGroupMemberCount","fetchGroup","fetchMembers","fetchGroupSyncables","linkGroupSyncable","unlinkGroupSyncable","TeamButton","small","classModifier","initials","TeamRow","handleRowClick","maxWidth","AbstractList","performSearch","emptyListTextId","emptyListTextDefaultMessage","renderRow","onPageChangedCallback","getPaging","removeGroup","Header","TeamList","onTeamClick","getSortedListOfTeams","totalCount","pageSize","fetchTeams","TeamsSettings","RemoveConfirmModal","amount","inChannel","AdminGroupUsersRow","padding","renderRolesColumn","renderGroupsColumn","AdminGroupUsers","UsersToBeRemovedModal","NeedGroupsError","UsersWillBeRemovedError","SaveChangesPanel","cancelLink","TeamProfile","Toggle","toggled","LineSwitch","subTitle","SyncGroupsToggle","syncChecked","allAllowedChecked","allowedDomainsChecked","allowedDomains","AllowAllToggle","AllowedDomainsToggle","setToggles","TeamModes","member_count","GroupList","totalGroups","isModeSync","onGroupRemoved","List","TeamGroups","onAddCallback","removedGroups","AddGroupsToTeamModal","skipCommit","excludeGroups","includeGroups","TeamDetails","showRemoveConfirmation","origGroups","teamID","patchTeam","allowed_domains","allow_open_invite","resultWithError","processGroupsChange","gid","groupIDs","allGroups","usersToRemove","hideRemoveUsersModal","handleGroupChange","handleGroupRemoved","showRemoveUsersModal","getTeam","getGroups","membersMinusGroupMembers","total_count","ex","getGroupsAssociatedToTeam","groupsAssociatedToTeam","getAllGroups","fetchTeam","fetchAssociatedGroups","ChannelRow","PRIVATE_CHANNEL","team_name","ChannelList","onChannelClick","compareByTypeAndName","OPEN_CHANNEL","getSortedListOfChannels","c","ChannelsSettings","isSynced","isPublic","ChannelModes","ChannelGroups","synced","AddGroupsToChannelModal","ChannelProfile","ChannelDetails","channelID","patchChannel","getChannel","getGroupsAssociatedToChannel","groupsAssociatedToChannel","fetchChannel","PasswordSettings","getSampleErrorMsg","handlePasswordLengthChange","handleCheckboxChange","passwordMinimumLength","MinimumLength","passwordLowercase","Lowercase","passwordNumber","Number","passwordUppercase","Uppercase","passwordSymbol","maximumLoginAttempts","MaximumLoginAttempts","sampleErrorMsgId","sampleErrorMsg","min","MIN_PASSWORD_LENGTH","max","MAX_PASSWORD_LENGTH","parseIntNonZero","lowercase","uppercase","symbol","minLength","PUSH_NOTIFICATIONS_OFF","PUSH_NOTIFICATIONS_MHPNS","PUSH_NOTIFICATIONS_MTPNS","PUSH_NOTIFICATIONS_CUSTOM","PushSettings","handleAgreeChange","handleDropdownChange","pushNotificationServerType","agree","pushNotificationServer","MHPNS","MTPNS","EmailSettings","SendPushNotifications","PushNotificationServer","TeamSettings","MaxNotificationsPerChannel","maxNotificationsPerChannel","pushNotificationServerTypes","sendHelpText","pushServerHelpText","tosCheckbox","isPushNotificationServerSetByEnv","DataRetentionSettings","EnableMessageDeletion","enableMessageDeletion","EnableFileDeletion","enableFileDeletion","MessageRetentionDays","messageRetentionDays","FileRetentionDays","fileRetentionDays","DeletionJobStartTime","deletionJobStartTime","String","messageList","days","handleSaveConfirmed","handleSaveCanceled","enableMessageDeletionOptions","enableFileDeletionOptions","messageRetentionDaysSetting","fileRetentionDaysSetting","DATA_RETENTION","exportFormats","EXPORT_FORMAT_CSV","EXPORT_FORMAT_ACTIANCE","EXPORT_FORMAT_GLOBALRELAY","MessageExportSettings","messages_exported","EnableExport","enableComplianceExport","ExportFormat","exportFormat","DailyRunTime","exportJobStartTime","GlobalRelaySettings","CustomerType","globalRelayCustomerType","SmtpUsername","globalRelaySmtpUsername","SmtpPassword","globalRelaySmtpPassword","EmailAddress","globalRelayEmailAddress","exportFormatOptions","globalRelaySettings","globalRelayEmail","dropdownHelpText","MESSAGE_EXPORT","getJobDetails","DatabaseSettings","SqlSettings","MaxIdleConns","maxIdleConns","MaxOpenConns","maxOpenConns","Trace","trace","QueryTimeout","queryTimeout","ConnMaxLifetimeMilliseconds","parseIntNonNegative","connMaxLifetimeMilliseconds","MinimumHashtagLength","minimumHashtagLength","driverName","DriverName","dataSource","DataSource","recycleDbButton","featureName","reloadConfiguration","ElasticsearchSettings","doTestConfig","handleSettingChanged","ConnectionUrl","connectionUrl","SkipTLSVerification","skipTLSVerification","Username","Password","Sniff","sniff","EnableIndexing","enableIndexing","EnableSearching","enableSearching","EnableAutocomplete","enableAutocomplete","configTested","canPurgeAndIndex","getExtraInfo","percent","progress","ELASTICSEARCH_POST_INDEXING","ClusterTable","versionMismatch","statusGreen","configMismatch","configHash","singleItem","clusterInfos","config_hash","statusYellow","hostname","ipaddress","clusterCell","clusterTable","ClusterTableContainer","load","ClusterSettings","overrideHandleChange","ClusterName","OverrideHostname","UseIpAddress","UseExperimentalGossip","GossipPort","StreamingPort","showWarning","licenseEnabled","Cluster","configLoadedFromCluster","clusterId","clusterTableContainer","CustomTermsOfServiceSettings","SupportSettings","CustomTermsOfServiceEnabled","termsEnabled","CustomTermsOfServiceReAcceptancePeriod","reAcceptancePeriod","DEFAULT_TERMS_OF_SERVICE_RE_ACCEPTANCE_PERIOD","receivedTermsText","termsText","createTermsOfService","handleAPIError","loadingTermsText","res","getTermsOfService","CustomTermsOfService","handleTermsEnabledChange","handleTermsTextChange","MAX_TERMS_OF_SERVICE_TEXT_LENGTH","handleReAcceptancePeriodChange","AdminDownload","inputTxt","macInput","filesMac","winInput","filesWin","alert","upFile","loadProgress","percentmac","showTxtmac","file_infos","percentwin","showTxtwin","formData","FormData","append","request","method","onUploadProgress","progressEvent","lengthComputable","onChangeInput","onChangeMac","onUpfileMac","onChangeWin","onUpfileWin","SECTION_NONE","SECTION_TLS","SECTION_STARTTLS","CONNECTION_SECURITY_HELP_TEXT_EMAIL","CONNECTION_SECURITY_HELP_TEXT_LDAP","CONNECTION_SECURITY_HELP_TEXT_WEBSERVER","WEBSERVER_MODE_HELP_TEXT","LOG_LEVEL_OPTIONS","display_name_default","FILE_STORAGE_DRIVER_LOCAL","FILE_STORAGE_DRIVER_S3","MEBIBYTE","pow","MINIMUM_IDLE_TIMEOUT","it","isnt","enterpriseReady","both","funcs","either","stateMatches","stateEquals","stateIsTrue","stateIsFalse","configIsTrue","configIsFalse","licensed","licensedForFeature","feature","about","sectionTitle","sectionTitleDefault","title_default","searchableStrings","reporting","system_analytics","team_statistics","server_logs","ServerLogs","user_management","system_users","group_detail","team_detail","channel_detail","ChannelSettings","systemScheme","teamSchemeDetail","teamScheme","environment","web_server","DefinitionConstants","recycleDatabaseConnections","database","elasticsearch","ElasticSearchSettings","storage","configVal","displayVal","image_proxy","smtp","push_notification_server","PushNotificationsSettings","high_availability","rate_limiting","logging","boldedLogLevel","previousVal","session_lengths","metrics","developer","site","customization","MAX_SITENAME_LENGTH","MAX_CUSTOM_BRAND_TEXT_LENGTH","localization","users_and_teams","TEAMMATE_NAME_DISPLAY","SHOW_USERNAME","SHOW_NICKNAME_FULLNAME","SHOW_FULLNAME","notifications","announcement_banner","emoji","posts","file_sharing_downloads","public_links","authentication","signup","SendEmailNotifications","mfa","ldap","LDAP_SYNC","ldapUsers","deleteCount","updateCount","linkedLdapGroupsCount","totalLdapGroupsCount","groupDeleteCount","groupMemberDeleteCount","groupMemberAddCount","ldap_users_count","delete_count","update_count","ldap_groups_count","total_ldap_groups_count","group_delete_count","group_member_delete_count","group_member_add_count","saml","siteUrl","SiteURL","addSlashIfNeeded","gitlab","GitLabSettings","UserApiEndpoint","Url","oauth","oauthType","GITLAB_SERVICE","Office365Settings","OFFICE365_SERVICE","GoogleSettings","GOOGLE_SERVICE","plugin_management","custom","integrations","integration_management","bot_accounts","gif","cors","compliance","data_retention","message_export","custom_terms_of_service","experimental","experimental_features","extractTextsFromSection","section","texts","searchableString","adminDefinitionsToUrlsAndTexts","adminDefinition","generateIndex","idx","FlexSearch","mappingSectionsToTexts","AdminDefinition","AdminSidebarCategory","sectionClass","parentLink","clonedChildren","Children","child","cloneElement","MenuItemBlockableLinkImpl","MenuItemBlockableLink","menuItem","AdminNavbarDropdown","navigationBlocked","GlobalActions","context","teamToRender","switchTeams","teamsArray","ABOUT","AboutBuildModal","appTitle","handleLogout","getMyTeams","SidebarHeader","profilePicture","AdminSidebarHeader","AdminSidebarSection","subsection","getLink","sidebarItem","Highlight","markInstance","unmark","ref","Mark","accuracy","leading","trailing","redrawHighlight","AdminSidebar","contextTypes","sections","onFilterChange","query","validSection","pathname","visibleSections","currentSiteName","isVisible","definition","sidebarSections","sectionIndex","sidebarItems","itemIndex","moreSidebarItems","renderPluginsMenu","customPlugins","nameCompare","searchRef","updateTitle","perfectScrollbar","suppressScrollX","filterClearTooltip","handleClearFilter","renderRootMenu","buildEnterpriseReady","BuildEnterpriseReady","pure","AdminConsole","extraProps","schemas","schemaRoutes","defaultUrl","mainRolesLoaded","isCurrentUserSystemAdmin","discardChangesModal","renderRoutes","generalConfig","getGeneralConfig","withRouter"],"mappings":"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AK,EAAE,OADX;AAEIyR,cAAY,EAAE,OAFlB;AAGIowD,sBAAoB,EAAE;AAH1B,CAD6B,EAM7B;AACI7hE,OAAK,EAAE,MADX;AAEIyR,cAAY,EAAE,MAFlB;AAGIowD,sBAAoB,EAAE;AAH1B,CAN6B,EAW7B;AACI7hE,OAAK,EAAE,OADX;AAEIyR,cAAY,EAAE,OAFlB;AAGIowD,sBAAoB,EAAE;AAH1B,CAX6B,CAA1B,C;;AC1JP;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAMC,yBAAyB,GAAG,OAAlC;AACA,MAAMC,sBAAsB,GAAG,UAA/B;AACA,MAAMC,QAAQ,GAAG7gD,IAAI,CAAC8gD,GAAL,CAAS,IAAT,EAAe,CAAf,CAAjB;AACA,MAAMC,oBAAoB,GAAG,CAA7B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAMC,EAAE,GAAG;AACdC,MAAI,EAAGxxD,IAAD,IAAU,CAAClX,MAAD,EAAS+B,KAAT,EAAgB+rB,OAAhB,EAAyB66C,eAAzB,KAA6C,CAACzxD,IAAI,CAAClX,MAAD,EAAS+B,KAAT,EAAgB+rB,OAAhB,EAAyB66C,eAAzB,CADpD;AAEdC,MAAI,EAAE,CAAC,GAAGC,KAAJ,KAAc,CAAC7oE,MAAD,EAAS+B,K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","file":"6.bef2c474d43211939263.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport * as AdminActions from 'mattermost-redux/actions/admin';\r\nimport * as UserActions from 'mattermost-redux/actions/users';\r\nimport * as TeamActions from 'mattermost-redux/actions/teams';\r\nimport {Client4} from 'mattermost-redux/client';\r\nimport {bindClientFunc} from 'mattermost-redux/actions/helpers';\r\n\r\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\r\nimport {getOnNavigationConfirmed} from 'selectors/views/admin';\r\nimport store from 'stores/redux_store.jsx';\r\nimport {ActionTypes} from 'utils/constants.jsx';\r\n\r\nconst dispatch = store.dispatch;\r\nconst getState = store.getState;\r\n\r\nexport async function saveConfig(config, success, error) {\r\n    const {data, error: err} = await AdminActions.updateConfig(config)(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function reloadConfig(success, error) {\r\n    const {data, error: err} = await dispatch(AdminActions.reloadConfig());\r\n    if (data && success) {\r\n        dispatch(AdminActions.getConfig());\r\n        dispatch(AdminActions.getEnvironmentConfig());\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function adminResetMfa(userId, success, error) {\r\n    const {data, error: err} = await UserActions.updateUserMfa(userId, false)(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function getClusterStatus(success, error) {\r\n    const {data, error: err} = await AdminActions.getClusterStatus()(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function ldapTest(success, error) {\r\n    const {data, error: err} = await AdminActions.testLdap()(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function invalidateAllCaches(success, error) {\r\n    const {data, error: err} = await AdminActions.invalidateCaches()(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function recycleDatabaseConnection(success, error) {\r\n    const {data, error: err} = await AdminActions.recycleDatabase()(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function adminResetPassword(userId, currentPassword, password, success, error) {\r\n    const {data, error: err} = await UserActions.updateUserPassword(userId, currentPassword, password)(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function adminResetEmail(user, success, error) {\r\n    const {data, error: err} = await UserActions.patchUser(user)(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function samlCertificateStatus(success, error) {\r\n    const {data, error: err} = await AdminActions.getSamlCertificateStatus()(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport function getOAuthAppInfo(clientId) {\r\n    return bindClientFunc({\r\n        clientFunc: Client4.getOAuthAppInfo,\r\n        params: [clientId],\r\n    });\r\n}\r\n\r\nexport function allowOAuth2({responseType, clientId, redirectUri, state, scope}) {\r\n    return bindClientFunc({\r\n        clientFunc: Client4.authorizeOAuthApp,\r\n        params: [responseType, clientId, redirectUri, state, scope],\r\n    });\r\n}\r\n\r\nexport async function emailToLdap(loginId, password, token, ldapId, ldapPassword, success, error) {\r\n    const {data, error: err} = await UserActions.switchEmailToLdap(loginId, password, ldapId, ldapPassword, token)(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function emailToOAuth(loginId, password, token, newType, success, error) {\r\n    const {data, error: err} = await UserActions.switchEmailToOAuth(newType, loginId, password, token)(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function oauthToEmail(currentService, email, password, success, error) {\r\n    const {data, error: err} = await UserActions.switchOAuthToEmail(currentService, email, password)(dispatch, getState);\r\n    if (data) {\r\n        if (data.follow_link) {\r\n            emitUserLoggedOutEvent(data.follow_link);\r\n        }\r\n        if (success) {\r\n            success(data);\r\n        }\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function uploadBrandImage(brandImage, success, error) {\r\n    const {data, error: err} = await AdminActions.uploadBrandImage(brandImage)(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function uploadLicenseFile(file, success, error) {\r\n    const {data, error: err} = await AdminActions.uploadLicense(file)(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function removeLicenseFile(success, error) {\r\n    const {data, error: err} = await AdminActions.removeLicense()(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function uploadPublicSamlCertificate(file, success, error) {\r\n    const {data, error: err} = await AdminActions.uploadPublicSamlCertificate(file)(dispatch, getState);\r\n    if (data && success) {\r\n        success('saml-public.crt');\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function uploadPrivateSamlCertificate(file, success, error) {\r\n    const {data, error: err} = await AdminActions.uploadPrivateSamlCertificate(file)(dispatch, getState);\r\n    if (data && success) {\r\n        success('saml-private.key');\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function uploadIdpSamlCertificate(file, success, error) {\r\n    const {data, error: err} = await AdminActions.uploadIdpSamlCertificate(file)(dispatch, getState);\r\n    if (data && success) {\r\n        success('saml-idp.crt');\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function removePublicSamlCertificate(success, error) {\r\n    const {data, error: err} = await AdminActions.removePublicSamlCertificate()(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function removePrivateSamlCertificate(success, error) {\r\n    const {data, error: err} = await AdminActions.removePrivateSamlCertificate()(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function removeIdpSamlCertificate(success, error) {\r\n    const {data, error: err} = await AdminActions.removeIdpSamlCertificate()(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function getStandardAnalytics(teamId) {\r\n    await AdminActions.getStandardAnalytics(teamId)(dispatch, getState);\r\n}\r\n\r\nexport async function getAdvancedAnalytics(teamId) {\r\n    await AdminActions.getAdvancedAnalytics(teamId)(dispatch, getState);\r\n}\r\n\r\nexport async function getPostsPerDayAnalytics(teamId) {\r\n    await AdminActions.getPostsPerDayAnalytics(teamId)(dispatch, getState);\r\n}\r\n\r\nexport async function getUsersPerDayAnalytics(teamId) {\r\n    await AdminActions.getUsersPerDayAnalytics(teamId)(dispatch, getState);\r\n}\r\n\r\nexport async function elasticsearchTest(config, success, error) {\r\n    const {data, error: err} = await AdminActions.testElasticsearch(config)(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function testS3Connection(success, error) {\r\n    const {data, error: err} = await AdminActions.testS3Connection()(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function elasticsearchPurgeIndexes(success, error) {\r\n    const {data, error: err} = await AdminActions.purgeElasticsearchIndexes()(dispatch, getState);\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport function setNavigationBlocked(blocked) {\r\n    return {\r\n        type: ActionTypes.SET_NAVIGATION_BLOCKED,\r\n        blocked,\r\n    };\r\n}\r\n\r\nexport function deferNavigation(onNavigationConfirmed) {\r\n    return {\r\n        type: ActionTypes.DEFER_NAVIGATION,\r\n        onNavigationConfirmed,\r\n    };\r\n}\r\n\r\nexport function cancelNavigation() {\r\n    return {\r\n        type: ActionTypes.CANCEL_NAVIGATION,\r\n    };\r\n}\r\n\r\nexport function confirmNavigation() {\r\n    // have to rename these because of lint no-shadow\r\n    return (thunkDispatch, thunkGetState) => {\r\n        const callback = getOnNavigationConfirmed(thunkGetState());\r\n\r\n        if (callback) {\r\n            callback();\r\n        }\r\n\r\n        thunkDispatch({\r\n            type: ActionTypes.CONFIRM_NAVIGATION,\r\n        });\r\n    };\r\n}\r\n\r\nexport async function invalidateAllEmailInvites(success, error) {\r\n    const {data, error: err} = await dispatch(TeamActions.invalidateAllEmailInvites());\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n\r\nexport async function testSmtp(success, error) {\r\n    const {data, error: err} = await dispatch(AdminActions.testEmail());\r\n    if (data && success) {\r\n        success(data);\r\n    } else if (err && error) {\r\n        error({id: err.server_error_id, ...err});\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default class NextIcon extends React.PureComponent {\r\n    static propTypes = {\r\n        additionalClassName: PropTypes.string,\r\n    };\r\n\r\n    static defaultProps = {\r\n        additionalClassName: null,\r\n    };\r\n\r\n    render() {\r\n        const className = 'fa fa-1x fa-angle-right' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\r\n        return (\r\n            <FormattedMessage\r\n                id='generic_icons.next'\r\n                defaultMessage='Next Icon'\r\n            >\r\n                {(title) => (\r\n                    <i\r\n                        className={className}\r\n                        title={title}\r\n                    />\r\n                )}\r\n            </FormattedMessage>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nexport function getNavigationBlocked(state) {\r\n    return state.views.admin.navigationBlock.blocked;\r\n}\r\n\r\nexport function showNavigationPrompt(state) {\r\n    return state.views.admin.navigationBlock.showNavigationPrompt;\r\n}\r\n\r\nexport function getOnNavigationConfirmed(state) {\r\n    return state.views.admin.navigationBlock.onNavigationConfirmed;\r\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLogs = getLogs;\nexports.getAudits = getAudits;\nexports.getConfig = getConfig;\nexports.getLdapGroups = getLdapGroups;\nexports.getLdapGroupsCount = getLdapGroupsCount;\nexports.getEnvironmentConfig = getEnvironmentConfig;\nexports.getComplianceReports = getComplianceReports;\nexports.getClusterInfo = getClusterInfo;\nexports.getUserAccessTokens = getUserAccessTokens;\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nfunction getLogs(state) {\n  return state.entities.admin.logs;\n}\n\nfunction getAudits(state) {\n  return state.entities.admin.audits;\n}\n\nfunction getConfig(state) {\n  return state.entities.admin.config;\n}\n\nfunction getLdapGroups(state) {\n  return state.entities.admin.ldapGroups;\n}\n\nfunction getLdapGroupsCount(state) {\n  return state.entities.admin.ldapGroupsCount;\n}\n\nfunction getEnvironmentConfig(state) {\n  return state.entities.admin.environmentConfig;\n}\n\nfunction getComplianceReports(state) {\n  return state.entities.admin.complianceReports;\n}\n\nfunction getClusterInfo(state) {\n  return state.entities.admin.clusterInfo;\n}\n\nfunction getUserAccessTokens(state) {\n  return state.entities.admin.userAccessTokens;\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class PreviousIcon extends React.PureComponent {\r\n    static propTypes = {\r\n        additionalClassName: PropTypes.string,\r\n    };\r\n\r\n    static defaultProps = {\r\n        additionalClassName: null,\r\n    };\r\n\r\n    render() {\r\n        const className = 'fa fa-1x fa-angle-left' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\r\n        return (\r\n            <FormattedMessage\r\n                id='generic_icons.previous'\r\n                defaultMessage='Previous Icon'\r\n            >\r\n                {(title) => (\r\n                    <i\r\n                        className={className}\r\n                        title={title}\r\n                    />\r\n                )}\r\n            </FormattedMessage>\r\n        );\r\n    }\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBotAccounts = getBotAccounts;\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nfunction getBotAccounts(state) {\n  return state.entities.bots.accounts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBot = createBot;\nexports.patchBot = patchBot;\nexports.loadBot = loadBot;\nexports.loadBots = loadBots;\nexports.disableBot = disableBot;\nexports.enableBot = enableBot;\nexports.assignBot = assignBot;\n\nvar _client = require(\"../client\");\n\nvar _action_types = require(\"../action_types\");\n\nvar _helpers = require(\"./helpers\");\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nvar BOTS_PER_PAGE_DEFAULT = 20;\n\nfunction createBot(bot) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.createBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [bot]\n  });\n}\n\nfunction patchBot(botUserId, botPatch) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.patchBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId, botPatch]\n  });\n}\n\nfunction loadBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction loadBots() {\n  var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BOTS_PER_PAGE_DEFAULT;\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getBotsIncludeDeleted,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNTS,\n    params: [page, perPage]\n  });\n}\n\nfunction disableBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.disableBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction enableBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.enableBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction assignBot(botUserId, newOwnerId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.assignBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId, newOwnerId]\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getScheme = getScheme;\nexports.getSchemes = getSchemes;\nexports.createScheme = createScheme;\nexports.deleteScheme = deleteScheme;\nexports.patchScheme = patchScheme;\nexports.getSchemeTeams = getSchemeTeams;\nexports.getSchemeChannels = getSchemeChannels;\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _client = require(\"../client\");\n\nvar _action_types = require(\"../action_types\");\n\nvar _constants = require(\"../constants\");\n\nvar _reduxBatchedActions = require(\"redux-batched-actions\");\n\nvar _helpers = require(\"./helpers\");\n\nvar _errors = require(\"./errors\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction getScheme(schemeId\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getScheme,\n    onRequest: _action_types.SchemeTypes.GET_SCHEME_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.RECEIVED_SCHEME, _action_types.SchemeTypes.GET_SCHEME_SUCCESS],\n    onFailure: _action_types.SchemeTypes.GET_SCHEME_FAILURE,\n    params: [schemeId]\n  });\n}\n\nfunction getSchemes(scope\n/*: SchemeScope*/\n)\n/*: ActionFunc*/\n{\n  var page\n  /*: number*/\n  = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var perPage\n  /*: number*/\n  = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getSchemes,\n    onRequest: _action_types.SchemeTypes.GET_SCHEMES_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.RECEIVED_SCHEMES, _action_types.SchemeTypes.GET_SCHEMES_SUCCESS],\n    onFailure: _action_types.SchemeTypes.GET_SCHEMES_FAILURE,\n    params: [scope, page, perPage]\n  });\n}\n\nfunction createScheme(scheme\n/*: Scheme*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.createScheme,\n    onRequest: _action_types.SchemeTypes.CREATE_SCHEME_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.CREATED_SCHEME, _action_types.SchemeTypes.CREATE_SCHEME_SUCCESS],\n    onFailure: _action_types.SchemeTypes.CREATE_SCHEME_FAILURE,\n    params: [scheme]\n  });\n}\n\nfunction deleteScheme(schemeId\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: _action_types.SchemeTypes.DELETE_SCHEME_REQUEST,\n                  data: null\n                }, getState);\n                data = null;\n                _context.prev = 2;\n                _context.next = 5;\n                return _client.Client4.deleteScheme(schemeId);\n\n              case 5:\n                data = _context.sent;\n                _context.next = 13;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                (0, _helpers.forceLogoutIfNecessary)(_context.t0, dispatch, getState);\n                dispatch((0, _reduxBatchedActions.batchActions)([{\n                  type: _action_types.SchemeTypes.DELETE_SCHEME_FAILURE,\n                  error: _context.t0\n                }, (0, _errors.logError)(_context.t0)]), getState);\n                return _context.abrupt(\"return\", {\n                  error: _context.t0\n                });\n\n              case 13:\n                dispatch({\n                  type: _action_types.SchemeTypes.DELETED_SCHEME,\n                  data: {\n                    schemeId: schemeId\n                  }\n                }, getState);\n                dispatch({\n                  type: _action_types.SchemeTypes.DELETE_SCHEME_SUCCESS,\n                  data: null\n                }, getState);\n                return _context.abrupt(\"return\", {\n                  data: data\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 8]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\n\nfunction patchScheme(schemeId\n/*: string*/\n, scheme\n/*: SchemePatch*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.patchScheme,\n    onRequest: _action_types.SchemeTypes.PATCH_SCHEME_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.PATCHED_SCHEME, _action_types.SchemeTypes.PATCH_SCHEME_SUCCESS],\n    onFailure: _action_types.SchemeTypes.PATCH_SCHEME_FAILURE,\n    params: [schemeId, scheme]\n  });\n}\n\nfunction getSchemeTeams(schemeId\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  var page\n  /*: number*/\n  = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var perPage\n  /*: number*/\n  = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getSchemeTeams,\n    onRequest: _action_types.SchemeTypes.GET_SCHEME_TEAMS_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.RECEIVED_SCHEME_TEAMS, _action_types.SchemeTypes.GET_SCHEME_TEAMS_SUCCESS],\n    onFailure: _action_types.SchemeTypes.GET_SCHEME_TEAMS_FAILURE,\n    params: [schemeId, page, perPage]\n  });\n}\n\nfunction getSchemeChannels(schemeId\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  var page\n  /*: number*/\n  = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var perPage\n  /*: number*/\n  = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getSchemeChannels,\n    onRequest: _action_types.SchemeTypes.GET_SCHEME_CHANNELS_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.RECEIVED_SCHEME_CHANNELS, _action_types.SchemeTypes.GET_SCHEME_CHANNELS_SUCCESS],\n    onFailure: _action_types.SchemeTypes.GET_SCHEME_CHANNELS_FAILURE,\n    params: [schemeId, page, perPage]\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSchemes = getSchemes;\nexports.getScheme = getScheme;\nexports.makeGetSchemeChannels = makeGetSchemeChannels;\nexports.makeGetSchemeTeams = makeGetSchemeTeams;\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es7.object.entries\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _reselect = require(\"reselect\");\n\nvar _channels = require(\"./channels\");\n\nvar _teams = require(\"./teams\");\n\nvar _schemes = require(\"../../constants/schemes\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction getSchemes(state\n/*: GlobalState*/\n)\n/*: { [string]: Scheme }*/\n{\n  return state.entities.schemes.schemes;\n}\n\nfunction getScheme(state\n/*: GlobalState*/\n, id\n/*: string*/\n)\n/*: Scheme*/\n{\n  var schemes = getSchemes(state);\n  return schemes[id];\n}\n\nfunction makeGetSchemeChannels() {\n  return ((0, _reselect.createSelector)(_channels.getAllChannels, function (state, props\n  /*: {schemeId: string}*/\n  ) {\n    return getScheme(state, props.schemeId);\n  }, function (allChannels, scheme) {\n    if (!scheme) {\n      return [];\n    }\n\n    if (scheme.scope === _schemes.ScopeTypes.TEAM) {\n      var msg = \"Not implemented: scheme '\".concat(scheme.id, \"' is team-scope but 'getSchemeChannels' only accepts channel-scoped schemes.\");\n      console.log(msg); // eslint-disable-line no-console\n\n      return [];\n    }\n\n    var schemeChannels\n    /*: Array<Channel>*/\n    = []; // $FlowFixMe\n\n    Object.entries(allChannels).forEach(function (item\n    /*: [string, Channel]*/\n    ) {\n      var _item = _slicedToArray(item, 2),\n          channel\n      /*: Channel*/\n      = _item[1];\n\n      if (channel.scheme_id === scheme.id) {\n        schemeChannels.push(channel);\n      }\n    });\n    return schemeChannels;\n  })\n  /*: (GlobalState, {schemeId: string}) => Array<Channel>*/\n  );\n}\n\nfunction makeGetSchemeTeams() {\n  return ((0, _reselect.createSelector)(_teams.getTeams, function (state, props\n  /*: {schemeId: string}*/\n  ) {\n    return getScheme(state, props.schemeId);\n  }, function (allTeams, scheme) {\n    if (!scheme) {\n      return [];\n    }\n\n    if (scheme.scope === _schemes.ScopeTypes.CHANNEL) {\n      var msg = \"Error: scheme '\".concat(scheme.id, \"' is channel-scoped but 'getSchemeChannels' only accepts team-scoped schemes.\");\n      console.log(msg); // eslint-disable-line no-console\n\n      return [];\n    }\n\n    var schemeTeams\n    /*: Array<Team>*/\n    = []; // $FlowFixMe\n\n    Object.entries(allTeams).forEach(function (item\n    /*: [string, Team]*/\n    ) {\n      var _item2 = _slicedToArray(item, 2),\n          team\n      /*: Team*/\n      = _item2[1];\n\n      if (team.scheme_id === scheme.id) {\n        schemeTeams.push(team);\n      }\n    });\n    return schemeTeams;\n  })\n  /*: (GlobalState, {schemeId: string}) => Array<Team>*/\n  );\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {defineMessages, FormattedDate, FormattedMessage, FormattedTime, injectIntl, intlShape} from 'react-intl';\r\n\r\nimport {getDirectTeammate, isSystemAdmin, toTitleCase} from 'utils/utils.jsx';\r\nimport {t} from 'utils/i18n';\r\n\r\nconst holders = defineMessages({\r\n    sessionRevoked: {\r\n        id: t('audit_table.sessionRevoked'),\r\n        defaultMessage: 'The session with id {sessionId} was revoked',\r\n    },\r\n    channelCreated: {\r\n        id: t('audit_table.channelCreated'),\r\n        defaultMessage: 'Created the {channelName} channel',\r\n    },\r\n    establishedDM: {\r\n        id: t('audit_table.establishedDM'),\r\n        defaultMessage: 'Established a direct message channel with {username}',\r\n    },\r\n    nameUpdated: {\r\n        id: t('audit_table.nameUpdated'),\r\n        defaultMessage: 'Updated the {channelName} channel name',\r\n    },\r\n    headerUpdated: {\r\n        id: t('audit_table.headerUpdated'),\r\n        defaultMessage: 'Updated the {channelName} channel header',\r\n    },\r\n    channelDeleted: {\r\n        id: t('audit_table.channelDeleted'),\r\n        defaultMessage: 'Archived the channel with the URL {url}',\r\n    },\r\n    userAdded: {\r\n        id: t('audit_table.userAdded'),\r\n        defaultMessage: 'Added {username} to the {channelName} channel',\r\n    },\r\n    userRemoved: {\r\n        id: t('audit_table.userRemoved'),\r\n        defaultMessage: 'Removed {username} to the {channelName} channel',\r\n    },\r\n    attemptedRegisterApp: {\r\n        id: t('audit_table.attemptedRegisterApp'),\r\n        defaultMessage: 'Attempted to register a new OAuth Application with ID {id}',\r\n    },\r\n    attemptedAllowOAuthAccess: {\r\n        id: t('audit_table.attemptedAllowOAuthAccess'),\r\n        defaultMessage: 'Attempted to allow a new OAuth service access',\r\n    },\r\n    successfullOAuthAccess: {\r\n        id: t('audit_table.successfullOAuthAccess'),\r\n        defaultMessage: 'Successfully gave a new OAuth service access',\r\n    },\r\n    failedOAuthAccess: {\r\n        id: t('audit_table.failedOAuthAccess'),\r\n        defaultMessage: 'Failed to allow a new OAuth service access - the redirect URI did not match the previously registered callback',\r\n    },\r\n    attemptedOAuthToken: {\r\n        id: t('audit_table.attemptedOAuthToken'),\r\n        defaultMessage: 'Attempted to get an OAuth access token',\r\n    },\r\n    successfullOAuthToken: {\r\n        id: t('audit_table.successfullOAuthToken'),\r\n        defaultMessage: 'Successfully added a new OAuth service',\r\n    },\r\n    oauthTokenFailed: {\r\n        id: t('audit_table.oauthTokenFailed'),\r\n        defaultMessage: 'Failed to get an OAuth access token - {token}',\r\n    },\r\n    attemptedLogin: {\r\n        id: t('audit_table.attemptedLogin'),\r\n        defaultMessage: 'Attempted to login',\r\n    },\r\n    authenticated: {\r\n        id: t('audit_table.authenticated'),\r\n        defauleMessage: 'Successfully authenticated',\r\n    },\r\n    successfullLogin: {\r\n        id: t('audit_table.successfullLogin'),\r\n        defaultMessage: 'Successfully logged in',\r\n    },\r\n    failedLogin: {\r\n        id: t('audit_table.failedLogin'),\r\n        defaultMessage: 'FAILED login attempt',\r\n    },\r\n    updatePicture: {\r\n        id: t('audit_table.updatePicture'),\r\n        defaultMessage: 'Updated your profile picture',\r\n    },\r\n    updateGeneral: {\r\n        id: t('audit_table.updateGeneral'),\r\n        defaultMessage: 'Updated the general settings of your account',\r\n    },\r\n    attemptedPassword: {\r\n        id: t('audit_table.attemptedPassword'),\r\n        defaultMessage: 'Attempted to change password',\r\n    },\r\n    successfullPassword: {\r\n        id: t('audit_table.successfullPassword'),\r\n        defaultMessage: 'Successfully changed password',\r\n    },\r\n    failedPassword: {\r\n        id: t('audit_table.failedPassword'),\r\n        defaultMessage: 'Failed to change password - tried to update user password who was logged in through OAuth',\r\n    },\r\n    updatedRol: {\r\n        id: t('audit_table.updatedRol'),\r\n        defaultMessage: 'Updated user role(s) to ',\r\n    },\r\n    member: {\r\n        id: t('audit_table.member'),\r\n        defaultMessage: 'member',\r\n    },\r\n    accountActive: {\r\n        id: t('audit_table.accountActive'),\r\n        defaultMessage: 'Account activated',\r\n    },\r\n    accountInactive: {\r\n        id: t('audit_table.accountInactive'),\r\n        defaultMessage: 'Account deactivated',\r\n    },\r\n    by: {\r\n        id: t('audit_table.by'),\r\n        defaultMessage: ' by {username}',\r\n    },\r\n    byAdmin: {\r\n        id: t('audit_table.byAdmin'),\r\n        defaultMessage: ' by an admin',\r\n    },\r\n    sentEmail: {\r\n        id: t('audit_table.sentEmail'),\r\n        defaultMessage: 'Sent an email to {email} to reset your password',\r\n    },\r\n    attemptedReset: {\r\n        id: t('audit_table.attemptedReset'),\r\n        defaultMessage: 'Attempted to reset password',\r\n    },\r\n    successfullReset: {\r\n        id: t('audit_table.successfullReset'),\r\n        defaultMessage: 'Successfully reset password',\r\n    },\r\n    updateGlobalNotifications: {\r\n        id: t('audit_table.updateGlobalNotifications'),\r\n        defaultMessage: 'Updated your global notification settings',\r\n    },\r\n    attemptedWebhookCreate: {\r\n        id: t('audit_table.attemptedWebhookCreate'),\r\n        defaultMessage: 'Attempted to create a webhook',\r\n    },\r\n    succcessfullWebhookCreate: {\r\n        id: t('audit_table.successfullWebhookCreate'),\r\n        defaultMessage: 'Successfully created a webhook',\r\n    },\r\n    failedWebhookCreate: {\r\n        id: t('audit_table.failedWebhookCreate'),\r\n        defaultMessage: 'Failed to create a webhook - bad channel permissions',\r\n    },\r\n    attemptedWebhookDelete: {\r\n        id: t('audit_table.attemptedWebhookDelete'),\r\n        defaultMessage: 'Attempted to delete a webhook',\r\n    },\r\n    successfullWebhookDelete: {\r\n        id: t('audit_table.successfullWebhookDelete'),\r\n        defaultMessage: 'Successfully deleted a webhook',\r\n    },\r\n    failedWebhookDelete: {\r\n        id: t('audit_table.failedWebhookDelete'),\r\n        defaultMessage: 'Failed to delete a webhook - inappropriate conditions',\r\n    },\r\n    logout: {\r\n        id: t('audit_table.logout'),\r\n        defaultMessage: 'Logged out of your account',\r\n    },\r\n    verified: {\r\n        id: t('audit_table.verified'),\r\n        defaultMessage: 'Successfully verified your email address',\r\n    },\r\n    revokedAll: {\r\n        id: t('audit_table.revokedAll'),\r\n        defaultMessage: 'Revoked all current sessions for the team',\r\n    },\r\n    loginAttempt: {\r\n        id: t('audit_table.loginAttempt'),\r\n        defaultMessage: ' (Login attempt)',\r\n    },\r\n    loginFailure: {\r\n        id: t('audit_table.loginFailure'),\r\n        defaultMessage: ' (Login failure)',\r\n    },\r\n    attemptedLicenseAdd: {\r\n        id: t('audit_table.attemptedLicenseAdd'),\r\n        defaultMessage: 'Attempted to add new license',\r\n    },\r\n    successfullLicenseAdd: {\r\n        id: t('audit_table.successfullLicenseAdd'),\r\n        defaultMessage: 'Successfully added new license',\r\n    },\r\n    failedExpiredLicenseAdd: {\r\n        id: t('audit_table.failedExpiredLicenseAdd'),\r\n        defaultMessage: 'Failed to add a new license as it has either expired or not yet been started',\r\n    },\r\n    failedInvalidLicenseAdd: {\r\n        id: t('audit_table.failedInvalidLicenseAdd'),\r\n        defaultMessage: 'Failed to add an invalid license',\r\n    },\r\n    licenseRemoved: {\r\n        id: t('audit_table.licenseRemoved'),\r\n        defaultMessage: 'Successfully removed a license',\r\n    },\r\n});\r\n\r\nfunction AuditTable(props) {\r\n    var accessList = [];\r\n\r\n    const {formatMessage} = props.intl;\r\n    for (var i = 0; i < props.audits.length; i++) {\r\n        const audit = props.audits[i];\r\n        const auditInfo = formatAuditInfo(audit, formatMessage, props.currentUser, props.getByName, props.getUser);\r\n\r\n        let uContent;\r\n        if (props.showUserId) {\r\n            const profile = props.getUser(auditInfo.userId);\r\n            const data = profile ? profile.email : auditInfo.userId;\r\n            uContent = <td className='word-break--all'>{data}</td>;\r\n        }\r\n\r\n        let iContent;\r\n        if (props.showIp) {\r\n            iContent = <td className='whitespace--nowrap word-break--all'>{auditInfo.ip}</td>;\r\n        }\r\n\r\n        let sContent;\r\n        if (props.showSession) {\r\n            sContent = <td className='whitespace--nowrap word-break--all'>{auditInfo.sessionId}</td>;\r\n        }\r\n\r\n        let descStyle = '';\r\n        if (auditInfo.desc.toLowerCase().indexOf('fail') !== -1) {\r\n            descStyle = ' color--error';\r\n        }\r\n\r\n        accessList[i] = (\r\n            <tr key={audit.id}>\r\n                <td className='whitespace--nowrap word-break--all'>{auditInfo.timestamp}</td>\r\n                {uContent}\r\n                <td\r\n                    className={'word-break--all' + descStyle}\r\n                >\r\n                    {auditInfo.desc}\r\n                </td>\r\n                {iContent}\r\n                {sContent}\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    let userIdContent;\r\n    if (props.showUserId) {\r\n        userIdContent = (\r\n            <th>\r\n                <FormattedMessage\r\n                    id='audit_table.userId'\r\n                    defaultMessage='User ID'\r\n                />\r\n            </th>\r\n        );\r\n    }\r\n\r\n    let ipContent;\r\n    if (props.showIp) {\r\n        ipContent = (\r\n            <th>\r\n                <FormattedMessage\r\n                    id='audit_table.ip'\r\n                    defaultMessage='IP Address'\r\n                />\r\n            </th>\r\n        );\r\n    }\r\n\r\n    let sessionContent;\r\n    if (props.showSession) {\r\n        sessionContent = (\r\n            <th>\r\n                <FormattedMessage\r\n                    id='audit_table.session'\r\n                    defaultMessage='Session ID'\r\n                />\r\n            </th>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <table className='table'>\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        <FormattedMessage\r\n                            id='audit_table.timestamp'\r\n                            defaultMessage='Timestamp'\r\n                        />\r\n                    </th>\r\n                    {userIdContent}\r\n                    <th>\r\n                        <FormattedMessage\r\n                            id='audit_table.action'\r\n                            defaultMessage='Action'\r\n                        />\r\n                    </th>\r\n                    {ipContent}\r\n                    {sessionContent}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {accessList}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nAuditTable.propTypes = {\r\n    intl: intlShape.isRequired,\r\n    audits: PropTypes.array.isRequired,\r\n    showUserId: PropTypes.bool,\r\n    showIp: PropTypes.bool,\r\n    showSession: PropTypes.bool,\r\n    currentUser: PropTypes.object.isRequired,\r\n    getUser: PropTypes.func.isRequired,\r\n    getByName: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default injectIntl(AuditTable);\r\n\r\nexport function formatAuditInfo(audit, formatMessage, currentUser, getByName, getUser) {\r\n    const actionURL = audit.action.replace(/\\/api\\/v[1-9]/, '');\r\n    let auditDesc = '';\r\n\r\n    if (actionURL.indexOf('/channels') === 0) {\r\n        const channelInfo = audit.extra_info.split(' ');\r\n        const channelNameField = channelInfo[0].split('=');\r\n\r\n        let channelURL = '';\r\n        let channelObj;\r\n        let channelName = '';\r\n        if (channelNameField.indexOf('name') >= 0) {\r\n            channelURL = channelNameField[channelNameField.indexOf('name') + 1];\r\n            channelObj = getByName(channelURL);\r\n            if (channelObj) {\r\n                channelName = channelObj.display_name;\r\n            } else {\r\n                channelName = channelURL;\r\n            }\r\n        }\r\n\r\n        switch (actionURL) {\r\n        case '/channels/create':\r\n            auditDesc = formatMessage(holders.channelCreated, {channelName});\r\n            break;\r\n        case '/channels/create_direct':\r\n            auditDesc = formatMessage(holders.establishedDM, {username: getDirectTeammate(channelObj.id).username});\r\n            break;\r\n        case '/channels/update':\r\n            auditDesc = formatMessage(holders.nameUpdated, {channelName});\r\n            break;\r\n        case '/channels/update_desc': // support the old path\r\n        case '/channels/update_header':\r\n            auditDesc = formatMessage(holders.headerUpdated, {channelName});\r\n            break;\r\n        default: {\r\n            let userIdField = [];\r\n            let userId = '';\r\n            let username = '';\r\n\r\n            if (channelInfo[1]) {\r\n                userIdField = channelInfo[1].split('=');\r\n\r\n                if (userIdField.indexOf('user_id') >= 0) {\r\n                    userId = userIdField[userIdField.indexOf('user_id') + 1];\r\n                    var profile = getUser(userId);\r\n                    if (profile) {\r\n                        username = profile.username;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ((/\\/channels\\/[A-Za-z0-9]+\\/delete/).test(actionURL)) {\r\n                auditDesc = formatMessage(holders.channelDeleted, {url: channelURL});\r\n            } else if ((/\\/channels\\/[A-Za-z0-9]+\\/add/).test(actionURL)) {\r\n                auditDesc = formatMessage(holders.userAdded, {username, channelName});\r\n            } else if ((/\\/channels\\/[A-Za-z0-9]+\\/remove/).test(actionURL)) {\r\n                auditDesc = formatMessage(holders.userRemoved, {username, channelName});\r\n            }\r\n\r\n            break;\r\n        }\r\n        }\r\n    } else if (actionURL.indexOf('/oauth') === 0) {\r\n        const oauthInfo = audit.extra_info.split(' ');\r\n\r\n        switch (actionURL) {\r\n        case '/oauth/register': {\r\n            const clientIdField = oauthInfo[0].split('=');\r\n\r\n            if (clientIdField[0] === 'client_id') {\r\n                auditDesc = formatMessage(holders.attemptedRegisterApp, {id: clientIdField[1]});\r\n            }\r\n\r\n            break;\r\n        }\r\n        case '/oauth/allow':\r\n            if (oauthInfo[0] === 'attempt') {\r\n                auditDesc = formatMessage(holders.attemptedAllowOAuthAccess);\r\n            } else if (oauthInfo[0] === 'success') {\r\n                auditDesc = formatMessage(holders.successfullOAuthAccess);\r\n            } else if (oauthInfo[0] === 'fail - redirect_uri did not match registered callback') {\r\n                auditDesc = formatMessage(holders.failedOAuthAccess);\r\n            }\r\n\r\n            break;\r\n        case '/oauth/access_token':\r\n            if (oauthInfo[0] === 'attempt') {\r\n                auditDesc = formatMessage(holders.attemptedOAuthToken);\r\n            } else if (oauthInfo[0] === 'success') {\r\n                auditDesc = formatMessage(holders.successfullOAuthToken);\r\n            } else {\r\n                const oauthTokenFailure = oauthInfo[0].split('-');\r\n\r\n                if (oauthTokenFailure[0].trim() === 'fail' && oauthTokenFailure[1]) {\r\n                    auditDesc = formatMessage(oauthTokenFailure, {token: oauthTokenFailure[1].trim()});\r\n                }\r\n            }\r\n\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    } else if (actionURL.indexOf('/users') === 0) {\r\n        const userInfo = audit.extra_info.split(' ');\r\n\r\n        switch (actionURL) {\r\n        case '/users/login':\r\n            if (userInfo[0] === 'attempt') {\r\n                auditDesc = formatMessage(holders.attemptedLogin);\r\n            } else if (userInfo[0] === 'success') {\r\n                auditDesc = formatMessage(holders.successfullLogin);\r\n            } else if (userInfo[0] === 'authenticated') {\r\n                auditDesc = formatMessage(holders.authenticated);\r\n            } else if (userInfo[0]) {\r\n                auditDesc = formatMessage(holders.failedLogin);\r\n            }\r\n\r\n            break;\r\n        case '/users/revoke_session':\r\n            auditDesc = formatMessage(holders.sessionRevoked, {sessionId: userInfo[0].split('=')[1]});\r\n            break;\r\n        case '/users/newimage':\r\n            auditDesc = formatMessage(holders.updatePicture);\r\n            break;\r\n        case '/users/update':\r\n            auditDesc = formatMessage(holders.updateGeneral);\r\n            break;\r\n        case '/users/newpassword':\r\n            if (userInfo[0] === 'attempted') {\r\n                auditDesc = formatMessage(holders.attemptedPassword);\r\n            } else if (userInfo[0] === 'completed') {\r\n                auditDesc = formatMessage(holders.successfullPassword);\r\n            } else if (userInfo[0] === 'failed - tried to update user password who was logged in through oauth') {\r\n                auditDesc = formatMessage(holders.failedPassword);\r\n            }\r\n\r\n            break;\r\n        case '/users/update_roles': {\r\n            const userRoles = userInfo[0].split('=')[1];\r\n\r\n            auditDesc = formatMessage(holders.updatedRol);\r\n            if (userRoles.trim()) {\r\n                auditDesc += userRoles;\r\n            } else {\r\n                auditDesc += formatMessage(holders.member);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case '/users/update_active': {\r\n            const updateType = userInfo[0].split('=')[0];\r\n            const updateField = userInfo[0].split('=')[1];\r\n\r\n            /* Either describes account activation/deactivation or a revoked session as part of an account deactivation */\r\n            if (updateType === 'active') {\r\n                if (updateField === 'true') {\r\n                    auditDesc = formatMessage(holders.accountActive);\r\n                } else if (updateField === 'false') {\r\n                    auditDesc = formatMessage(holders.accountInactive);\r\n                }\r\n\r\n                const actingUserInfo = userInfo[1].split('=');\r\n                if (actingUserInfo[0] === 'session_user') {\r\n                    const actingUser = getUser(actingUserInfo[1]);\r\n                    const user = currentUser;\r\n                    if (user && actingUser && isSystemAdmin(user.roles)) {\r\n                        auditDesc += formatMessage(holders.by, {username: actingUser.username});\r\n                    } else if (user && actingUser) {\r\n                        auditDesc += formatMessage(holders.byAdmin);\r\n                    }\r\n                }\r\n            } else if (updateType === 'session_id') {\r\n                auditDesc = formatMessage(holders.sessionRevoked, {sessionId: updateField});\r\n            }\r\n\r\n            break;\r\n        }\r\n        case '/users/send_password_reset':\r\n            auditDesc = formatMessage(holders.sentEmail, {email: userInfo[0].split('=')[1]});\r\n            break;\r\n        case '/users/reset_password':\r\n            if (userInfo[0] === 'attempt') {\r\n                auditDesc = formatMessage(holders.attemptedReset);\r\n            } else if (userInfo[0] === 'success') {\r\n                auditDesc = formatMessage(holders.successfullReset);\r\n            }\r\n\r\n            break;\r\n        case '/users/update_notify':\r\n            auditDesc = formatMessage(holders.updateGlobalNotifications);\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    } else if (actionURL.indexOf('/hooks') === 0) {\r\n        const webhookInfo = audit.extra_info;\r\n\r\n        switch (actionURL) {\r\n        case '/hooks/incoming/create':\r\n            if (webhookInfo === 'attempt') {\r\n                auditDesc = formatMessage(holders.attemptedWebhookCreate);\r\n            } else if (webhookInfo === 'success') {\r\n                auditDesc = formatMessage(holders.succcessfullWebhookCreate);\r\n            } else if (webhookInfo === 'fail - bad channel permissions') {\r\n                auditDesc = formatMessage(holders.failedWebhookCreate);\r\n            }\r\n\r\n            break;\r\n        case '/hooks/incoming/delete':\r\n            if (webhookInfo === 'attempt') {\r\n                auditDesc = formatMessage(holders.attemptedWebhookDelete);\r\n            } else if (webhookInfo === 'success') {\r\n                auditDesc = formatMessage(holders.successfullWebhookDelete);\r\n            } else if (webhookInfo === 'fail - inappropriate conditions') {\r\n                auditDesc = formatMessage(holders.failedWebhookDelete);\r\n            }\r\n\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    } else if (actionURL.indexOf('/license') === 0) {\r\n        const licenseInfo = audit.extra_info;\r\n\r\n        switch (actionURL) {\r\n        case '/license/add':\r\n            if (licenseInfo === 'attempt') {\r\n                auditDesc = formatMessage(holders.attemptedLicenseAdd);\r\n            } else if (licenseInfo === 'success') {\r\n                auditDesc = formatMessage(holders.successfullLicenseAdd);\r\n            } else if (licenseInfo === 'failed - expired or non-started license') {\r\n                auditDesc = formatMessage(holders.failedExpiredLicenseAdd);\r\n            } else if (licenseInfo === 'failed - invalid license') {\r\n                auditDesc = formatMessage(holders.failedInvalidLicenseAdd);\r\n            }\r\n\r\n            break;\r\n        case '/license/remove':\r\n            auditDesc = formatMessage(holders.licenseRemoved);\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    } else if (actionURL.indexOf('/admin/download_compliance_report') === 0) {\r\n        auditDesc = toTitleCase(audit.extra_info);\r\n    } else {\r\n        switch (actionURL) {\r\n        case '/logout':\r\n            auditDesc = formatMessage(holders.logout);\r\n            break;\r\n        case '/verify_email':\r\n            auditDesc = formatMessage(holders.verified);\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    /* If all else fails... */\r\n    if (!auditDesc) {\r\n        /* Currently not called anywhere */\r\n        if (audit.extra_info.indexOf('revoked_all=') >= 0) {\r\n            auditDesc = formatMessage(holders.revokedAll);\r\n        } else {\r\n            let actionDesc = '';\r\n            if (actionURL && actionURL.lastIndexOf('/') !== -1) {\r\n                actionDesc = actionURL.substring(actionURL.lastIndexOf('/') + 1).replace('_', ' ');\r\n                actionDesc = toTitleCase(actionDesc);\r\n            }\r\n\r\n            let extraInfoDesc = '';\r\n            if (audit.extra_info) {\r\n                extraInfoDesc = audit.extra_info;\r\n\r\n                if (extraInfoDesc.indexOf('=') !== -1) {\r\n                    extraInfoDesc = extraInfoDesc.substring(extraInfoDesc.indexOf('=') + 1);\r\n                }\r\n            }\r\n            auditDesc = actionDesc + ' ' + extraInfoDesc;\r\n        }\r\n    }\r\n\r\n    const date = new Date(audit.create_at);\r\n    const auditInfo = {};\r\n    auditInfo.timestamp = (\r\n        <div>\r\n            <div>\r\n                <FormattedDate\r\n                    value={date}\r\n                    day='2-digit'\r\n                    month='short'\r\n                    year='numeric'\r\n                />\r\n            </div>\r\n            <div>\r\n                <FormattedTime\r\n                    value={date}\r\n                    hour='2-digit'\r\n                    minute='2-digit'\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n    auditInfo.userId = audit.user_id;\r\n    auditInfo.desc = auditDesc;\r\n    auditInfo.ip = audit.ip_address;\r\n    auditInfo.sessionId = audit.session_id;\r\n\r\n    return auditInfo;\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getUser, getCurrentUser} from 'mattermost-redux/selectors/entities/users';\r\nimport {getChannelByName} from 'mattermost-redux/selectors/entities/channels';\r\n\r\nimport AuditTable from './audit_table.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        currentUser: getCurrentUser(state),\r\n        getUser: (userId) => getUser(state, userId),\r\n        getByName: (channelName) => getChannelByName(state, channelName),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AuditTable);\r\n","/* (ignored) */","/* (ignored) */","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createJob = createJob;\nexports.getJob = getJob;\nexports.getJobs = getJobs;\nexports.getJobsByType = getJobsByType;\nexports.cancelJob = cancelJob;\n\nvar _action_types = require(\"../action_types\");\n\nvar _client = require(\"../client\");\n\nvar _constants = require(\"../constants\");\n\nvar _helpers = require(\"./helpers\");\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n// @flow\nfunction createJob(job\n/*: Job*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.createJob,\n    onRequest: _action_types.JobTypes.CREATE_JOB_REQUEST,\n    onSuccess: [_action_types.JobTypes.RECEIVED_JOB, _action_types.JobTypes.CREATE_JOB_SUCCESS],\n    onFailure: _action_types.JobTypes.CREATE_JOB_FAILURE,\n    params: [job]\n  });\n}\n\nfunction getJob(id\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getJob,\n    onRequest: _action_types.JobTypes.GET_JOB_REQUEST,\n    onSuccess: [_action_types.JobTypes.RECEIVED_JOB, _action_types.JobTypes.GET_JOB_SUCCESS],\n    onFailure: _action_types.JobTypes.GET_JOB_FAILURE,\n    params: [id]\n  });\n}\n\nfunction getJobs()\n/*: ActionFunc*/\n{\n  var page\n  /*: number*/\n  = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var perPage\n  /*: number*/\n  = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants.General.JOBS_CHUNK_SIZE;\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getJobs,\n    onRequest: _action_types.JobTypes.GET_JOBS_REQUEST,\n    onSuccess: [_action_types.JobTypes.RECEIVED_JOBS, _action_types.JobTypes.GET_JOBS_SUCCESS],\n    onFailure: _action_types.JobTypes.GET_JOBS_FAILURE,\n    params: [page, perPage]\n  });\n}\n\nfunction getJobsByType(type\n/*: JobType*/\n)\n/*: ActionFunc*/\n{\n  var page\n  /*: number*/\n  = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var perPage\n  /*: number*/\n  = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.JOBS_CHUNK_SIZE;\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getJobsByType,\n    onRequest: _action_types.JobTypes.GET_JOBS_REQUEST,\n    onSuccess: [_action_types.JobTypes.RECEIVED_JOBS, _action_types.JobTypes.RECEIVED_JOBS_BY_TYPE, _action_types.JobTypes.GET_JOBS_SUCCESS],\n    onFailure: _action_types.JobTypes.GET_JOBS_FAILURE,\n    params: [type, page, perPage]\n  });\n}\n\nfunction cancelJob(job\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.cancelJob,\n    onRequest: _action_types.JobTypes.CANCEL_JOB_REQUEST,\n    onSuccess: _action_types.JobTypes.CANCEL_JOB_SUCCESS,\n    onFailure: _action_types.JobTypes.CANCEL_JOB_FAILURE,\n    params: [job]\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAllJobs = getAllJobs;\nexports.getJobsByType = getJobsByType;\nexports.makeGetJobsByType = makeGetJobsByType;\n\nvar _reselect = require(\"reselect\");\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n// @flow\nfunction getAllJobs(state\n/*: GlobalState*/\n)\n/*: IDMappedObjects<Job>*/\n{\n  return state.entities.jobs.jobs;\n}\n\nfunction getJobsByType(state\n/*: GlobalState*/\n)\n/*: {[JobType]: Array<Job>}*/\n{\n  return state.entities.jobs.jobsByTypeList;\n}\n\nfunction makeGetJobsByType(type\n/*: JobType*/\n)\n/*: (state: GlobalState) => Array<Job>*/\n{\n  return (0, _reselect.createSelector)(getJobsByType, function (jobsByType) {\n    return jobsByType[type] || [];\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScopeTypes = void 0;\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n// @flow\nvar ScopeTypes = {\n  TEAM: 'team',\n  CHANNEL: 'channel'\n};\nexports.ScopeTypes = ScopeTypes;","module.exports = __webpack_public_path__ + \"files/f7199ef7df8f38eedb0ee2ca2b4ad893.png\";","module.exports = __webpack_public_path__ + \"files/d5143a5f3054c6cc9b04a6313998d24e.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {Permissions} from 'mattermost-redux/constants/index';\r\n\r\nconst MAPPING = {\r\n    enableTeamCreation: {\r\n        true: [{roleName: 'system_user', permission: Permissions.CREATE_TEAM, shouldHave: true}],\r\n        false: [{roleName: 'system_user', permission: Permissions.CREATE_TEAM, shouldHave: false}],\r\n    },\r\n\r\n    editOthersPosts: {\r\n        true: [\r\n            {roleName: 'system_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\r\n            {roleName: 'team_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\r\n        ],\r\n        false: [\r\n            {roleName: 'team_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: false},\r\n            {roleName: 'system_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\r\n        ],\r\n    },\r\n\r\n    enableOnlyAdminIntegrations: {\r\n        true: [\r\n            {roleName: 'team_user', permission: Permissions.MANAGE_INCOMING_WEBHOOKS, shouldHave: false},\r\n            {roleName: 'team_user', permission: Permissions.MANAGE_OUTGOING_WEBHOOKS, shouldHave: false},\r\n            {roleName: 'team_user', permission: Permissions.MANAGE_SLASH_COMMANDS, shouldHave: false},\r\n            {roleName: 'system_user', permission: Permissions.MANAGE_OAUTH, shouldHave: false},\r\n        ],\r\n        false: [\r\n            {roleName: 'team_user', permission: Permissions.MANAGE_INCOMING_WEBHOOKS, shouldHave: true},\r\n            {roleName: 'team_user', permission: Permissions.MANAGE_OUTGOING_WEBHOOKS, shouldHave: true},\r\n            {roleName: 'team_user', permission: Permissions.MANAGE_SLASH_COMMANDS, shouldHave: true},\r\n            {roleName: 'system_user', permission: Permissions.MANAGE_OAUTH, shouldHave: true},\r\n        ],\r\n    },\r\n};\r\n\r\n/**\r\n * Get the roles that were changed (but unsaved) for given mapping key/values.\r\n *\r\n * @param {object} mappingValues key/value to indicate which mapping items to use to update the roles.\r\n * @param {object} roles same structure as returned by mattermost-redux `getRoles`.\r\n * @return {object} the updated roles (only) in the same structure as returned by mattermost-redux `getRoles`.\r\n */\r\nexport function rolesFromMapping(mappingValues, roles) {\r\n    const rolesClone = JSON.parse(JSON.stringify(roles));\r\n\r\n    // Purge roles that aren't present in MAPPING, we don't care about them.\r\n    purgeNonPertinentRoles(rolesClone);\r\n\r\n    Object.keys(MAPPING).forEach((mappingKey) => {\r\n        const value = mappingValues[mappingKey];\r\n        if (value) {\r\n            mutateRolesBasedOnMapping(mappingKey, value, rolesClone);\r\n        }\r\n    });\r\n\r\n    // Purge roles that didn't have permissions changes, we don't care about them.\r\n    Object.entries(rolesClone).forEach(([roleName, roleClone]) => {\r\n        const originalPermissionSet = new Set(roles[roleName].permissions);\r\n        const newPermissionSet = new Set(roleClone.permissions);\r\n        const difference = [...newPermissionSet].filter((x) => !originalPermissionSet.has(x));\r\n\r\n        if (originalPermissionSet.size === newPermissionSet.size && difference.length === 0) {\r\n            delete rolesClone[roleName];\r\n        }\r\n    });\r\n\r\n    return rolesClone;\r\n}\r\n\r\n/**\r\n * Get the mapping value that matches for a given set of roles.\r\n *\r\n * @param {string} key to match under in the mapping.\r\n * @param {object} roles same structure as returned by mattermost-redux `getRoles`.\r\n * @return {string} the value that the roles/permissions assignment match in the mapping.\r\n */\r\nexport function mappingValueFromRoles(key, roles) {\r\n    for (const o of mappingPartIterator(MAPPING[key], roles)) {\r\n        if (o.allConditionsAreMet) {\r\n            return o.value;\r\n        }\r\n    }\r\n    throw new Error(`No matching mapping value found for key '${key}' with the given roles.`);\r\n}\r\n\r\nfunction purgeNonPertinentRoles(roles) {\r\n    const pertinentRoleNames = roleNamesInMapping();\r\n\r\n    Object.keys(roles).forEach((key) => {\r\n        if (!pertinentRoleNames.includes(key)) {\r\n            delete roles[key];\r\n        }\r\n    });\r\n}\r\n\r\nfunction mutateRolesBasedOnMapping(mappingKey, value, roles) {\r\n    const roleRules = MAPPING[mappingKey][value];\r\n\r\n    if (typeof roleRules === 'undefined') {\r\n        throw new Error(`Value '${value}' not present in MAPPING for key '${mappingKey}'.`);\r\n    }\r\n\r\n    roleRules.forEach((item) => {\r\n        const role = roles[item.roleName];\r\n        if (item.shouldHave) {\r\n            addPermissionToRole(item.permission, role);\r\n        } else {\r\n            removePermissionFromRole(item.permission, role);\r\n        }\r\n    });\r\n}\r\n\r\n// Returns a set of the role names present in MAPPING.\r\nfunction roleNamesInMapping() {\r\n    let roleNames = [];\r\n\r\n    Object.values(MAPPING).forEach((v1) => {\r\n        Object.values(v1).forEach((v2) => {\r\n            const names = v2.map((item) => item.roleName); // eslint-disable-line max-nested-callbacks\r\n            roleNames = roleNames.concat(names);\r\n        });\r\n    });\r\n\r\n    return [...new Set(roleNames.map((item) => item))];\r\n}\r\n\r\nfunction* mappingPartIterator(mappingPart, roles) {\r\n    for (const value in mappingPart) {\r\n        if (mappingPart.hasOwnProperty(value)) {\r\n            const roleRules = mappingPart[value];\r\n\r\n            const hasUnmetCondition = roleRules.some((item) => {\r\n                const role = roles[item.roleName];\r\n                return (item.shouldHave && !role.permissions.includes(item.permission)) || (!item.shouldHave && role.permissions.includes(item.permission));\r\n            });\r\n\r\n            yield {value, allConditionsAreMet: !hasUnmetCondition};\r\n        }\r\n    }\r\n}\r\n\r\nfunction addPermissionToRole(permission, role) {\r\n    if (!role.permissions.includes(permission)) {\r\n        role.permissions.push(permission);\r\n    }\r\n}\r\n\r\nfunction removePermissionFromRole(permission, role) {\r\n    const permissionIndex = role.permissions.indexOf(permission);\r\n    if (permissionIndex !== -1) {\r\n        role.permissions.splice(permissionIndex, 1);\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport {t} from 'utils/i18n';\r\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper.jsx';\r\nimport SuccessIcon from 'components/icon/success_icon';\r\nimport WarningIcon from 'components/icon/warning_icon';\r\n\r\n/**\r\n * A button which, when clicked, performs an action and displays\r\n * its outcome as either success, or failure accompanied by the\r\n * `message` property of the `err` object.\r\n */\r\nexport default class RequestButton extends React.Component {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * The action to be called to carry out the request.\r\n         */\r\n        requestAction: PropTypes.func.isRequired,\r\n\r\n        /**\r\n         * A component that displays help text for the request button.\r\n         *\r\n         * Typically, this will be a <FormattedMessage/>.\r\n         */\r\n        helpText: PropTypes.element,\r\n\r\n        /**\r\n         * A component to be displayed on the button.\r\n         *\r\n         * Typically, this will be a <FormattedMessage/>\r\n         */\r\n        loadingText: PropTypes.string,\r\n\r\n        /**\r\n         * A component to be displayed on the button.\r\n         *\r\n         * Typically, this will be a <FormattedMessage/>\r\n         */\r\n        buttonText: PropTypes.element.isRequired,\r\n\r\n        /**\r\n         * The element to display as the field label.\r\n         *\r\n         * Typically, this will be a <FormattedMessage/>\r\n         */\r\n        label: PropTypes.element,\r\n\r\n        /**\r\n         * True if the button form control should be disabled, otherwise false.\r\n         */\r\n        disabled: PropTypes.bool,\r\n\r\n        /**\r\n         * True if the config needs to be saved before running the request, otherwise false.\r\n         *\r\n         * If set to true, the action provided in the `saveConfigAction` property will be\r\n         * called before the action provided in the `requestAction` property, with the later\r\n         * only being called if the former is successful.\r\n         */\r\n        saveNeeded: PropTypes.bool,\r\n\r\n        /**\r\n         * Action to be called to save the config, if saveNeeded is set to true.\r\n         */\r\n        saveConfigAction: PropTypes.func,\r\n\r\n        /**\r\n         * True if the success message should be show when the request completes successfully,\r\n         * otherwise false.\r\n         */\r\n        showSuccessMessage: PropTypes.bool,\r\n\r\n        /**\r\n         * The message to show when the request completes successfully.\r\n         */\r\n        successMessage: PropTypes.shape({\r\n\r\n            /**\r\n             * The i18n string ID for the success message.\r\n             */\r\n            id: PropTypes.string.isRequired,\r\n\r\n            /**\r\n             * The i18n default value for the success message.\r\n             */\r\n            defaultMessage: PropTypes.string.isRequired,\r\n        }),\r\n\r\n        /**\r\n         * The message to show when the request returns an error.\r\n         */\r\n        errorMessage: PropTypes.shape({\r\n\r\n            /**\r\n             * The i18n string ID for the error message.\r\n             */\r\n            id: PropTypes.string.isRequired,\r\n\r\n            /**\r\n             * The i18n default value for the error message.\r\n             *\r\n             * The placeholder {error} may be used to include the error message returned\r\n             * by the server in response to the failed request.\r\n             */\r\n            defaultMessage: PropTypes.string.isRequired,\r\n        }),\r\n\r\n        /**\r\n         * True if the {error} placeholder for the `errorMessage` property should include both\r\n         * the `message` and `detailed_error` properties of the error returned from the server,\r\n         * otherwise false to include only the `message` property.\r\n         */\r\n        includeDetailedError: PropTypes.bool,\r\n\r\n        /**\r\n         * An element to display adjacent to the request button.\r\n         */\r\n        alternativeActionElement: PropTypes.element,\r\n    }\r\n\r\n    static defaultProps = {\r\n        disabled: false,\r\n        saveNeeded: false,\r\n        showSuccessMessage: true,\r\n        includeDetailedError: false,\r\n        successMessage: {\r\n            id: t('admin.requestButton.requestSuccess'),\r\n            defaultMessage: 'Test Successful',\r\n        },\r\n        errorMessage: {\r\n            id: t('admin.requestButton.requestFailure'),\r\n            defaultMessage: 'Test Failure: {error}',\r\n        },\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleRequest = this.handleRequest.bind(this);\r\n\r\n        this.state = {\r\n            busy: false,\r\n            fail: null,\r\n            success: false,\r\n        };\r\n    }\r\n\r\n    handleRequest(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            busy: true,\r\n            fail: null,\r\n            success: false,\r\n        });\r\n\r\n        const doRequest = () => { //eslint-disable-line func-style\r\n            this.props.requestAction(\r\n                () => {\r\n                    this.setState({\r\n                        busy: false,\r\n                        success: true,\r\n                    });\r\n                },\r\n                (err) => {\r\n                    let errMsg = err.message;\r\n                    if (this.props.includeDetailedError) {\r\n                        errMsg += ' - ' + err.detailed_error;\r\n                    }\r\n\r\n                    this.setState({\r\n                        busy: false,\r\n                        fail: errMsg,\r\n                    });\r\n                }\r\n            );\r\n        };\r\n\r\n        if (this.props.saveNeeded) {\r\n            this.props.saveConfigAction(doRequest);\r\n        } else {\r\n            doRequest();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let message = null;\r\n        if (this.state.fail) {\r\n            message = (\r\n                <div>\r\n                    <div className='alert alert-warning'>\r\n                        <WarningIcon/>\r\n                        <FormattedMessage\r\n                            id={this.props.errorMessage.id}\r\n                            defaultMessage={this.props.errorMessage.defaultMessage}\r\n                            values={{\r\n                                error: this.state.fail,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (this.state.success && this.props.showSuccessMessage) {\r\n            message = (\r\n                <div>\r\n                    <div className='alert alert-success'>\r\n                        <SuccessIcon/>\r\n                        <FormattedMessage\r\n                            id={this.props.successMessage.id}\r\n                            defaultMessage={this.props.successMessage.defaultMessage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let widgetClassNames = 'col-sm-8';\r\n        let label = null;\r\n        if (this.props.label) {\r\n            label = (\r\n                <label\r\n                    className='control-label col-sm-4'\r\n                >\r\n                    {this.props.label}\r\n                </label>\r\n            );\r\n        } else {\r\n            widgetClassNames = 'col-sm-offset-4 ' + widgetClassNames;\r\n        }\r\n\r\n        return (\r\n            <div className='form-group'>\r\n                {label}\r\n                <div className={widgetClassNames}>\r\n                    <div>\r\n                        <button\r\n                            className='btn btn-default'\r\n                            onClick={this.handleRequest}\r\n                            disabled={this.props.disabled}\r\n                        >\r\n                            <LoadingWrapper\r\n                                loading={this.state.busy}\r\n                                text={this.props.loadingText || Utils.localizeMessage('admin.requestButton.loading', ' Loading...')}\r\n                            >\r\n                                {this.props.buttonText}\r\n                            </LoadingWrapper>\r\n                        </button>\r\n                        {this.props.alternativeActionElement}\r\n                        {message}\r\n                    </div>\r\n                    <div className='help-text'>\r\n                        {this.props.helpText}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default function() {\r\n    return (\r\n        <div className='alert alert-warning'>\r\n            <FormattedMessage\r\n                id='admin.set_by_env'\r\n                defaultMessage='This setting has been set through an environment variable. It cannot be changed through the System Console.'\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React, {PureComponent} from 'react';\r\n\r\nimport SetByEnv from './set_by_env';\r\n\r\nexport default class Settings extends PureComponent {\r\n    static propTypes = {\r\n        inputId: PropTypes.string,\r\n        label: PropTypes.node.isRequired,\r\n        children: PropTypes.node.isRequired,\r\n        helpText: PropTypes.node,\r\n        setByEnv: PropTypes.bool,\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            children,\r\n            setByEnv,\r\n            helpText,\r\n            inputId,\r\n            label,\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className='form-group'>\r\n                <label\r\n                    className='control-label col-sm-4'\r\n                    htmlFor={inputId}\r\n                >\r\n                    {label}\r\n                </label>\r\n                <div className='col-sm-8'>\r\n                    {children}\r\n                    <div className='help-text'>\r\n                        {helpText}\r\n                    </div>\r\n                    {setByEnv ? <SetByEnv/> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nimport Setting from './setting.jsx';\r\n\r\nexport default class BooleanSetting extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        label: PropTypes.node.isRequired,\r\n        value: PropTypes.bool.isRequired,\r\n        onChange: PropTypes.func.isRequired,\r\n        trueText: PropTypes.node,\r\n        falseText: PropTypes.node,\r\n        disabled: PropTypes.bool.isRequired,\r\n        setByEnv: PropTypes.bool.isRequired,\r\n        disabledText: PropTypes.node,\r\n        helpText: PropTypes.node.isRequired,\r\n    };\r\n\r\n    static defaultProps = {\r\n        trueText: (\r\n            <FormattedMessage\r\n                id='admin.true'\r\n                defaultMessage='true'\r\n            />\r\n        ),\r\n        falseText: (\r\n            <FormattedMessage\r\n                id='admin.false'\r\n                defaultMessage='false'\r\n            />\r\n        ),\r\n        disabled: false,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.props.onChange(this.props.id, e.target.value === 'true');\r\n    }\r\n\r\n    render() {\r\n        let helpText;\r\n        if (this.props.disabled && this.props.disabledText) {\r\n            helpText = (\r\n                <div>\r\n                    <span className='admin-console__disabled-text'>\r\n                        {this.props.disabledText}\r\n                    </span>\r\n                    {this.props.helpText}\r\n                </div>\r\n            );\r\n        } else {\r\n            helpText = this.props.helpText;\r\n        }\r\n\r\n        return (\r\n            <Setting\r\n                label={this.props.label}\r\n                helpText={helpText}\r\n                setByEnv={this.props.setByEnv}\r\n            >\r\n                <a name={this.props.id}/>\r\n                <label className='radio-inline'>\r\n                    <input\r\n                        type='radio'\r\n                        value='true'\r\n                        id={Utils.createSafeId(this.props.id) + 'true'}\r\n                        name={this.props.id}\r\n                        checked={this.props.value}\r\n                        onChange={this.handleChange}\r\n                        disabled={this.props.disabled || this.props.setByEnv}\r\n                    />\r\n                    {this.props.trueText}\r\n                </label>\r\n                <label className='radio-inline'>\r\n                    <input\r\n                        type='radio'\r\n                        value='false'\r\n                        id={Utils.createSafeId(this.props.id) + 'false'}\r\n                        name={this.props.id}\r\n                        checked={!this.props.value}\r\n                        onChange={this.handleChange}\r\n                        disabled={this.props.disabled || this.props.setByEnv}\r\n                    />\r\n                    {this.props.falseText}\r\n                </label>\r\n            </Setting>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport TextSetting from 'components/widgets/settings/text_setting';\r\n\r\nimport SetByEnv from './set_by_env';\r\n\r\nconst AdminTextSetting = (props) => {\r\n    const {setByEnv, disabled, ...sharedProps} = props;\r\n\r\n    return (\r\n        <TextSetting\r\n            {...sharedProps}\r\n            labelClassName='col-sm-4'\r\n            inputClassName='col-sm-8'\r\n            disabled={disabled || setByEnv}\r\n            footer={setByEnv ? <SetByEnv/> : null}\r\n        />\r\n    );\r\n};\r\n\r\nAdminTextSetting.propTypes = {\r\n    ...TextSetting.propTypes,\r\n    setByEnv: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default AdminTextSetting;\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport Setting from './setting.jsx';\r\n\r\nexport default class DropdownSetting extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        values: PropTypes.array.isRequired,\r\n        label: PropTypes.node.isRequired,\r\n        value: PropTypes.string.isRequired,\r\n        onChange: PropTypes.func.isRequired,\r\n        disabled: PropTypes.bool,\r\n        setByEnv: PropTypes.bool.isRequired,\r\n        helpText: PropTypes.node,\r\n    }\r\n\r\n    static defaultProps = {\r\n        isDisabled: false,\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.props.onChange(this.props.id, e.target.value);\r\n    }\r\n\r\n    render() {\r\n        const options = [];\r\n        for (const {value, text} of this.props.values) {\r\n            options.push(\r\n                <option\r\n                    value={value}\r\n                    key={value}\r\n                >\r\n                    {text}\r\n                </option>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Setting\r\n                label={this.props.label}\r\n                inputId={this.props.id}\r\n                helpText={this.props.helpText}\r\n                setByEnv={this.props.setByEnv}\r\n            >\r\n                <select\r\n                    className='form-control'\r\n                    id={this.props.id}\r\n                    value={this.props.value}\r\n                    onChange={this.handleChange}\r\n                    disabled={this.props.disabled || this.props.setByEnv}\r\n                >\r\n                    {options}\r\n                </select>\r\n            </Setting>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ReactSelect from 'react-select';\r\n\r\nimport FormError from 'components/form_error.jsx';\r\n\r\nimport Setting from './setting.jsx';\r\n\r\nexport default class MultiSelectSetting extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        values: PropTypes.array.isRequired,\r\n        label: PropTypes.node.isRequired,\r\n        selected: PropTypes.array.isRequired,\r\n        mustBePresent: PropTypes.string,\r\n        onChange: PropTypes.func.isRequired,\r\n        disabled: PropTypes.bool,\r\n        setByEnv: PropTypes.bool.isRequired,\r\n        helpText: PropTypes.node,\r\n        noResultText: PropTypes.node,\r\n        errorText: PropTypes.node,\r\n        notPresent: PropTypes.node,\r\n    };\r\n\r\n    static defaultProps = {\r\n        disabled: false,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {error: false};\r\n    }\r\n\r\n    handleChange(newValue) {\r\n        const values = newValue.map((n) => {\r\n            return n.value;\r\n        });\r\n\r\n        if (this.props.selected.length > 0 && this.props.mustBePresent && values.join(',').indexOf(this.props.mustBePresent) === -1) {\r\n            this.setState({error: this.props.notPresent});\r\n        } else {\r\n            this.props.onChange(this.props.id, values);\r\n            this.setState({error: false});\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(newProps) { // eslint-disable-line camelcase\r\n        if (newProps.selected.length > 0 && newProps.mustBePresent && newProps.selected.join(',').indexOf(newProps.mustBePresent) === -1) {\r\n            this.setState({error: this.props.notPresent});\r\n        } else {\r\n            this.setState({error: false});\r\n        }\r\n    }\r\n\r\n    calculateValue = () => {\r\n        return this.props.selected.reduce((values, item) => {\r\n            const found = this.props.values.find((e) => {\r\n                return e.value === item;\r\n            });\r\n            if (found !== null) {\r\n                values.push(found);\r\n            }\r\n            return values;\r\n        }, []);\r\n    };\r\n\r\n    getOptionLabel = ({text}) => text;\r\n\r\n    render() {\r\n        return (\r\n            <Setting\r\n                label={this.props.label}\r\n                inputId={this.props.id}\r\n                helpText={this.props.helpText}\r\n                setByEnv={this.props.setByEnv}\r\n            >\r\n                <ReactSelect\r\n                    id={this.props.id}\r\n                    isMulti={true}\r\n                    getOptionLabel={this.getOptionLabel}\r\n                    options={this.props.values}\r\n                    delimiter={','}\r\n                    clearable={false}\r\n                    disabled={this.props.disabled || this.props.setByEnv}\r\n                    noResultsText={this.props.noResultText}\r\n                    onChange={this.handleChange}\r\n                    value={this.calculateValue()}\r\n                />\r\n                <FormError error={this.state.error}/>\r\n            </Setting>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport Setting from './setting.jsx';\r\n\r\nexport default class RadioSetting extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        values: PropTypes.array.isRequired,\r\n        label: PropTypes.node.isRequired,\r\n        value: PropTypes.string.isRequired,\r\n        onChange: PropTypes.func.isRequired,\r\n        disabled: PropTypes.bool,\r\n        setByEnv: PropTypes.bool.isRequired,\r\n        helpText: PropTypes.node,\r\n    };\r\n\r\n    static defaultProps = {\r\n        disabled: false,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.props.onChange(this.props.id, e.target.value);\r\n    }\r\n\r\n    render() {\r\n        const options = [];\r\n        for (const {value, text} of this.props.values) {\r\n            options.push(\r\n                <div\r\n                    className='radio'\r\n                    key={value}\r\n                >\r\n                    <label>\r\n                        <input\r\n                            type='radio'\r\n                            value={value}\r\n                            name={this.props.id}\r\n                            checked={value === this.props.value}\r\n                            onChange={this.handleChange}\r\n                            disabled={this.props.disabled || this.props.setByEnv}\r\n                        />\r\n                        {text}\r\n                    </label>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Setting\r\n                label={this.props.label}\r\n                inputId={this.props.id}\r\n                helpText={this.props.helpText}\r\n                setByEnv={this.props.setByEnv}\r\n            >\r\n                {options}\r\n            </Setting>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {ChromePicker} from 'react-color';\r\n\r\nimport Setting from './setting.jsx';\r\n\r\nexport default class ColorSetting extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * The unique identifer for the admin console setting\r\n         */\r\n        id: PropTypes.string.isRequired,\r\n\r\n        /*\r\n         * The text/jsx display name for the setting\r\n         */\r\n        label: PropTypes.node.isRequired,\r\n\r\n        /*\r\n         * The text/jsx help text to display underneath the setting\r\n         */\r\n        helpText: PropTypes.node,\r\n\r\n        /*\r\n         * The hex color value\r\n         */\r\n        value: PropTypes.string.isRequired,\r\n\r\n        /*\r\n         * Function called when the input changes\r\n         */\r\n        onChange: PropTypes.func,\r\n\r\n        /*\r\n         * Set to disable the setting\r\n         */\r\n        disabled: PropTypes.bool,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showPicker: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.closePicker);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.closePicker);\r\n    }\r\n\r\n    handleChange = (color) => {\r\n        this.props.onChange(this.props.id, color.hex);\r\n    }\r\n\r\n    togglePicker = () => {\r\n        if (this.props.disabled) {\r\n            this.setState({showPicker: false});\r\n        } else {\r\n            this.setState({showPicker: !this.state.showPicker});\r\n        }\r\n    }\r\n\r\n    closePicker = (e) => {\r\n        if (!e.target.closest('.' + this.getPickerClass())) {\r\n            this.setState({showPicker: false});\r\n        }\r\n    }\r\n\r\n    onTextInput = (e) => {\r\n        this.props.onChange(this.props.id, e.target.value);\r\n    }\r\n\r\n    getPickerClass = () => {\r\n        return this.props.id ? 'picker-' + this.props.id.replace('.', '-') : '';\r\n    }\r\n\r\n    render() {\r\n        let picker;\r\n        if (this.state.showPicker) {\r\n            picker = (\r\n                <div className={'color-picker__popover ' + this.getPickerClass()}>\r\n                    <ChromePicker\r\n                        color={this.props.value}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Setting\r\n                label={this.props.label}\r\n                helpText={this.props.helpText}\r\n                inputId={this.props.id}\r\n            >\r\n                <div className='input-group color-picker colorpicker-element'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        value={this.props.value}\r\n                        onChange={this.onTextInput}\r\n                        disabled={this.props.disabled}\r\n                    />\r\n                    <span\r\n                        className={'input-group-addon ' + this.getPickerClass()}\r\n                        onClick={this.togglePicker}\r\n                    >\r\n                        <i style={{backgroundColor: this.props.value}}/>\r\n                    </span>\r\n                    {picker}\r\n                </div>\r\n            </Setting>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport crypto from 'crypto';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport SetByEnv from './set_by_env';\r\n\r\nexport default class GeneratedSetting extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.node.isRequired,\r\n            placeholder: PropTypes.string,\r\n            value: PropTypes.string.isRequired,\r\n            onChange: PropTypes.func.isRequired,\r\n            disabled: PropTypes.bool.isRequired,\r\n            setByEnv: PropTypes.bool.isRequired,\r\n            disabledText: PropTypes.node,\r\n            helpText: PropTypes.node.isRequired,\r\n            regenerateText: PropTypes.node,\r\n            regenerateHelpText: PropTypes.node,\r\n        };\r\n    }\r\n\r\n    static get defaultProps() {\r\n        return {\r\n            disabled: false,\r\n            regenerateText: (\r\n                <FormattedMessage\r\n                    id='admin.regenerate'\r\n                    defaultMessage='Regenerate'\r\n                />\r\n            ),\r\n        };\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.regenerate = this.regenerate.bind(this);\r\n    }\r\n\r\n    regenerate(e) {\r\n        e.preventDefault();\r\n\r\n        this.props.onChange(this.props.id, crypto.randomBytes(256).toString('base64').substring(0, 32));\r\n    }\r\n\r\n    render() {\r\n        let disabledText = null;\r\n        if (this.props.disabled && this.props.disabledText) {\r\n            disabledText = (\r\n                <div className='admin-console__disabled-text'>\r\n                    {this.props.disabledText}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let regenerateHelpText = null;\r\n        if (this.props.regenerateHelpText) {\r\n            regenerateHelpText = (\r\n                <div className='help-text'>\r\n                    {this.props.regenerateHelpText}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let text = this.props.value;\r\n        if (!text) {\r\n            text = (\r\n                <span className='placeholder-text'>{this.props.placeholder}</span>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='form-group'>\r\n                <label\r\n                    className='control-label col-sm-4'\r\n                    htmlFor={this.props.id}\r\n                >\r\n                    {this.props.label}\r\n                </label>\r\n                <div className='col-sm-8'>\r\n                    <div\r\n                        className='form-control disabled'\r\n                        id={this.props.id}\r\n                    >\r\n                        {text}\r\n                    </div>\r\n                    {disabledText}\r\n                    <div className='help-text'>\r\n                        {this.props.helpText}\r\n                    </div>\r\n                    <div className='help-text'>\r\n                        <button\r\n                            className='btn btn-default'\r\n                            onClick={this.regenerate}\r\n                            disabled={this.props.disabled || this.props.setByEnv}\r\n                        >\r\n                            {this.props.regenerateText}\r\n                        </button>\r\n                    </div>\r\n                    {regenerateHelpText}\r\n                    {this.props.setByEnv ? <SetByEnv/> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport GenericUserProvider from 'components/suggestion/generic_user_provider.jsx';\r\nimport Setting from 'components/admin_console/setting.jsx';\r\nimport SuggestionBox from 'components/suggestion/suggestion_box.jsx';\r\nimport SuggestionList from 'components/suggestion/suggestion_list.jsx';\r\n\r\nexport default class UserAutocompleteSetting extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.node.isRequired,\r\n            placeholder: PropTypes.string,\r\n            helpText: PropTypes.node,\r\n            value: PropTypes.string,\r\n            onChange: PropTypes.func,\r\n            disabled: PropTypes.bool,\r\n        };\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.userSuggestionProviders = [new GenericUserProvider()];\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.props.onChange(this.props.id, e.target.value);\r\n    }\r\n\r\n    handleUserSelected = (user) => {\r\n        this.props.onChange(this.props.id, user.username);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Setting\r\n                label={this.props.label}\r\n                helpText={this.props.helpText}\r\n                inputId={this.props.id}\r\n            >\r\n                <div\r\n                    className='admin-setting-user__dropdown'\r\n                >\r\n                    <SuggestionBox\r\n                        id={'admin_user_setting_' + this.props.id}\r\n                        className='form-control'\r\n                        placeholder={this.props.placeholder}\r\n                        value={this.props.value}\r\n                        onChange={this.handleChange}\r\n                        onItemSelected={this.handleUserSelected}\r\n                        listComponent={SuggestionList}\r\n                        listStyle='bottom'\r\n                        providers={this.userSuggestionProviders}\r\n                        disabled={this.props.disabled}\r\n                        requiredCharacters={0}\r\n                        openOnFocus={true}\r\n                    />\r\n                </div>\r\n            </Setting>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nexport default class SettingsGroup extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            show: PropTypes.bool.isRequired,\r\n            header: PropTypes.node,\r\n            children: PropTypes.node,\r\n            container: PropTypes.bool,\r\n        };\r\n    }\r\n\r\n    static get defaultProps() {\r\n        return {\r\n            show: true,\r\n            container: true,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let wrapperClass = '';\r\n        let contentClass = '';\r\n\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n\r\n        if (this.props.container) {\r\n            wrapperClass = 'admin-console__wrapper';\r\n            contentClass = 'admin-console__content';\r\n        }\r\n\r\n        let header = null;\r\n        if (this.props.header) {\r\n            header = (\r\n                <h4>\r\n                    {this.props.header}\r\n                </h4>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className={wrapperClass}>\r\n                <div className={contentClass}>\r\n                    {header}\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedDate, FormattedMessage, FormattedTime, injectIntl, intlShape} from 'react-intl';\r\n\r\nimport {JobStatuses} from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nclass JobTable extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * Used for formatting dates\r\n         */\r\n        intl: intlShape.isRequired,\r\n\r\n        /**\r\n         * Array of jobs\r\n         */\r\n        jobs: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\r\n        /**\r\n         * Function called when displaying extra text.\r\n         */\r\n        getExtraInfoText: PropTypes.func,\r\n\r\n        /**\r\n         * Grey buttons out when disabled\r\n         */\r\n        disabled: PropTypes.bool,\r\n\r\n        /**\r\n         * Help text under the create job button\r\n         */\r\n        createJobHelpText: PropTypes.element.isRequired,\r\n\r\n        /**\r\n         * Button text to create a new job\r\n         */\r\n        createJobButtonText: PropTypes.element.isRequired,\r\n\r\n        /**\r\n         * The type of jobs to include in this table.\r\n         */\r\n        jobType: PropTypes.string.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n            getJobsByType: PropTypes.func.isRequired,\r\n            cancelJob: PropTypes.func.isRequired,\r\n            createJob: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.interval = null;\r\n\r\n        this.state = {\r\n            loading: true,\r\n        };\r\n    }\r\n\r\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\r\n        this.interval = setInterval(this.reload, 15000);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.actions.getJobsByType(this.props.jobType).then(\r\n            () => this.setState({loading: false})\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n        }\r\n    }\r\n\r\n    getStatus = (job) => {\r\n        const formatMessage = this.props.intl.formatMessage;\r\n        if (job.status === JobStatuses.PENDING) {\r\n            return (\r\n                <span\r\n                    className='status-icon-warning'\r\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\r\n                >\r\n                    <FormattedMessage\r\n                        id='admin.jobTable.statusPending'\r\n                        defaultMessage='Pending'\r\n                    />\r\n                </span>\r\n            );\r\n        } else if (job.status === JobStatuses.IN_PROGRESS) {\r\n            return (\r\n                <span\r\n                    className='status-icon-warning'\r\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\r\n                >\r\n                    <FormattedMessage\r\n                        id='admin.jobTable.statusInProgress'\r\n                        defaultMessage='In Progress'\r\n                    />\r\n                </span>\r\n            );\r\n        } else if (job.status === JobStatuses.SUCCESS) {\r\n            return (\r\n                <span\r\n                    className='status-icon-success'\r\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\r\n                >\r\n                    <FormattedMessage\r\n                        id='admin.jobTable.statusSuccess'\r\n                        defaultMessage='Success'\r\n                    />\r\n                </span>\r\n            );\r\n        } else if (job.status === JobStatuses.ERROR) {\r\n            return (\r\n                <span\r\n                    className='status-icon-error'\r\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\r\n                >\r\n                    <FormattedMessage\r\n                        id='admin.jobTable.statusError'\r\n                        defaultMessage='Error'\r\n                    />\r\n                </span>\r\n            );\r\n        } else if (job.status === JobStatuses.CANCEL_REQUESTED) {\r\n            return (\r\n                <span\r\n                    className='status-icon-warning'\r\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\r\n                >\r\n                    <FormattedMessage\r\n                        id='admin.jobTable.statusCanceling'\r\n                        defaultMessage='Canceling...'\r\n                    />\r\n                </span>\r\n            );\r\n        } else if (job.status === JobStatuses.CANCELED) {\r\n            return (\r\n                <span\r\n                    className='status-icon-error'\r\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\r\n                >\r\n                    <FormattedMessage\r\n                        id='admin.jobTable.statusCanceled'\r\n                        defaultMessage='Canceled'\r\n                    />\r\n                </span>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <span title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}>{job.status}</span>\r\n        );\r\n    }\r\n\r\n    getExtraInfoText = (job) => {\r\n        if (job.data && job.data.error && job.data.error.length > 0) {\r\n            return <span title={job.data.error}>{job.data.error}</span>;\r\n        }\r\n\r\n        if (this.props.getExtraInfoText) {\r\n            return this.props.getExtraInfoText(job);\r\n        }\r\n\r\n        return <span/>;\r\n    }\r\n\r\n    getRunLength = (job) => {\r\n        let millis = job.last_activity_at - job.start_at;\r\n        if (job.status === JobStatuses.IN_PROGRESS) {\r\n            const runningMillis = Date.now() - job.start_at;\r\n            if (runningMillis > millis) {\r\n                millis = runningMillis;\r\n            }\r\n        }\r\n\r\n        let lastActivity = Utils.localizeMessage('admin.jobTable.lastActivityAt', 'Last Activity: ') + '--';\r\n\r\n        if (job.last_activity_at > 0) {\r\n            lastActivity = Utils.localizeMessage('admin.jobTable.lastActivityAt', 'Last Activity: ') +\r\n                this.props.intl.formatDate(new Date(job.last_activity_at), {\r\n                    year: 'numeric',\r\n                    month: 'short',\r\n                    day: '2-digit',\r\n                }) + ' - ' +\r\n                this.props.intl.formatTime(new Date(job.last_activity_at), {\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                    second: '2-digit',\r\n                });\r\n        }\r\n\r\n        var seconds = Math.round(millis / 1000);\r\n        var minutes = Math.round(millis / (1000 * 60));\r\n\r\n        if (millis <= 0 || job.status === JobStatuses.CANCELED) {\r\n            return (\r\n                <span className='whitespace--nowrap'>{'--'}</span>\r\n            );\r\n        }\r\n\r\n        if (seconds <= 120) {\r\n            return (\r\n                <span\r\n                    className='whitespace--nowrap'\r\n                    title={lastActivity}\r\n                >\r\n                    {seconds + Utils.localizeMessage('admin.jobTable.runLengthSeconds', ' seconds')}\r\n                </span>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <span\r\n                className='whitespace--nowrap'\r\n                title={lastActivity}\r\n            >\r\n                {minutes + Utils.localizeMessage('admin.jobTable.runLengthMinutes', ' minutes')}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    getFinishAt = (status, millis) => {\r\n        if (millis === 0 || status === JobStatuses.PENDING || status === JobStatuses.IN_PROGRESS || status === JobStatuses.CANCEL_REQUESTED) {\r\n            return (\r\n                <span className='whitespace--nowrap'>{'--'}</span>\r\n            );\r\n        }\r\n\r\n        const date = new Date(millis);\r\n\r\n        return (\r\n            <span className='whitespace--nowrap'>\r\n                <FormattedDate\r\n                    value={date}\r\n                    day='2-digit'\r\n                    month='short'\r\n                    year='numeric'\r\n                />\r\n                {' - '}\r\n                <FormattedTime\r\n                    value={date}\r\n                    hour='2-digit'\r\n                    minute='2-digit'\r\n                />\r\n            </span>\r\n        );\r\n    }\r\n\r\n    reload = () => {\r\n        this.setState({loading: true});\r\n\r\n        this.props.actions.getJobsByType(this.props.jobType).then(\r\n            () => {\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleCancelJob = async (e) => {\r\n        e.preventDefault();\r\n        const jobId = e.currentTarget.getAttribute('data-job-id');\r\n        await this.props.actions.cancelJob(jobId);\r\n        this.reload();\r\n    };\r\n\r\n    handleCreateJob = async (e) => {\r\n        e.preventDefault();\r\n        const job = {\r\n            type: this.props.jobType,\r\n        };\r\n\r\n        await this.props.actions.createJob(job);\r\n        this.reload();\r\n    };\r\n\r\n    getCancelButton = (job) => {\r\n        const formatMessage = this.props.intl.formatMessage;\r\n        let cancelButton = null;\r\n\r\n        if (!this.props.disabled && (job.status === JobStatuses.PENDING || job.status === JobStatuses.IN_PROGRESS)) {\r\n            cancelButton = (\r\n                <span\r\n                    data-job-id={job.id}\r\n                    onClick={this.handleCancelJob}\r\n                    className='job-table__cancel-button'\r\n                    title={formatMessage({id: 'admin.jobTable.cancelButton', defaultMessage: 'Cancel'})}\r\n                >\r\n                    {'×'}\r\n                </span>\r\n            );\r\n        }\r\n\r\n        return cancelButton;\r\n    }\r\n\r\n    render() {\r\n        var items = this.props.jobs.map((job) => {\r\n            return (\r\n                <tr key={job.id}>\r\n                    <td\r\n                        width='30px'\r\n                        className='whitespace--nowrap text-center'\r\n                    >\r\n                        {this.getCancelButton(job)}\r\n                    </td>\r\n                    <td className='whitespace--nowrap'>{this.getStatus(job)}</td>\r\n                    <td className='whitespace--nowrap'>{this.getFinishAt(job.status, job.last_activity_at)}</td>\r\n                    <td className='whitespace--nowrap'>{this.getRunLength(job)}</td>\r\n                    <td>{this.getExtraInfoText(job)}</td>\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className='job-table__panel'>\r\n                <div className='job-table__create-button'>\r\n                    <div>\r\n                        <button\r\n                            className='btn btn-default'\r\n                            onClick={this.handleCreateJob}\r\n                            disabled={this.props.disabled}\r\n                        >\r\n                            {this.props.createJobButtonText}\r\n                        </button>\r\n                    </div>\r\n                    <div className='help-text'>\r\n                        {this.props.createJobHelpText}\r\n                    </div>\r\n                </div>\r\n                <div className='job-table__table'>\r\n                    <table className='table'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th width='30px'/>\r\n                                <th>\r\n                                    <FormattedMessage\r\n                                        id='admin.jobTable.headerStatus'\r\n                                        defaultMessage='Status'\r\n                                    />\r\n                                </th>\r\n                                <th>\r\n                                    <FormattedMessage\r\n                                        id='admin.jobTable.headerFinishAt'\r\n                                        defaultMessage='Finish Time'\r\n                                    />\r\n                                </th>\r\n                                <th>\r\n                                    <FormattedMessage\r\n                                        id='admin.jobTable.headerRunTime'\r\n                                        defaultMessage='Run Time'\r\n                                    />\r\n                                </th>\r\n                                <th colSpan='3'>\r\n                                    <FormattedMessage\r\n                                        id='admin.jobTable.headerExtraInfo'\r\n                                        defaultMessage='Details'\r\n                                    />\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {items}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default injectIntl(JobTable);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getJobsByType, createJob, cancelJob} from 'mattermost-redux/actions/jobs';\r\nimport * as Selectors from 'mattermost-redux/selectors/entities/jobs';\r\n\r\nimport Table from './table.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        jobs: Selectors.makeGetJobsByType(ownProps.jobType)(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getJobsByType,\r\n            createJob,\r\n            cancelJob,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport $ from 'jquery';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nimport Setting from './setting.jsx';\r\n\r\nexport default class FileUploadSetting extends Setting {\r\n    static get propTypes() {\r\n        return {\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.node.isRequired,\r\n            helpText: PropTypes.node,\r\n            uploadingText: PropTypes.node,\r\n            onSubmit: PropTypes.func.isRequired,\r\n            disabled: PropTypes.bool,\r\n            fileType: PropTypes.string.isRequired,\r\n            error: PropTypes.string,\r\n        };\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            fileName: null,\r\n            serverError: props.error,\r\n        };\r\n    }\r\n\r\n    handleChange = () => {\r\n        const files = this.refs.fileInput.files;\r\n        if (files && files.length > 0) {\r\n            this.setState({fileSelected: true, fileName: files[0].name});\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        $(this.refs.upload_button).button('loading');\r\n        this.props.onSubmit(this.props.id, this.refs.fileInput.files[0], (error) => {\r\n            $(this.refs.upload_button).button('reset');\r\n            if (error) {\r\n                Utils.clearFileInput(this.refs.fileInput);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let serverError;\r\n        if (this.state.serverError) {\r\n            serverError = <div className='form-group has-error'><label className='control-label'>{this.state.serverError}</label></div>;\r\n        }\r\n\r\n        let btnClass = 'btn';\r\n        if (this.state.fileSelected) {\r\n            btnClass = 'btn btn-primary';\r\n        }\r\n\r\n        let fileName;\r\n        if (this.state.fileName) {\r\n            fileName = this.state.fileName;\r\n        } else {\r\n            fileName = (\r\n                <FormattedMessage\r\n                    id='admin.file_upload.noFile'\r\n                    defaultMessage='No file uploaded'\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Setting\r\n                label={this.props.label}\r\n                helpText={this.props.helpText}\r\n                inputId={this.props.id}\r\n            >\r\n                <div>\r\n                    <div className='file__upload'>\r\n                        <button\r\n                            className='btn btn-default'\r\n                            disabled={this.props.disabled}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='admin.file_upload.chooseFile'\r\n                                defaultMessage='Choose File'\r\n                            />\r\n                        </button>\r\n                        <input\r\n                            ref='fileInput'\r\n                            type='file'\r\n                            disabled={this.props.disabled}\r\n                            accept={this.props.fileType}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        className={btnClass}\r\n                        disabled={!this.state.fileSelected}\r\n                        onClick={this.handleSubmit}\r\n                        ref='upload_button'\r\n                        data-loading-text={`<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'></span> ${this.props.uploadingText}`}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.file_upload.uploadFile'\r\n                            defaultMessage='Upload'\r\n                        />\r\n                    </button>\r\n                    <div className='help-text no-margin'>\r\n                        {fileName}\r\n                    </div>\r\n                    {serverError}\r\n                </div>\r\n            </Setting>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport $ from 'jquery';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport Setting from './setting.jsx';\r\n\r\nexport default class RemoveFileSetting extends Setting {\r\n    static get propTypes() {\r\n        return {\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.node.isRequired,\r\n            helpText: PropTypes.node,\r\n            removeButtonText: PropTypes.node.isRequired,\r\n            removingText: PropTypes.node,\r\n            fileName: PropTypes.string.isRequired,\r\n            onSubmit: PropTypes.func.isRequired,\r\n            disabled: PropTypes.bool,\r\n        };\r\n    }\r\n\r\n    handleRemove = (e) => {\r\n        e.preventDefault();\r\n\r\n        $(this.refs.remove_button).button('loading');\r\n        this.props.onSubmit(this.props.id, () => {\r\n            $(this.refs.remove_button).button('reset');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Setting\r\n                label={this.props.label}\r\n                helpText={this.props.helpText}\r\n                inputId={this.props.id}\r\n            >\r\n                <div>\r\n                    <div className='help-text remove-filename'>\r\n                        {this.props.fileName}\r\n                    </div>\r\n                    <button\r\n                        className='btn btn-danger'\r\n                        onClick={this.handleRemove}\r\n                        ref='remove_button'\r\n                        disabled={this.props.disabled}\r\n                        data-loading-text={`<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'></span> ${this.props.removingText}`}\r\n                    >\r\n                        {this.props.removeButtonText}\r\n                    </button>\r\n                </div>\r\n            </Setting>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport marked from 'marked';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport FormattedMarkdownMessage, {CustomRenderer} from 'components/formatted_markdown_message';\r\n\r\nexport default class SchemaText extends React.PureComponent {\r\n    static propTypes = {\r\n        isMarkdown: PropTypes.bool,\r\n        isTranslated: PropTypes.bool,\r\n        text: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.object,\r\n        ]).isRequired,\r\n        textDefault: PropTypes.string,\r\n        textValues: PropTypes.object,\r\n    };\r\n\r\n    static defaultProps = {\r\n        isTranslated: true,\r\n    };\r\n\r\n    renderTranslated = () => {\r\n        const {\r\n            isMarkdown,\r\n            text,\r\n            textDefault,\r\n            textValues,\r\n        } = this.props;\r\n\r\n        if (typeof text === 'object') {\r\n            return text;\r\n        }\r\n\r\n        if (isMarkdown) {\r\n            return (\r\n                <FormattedMarkdownMessage\r\n                    id={text}\r\n                    defaultMessage={textDefault}\r\n                    values={textValues}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <FormattedMessage\r\n                id={text}\r\n                values={textValues}\r\n                defaultMessage={textDefault}\r\n            />\r\n        );\r\n    };\r\n\r\n    renderUntranslated = () => {\r\n        if (this.props.isMarkdown) {\r\n            const html = marked(this.props.text, {\r\n                breaks: true,\r\n                sanitize: true,\r\n                renderer: new CustomRenderer(),\r\n            });\r\n\r\n            return <span dangerouslySetInnerHTML={{__html: html}}/>;\r\n        }\r\n\r\n        return <span>{this.props.text}</span>;\r\n    };\r\n\r\n    render() {\r\n        return this.props.isTranslated ? this.renderTranslated() : this.renderUntranslated();\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class AdminHeader extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            children: PropTypes.node.isRequired,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'admin-console__header'}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AdminHeader from 'components/widgets/admin_console/admin_header.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\n\r\nconst FormattedAdminHeader = (props) => (\r\n    <AdminHeader>\r\n        <FormattedMarkdownMessage\r\n            id={props.id}\r\n            defaultMessage={props.defaultMessage}\r\n            values={props.values}\r\n        />\r\n    </AdminHeader>\r\n);\r\n\r\nFormattedAdminHeader.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    defaultMessage: PropTypes.string.isRequired,\r\n    values: PropTypes.object,\r\n};\r\n\r\nFormattedAdminHeader.defaultProps = {\r\n    values: {},\r\n};\r\n\r\nexport default FormattedAdminHeader;\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Overlay, Tooltip} from 'react-bootstrap';\r\n\r\nimport * as I18n from 'i18n/i18n.jsx';\r\n\r\nimport {saveConfig} from 'actions/admin_actions.jsx';\r\nimport Constants from 'utils/constants.jsx';\r\nimport {rolesFromMapping, mappingValueFromRoles} from 'utils/policy_roles_adapter';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport RequestButton from 'components/admin_console/request_button/request_button';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\nimport BooleanSetting from 'components/admin_console/boolean_setting.jsx';\r\nimport TextSetting from 'components/admin_console/text_setting.jsx';\r\nimport DropdownSetting from 'components/admin_console/dropdown_setting.jsx';\r\nimport MultiSelectSetting from 'components/admin_console/multiselect_settings.jsx';\r\nimport RadioSetting from 'components/admin_console/radio_setting.jsx';\r\nimport ColorSetting from 'components/admin_console/color_setting.jsx';\r\nimport GeneratedSetting from 'components/admin_console/generated_setting.jsx';\r\nimport UserAutocompleteSetting from 'components/admin_console/user_autocomplete_setting.jsx';\r\nimport SettingsGroup from 'components/admin_console/settings_group.jsx';\r\nimport JobsTable from 'components/admin_console/jobs';\r\nimport FileUploadSetting from 'components/admin_console/file_upload_setting.jsx';\r\nimport RemoveFileSetting from 'components/admin_console/remove_file_setting.jsx';\r\nimport SchemaText from 'components/admin_console/schema_text';\r\nimport SaveButton from 'components/save_button.jsx';\r\nimport FormError from 'components/form_error.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\n\r\nimport AdminHeader from 'components/widgets/admin_console/admin_header.jsx';\r\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header.jsx';\r\n\r\nexport default class SchemaAdminSettings extends React.Component {\r\n    static propTypes = {\r\n        config: PropTypes.object,\r\n        environmentConfig: PropTypes.object,\r\n        setNavigationBlocked: PropTypes.func,\r\n        schema: PropTypes.object,\r\n        roles: PropTypes.object,\r\n        license: PropTypes.object,\r\n        editRole: PropTypes.func,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.isPlugin = false;\r\n\r\n        this.buildSettingFunctions = {\r\n            [Constants.SettingsTypes.TYPE_TEXT]: this.buildTextSetting,\r\n            [Constants.SettingsTypes.TYPE_LONG_TEXT]: this.buildTextSetting,\r\n            [Constants.SettingsTypes.TYPE_NUMBER]: this.buildTextSetting,\r\n            [Constants.SettingsTypes.TYPE_COLOR]: this.buildColorSetting,\r\n            [Constants.SettingsTypes.TYPE_BOOL]: this.buildBoolSetting,\r\n            [Constants.SettingsTypes.TYPE_PERMISSION]: this.buildPermissionSetting,\r\n            [Constants.SettingsTypes.TYPE_DROPDOWN]: this.buildDropdownSetting,\r\n            [Constants.SettingsTypes.TYPE_RADIO]: this.buildRadioSetting,\r\n            [Constants.SettingsTypes.TYPE_BANNER]: this.buildBannerSetting,\r\n            [Constants.SettingsTypes.TYPE_GENERATED]: this.buildGeneratedSetting,\r\n            [Constants.SettingsTypes.TYPE_USERNAME]: this.buildUsernameSetting,\r\n            [Constants.SettingsTypes.TYPE_BUTTON]: this.buildButtonSetting,\r\n            [Constants.SettingsTypes.TYPE_LANGUAGE]: this.buildLanguageSetting,\r\n            [Constants.SettingsTypes.TYPE_JOBSTABLE]: this.buildJobsTableSetting,\r\n            [Constants.SettingsTypes.TYPE_FILE_UPLOAD]: this.buildFileUploadSetting,\r\n            [Constants.SettingsTypes.TYPE_CUSTOM]: this.buildCustomSetting,\r\n        };\r\n        this.state = {\r\n            saveNeeded: false,\r\n            saving: false,\r\n            serverError: null,\r\n            errorTooltip: false,\r\n            customComponentWrapperClass: '',\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.schema && props.schema.id !== state.prevSchemaId) {\r\n            return {\r\n                prevSchemaId: props.schema.id,\r\n                saveNeeded: false,\r\n                saving: false,\r\n                serverError: null,\r\n                errorTooltip: false,\r\n                ...SchemaAdminSettings.getStateFromConfig(props.config, props.schema, props.roles),\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            saving: true,\r\n            serverError: null,\r\n        });\r\n\r\n        if (this.state.saveNeeded === 'both' || this.state.saveNeeded === 'permissions') {\r\n            const settings = (this.props.schema && this.props.schema.settings) || [];\r\n            const rolesBinding = settings.reduce((acc, val) => {\r\n                if (val.type === Constants.SettingsTypes.TYPE_PERMISSION) {\r\n                    acc[val.permissions_mapping_name] = this.state[val.key].toString();\r\n                }\r\n                return acc;\r\n            }, {});\r\n            const updatedRoles = rolesFromMapping(rolesBinding, this.props.roles);\r\n\r\n            let success = true;\r\n\r\n            await Promise.all(Object.values(updatedRoles).map(async (item) => {\r\n                try {\r\n                    await this.props.editRole(item);\r\n                } catch (err) {\r\n                    success = false;\r\n                    this.setState({\r\n                        saving: false,\r\n                        serverError: err.message,\r\n                    });\r\n                }\r\n            }));\r\n\r\n            if (!success) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.state.saveNeeded === 'both' || this.state.saveNeeded === 'config') {\r\n            this.doSubmit(null, SchemaAdminSettings.getStateFromConfig);\r\n        } else {\r\n            this.setState({\r\n                saving: false,\r\n                saveNeeded: false,\r\n                serverError: null,\r\n            });\r\n            this.props.setNavigationBlocked(false);\r\n        }\r\n    }\r\n\r\n    getConfigFromState(config) {\r\n        const schema = this.props.schema;\r\n\r\n        if (schema) {\r\n            const settings = schema.settings || [];\r\n            settings.forEach((setting) => {\r\n                if (!setting.key) {\r\n                    return;\r\n                }\r\n\r\n                if (setting.type === Constants.SettingsTypes.TYPE_PERMISSION) {\r\n                    this.setConfigValue(config, setting.key, null);\r\n                    return;\r\n                }\r\n\r\n                let value = this.getSettingValue(setting);\r\n                const previousValue = SchemaAdminSettings.getConfigValue(config, setting.key);\r\n\r\n                if (setting.onConfigSave) {\r\n                    value = setting.onConfigSave(value, previousValue);\r\n                }\r\n\r\n                this.setConfigValue(config, setting.key, value);\r\n            });\r\n\r\n            if (schema.onConfigSave) {\r\n                return schema.onConfigSave(config, this.props.config);\r\n            }\r\n        }\r\n\r\n        return config;\r\n    }\r\n\r\n    static getStateFromConfig(config, schema, roles) {\r\n        let state = {};\r\n\r\n        if (schema) {\r\n            const settings = schema.settings || [];\r\n            settings.forEach((setting) => {\r\n                if (!setting.key) {\r\n                    return;\r\n                }\r\n\r\n                if (setting.type === Constants.SettingsTypes.TYPE_PERMISSION) {\r\n                    try {\r\n                        state[setting.key] = mappingValueFromRoles(setting.permissions_mapping_name, roles) === 'true';\r\n                    } catch (e) {\r\n                        state[setting.key] = false;\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                let value = SchemaAdminSettings.getConfigValue(config, setting.key);\r\n\r\n                if (setting.onConfigLoad) {\r\n                    value = setting.onConfigLoad(value, config);\r\n                }\r\n\r\n                state[setting.key] = value == null ? setting.default : value;\r\n            });\r\n\r\n            if (schema.onConfigLoad) {\r\n                state = {...state, ...schema.onConfigLoad(config)};\r\n            }\r\n        }\r\n\r\n        return state;\r\n    }\r\n\r\n    getSetting(key) {\r\n        for (const setting of this.props.schema.settings) {\r\n            if (setting.key === key) {\r\n                return setting;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSettingValue(setting) {\r\n        // Force boolean values to false when disabled.\r\n        if (setting.type === Constants.SettingsTypes.TYPE_BOOL) {\r\n            if (this.isDisabled(setting)) {\r\n                return false;\r\n            }\r\n        }\r\n        if (setting.type === Constants.SettingsTypes.TYPE_TEXT && setting.dynamic_value) {\r\n            return setting.dynamic_value(this.state[setting.key], this.props.config, this.state, this.props.license);\r\n        }\r\n\r\n        return this.state[setting.key];\r\n    }\r\n\r\n    renderTitle = () => {\r\n        if (!this.props.schema) {\r\n            return '';\r\n        }\r\n        if (this.props.schema.translate === false) {\r\n            return (\r\n                <AdminHeader>\r\n                    {this.props.schema.name || this.props.schema.id}\r\n                </AdminHeader>\r\n            );\r\n        }\r\n        return (\r\n            <FormattedAdminHeader\r\n                id={this.props.schema.name || this.props.schema.id}\r\n                defaultMessage={this.props.schema.name_default || this.props.schema.id}\r\n            />\r\n        );\r\n    };\r\n\r\n    renderBanner = (setting) => {\r\n        if (!this.props.schema) {\r\n            return <span>{''}</span>;\r\n        }\r\n\r\n        if (this.props.schema.translate === false) {\r\n            return <span>{setting.label}</span>;\r\n        }\r\n\r\n        if (typeof setting.label === 'string') {\r\n            if (setting.label_markdown) {\r\n                return (\r\n                    <FormattedMarkdownMessage\r\n                        id={setting.label}\r\n                        values={setting.label_values}\r\n                        defaultMessage={setting.label_default}\r\n                    />\r\n                );\r\n            }\r\n            return (\r\n                <FormattedMessage\r\n                    id={setting.label}\r\n                    defaultMessage={setting.label_default}\r\n                    values={setting.label_values}\r\n                />\r\n            );\r\n        }\r\n        return setting.label;\r\n    }\r\n\r\n    renderHelpText = (setting) => {\r\n        if (!this.props.schema) {\r\n            return <span>{''}</span>;\r\n        }\r\n\r\n        if (!setting.help_text) {\r\n            return null;\r\n        }\r\n\r\n        let helpText;\r\n        let isMarkdown;\r\n        let helpTextValues;\r\n        let helpTextDefault;\r\n        if (setting.disabled_help_text && this.isDisabled(setting)) {\r\n            helpText = setting.disabled_help_text;\r\n            isMarkdown = setting.disabled_help_text_markdown;\r\n            helpTextValues = setting.disabled_help_text_values;\r\n            helpTextDefault = setting.disabled_help_text_default;\r\n        } else {\r\n            helpText = setting.help_text;\r\n            isMarkdown = setting.help_text_markdown;\r\n            helpTextValues = setting.help_text_values;\r\n            helpTextDefault = setting.help_text_default;\r\n        }\r\n\r\n        return (\r\n            <SchemaText\r\n                isMarkdown={isMarkdown}\r\n                isTranslated={this.props.schema.translate}\r\n                text={helpText}\r\n                textDefault={helpTextDefault}\r\n                textValues={helpTextValues}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderLabel = (setting) => {\r\n        if (!this.props.schema) {\r\n            return '';\r\n        }\r\n\r\n        if (this.props.schema.translate === false) {\r\n            return setting.label;\r\n        }\r\n        return Utils.localizeMessage(setting.label, setting.label_default);\r\n    }\r\n\r\n    isDisabled = (setting) => {\r\n        if (typeof setting.isDisabled === 'function') {\r\n            return setting.isDisabled(this.props.config, this.state, this.props.license);\r\n        }\r\n        return Boolean(setting.isDisabled);\r\n    }\r\n\r\n    isHidden = (setting) => {\r\n        if (typeof setting.isHidden === 'function') {\r\n            return setting.isHidden(this.props.config, this.state, this.props.license);\r\n        }\r\n        return Boolean(setting.isHidden);\r\n    }\r\n\r\n    buildButtonSetting = (setting) => {\r\n        return (\r\n            <RequestButton\r\n                key={this.props.schema.id + '_text_' + setting.key}\r\n                requestAction={setting.action}\r\n                helpText={this.renderHelpText(setting)}\r\n                loadingText={Utils.localizeMessage(setting.loading, setting.loading_default)}\r\n                buttonText={<span>{this.renderLabel(setting)}</span>}\r\n                showSuccessMessage={Boolean(setting.success_message)}\r\n                includeDetailedError={true}\r\n                errorMessage={{\r\n                    id: setting.error_message,\r\n                    defaultMessage: setting.error_message_default,\r\n                }}\r\n                successMessage={setting.success_message && {\r\n                    id: setting.success_message,\r\n                    defaultMessage: setting.success_message_default,\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    buildTextSetting = (setting) => {\r\n        let inputType = 'input';\r\n        if (setting.type === Constants.SettingsTypes.TYPE_NUMBER) {\r\n            inputType = 'number';\r\n        } else if (setting.type === Constants.SettingsTypes.TYPE_LONG_TEXT) {\r\n            inputType = 'textarea';\r\n        }\r\n\r\n        let value = this.state[setting.key] || '';\r\n        if (setting.dynamic_value) {\r\n            value = setting.dynamic_value(value, this.props.config, this.state, this.props.license);\r\n        }\r\n\r\n        return (\r\n            <TextSetting\r\n                key={this.props.schema.id + '_text_' + setting.key}\r\n                id={setting.key}\r\n                type={inputType}\r\n                label={this.renderLabel(setting)}\r\n                helpText={this.renderHelpText(setting)}\r\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default)}\r\n                value={value}\r\n                disabled={this.isDisabled(setting)}\r\n                setByEnv={this.isSetByEnv(setting.key)}\r\n                onChange={this.handleChange}\r\n                maxLength={setting.max_length}\r\n            />\r\n        );\r\n    }\r\n\r\n    buildColorSetting = (setting) => {\r\n        return (\r\n            <ColorSetting\r\n                key={this.props.schema.id + '_text_' + setting.key}\r\n                id={setting.key}\r\n                label={this.renderLabel(setting)}\r\n                helpText={this.renderHelpText(setting)}\r\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default)}\r\n                value={this.state[setting.key] || ''}\r\n                disabled={this.isDisabled(setting)}\r\n                onChange={this.handleChange}\r\n            />\r\n        );\r\n    }\r\n\r\n    buildBoolSetting = (setting) => {\r\n        return (\r\n            <BooleanSetting\r\n                key={this.props.schema.id + '_bool_' + setting.key}\r\n                id={setting.key}\r\n                label={this.renderLabel(setting)}\r\n                helpText={this.renderHelpText(setting)}\r\n                value={(!this.isDisabled(setting) && this.state[setting.key]) || false}\r\n                disabled={this.isDisabled(setting)}\r\n                setByEnv={this.isSetByEnv(setting.key)}\r\n                onChange={this.handleChange}\r\n            />\r\n        );\r\n    }\r\n\r\n    buildPermissionSetting = (setting) => {\r\n        return (\r\n            <BooleanSetting\r\n                key={this.props.schema.id + '_bool_' + setting.key}\r\n                id={setting.key}\r\n                label={this.renderLabel(setting)}\r\n                helpText={this.renderHelpText(setting)}\r\n                value={(!this.isDisabled(setting) && this.state[setting.key]) || false}\r\n                disabled={this.isDisabled(setting)}\r\n                setByEnv={this.isSetByEnv(setting.key)}\r\n                onChange={this.handlePermissionChange}\r\n            />\r\n        );\r\n    }\r\n\r\n    buildDropdownSetting = (setting) => {\r\n        const options = setting.options || [];\r\n        const values = options.map((o) => ({value: o.value, text: Utils.localizeMessage(o.display_name)}));\r\n        const selectedValue = this.state[setting.key] || values[0].value;\r\n\r\n        let selectedOptionForHelpText = null;\r\n        for (const option of options) {\r\n            if (option.help_text && option.value === selectedValue) {\r\n                selectedOptionForHelpText = option;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <DropdownSetting\r\n                key={this.props.schema.id + '_dropdown_' + setting.key}\r\n                id={setting.key}\r\n                values={values}\r\n                label={this.renderLabel(setting)}\r\n                helpText={this.renderHelpText(selectedOptionForHelpText || setting)}\r\n                value={selectedValue}\r\n                disabled={this.isDisabled(setting)}\r\n                setByEnv={this.isSetByEnv(setting.key)}\r\n                onChange={this.handleChange}\r\n            />\r\n        );\r\n    }\r\n\r\n    buildLanguageSetting = (setting) => {\r\n        const locales = I18n.getAllLanguages();\r\n        const values = Object.keys(locales).map((l) => {\r\n            return {value: locales[l].value, text: locales[l].name, order: locales[l].order};\r\n        }).sort((a, b) => a.order - b.order);\r\n\r\n        if (setting.multiple) {\r\n            const noResultText = (\r\n                <FormattedMessage\r\n                    id={setting.no_result}\r\n                    defaultMessage={setting.no_result_default}\r\n                />\r\n            );\r\n            const notPresent = (\r\n                <FormattedMessage\r\n                    id={setting.not_present}\r\n                    defaultMessage={setting.not_present_default}\r\n                />\r\n            );\r\n            return (\r\n                <MultiSelectSetting\r\n                    key={this.props.schema.id + '_language_' + setting.key}\r\n                    id={setting.key}\r\n                    label={this.renderLabel(setting)}\r\n                    values={values}\r\n                    helpText={this.renderHelpText(setting)}\r\n                    selected={(this.state[setting.key] && this.state[setting.key].split(',')) || []}\r\n                    disabled={this.isDisabled(setting)}\r\n                    setByEnv={this.isSetByEnv(setting.key)}\r\n                    onChange={(changedId, value) => this.handleChange(changedId, value.join(','))}\r\n                    noResultText={noResultText}\r\n                    notPresent={notPresent}\r\n                />\r\n            );\r\n        }\r\n        return (\r\n            <DropdownSetting\r\n                key={this.props.schema.id + '_language_' + setting.key}\r\n                id={setting.key}\r\n                label={this.renderLabel(setting)}\r\n                values={values}\r\n                helpText={this.renderHelpText(setting)}\r\n                value={this.state[setting.key] || values[0].value}\r\n                disabled={this.isDisabled(setting)}\r\n                setByEnv={this.isSetByEnv(setting.key)}\r\n                onChange={this.handleChange}\r\n            />\r\n        );\r\n    }\r\n\r\n    buildRadioSetting = (setting) => {\r\n        const options = setting.options || [];\r\n        const values = options.map((o) => ({value: o.value, text: o.display_name}));\r\n\r\n        return (\r\n            <RadioSetting\r\n                key={this.props.schema.id + '_radio_' + setting.key}\r\n                id={setting.key}\r\n                values={values}\r\n                label={this.renderLabel(setting)}\r\n                helpText={this.renderHelpText(setting)}\r\n                value={this.state[setting.key] || values[0]}\r\n                disabled={this.isDisabled(setting)}\r\n                setByEnv={this.isSetByEnv(setting.key)}\r\n                onChange={this.handleChange}\r\n            />\r\n        );\r\n    }\r\n\r\n    buildBannerSetting = (setting) => {\r\n        if (this.isDisabled(setting)) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div\r\n                className={'banner ' + setting.banner_type}\r\n                key={this.props.schema.id + '_bool_' + setting.key}\r\n            >\r\n                <div className='banner__content'>\r\n                    <span>{this.renderBanner(setting)}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    buildGeneratedSetting = (setting) => {\r\n        return (\r\n            <GeneratedSetting\r\n                key={this.props.schema.id + '_generated_' + setting.key}\r\n                id={setting.key}\r\n                label={this.renderLabel(setting)}\r\n                helpText={this.renderHelpText(setting)}\r\n                regenerateHelpText={setting.regenerate_help_text}\r\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default)}\r\n                value={this.state[setting.key] || ''}\r\n                disabled={this.isDisabled(setting)}\r\n                setByEnv={this.isSetByEnv(setting.key)}\r\n                onChange={this.handleGeneratedChange}\r\n            />\r\n        );\r\n    }\r\n\r\n    handleGeneratedChange = (id, s) => {\r\n        this.handleChange(id, s.replace('+', '-').replace('/', '_'));\r\n    }\r\n\r\n    handleChange = (id, value) => {\r\n        let saveNeeded = 'config';\r\n        if (this.state.saveNeeded === 'permissions') {\r\n            saveNeeded = 'both';\r\n        }\r\n        this.setState({\r\n            saveNeeded,\r\n            [id]: value,\r\n        });\r\n\r\n        this.props.setNavigationBlocked(true);\r\n    }\r\n\r\n    handlePermissionChange = (id, value) => {\r\n        let saveNeeded = 'permissions';\r\n        if (this.state.saveNeeded === 'config') {\r\n            saveNeeded = 'both';\r\n        }\r\n        this.setState({\r\n            saveNeeded,\r\n            [id]: value,\r\n        });\r\n\r\n        this.props.setNavigationBlocked(true);\r\n    }\r\n\r\n    buildUsernameSetting = (setting) => {\r\n        return (\r\n            <UserAutocompleteSetting\r\n                key={this.props.schema.id + '_userautocomplete_' + setting.key}\r\n                id={setting.key}\r\n                label={this.renderLabel(setting)}\r\n                helpText={this.renderHelpText(setting)}\r\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default) || Utils.localizeMessage('search_bar.search', 'Search')}\r\n                value={this.state[setting.key] || ''}\r\n                disabled={this.isDisabled(setting)}\r\n                onChange={this.handleChange}\r\n            />\r\n        );\r\n    }\r\n\r\n    buildJobsTableSetting = (setting) => {\r\n        return (\r\n            <JobsTable\r\n                key={this.props.schema.id + '_userautocomplete_' + setting.key}\r\n                jobType={setting.job_type}\r\n                getExtraInfoText={setting.render_job}\r\n                disabled={this.isDisabled(setting)}\r\n                createJobButtonText={\r\n                    <FormattedMessage\r\n                        id={setting.label}\r\n                        defaultMessage={setting.label_default}\r\n                    />\r\n                }\r\n                createJobHelpText={\r\n                    <FormattedMarkdownMessage\r\n                        id={setting.help_text}\r\n                        defaultMessage={setting.help_text_default}\r\n                    />\r\n                }\r\n            />\r\n        );\r\n    }\r\n\r\n    buildFileUploadSetting = (setting) => {\r\n        if (this.state[setting.key]) {\r\n            const removeFile = (id, callback) => {\r\n                const successCallback = () => {\r\n                    this.handleChange(setting.key, '');\r\n                    this.setState({[setting.key]: null, [`${setting.key}Error`]: null});\r\n                };\r\n                const errorCallback = (error) => {\r\n                    callback();\r\n                    this.setState({[setting.key]: null, [`${setting.key}Error`]: error.message});\r\n                };\r\n                setting.remove_action(successCallback, errorCallback);\r\n            };\r\n            return (\r\n                <RemoveFileSetting\r\n                    id={this.props.schema.id}\r\n                    key={this.props.schema.id + '_fileupload_' + setting.key}\r\n                    label={this.renderLabel(setting)}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id={setting.remove_help_text}\r\n                            defaultMessage={setting.remove_help_text_default}\r\n                        />\r\n                    }\r\n                    removeButtonText={Utils.localizeMessage(setting.remove_button_text, setting.remove_button_text_default)}\r\n                    removingText={Utils.localizeMessage(setting.removing_text, setting.removing_text_default)}\r\n                    fileName={this.state[setting.key]}\r\n                    onSubmit={removeFile}\r\n                    disabled={this.isDisabled(setting)}\r\n                    setByEnv={this.isSetByEnv(setting.key)}\r\n                />\r\n            );\r\n        }\r\n        const uploadFile = (id, file, callback) => {\r\n            const successCallback = (filename) => {\r\n                this.handleChange(id, filename);\r\n                this.setState({[setting.key]: filename, [`${setting.key}Error`]: null});\r\n                if (callback && typeof callback === 'function') {\r\n                    callback();\r\n                }\r\n            };\r\n            const errorCallback = (error) => {\r\n                if (callback && typeof callback === 'function') {\r\n                    callback(error.message);\r\n                }\r\n            };\r\n            setting.upload_action(file, successCallback, errorCallback);\r\n        };\r\n        return (\r\n            <FileUploadSetting\r\n                id={setting.key}\r\n                key={this.props.schema.id + '_fileupload_' + setting.key}\r\n                label={this.renderLabel(setting)}\r\n                helpText={this.renderHelpText(setting)}\r\n                uploadingText={Utils.localizeMessage(setting.uploading_text, setting.uploading_text_default)}\r\n                disabled={this.isDisabled(setting)}\r\n                fileType={setting.fileType}\r\n                onSubmit={uploadFile}\r\n                error={this.state.idpCertificateFileError}\r\n                setByEnv={this.isSetByEnv(setting.key)}\r\n            />\r\n        );\r\n    }\r\n\r\n    buildCustomSetting = (setting) => {\r\n        const CustomComponent = setting.component;\r\n        return (\r\n            <CustomComponent\r\n                key={this.props.schema.id + '_userautocomplete_' + setting.key}\r\n                id={setting.key}\r\n                value={this.state[setting.key] || ''}\r\n                disabled={this.isDisabled(setting)}\r\n                setByEnv={this.isSetByEnv(setting.key)}\r\n                onChange={this.handleChange}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderSettings = () => {\r\n        const schema = this.props.schema;\r\n\r\n        if (!schema) {\r\n            return <LoadingScreen/>;\r\n        }\r\n\r\n        const settingsList = [];\r\n        if (schema.settings) {\r\n            schema.settings.forEach((setting) => {\r\n                if (this.buildSettingFunctions[setting.type] && !this.isHidden(setting)) {\r\n                    // This is a hack required as plugin settings are case insensitive\r\n                    let s = setting;\r\n                    if (this.isPlugin) {\r\n                        s = {...setting, key: setting.key.toLowerCase()};\r\n                    }\r\n                    settingsList.push(this.buildSettingFunctions[setting.type](s));\r\n                }\r\n            });\r\n        }\r\n\r\n        let header;\r\n        if (schema.header) {\r\n            header = (\r\n                <div className='banner'>\r\n                    <SchemaText\r\n                        text={schema.header}\r\n                        isMarkdown={true}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let footer;\r\n        if (schema.footer) {\r\n            footer = (\r\n                <div className='banner'>\r\n                    <SchemaText\r\n                        text={schema.footer}\r\n                        isMarkdown={true}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <SettingsGroup container={false}>\r\n                {header}\r\n                {settingsList}\r\n                {footer}\r\n            </SettingsGroup>\r\n        );\r\n    }\r\n\r\n    closeTooltip = () => {\r\n        this.setState({errorTooltip: false});\r\n    }\r\n\r\n    openTooltip = (e) => {\r\n        const elm = e.currentTarget.querySelector('.control-label');\r\n        const isElipsis = elm.offsetWidth < elm.scrollWidth;\r\n        this.setState({errorTooltip: isElipsis});\r\n    }\r\n\r\n    doSubmit = (callback, getStateFromConfig) => {\r\n        this.setState({\r\n            saving: true,\r\n            serverError: null,\r\n        });\r\n\r\n        // clone config so that we aren't modifying data in the stores\r\n        let config = JSON.parse(JSON.stringify(this.props.config));\r\n        config = this.getConfigFromState(config);\r\n\r\n        saveConfig(\r\n            config,\r\n            (savedConfig) => {\r\n                this.setState(getStateFromConfig(savedConfig));\r\n\r\n                this.setState({\r\n                    saveNeeded: false,\r\n                    saving: false,\r\n                });\r\n\r\n                this.props.setNavigationBlocked(false);\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n\r\n                if (this.handleSaved) {\r\n                    this.handleSaved(config);\r\n                }\r\n            },\r\n            (err) => {\r\n                this.setState({\r\n                    saving: false,\r\n                    serverError: err.message,\r\n                    serverErrorId: err.id,\r\n                });\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n\r\n                if (this.handleSaved) {\r\n                    this.handleSaved(config);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    static getConfigValue(config, path) {\r\n        const pathParts = path.split('.');\r\n\r\n        return pathParts.reduce((obj, pathPart) => {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n\r\n            return obj[pathPart];\r\n        }, config);\r\n    }\r\n\r\n    setConfigValue(config, path, value) {\r\n        function setValue(obj, pathParts) {\r\n            const part = pathParts[0];\r\n\r\n            if (pathParts.length === 1) {\r\n                obj[part] = value;\r\n            } else {\r\n                if (obj[part] == null) {\r\n                    obj[part] = {};\r\n                }\r\n\r\n                setValue(obj[part], pathParts.slice(1));\r\n            }\r\n        }\r\n\r\n        setValue(config, path.split('.'));\r\n    }\r\n\r\n    isSetByEnv = (path) => {\r\n        return Boolean(SchemaAdminSettings.getConfigValue(this.props.environmentConfig, path));\r\n    };\r\n\r\n    hybridSchemaAndComponent = () => {\r\n        const schema = this.props.schema;\r\n        if (schema && schema.component && schema.settings) {\r\n            const CustomComponent = schema.component;\r\n            return (\r\n                <CustomComponent {...this.props}/>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render = () => {\r\n        const schema = this.props.schema;\r\n        if (schema && schema.component && !schema.settings) {\r\n            const CustomComponent = schema.component;\r\n            return (\r\n                <CustomComponent {...this.props}/>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className={'wrapper--fixed ' + this.state.customComponentWrapperClass}>\r\n                {this.renderTitle()}\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        <form\r\n                            className='form-horizontal'\r\n                            role='form'\r\n                            onSubmit={this.handleSubmit}\r\n                        >\r\n                            {this.renderSettings()}\r\n                        </form>\r\n                        {this.hybridSchemaAndComponent()}\r\n                    </div>\r\n                </div>\r\n                <div className='admin-console-save'>\r\n                    <SaveButton\r\n                        saving={this.state.saving}\r\n                        disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\r\n                        onClick={this.handleSubmit}\r\n                        savingMessage={Utils.localizeMessage('admin.saving', 'Saving Config...')}\r\n                    />\r\n                    <div\r\n                        className='error-message'\r\n                        ref='errorMessage'\r\n                        onMouseOver={this.openTooltip}\r\n                        onMouseOut={this.closeTooltip}\r\n                    >\r\n                        <FormError error={this.state.serverError}/>\r\n                    </div>\r\n                    <Overlay\r\n                        show={this.state.errorTooltip}\r\n                        delayShow={Constants.OVERLAY_TIME_DELAY}\r\n                        placement='top'\r\n                        target={this.refs.errorMessage}\r\n                    >\r\n                        <Tooltip id='error-tooltip' >\r\n                            {this.state.serverError}\r\n                        </Tooltip>\r\n                    </Overlay>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\n\r\nexport default class DiscardChangesModal extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Bool whether the modal is shown\r\n         */\r\n        show: PropTypes.bool.isRequired,\r\n\r\n        /*\r\n         * Action to call on confirm\r\n         */\r\n        onConfirm: PropTypes.func.isRequired,\r\n\r\n        /*\r\n         * Action to call on cancel\r\n         */\r\n        onCancel: PropTypes.func.isRequired,\r\n\r\n    }\r\n\r\n    render() {\r\n        const title = (\r\n            <FormattedMessage\r\n                id='discard_changes_modal.title'\r\n                defaultMessage='Discard Changes?'\r\n            />\r\n        );\r\n\r\n        const message = (\r\n            <FormattedMessage\r\n                id='discard_changes_modal.message'\r\n                defaultMessage='You have unsaved changes, are you sure you want to discard them?'\r\n            />\r\n        );\r\n\r\n        const buttonClass = 'btn btn-primary';\r\n        const button = (\r\n            <FormattedMessage\r\n                id='discard_changes_modal.leave'\r\n                defaultMessage='Yes, Discard'\r\n            />\r\n        );\r\n\r\n        const modalClass = 'discard-changes-modal';\r\n\r\n        const {show, onConfirm, onCancel} = this.props;\r\n\r\n        return (\r\n            <ConfirmModal\r\n                show={show}\r\n                title={title}\r\n                message={message}\r\n                modalClass={modalClass}\r\n                confirmButtonClass={buttonClass}\r\n                confirmButtonText={button}\r\n                onConfirm={onConfirm}\r\n                onCancel={onCancel}\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Chart from 'chart.js';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nexport default class DoughnutChart extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Chart title\r\n         */\r\n        title: PropTypes.node,\r\n\r\n        /*\r\n         * Chart width\r\n         */\r\n        width: PropTypes.number,\r\n\r\n        /*\r\n         * Chart height\r\n         */\r\n        height: PropTypes.number,\r\n\r\n        /*\r\n         * Chart data\r\n         */\r\n        data: PropTypes.object,\r\n    };\r\n\r\n    chart = null;\r\n\r\n    componentDidMount() {\r\n        this.initChart();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!Utils.areObjectsEqual(prevProps.data, this.props.data)) {\r\n            this.initChart(true);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.chart && this.refs.canvas) {\r\n            this.chart.destroy();\r\n        }\r\n    }\r\n\r\n    initChart = (update) => {\r\n        if (!this.refs.canvas) {\r\n            return;\r\n        }\r\n        var el = ReactDOM.findDOMNode(this.refs.canvas);\r\n        var ctx = el.getContext('2d');\r\n        const dataCopy = JSON.parse(JSON.stringify(this.props.data));\r\n        this.chart = new Chart(ctx, {type: 'doughnut', data: dataCopy, options: {}});\r\n        if (update) {\r\n            this.chart.update();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let content;\r\n        if (this.props.data == null) {\r\n            content = (\r\n                <FormattedMessage\r\n                    id='analytics.chart.loading'\r\n                    defaultMessage='Loading...'\r\n                />\r\n            );\r\n        } else {\r\n            content = (\r\n                <canvas\r\n                    ref='canvas'\r\n                    width={this.props.width}\r\n                    height={this.props.height}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='col-sm-6'>\r\n                <div className='total-count'>\r\n                    <div className='title'>\r\n                        {this.props.title}\r\n                    </div>\r\n                    <div className='content'>\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Chart from 'chart.js';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nexport default class LineChart extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Chart title\r\n         */\r\n        title: PropTypes.node.isRequired,\r\n\r\n        /*\r\n         * Chart width\r\n         */\r\n        width: PropTypes.number.isRequired,\r\n\r\n        /*\r\n         * Chart height\r\n         */\r\n        height: PropTypes.number.isRequired,\r\n\r\n        /*\r\n         * Chart data\r\n         */\r\n        data: PropTypes.object,\r\n    };\r\n\r\n    chart = null;\r\n    chartOptions = {\r\n        legend: {\r\n            display: false,\r\n        },\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.initChart();\r\n    }\r\n\r\n    UNSAFE_componentWillUpdate(nextProps) { // eslint-disable-line camelcase\r\n        const willHaveData = nextProps.data && nextProps.data.labels.length > 0;\r\n        const hasChart = Boolean(this.chart);\r\n\r\n        if (!willHaveData && hasChart) {\r\n            // Clean up the rendered chart before we render and destroy its context\r\n            this.chart.destroy();\r\n            this.chart = null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (Utils.areObjectsEqual(prevProps.data, this.props.data)) {\r\n            return;\r\n        }\r\n\r\n        const hasData = this.props.data && this.props.data.labels.length > 0;\r\n        const hasChart = Boolean(this.chart);\r\n\r\n        if (hasData) {\r\n            // Update the rendered chart or initialize it as necessary\r\n            this.initChart(hasChart);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n            this.chart.destroy();\r\n        }\r\n    }\r\n\r\n    initChart = (update) => {\r\n        if (!this.refs.canvas) {\r\n            return;\r\n        }\r\n\r\n        var el = ReactDOM.findDOMNode(this.refs.canvas);\r\n        var ctx = el.getContext('2d');\r\n        const dataCopy = JSON.parse(JSON.stringify(this.props.data));\r\n        this.chart = new Chart(ctx, {type: 'line', data: dataCopy, options: this.chartOptions || {}});\r\n\r\n        if (update) {\r\n            this.chart.update();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let content;\r\n        if (this.props.data == null) {\r\n            content = (\r\n                <FormattedMessage\r\n                    id='analytics.chart.loading'\r\n                    defaultMessage='Loading...'\r\n                />\r\n            );\r\n        } else if (this.props.data.labels.length === 0) {\r\n            content = (\r\n                <h5>\r\n                    <FormattedMessage\r\n                        id='analytics.chart.meaningful'\r\n                        defaultMessage='Not enough data for a meaningful representation.'\r\n                    />\r\n                </h5>\r\n            );\r\n        } else {\r\n            content = (\r\n                <canvas\r\n                    ref='canvas'\r\n                    width={this.props.width}\r\n                    height={this.props.height}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='col-sm-12'>\r\n                <div className='total-count by-day'>\r\n                    <div className='title'>\r\n                        {this.props.title}\r\n                    </div>\r\n                    <div className='content'>\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default class StatisticCount extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Statistic title\r\n         */\r\n        title: PropTypes.node.isRequired,\r\n\r\n        /*\r\n         * Statistic icon\r\n         */\r\n        icon: PropTypes.string.isRequired,\r\n\r\n        /*\r\n         * Data count\r\n         */\r\n        count: PropTypes.number,\r\n    }\r\n\r\n    render() {\r\n        const loading = (\r\n            <FormattedMessage\r\n                id='analytics.chart.loading'\r\n                defaultMessage='Loading...'\r\n            />\r\n        );\r\n\r\n        return (\r\n            <div className='col-lg-3 col-md-4 col-sm-6'>\r\n                <div className='total-count'>\r\n                    <div className='title'>\r\n                        {this.props.title}\r\n                        <i className={'fa ' + this.props.icon}/>\r\n                    </div>\r\n                    <div className='content'>{isNaN(this.props.count) ? loading : this.props.count}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nexport function formatChannelDoughtnutData(totalPublic, totalPrivate) {\r\n    const channelTypeData = {\r\n        labels: [\r\n            Utils.localizeMessage('analytics.system.publicChannels', 'Public Channels'),\r\n            Utils.localizeMessage('analytics.system.privateGroups', 'Private Channels'),\r\n        ],\r\n        datasets: [{\r\n            data: [totalPublic, totalPrivate],\r\n            backgroundColor: ['#46BFBD', '#FDB45C'],\r\n            hoverBackgroundColor: ['#5AD3D1', '#FFC870'],\r\n        }],\r\n    };\r\n\r\n    return channelTypeData;\r\n}\r\n\r\nexport function formatPostDoughtnutData(filePosts, hashtagPosts, totalPosts) {\r\n    const postTypeData = {\r\n        labels: [\r\n            Utils.localizeMessage('analytics.system.totalFilePosts', 'Posts with Files'),\r\n            Utils.localizeMessage('analytics.system.totalHashtagPosts', 'Posts with Hashtags'),\r\n            Utils.localizeMessage('analytics.system.textPosts', 'Posts with Text-only'),\r\n        ],\r\n        datasets: [{\r\n            data: [filePosts, hashtagPosts, (totalPosts - filePosts - hashtagPosts)],\r\n            backgroundColor: ['#46BFBD', '#F7464A', '#FDB45C'],\r\n            hoverBackgroundColor: ['#5AD3D1', '#FF5A5E', '#FFC870'],\r\n        }],\r\n    };\r\n\r\n    return postTypeData;\r\n}\r\n\r\nexport function formatPostsPerDayData(data) {\r\n    var chartData = {\r\n        labels: [],\r\n        datasets: [{\r\n            fillColor: 'rgba(151,187,205,0.2)',\r\n            borderColor: 'rgba(151,187,205,1)',\r\n            pointBackgroundColor: 'rgba(151,187,205,1)',\r\n            pointBorderColor: '#fff',\r\n            pointHoverBackgroundColor: '#fff',\r\n            pointHoverBorderColor: 'rgba(151,187,205,1)',\r\n            data: [],\r\n        }],\r\n    };\r\n\r\n    for (var index in data) {\r\n        if (data[index]) {\r\n            var row = data[index];\r\n            chartData.labels.push(row.name);\r\n            chartData.datasets[0].data.push(row.value);\r\n        }\r\n    }\r\n\r\n    return chartData;\r\n}\r\n\r\nexport function formatUsersWithPostsPerDayData(data) {\r\n    var chartData = {\r\n        labels: [],\r\n        datasets: [{\r\n            label: '',\r\n            fillColor: 'rgba(151,187,205,0.2)',\r\n            borderColor: 'rgba(151,187,205,1)',\r\n            pointBackgroundColor: 'rgba(151,187,205,1)',\r\n            pointBorderColor: '#fff',\r\n            pointHoverBackgroundColor: '#fff',\r\n            pointHoverBorderColor: 'rgba(151,187,205,1)',\r\n            data: [],\r\n        }],\r\n    };\r\n\r\n    for (var index in data) {\r\n        if (data[index]) {\r\n            var row = data[index];\r\n            chartData.labels.push(row.name);\r\n            chartData.datasets[0].data.push(row.value);\r\n        }\r\n    }\r\n\r\n    return chartData;\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as AdminActions from 'actions/admin_actions.jsx';\r\nimport Constants from 'utils/constants.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header.jsx';\r\n\r\nimport DoughnutChart from '../doughnut_chart.jsx';\r\nimport LineChart from '../line_chart.jsx';\r\nimport StatisticCount from '../statistic_count.jsx';\r\n\r\nimport {\r\n    formatPostsPerDayData,\r\n    formatUsersWithPostsPerDayData,\r\n    formatChannelDoughtnutData,\r\n    formatPostDoughtnutData,\r\n} from '../format.jsx';\r\n\r\nconst StatTypes = Constants.StatTypes;\r\n\r\nexport default class SystemAnalytics extends React.PureComponent {\r\n    static propTypes = {\r\n        isLicensed: PropTypes.bool.isRequired,\r\n        stats: PropTypes.object,\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminActions.getStandardAnalytics();\r\n        AdminActions.getPostsPerDayAnalytics();\r\n        AdminActions.getUsersPerDayAnalytics();\r\n\r\n        if (this.props.isLicensed) {\r\n            AdminActions.getAdvancedAnalytics();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const stats = this.props.stats;\r\n        const isLicensed = this.props.isLicensed;\r\n        const skippedIntensiveQueries = stats[StatTypes.TOTAL_POSTS] === -1;\r\n        const postCountsDay = formatPostsPerDayData(stats[StatTypes.POST_PER_DAY]);\r\n        const userCountsWithPostsDay = formatUsersWithPostsPerDayData(stats[StatTypes.USERS_WITH_POSTS_PER_DAY]);\r\n\r\n        let banner;\r\n        let postCount;\r\n        let postTotalGraph;\r\n        let activeUserGraph;\r\n        if (skippedIntensiveQueries) {\r\n            banner = (\r\n                <div className='banner'>\r\n                    <div className='banner__content'>\r\n                        <FormattedMarkdownMessage\r\n                            id='analytics.system.skippedIntensiveQueries'\r\n                            defaultMessage='To maximize performance, some statistics are disabled. You can [re-enable them in config.json](!https://docs.mattermost.com/administration/statistics.html).'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            postCount = (\r\n                <StatisticCount\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='analytics.system.totalPosts'\r\n                            defaultMessage='Total Posts'\r\n                        />\r\n                    }\r\n                    icon='fa-comment'\r\n                    count={stats[StatTypes.TOTAL_POSTS]}\r\n                />\r\n            );\r\n\r\n            postTotalGraph = (\r\n                <div className='row'>\r\n                    <LineChart\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='analytics.system.totalPosts'\r\n                                defaultMessage='Total Posts'\r\n                            />\r\n                        }\r\n                        data={postCountsDay}\r\n                        width={740}\r\n                        height={225}\r\n                    />\r\n                </div>\r\n            );\r\n\r\n            activeUserGraph = (\r\n                <div className='row'>\r\n                    <LineChart\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='analytics.system.activeUsers'\r\n                                defaultMessage='Active Users With Posts'\r\n                            />\r\n                        }\r\n                        data={userCountsWithPostsDay}\r\n                        width={740}\r\n                        height={225}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let advancedStats;\r\n        let advancedGraphs;\r\n        let sessionCount;\r\n        let commandCount;\r\n        let incomingCount;\r\n        let outgoingCount;\r\n        if (this.props.isLicensed) {\r\n            sessionCount = (\r\n                <StatisticCount\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='analytics.system.totalSessions'\r\n                            defaultMessage='Total Sessions'\r\n                        />\r\n                    }\r\n                    icon='fa-signal'\r\n                    count={stats[StatTypes.TOTAL_SESSIONS]}\r\n                />\r\n            );\r\n\r\n            commandCount = (\r\n                <StatisticCount\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='analytics.system.totalCommands'\r\n                            defaultMessage='Total Commands'\r\n                        />\r\n                    }\r\n                    icon='fa-terminal'\r\n                    count={stats[StatTypes.TOTAL_COMMANDS]}\r\n                />\r\n            );\r\n\r\n            incomingCount = (\r\n                <StatisticCount\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='analytics.system.totalIncomingWebhooks'\r\n                            defaultMessage='Incoming Webhooks'\r\n                        />\r\n                    }\r\n                    icon='fa-arrow-down'\r\n                    count={stats[StatTypes.TOTAL_IHOOKS]}\r\n                />\r\n            );\r\n\r\n            outgoingCount = (\r\n                <StatisticCount\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='analytics.system.totalOutgoingWebhooks'\r\n                            defaultMessage='Outgoing Webhooks'\r\n                        />\r\n                    }\r\n                    icon='fa-arrow-up'\r\n                    count={stats[StatTypes.TOTAL_OHOOKS]}\r\n                />\r\n            );\r\n\r\n            advancedStats = (\r\n                <div>\r\n                    <StatisticCount\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='analytics.system.totalWebsockets'\r\n                                defaultMessage='WebSocket Conns'\r\n                            />\r\n                        }\r\n                        icon='fa-user'\r\n                        count={stats[StatTypes.TOTAL_WEBSOCKET_CONNECTIONS]}\r\n                    />\r\n                    <StatisticCount\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='analytics.system.totalMasterDbConnections'\r\n                                defaultMessage='Master DB Conns'\r\n                            />\r\n                        }\r\n                        icon='fa-terminal'\r\n                        count={stats[StatTypes.TOTAL_MASTER_DB_CONNECTIONS]}\r\n                    />\r\n                    <StatisticCount\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='analytics.system.totalReadDbConnections'\r\n                                defaultMessage='Replica DB Conns'\r\n                            />\r\n                        }\r\n                        icon='fa-terminal'\r\n                        count={stats[StatTypes.TOTAL_READ_DB_CONNECTIONS]}\r\n                    />\r\n                </div>\r\n            );\r\n\r\n            const channelTypeData = formatChannelDoughtnutData(stats[StatTypes.TOTAL_PUBLIC_CHANNELS], stats[StatTypes.TOTAL_PRIVATE_GROUPS]);\r\n            const postTypeData = formatPostDoughtnutData(stats[StatTypes.TOTAL_FILE_POSTS], stats[StatTypes.TOTAL_HASHTAG_POSTS], stats[StatTypes.TOTAL_POSTS]);\r\n\r\n            let postTypeGraph;\r\n            if (stats[StatTypes.TOTAL_POSTS] !== -1) {\r\n                postTypeGraph = (\r\n                    <DoughnutChart\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='analytics.system.postTypes'\r\n                                defaultMessage='Posts, Files and Hashtags'\r\n                            />\r\n                        }\r\n                        data={postTypeData}\r\n                        width={300}\r\n                        height={225}\r\n                    />\r\n                );\r\n            }\r\n\r\n            advancedGraphs = (\r\n                <div className='row'>\r\n                    <DoughnutChart\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='analytics.system.channelTypes'\r\n                                defaultMessage='Channel Types'\r\n                            />\r\n                        }\r\n                        data={channelTypeData}\r\n                        width={300}\r\n                        height={225}\r\n                    />\r\n                    {postTypeGraph}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const userCount = (\r\n            <StatisticCount\r\n                title={\r\n                    <FormattedMessage\r\n                        id='analytics.system.totalUsers'\r\n                        defaultMessage='Total Active Users'\r\n                    />\r\n                }\r\n                icon='fa-user'\r\n                count={stats[StatTypes.TOTAL_USERS]}\r\n            />\r\n        );\r\n\r\n        const teamCount = (\r\n            <StatisticCount\r\n                title={\r\n                    <FormattedMessage\r\n                        id='analytics.system.totalTeams'\r\n                        defaultMessage='Total Teams'\r\n                    />\r\n                }\r\n                icon='fa-users'\r\n                count={stats[StatTypes.TOTAL_TEAMS]}\r\n            />\r\n        );\r\n\r\n        const channelCount = (\r\n            <StatisticCount\r\n                title={\r\n                    <FormattedMessage\r\n                        id='analytics.system.totalChannels'\r\n                        defaultMessage='Total Channels'\r\n                    />\r\n                }\r\n                icon='fa-globe'\r\n                count={stats[StatTypes.TOTAL_PUBLIC_CHANNELS] + stats[StatTypes.TOTAL_PRIVATE_GROUPS]}\r\n            />\r\n        );\r\n\r\n        const dailyActiveUsers = (\r\n            <StatisticCount\r\n                title={\r\n                    <FormattedMessage\r\n                        id='analytics.system.dailyActiveUsers'\r\n                        defaultMessage='Daily Active Users'\r\n                    />\r\n                }\r\n                icon='fa-users'\r\n                count={stats[StatTypes.DAILY_ACTIVE_USERS]}\r\n            />\r\n        );\r\n\r\n        const monthlyActiveUsers = (\r\n            <StatisticCount\r\n                title={\r\n                    <FormattedMessage\r\n                        id='analytics.system.monthlyActiveUsers'\r\n                        defaultMessage='Monthly Active Users'\r\n                    />\r\n                }\r\n                icon='fa-users'\r\n                count={stats[StatTypes.MONTHLY_ACTIVE_USERS]}\r\n            />\r\n        );\r\n\r\n        let firstRow;\r\n        let secondRow;\r\n        if (isLicensed && skippedIntensiveQueries) {\r\n            firstRow = (\r\n                <div>\r\n                    {userCount}\r\n                    {teamCount}\r\n                    {channelCount}\r\n                    {sessionCount}\r\n                </div>\r\n            );\r\n\r\n            secondRow = (\r\n                <div>\r\n                    {commandCount}\r\n                    {incomingCount}\r\n                    {outgoingCount}\r\n                </div>\r\n            );\r\n        } else if (isLicensed && !skippedIntensiveQueries) {\r\n            firstRow = (\r\n                <div>\r\n                    {userCount}\r\n                    {teamCount}\r\n                    {channelCount}\r\n                    {postCount}\r\n                </div>\r\n            );\r\n\r\n            secondRow = (\r\n                <div>\r\n                    {sessionCount}\r\n                    {commandCount}\r\n                    {incomingCount}\r\n                    {outgoingCount}\r\n                </div>\r\n            );\r\n        } else if (!isLicensed) {\r\n            firstRow = (\r\n                <div>\r\n                    {userCount}\r\n                    {teamCount}\r\n                    {channelCount}\r\n                    {postCount}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const thirdRow = (\r\n            <div>\r\n                {dailyActiveUsers}\r\n                {monthlyActiveUsers}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className='wrapper--fixed team_statistics'>\r\n                <FormattedAdminHeader\r\n                    id='analytics.system.title'\r\n                    defaultMessage='System Statistics'\r\n                />\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        {banner}\r\n                        <div className='row'>\r\n                            {firstRow}\r\n                            {secondRow}\r\n                            {thirdRow}\r\n                            {advancedStats}\r\n                        </div>\r\n                        {advancedGraphs}\r\n                        {postTotalGraph}\r\n                        {activeUserGraph}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport SystemAnalytics from './system_analytics.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const license = getLicense(state);\r\n    const isLicensed = license.IsLicensed === 'true';\r\n\r\n    return {\r\n        isLicensed,\r\n        stats: state.entities.admin.analytics,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SystemAnalytics);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default function Banner(props) {\r\n    let title = (\r\n        <FormattedMessage\r\n            id='admin.banner.heading'\r\n            defaultMessage='Note:'\r\n        />\r\n    );\r\n\r\n    if (props.title) {\r\n        title = props.title;\r\n    }\r\n\r\n    return (\r\n        <div className='banner'>\r\n            <div className='banner__content'>\r\n                <h4 className='banner__heading'>\r\n                    {title}\r\n                </h4>\r\n                <p>\r\n                    {props.description}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nBanner.defaultProps = {\r\n};\r\nBanner.propTypes = {\r\n    title: PropTypes.node,\r\n    description: PropTypes.node.isRequired,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\r\n\r\nimport Constants from 'utils/constants.jsx';\r\n\r\nexport default class TableChart extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Table title\r\n         */\r\n        title: PropTypes.node.isRequired,\r\n\r\n        /*\r\n         * Table data\r\n         */\r\n        data: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                name: PropTypes.string.isRequired,\r\n                tip: PropTypes.string.isRequired,\r\n                value: PropTypes.node.isRequired,\r\n            })\r\n        ).isRequired,\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='col-sm-6'>\r\n                <div className='total-count recent-active-users'>\r\n                    <div className='title'>\r\n                        {this.props.title}\r\n                    </div>\r\n                    <div className='content'>\r\n                        <table>\r\n                            <tbody>\r\n                                {\r\n                                    this.props.data.map((item) => {\r\n                                        const tooltip = (\r\n                                            <Tooltip id={'tip-table-entry-' + item.name}>\r\n                                                {item.tip}\r\n                                            </Tooltip>\r\n                                        );\r\n\r\n                                        return (\r\n                                            <tr key={'table-entry-' + item.name}>\r\n                                                <td>\r\n                                                    <OverlayTrigger\r\n                                                        trigger={['hover', 'focus']}\r\n                                                        delayShow={Constants.OVERLAY_TIME_DELAY}\r\n                                                        placement='top'\r\n                                                        overlay={tooltip}\r\n                                                    >\r\n                                                        <time>\r\n                                                            {item.name}\r\n                                                        </time>\r\n                                                    </OverlayTrigger>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {item.value}\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedDate, FormattedMessage} from 'react-intl';\r\nimport {General} from 'mattermost-redux/constants';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nimport * as AdminActions from 'actions/admin_actions.jsx';\r\nimport BrowserStore from 'stores/browser_store.jsx';\r\nimport {StatTypes} from 'utils/constants.jsx';\r\nimport Banner from 'components/admin_console/banner.jsx';\r\nimport LineChart from 'components/analytics/line_chart.jsx';\r\nimport StatisticCount from 'components/analytics/statistic_count.jsx';\r\nimport TableChart from 'components/analytics/table_chart.jsx';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\n\r\nimport {getMonthLong} from 'utils/i18n';\r\n\r\nimport {formatPostsPerDayData, formatUsersWithPostsPerDayData} from '../format.jsx';\r\n\r\nconst LAST_ANALYTICS_TEAM = 'last_analytics_team';\r\n\r\nexport default class TeamAnalytics extends React.Component {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Array of team objects\r\n         */\r\n        teams: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\r\n        /*\r\n         * Initial team to load analytics for\r\n         */\r\n        initialTeam: PropTypes.object,\r\n\r\n        /**\r\n         * The locale of the current user\r\n          */\r\n        locale: PropTypes.string.isRequired,\r\n        stats: PropTypes.object.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /*\r\n             * Function to get teams\r\n             */\r\n            getTeams: PropTypes.func.isRequired,\r\n\r\n            /*\r\n             * Function to get users in a team\r\n             */\r\n            getProfilesInTeam: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            team: props.initialTeam,\r\n            recentlyActiveUsers: [],\r\n            newUsers: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.team) {\r\n            this.getData(this.state.team.id);\r\n        }\r\n\r\n        this.props.actions.getTeams(0, 1000);\r\n    }\r\n\r\n    UNSAFE_componentWillUpdate(nextProps, nextState) { // eslint-disable-line camelcase\r\n        if (nextState.team && nextState.team !== this.state.team) {\r\n            this.getData(nextState.team.id);\r\n        }\r\n    }\r\n\r\n    getData = async (id) => {\r\n        AdminActions.getStandardAnalytics(id);\r\n        AdminActions.getPostsPerDayAnalytics(id);\r\n        AdminActions.getUsersPerDayAnalytics(id);\r\n        const {data: recentlyActiveUsers} = await this.props.actions.getProfilesInTeam(id, 0, General.PROFILE_CHUNK_SIZE, 'last_activity_at');\r\n        const {data: newUsers} = await this.props.actions.getProfilesInTeam(id, 0, General.PROFILE_CHUNK_SIZE, 'create_at');\r\n\r\n        this.setState({\r\n            recentlyActiveUsers,\r\n            newUsers,\r\n        });\r\n    }\r\n\r\n    handleTeamChange = (e) => {\r\n        const teamId = e.target.value;\r\n\r\n        let team;\r\n        this.props.teams.forEach((t) => {\r\n            if (t.id === teamId) {\r\n                team = t;\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            team,\r\n        });\r\n\r\n        BrowserStore.setGlobalItem(LAST_ANALYTICS_TEAM, teamId);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.teams.length === 0 || !this.state.team || !this.props.stats[this.state.team.id]) {\r\n            return <LoadingScreen/>;\r\n        }\r\n\r\n        if (this.state.team == null) {\r\n            return (\r\n                <Banner\r\n                    description={\r\n                        <FormattedMessage\r\n                            id='analytics.team.noTeams'\r\n                            defaultMessage='There are no teams on this server for which to view statistics.'\r\n                        />\r\n                    }\r\n                />\r\n            );\r\n        }\r\n\r\n        const stats = this.props.stats[this.state.team.id];\r\n        const postCountsDay = formatPostsPerDayData(stats[StatTypes.POST_PER_DAY]);\r\n        const userCountsWithPostsDay = formatUsersWithPostsPerDayData(stats[StatTypes.USERS_WITH_POSTS_PER_DAY]);\r\n\r\n        let banner = (\r\n            <div className='banner'>\r\n                <div className='banner__content'>\r\n                    <FormattedMessage\r\n                        id='analytics.system.info'\r\n                        defaultMessage='Only data for the chosen team is calculated. Excludes posts made in direct message channels, which are not tied to a team.'\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        let totalPostsCount;\r\n        let postTotalGraph;\r\n        let userActiveGraph;\r\n        if (stats[StatTypes.TOTAL_POSTS] === -1) {\r\n            banner = (\r\n                <div className='banner'>\r\n                    <div className='banner__content'>\r\n                        <FormattedMarkdownMessage\r\n                            id='analytics.system.infoAndSkippedIntensiveQueries'\r\n                            defaultMessage='Only data for the chosen team is calculated. Excludes posts made in direct message channels, which are not tied to a team. \\n \\n Some statistics have been omitted because they put too much load on the system to calculate. See [https://docs.mattermost.com/administration/statistics.html](!https://docs.mattermost.com/administration/statistics.html) for more details.'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            totalPostsCount = (\r\n                <StatisticCount\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='analytics.team.totalPosts'\r\n                            defaultMessage='Total Posts'\r\n                        />\r\n                    }\r\n                    icon='fa-comment'\r\n                    count={stats[StatTypes.TOTAL_POSTS]}\r\n                />\r\n            );\r\n\r\n            postTotalGraph = (\r\n                <div className='row'>\r\n                    <LineChart\r\n                        key={this.state.team.id}\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='analytics.team.totalPosts'\r\n                                defaultMessage='Total Posts'\r\n                            />\r\n                        }\r\n                        data={postCountsDay}\r\n                        width={740}\r\n                        height={225}\r\n                    />\r\n                </div>\r\n            );\r\n\r\n            userActiveGraph = (\r\n                <div className='row'>\r\n                    <LineChart\r\n                        key={this.state.team.id}\r\n                        title={\r\n                            <FormattedMessage\r\n                                id='analytics.team.activeUsers'\r\n                                defaultMessage='Active Users With Posts'\r\n                            />\r\n                        }\r\n                        data={userCountsWithPostsDay}\r\n                        width={740}\r\n                        height={225}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const recentActiveUsers = formatRecentUsersData(this.state.recentlyActiveUsers, this.props.locale);\r\n        const newlyCreatedUsers = formatNewUsersData(this.state.newUsers, this.props.locale);\r\n\r\n        const teams = this.props.teams.sort((a, b) => {\r\n            const aName = a.display_name.toUpperCase();\r\n            const bName = b.display_name.toUpperCase();\r\n            if (aName === bName) {\r\n                return 0;\r\n            }\r\n            if (aName > bName) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        }).map((team) => {\r\n            return (\r\n                <option\r\n                    key={team.id}\r\n                    value={team.id}\r\n                >\r\n                    {team.display_name}\r\n                </option>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className='wrapper--fixed team_statistics'>\r\n                <div className='admin-console__header team-statistics__header-row'>\r\n                    <div className='team-statistics__header'>\r\n                        <FormattedMarkdownMessage\r\n                            id='analytics.team.title'\r\n                            defaultMessage='Team Statistics for {team}'\r\n                            values={{\r\n                                team: this.state.team.display_name,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className='team-statistics__team-filter'>\r\n                        <select\r\n                            className='form-control team-statistics__team-filter__dropdown'\r\n                            onChange={this.handleTeamChange}\r\n                            value={this.state.team.id}\r\n                        >\r\n                            {teams}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        {banner}\r\n                        <div className='row'>\r\n                            <StatisticCount\r\n                                title={\r\n                                    <FormattedMessage\r\n                                        id='analytics.team.totalUsers'\r\n                                        defaultMessage='Total Active Users'\r\n                                    />\r\n                                }\r\n                                icon='fa-users'\r\n                                count={stats[StatTypes.TOTAL_USERS]}\r\n                            />\r\n                            <StatisticCount\r\n                                title={\r\n                                    <FormattedMessage\r\n                                        id='analytics.team.publicChannels'\r\n                                        defaultMessage='Public Channels'\r\n                                    />\r\n                                }\r\n                                icon='fa-globe'\r\n                                count={stats[StatTypes.TOTAL_PUBLIC_CHANNELS]}\r\n                            />\r\n                            <StatisticCount\r\n                                title={\r\n                                    <FormattedMessage\r\n                                        id='analytics.team.privateGroups'\r\n                                        defaultMessage='Private Channels'\r\n                                    />\r\n                                }\r\n                                icon='fa-lock'\r\n                                count={stats[StatTypes.TOTAL_PRIVATE_GROUPS]}\r\n                            />\r\n                            {totalPostsCount}\r\n                        </div>\r\n                        {postTotalGraph}\r\n                        {userActiveGraph}\r\n                        <div className='row'>\r\n                            <TableChart\r\n                                title={\r\n                                    <FormattedMessage\r\n                                        id='analytics.team.recentUsers'\r\n                                        defaultMessage='Recent Active Users'\r\n                                    />\r\n                                }\r\n                                data={recentActiveUsers}\r\n                            />\r\n                            <TableChart\r\n                                title={\r\n                                    <FormattedMessage\r\n                                        id='analytics.team.newlyCreated'\r\n                                        defaultMessage='Newly Created Users'\r\n                                    />\r\n                                }\r\n                                data={newlyCreatedUsers}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport function formatRecentUsersData(data, locale) {\r\n    if (data == null) {\r\n        return [];\r\n    }\r\n\r\n    const formattedData = data.map((user) => {\r\n        const item = {};\r\n        item.name = user.username;\r\n        item.value = (\r\n            <FormattedDate\r\n                value={user.last_activity_at}\r\n                day='numeric'\r\n                month={getMonthLong(locale)}\r\n                year='numeric'\r\n                hour12={true}\r\n                hour='2-digit'\r\n                minute='2-digit'\r\n            />\r\n        );\r\n        item.tip = user.email;\r\n\r\n        return item;\r\n    });\r\n\r\n    return formattedData;\r\n}\r\n\r\nexport function formatNewUsersData(data, locale) {\r\n    if (data == null) {\r\n        return [];\r\n    }\r\n\r\n    const formattedData = data.map((user) => {\r\n        const item = {};\r\n        item.name = user.username;\r\n        item.value = (\r\n            <FormattedDate\r\n                value={user.create_at}\r\n                day='numeric'\r\n                month={getMonthLong(locale)}\r\n                year='numeric'\r\n                hour12={true}\r\n                hour='2-digit'\r\n                minute='2-digit'\r\n            />\r\n        );\r\n        item.tip = user.email;\r\n\r\n        return item;\r\n    });\r\n\r\n    return formattedData;\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getTeams} from 'mattermost-redux/actions/teams';\r\nimport {getProfilesInTeam} from 'mattermost-redux/actions/users';\r\nimport {getTeamsList} from 'mattermost-redux/selectors/entities/teams';\r\n\r\nimport BrowserStore from 'stores/browser_store.jsx';\r\nimport {getCurrentLocale} from 'selectors/i18n';\r\n\r\nimport TeamAnalytics from './team_analytics.jsx';\r\n\r\nconst LAST_ANALYTICS_TEAM = 'last_analytics_team';\r\n\r\nfunction mapStateToProps(state) {\r\n    const teams = getTeamsList(state);\r\n    const teamId = BrowserStore.getGlobalItem(LAST_ANALYTICS_TEAM, null);\r\n    const initialTeam = state.entities.teams.teams[teamId] || (teams.length > 0 ? teams[0] : null);\r\n\r\n    return {\r\n        initialTeam,\r\n        locale: getCurrentLocale(state),\r\n        teams,\r\n        stats: state.entities.admin.teamAnalytics,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getTeams,\r\n            getProfilesInTeam,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamAnalytics);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Overlay, Tooltip} from 'react-bootstrap';\r\n\r\nimport {saveConfig} from 'actions/admin_actions.jsx';\r\nimport {localizeMessage} from 'utils/utils.jsx';\r\nimport SaveButton from 'components/save_button.jsx';\r\nimport FormError from 'components/form_error.jsx';\r\nimport Constants from 'utils/constants.jsx';\r\n\r\nimport AdminHeader from 'components/widgets/admin_console/admin_header.jsx';\r\n\r\nexport default class AdminSettings extends React.Component {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Object representing the config file\r\n         */\r\n        config: PropTypes.object,\r\n\r\n        /*\r\n         * Object containing config fields that have been set through environment variables\r\n         */\r\n        environmentConfig: PropTypes.object,\r\n\r\n        /*\r\n         * Action for whether a save is needed\r\n         */\r\n        setNavigationBlocked: PropTypes.func,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = Object.assign(this.getStateFromConfig(props.config), {\r\n            saveNeeded: false,\r\n            saving: false,\r\n            serverError: null,\r\n            errorTooltip: false,\r\n        });\r\n    }\r\n\r\n    closeTooltip = () => {\r\n        this.setState({errorTooltip: false});\r\n    }\r\n\r\n    openTooltip = (e) => {\r\n        const elm = e.currentTarget.querySelector('.control-label');\r\n        const isElipsis = elm.offsetWidth < elm.scrollWidth;\r\n        this.setState({errorTooltip: isElipsis});\r\n    }\r\n\r\n    handleChange = (id, value) => {\r\n        this.setState({\r\n            saveNeeded: true,\r\n            [id]: value,\r\n        });\r\n\r\n        this.props.setNavigationBlocked(true);\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.doSubmit();\r\n    }\r\n\r\n    doSubmit = (callback) => {\r\n        this.setState({\r\n            saving: true,\r\n            serverError: null,\r\n        });\r\n\r\n        // clone config so that we aren't modifying data in the stores\r\n        let config = JSON.parse(JSON.stringify(this.props.config));\r\n        config = this.getConfigFromState(config);\r\n\r\n        saveConfig(\r\n            config,\r\n            (savedConfig) => {\r\n                this.setState(this.getStateFromConfig(savedConfig));\r\n\r\n                this.setState({\r\n                    saveNeeded: false,\r\n                    saving: false,\r\n                });\r\n\r\n                this.props.setNavigationBlocked(false);\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n\r\n                if (this.handleSaved) {\r\n                    this.handleSaved(config);\r\n                }\r\n            },\r\n            (err) => {\r\n                this.setState({\r\n                    saving: false,\r\n                    serverError: err.message,\r\n                    serverErrorId: err.id,\r\n                });\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n\r\n                if (this.handleSaved) {\r\n                    this.handleSaved(config);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    parseInt = (str, defaultValue) => {\r\n        const n = parseInt(str, 10);\r\n\r\n        if (isNaN(n)) {\r\n            if (defaultValue) {\r\n                return defaultValue;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        return n;\r\n    };\r\n\r\n    parseIntNonNegative = (str, defaultValue) => {\r\n        const n = parseInt(str, 10);\r\n\r\n        if (isNaN(n) || n < 0) {\r\n            if (defaultValue) {\r\n                return defaultValue;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        return n;\r\n    };\r\n\r\n    parseIntNonZero = (str, defaultValue, minimumValue = 1) => {\r\n        const n = parseInt(str, 10);\r\n\r\n        if (isNaN(n) || n < minimumValue) {\r\n            if (defaultValue) {\r\n                return defaultValue;\r\n            }\r\n            return 1;\r\n        }\r\n\r\n        return n;\r\n    };\r\n\r\n    getConfigValue(config, path) {\r\n        const pathParts = path.split('.');\r\n\r\n        return pathParts.reduce((obj, pathPart) => {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n\r\n            return obj[pathPart];\r\n        }, config);\r\n    }\r\n\r\n    setConfigValue(config, path, value) {\r\n        function setValue(obj, pathParts) {\r\n            const part = pathParts[0];\r\n\r\n            if (pathParts.length === 1) {\r\n                obj[part] = value;\r\n            } else {\r\n                if (obj[part] == null) {\r\n                    obj[part] = {};\r\n                }\r\n\r\n                setValue(obj[part], pathParts.slice(1));\r\n            }\r\n        }\r\n\r\n        setValue(config, path.split('.'));\r\n    }\r\n\r\n    isSetByEnv = (path) => {\r\n        return Boolean(this.getConfigValue(this.props.environmentConfig, path));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                className='form-horizontal'\r\n                role='form'\r\n                onSubmit={this.handleSubmit}\r\n            >\r\n                <div className='wrapper--fixed'>\r\n                    <AdminHeader>\r\n                        {this.renderTitle()}\r\n                    </AdminHeader>\r\n                    {this.renderSettings()}\r\n                    <div className='admin-console-save'>\r\n                        <SaveButton\r\n                            saving={this.state.saving}\r\n                            disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\r\n                            onClick={this.handleSubmit}\r\n                            savingMessage={localizeMessage('admin.saving', 'Saving Config...')}\r\n                        />\r\n                        <div\r\n                            className='error-message'\r\n                            ref='errorMessage'\r\n                            onMouseOver={this.openTooltip}\r\n                            onMouseOut={this.closeTooltip}\r\n                        >\r\n                            <FormError error={this.state.serverError}/>\r\n                        </div>\r\n                        <Overlay\r\n                            show={this.state.errorTooltip}\r\n                            delayShow={Constants.OVERLAY_TIME_DELAY}\r\n                            placement='top'\r\n                            target={this.refs.errorMessage}\r\n                        >\r\n                            <Tooltip id='error-tooltip' >\r\n                                {this.state.serverError}\r\n                            </Tooltip>\r\n                        </Overlay>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\nimport PluginState from 'mattermost-redux/constants/plugins';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\n\r\nimport AdminSettings from '../admin_settings.jsx';\r\nimport BooleanSetting from '../boolean_setting.jsx';\r\nimport SettingsGroup from '../settings_group.jsx';\r\n\r\nconst PluginItemState = ({state}) => {\r\n    switch (state) {\r\n    case PluginState.PLUGIN_STATE_NOT_RUNNING:\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.plugin.state.not_running'\r\n                defaultMessage='Not running'\r\n            />\r\n        );\r\n    case PluginState.PLUGIN_STATE_STARTING:\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.plugin.state.starting'\r\n                defaultMessage='Starting'\r\n            />\r\n        );\r\n    case PluginState.PLUGIN_STATE_RUNNING:\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.plugin.state.running'\r\n                defaultMessage='Running'\r\n            />\r\n        );\r\n    case PluginState.PLUGIN_STATE_FAILED_TO_START:\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.plugin.state.failed_to_start'\r\n                defaultMessage='Failed to start'\r\n            />\r\n        );\r\n    case PluginState.PLUGIN_STATE_FAILED_TO_STAY_RUNNING:\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.plugin.state.failed_to_stay_running'\r\n                defaultMessage='Crashing'\r\n            />\r\n        );\r\n    case PluginState.PLUGIN_STATE_STOPPING:\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.plugin.state.stopping'\r\n                defaultMessage='Stopping'\r\n            />\r\n        );\r\n    default:\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.plugin.state.unknown'\r\n                defaultMessage='Unknown'\r\n            />\r\n        );\r\n    }\r\n};\r\n\r\nPluginItemState.propTypes = {\r\n    state: PropTypes.number.isRequired,\r\n};\r\n\r\nconst PluginItemStateDescription = ({state}) => {\r\n    switch (state) {\r\n    case PluginState.PLUGIN_STATE_NOT_RUNNING:\r\n        return (\r\n            <div className='alert alert-info'>\r\n                <i className='fa fa-ban'/>\r\n                <FormattedMessage\r\n                    id='admin.plugin.state.not_running.description'\r\n                    defaultMessage='This plugin is not enabled.'\r\n                />\r\n            </div>\r\n        );\r\n    case PluginState.PLUGIN_STATE_STARTING:\r\n        return (\r\n            <div className='alert alert-success'>\r\n                <i className='fa fa-info'/>\r\n                <FormattedMessage\r\n                    id='admin.plugin.state.starting.description'\r\n                    defaultMessage='This plugin is starting.'\r\n                />\r\n            </div>\r\n        );\r\n    case PluginState.PLUGIN_STATE_RUNNING:\r\n        return (\r\n            <div className='alert alert-success'>\r\n                <i className='fa fa-check'/>\r\n                <FormattedMessage\r\n                    id='admin.plugin.state.running.description'\r\n                    defaultMessage='This plugin is running.'\r\n                />\r\n            </div>\r\n        );\r\n    case PluginState.PLUGIN_STATE_FAILED_TO_START:\r\n        return (\r\n            <div className='alert alert-warning'>\r\n                <i className='fa fa-warning'/>\r\n                <FormattedMessage\r\n                    id='admin.plugin.state.failed_to_start.description'\r\n                    defaultMessage='This plugin failed to start. Check your system logs for errors.'\r\n                />\r\n            </div>\r\n        );\r\n    case PluginState.PLUGIN_STATE_FAILED_TO_STAY_RUNNING:\r\n        return (\r\n            <div className='alert alert-warning'>\r\n                <i className='fa fa-warning'/>\r\n                <FormattedMessage\r\n                    id='admin.plugin.state.failed_to_stay_running.description'\r\n                    defaultMessage='This plugin crashed multiple times and is no longer running. Check your system logs for errors.'\r\n                />\r\n            </div>\r\n        );\r\n    case PluginState.PLUGIN_STATE_STOPPING:\r\n        return (\r\n            <div className='alert alert-info'>\r\n                <i className='fa fa-info'/>\r\n                <FormattedMessage\r\n                    id='admin.plugin.state.stopping.description'\r\n                    defaultMessage='This plugin is stopping.'\r\n                />\r\n            </div>\r\n        );\r\n    default:\r\n        return null;\r\n    }\r\n};\r\n\r\nPluginItemStateDescription.propTypes = {\r\n    state: PropTypes.number.isRequired,\r\n};\r\n\r\nconst PluginItem = ({\r\n    pluginStatus,\r\n    removing,\r\n    handleEnable,\r\n    handleDisable,\r\n    handleRemove,\r\n    showInstances,\r\n    hasSettings,\r\n}) => {\r\n    let activateButton;\r\n    const activating = pluginStatus.state === PluginState.PLUGIN_STATE_STARTING;\r\n    const deactivating = pluginStatus.state === PluginState.PLUGIN_STATE_STOPPING;\r\n\r\n    if (pluginStatus.active) {\r\n        activateButton = (\r\n            <a\r\n                data-plugin-id={pluginStatus.id}\r\n                disabled={deactivating}\r\n                onClick={handleDisable}\r\n            >\r\n                {deactivating ?\r\n                    <FormattedMessage\r\n                        id='admin.plugin.disabling'\r\n                        defaultMessage='Disabling...'\r\n                    /> :\r\n                    <FormattedMessage\r\n                        id='admin.plugin.disable'\r\n                        defaultMessage='Disable'\r\n                    />\r\n                }\r\n            </a>\r\n        );\r\n    } else {\r\n        activateButton = (\r\n            <a\r\n                data-plugin-id={pluginStatus.id}\r\n                disabled={activating}\r\n                onClick={handleEnable}\r\n            >\r\n                {activating ?\r\n                    <FormattedMessage\r\n                        id='admin.plugin.enabling'\r\n                        defaultMessage='Enabling...'\r\n                    /> :\r\n                    <FormattedMessage\r\n                        id='admin.plugin.enable'\r\n                        defaultMessage='Enable'\r\n                    />\r\n                }\r\n            </a>\r\n        );\r\n    }\r\n\r\n    let settingsButton = null;\r\n    if (hasSettings) {\r\n        settingsButton = (\r\n            <span>\r\n                {' - '}\r\n                <Link\r\n                    to={'/admin_console/plugins/plugin_' + pluginStatus.id}\r\n                >\r\n                    <FormattedMessage\r\n                        id='admin.plugin.settingsButton'\r\n                        defaultMessage='Settings'\r\n                    />\r\n                </Link>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    let removeButton;\r\n    if (!pluginStatus.is_prepackaged) {\r\n        let removeButtonText;\r\n        if (removing) {\r\n            removeButtonText = (\r\n                <FormattedMessage\r\n                    id='admin.plugin.removing'\r\n                    defaultMessage='Removing...'\r\n                />\r\n            );\r\n        } else {\r\n            removeButtonText = (\r\n                <FormattedMessage\r\n                    id='admin.plugin.remove'\r\n                    defaultMessage='Remove'\r\n                />\r\n            );\r\n        }\r\n        removeButton = (\r\n            <span>\r\n                {' - '}\r\n                <a\r\n                    data-plugin-id={pluginStatus.id}\r\n                    disabled={removing}\r\n                    onClick={handleRemove}\r\n                >\r\n                    {removeButtonText}\r\n                </a>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    let description;\r\n    if (pluginStatus.description) {\r\n        description = (\r\n            <div className='padding-top'>\r\n                {pluginStatus.description}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    let prepackagedLabel;\r\n    if (pluginStatus.is_prepackaged) {\r\n        prepackagedLabel = (\r\n            <span>\r\n                {', '}\r\n                <FormattedMessage\r\n                    id='admin.plugin.prepackaged'\r\n                    defaultMessage='pre-packaged'\r\n                />\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const notices = [];\r\n    if (pluginStatus.instances.some((instance) => instance.version !== pluginStatus.version)) {\r\n        notices.push(\r\n            <div\r\n                key='multiple-versions'\r\n                className='alert alert-warning'\r\n            >\r\n                <i className='fa fa-warning'/>\r\n                <FormattedMessage\r\n                    id='admin.plugin.multiple_versions_warning'\r\n                    defaultMessage='There are multiple versions of this plugin installed across your cluster. Re-install this plugin to ensure it works consistently.'\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    notices.push(\r\n        <PluginItemStateDescription\r\n            key='state-description'\r\n            state={pluginStatus.state}\r\n        />\r\n    );\r\n\r\n    const instances = pluginStatus.instances.slice();\r\n    instances.sort((a, b) => {\r\n        if (a.cluster_id < b.cluster_id) {\r\n            return -1;\r\n        } else if (a.cluster_id > b.cluster_id) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n\r\n    let clusterSummary;\r\n    if (showInstances) {\r\n        clusterSummary = (\r\n            <div className='padding-top x2 padding-bottom'>\r\n                <div className='row'>\r\n                    <div className='col-md-6'>\r\n                        <strong>\r\n                            <FormattedMessage\r\n                                id='admin.plugin.cluster_instance'\r\n                                defaultMessage='Cluster Instance'\r\n                            />\r\n                        </strong>\r\n                    </div>\r\n                    <div className='col-md-3'>\r\n                        <strong>\r\n                            <FormattedMessage\r\n                                id='admin.plugin.version_title'\r\n                                defaultMessage='Version'\r\n                            />\r\n                        </strong>\r\n                    </div>\r\n                    <div className='col-md-3'>\r\n                        <strong>\r\n                            <FormattedMessage\r\n                                id='admin.plugin.state'\r\n                                defaultMessage='State'\r\n                            />\r\n                        </strong>\r\n                    </div>\r\n                </div>\r\n                {instances.map((instance) => (\r\n                    <div\r\n                        key={instance.cluster_id}\r\n                        className='row'\r\n                    >\r\n                        <div className='col-md-6'>\r\n                            {instance.cluster_id}\r\n                        </div>\r\n                        <div className='col-md-3'>\r\n                            {instance.version}\r\n                        </div>\r\n                        <div className='col-md-3'>\r\n                            <PluginItemState state={instance.state}/>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <strong>{pluginStatus.name}</strong>\r\n                {' ('}\r\n                {pluginStatus.id}\r\n                {' - '}\r\n                {pluginStatus.version}\r\n                {prepackagedLabel}\r\n                {')'}\r\n            </div>\r\n            {description}\r\n            <div className='padding-top'>\r\n                {activateButton}\r\n                {removeButton}\r\n                {settingsButton}\r\n            </div>\r\n            <div>\r\n                {notices}\r\n            </div>\r\n            <div>\r\n                {clusterSummary}\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    );\r\n};\r\n\r\nPluginItem.propTypes = {\r\n    pluginStatus: PropTypes.object.isRequired,\r\n    removing: PropTypes.bool.isRequired,\r\n    handleEnable: PropTypes.func.isRequired,\r\n    handleDisable: PropTypes.func.isRequired,\r\n    handleRemove: PropTypes.func.isRequired,\r\n    showInstances: PropTypes.bool.isRequired,\r\n    hasSettings: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default class PluginManagement extends AdminSettings {\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        pluginStatuses: PropTypes.object.isRequired,\r\n        plugins: PropTypes.object.isRequired,\r\n        actions: PropTypes.shape({\r\n            uploadPlugin: PropTypes.func.isRequired,\r\n            removePlugin: PropTypes.func.isRequired,\r\n            getPlugins: PropTypes.func.isRequired,\r\n            getPluginStatuses: PropTypes.func.isRequired,\r\n            enablePlugin: PropTypes.func.isRequired,\r\n            disablePlugin: PropTypes.func.isRequired,\r\n            installPluginFromUrl: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getConfigFromState = this.getConfigFromState.bind(this);\r\n        this.renderSettings = this.renderSettings.bind(this);\r\n\r\n        this.state = Object.assign(this.state, {\r\n            loading: true,\r\n            fileSelected: false,\r\n            file: null,\r\n            pluginDownloadUrl: '',\r\n            serverError: null,\r\n            lastMessage: null,\r\n            uploading: false,\r\n            installing: false,\r\n            overwritingUpload: false,\r\n            confirmOverwriteUploadModal: false,\r\n            overwritingInstall: false,\r\n            confirmOverwriteInstallModal: false,\r\n        });\r\n    }\r\n\r\n    getConfigFromState(config) {\r\n        config.PluginSettings.Enable = this.state.enable;\r\n        config.PluginSettings.EnableUploads = this.state.enableUploads;\r\n        config.PluginSettings.AllowInsecureDownloadUrl = this.state.allowInsecureDownloadUrl;\r\n\r\n        return config;\r\n    }\r\n\r\n    getStateFromConfig(config) {\r\n        const state = {\r\n            enable: config.PluginSettings.Enable,\r\n            enableUploads: config.PluginSettings.EnableUploads,\r\n            allowInsecureDownloadUrl: config.PluginSettings.AllowInsecureDownloadUrl,\r\n        };\r\n\r\n        return state;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.enable) {\r\n            this.props.actions.getPluginStatuses().then(\r\n                () => this.setState({loading: false})\r\n            );\r\n        }\r\n    }\r\n\r\n    handleUpload = () => {\r\n        this.setState({lastMessage: null, serverError: null});\r\n        const element = this.refs.fileInput;\r\n        if (element.files.length > 0) {\r\n            this.setState({fileSelected: true, file: element.files[0]});\r\n        }\r\n    }\r\n\r\n    helpSubmitUpload = async (file, force) => {\r\n        this.setState({uploading: true});\r\n        const {error} = await this.props.actions.uploadPlugin(file, force);\r\n\r\n        if (error) {\r\n            if (error.server_error_id === 'app.plugin.install_id.app_error' && !force) {\r\n                this.setState({confirmOverwriteUploadModal: true, overwritingUpload: true});\r\n                return;\r\n            }\r\n            this.setState({\r\n                file: null,\r\n                fileSelected: false,\r\n                uploading: false,\r\n            });\r\n            if (error.server_error_id === 'app.plugin.activate.app_error') {\r\n                this.setState({serverError: Utils.localizeMessage('admin.plugin.error.activate', 'Unable to upload the plugin. It may conflict with another plugin on your server.')});\r\n            } else if (error.server_error_id === 'app.plugin.extract.app_error') {\r\n                this.setState({serverError: Utils.localizeMessage('admin.plugin.error.extract', 'Encountered an error when extracting the plugin. Review your plugin file content and try again.')});\r\n            } else {\r\n                this.setState({serverError: error.message});\r\n            }\r\n            this.setState({file: null, fileSelected: false});\r\n            return;\r\n        }\r\n\r\n        this.setState({loading: true});\r\n        await this.props.actions.getPlugins();\r\n\r\n        let msg = `Successfully uploaded plugin from ${file.name}`;\r\n        if (this.state.overwritingUpload) {\r\n            msg = `Successfully updated plugin from ${file.name}`;\r\n        }\r\n\r\n        this.setState({\r\n            file: null,\r\n            fileSelected: false,\r\n            serverError: null,\r\n            lastMessage: msg,\r\n            overwritingUpload: false,\r\n            uploading: false,\r\n            loading: false,\r\n        });\r\n    }\r\n\r\n    handleSubmitUpload = (e) => {\r\n        e.preventDefault();\r\n\r\n        const element = this.refs.fileInput;\r\n        if (element.files.length === 0) {\r\n            return;\r\n        }\r\n        const file = element.files[0];\r\n\r\n        this.helpSubmitUpload(file, false);\r\n        Utils.clearFileInput(element);\r\n    }\r\n\r\n    handleOverwriteUploadPluginCancel = () => {\r\n        this.setState({\r\n            file: null,\r\n            fileSelected: false,\r\n            serverError: null,\r\n            confirmOverwriteUploadModal: false,\r\n            lastMessage: null,\r\n            uploading: false,\r\n        });\r\n    }\r\n\r\n    handleOverwriteUploadPlugin = () => {\r\n        this.setState({confirmOverwriteUploadModal: false});\r\n        this.helpSubmitUpload(this.state.file, true);\r\n    }\r\n\r\n    onPluginDownloadUrlChange = (e) => {\r\n        this.setState({\r\n            pluginDownloadUrl: e.target.value,\r\n        });\r\n    }\r\n\r\n    installFromUrl = async (force) => {\r\n        const {pluginDownloadUrl} = this.state;\r\n\r\n        this.setState({\r\n            installing: true,\r\n            serverError: null,\r\n            lastMessage: null,\r\n        });\r\n        const {error} = await this.props.actions.installPluginFromUrl(pluginDownloadUrl, force);\r\n\r\n        if (error) {\r\n            if (error.server_error_id === 'app.plugin.install_id.app_error' && !force) {\r\n                this.setState({confirmOverwriteInstallModal: true, overwritingInstall: true});\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                installing: false,\r\n            });\r\n\r\n            if (error.server_error_id === 'app.plugin.extract.app_error') {\r\n                this.setState({serverError: Utils.localizeMessage('admin.plugin.error.extract', 'Encountered an error when extracting the plugin. Review your plugin file content and try again.')});\r\n            } else {\r\n                this.setState({serverError: error.message});\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.setState({loading: true});\r\n        await this.props.actions.getPlugins();\r\n\r\n        let msg = `Successfully installed plugin from ${pluginDownloadUrl}`;\r\n        if (this.state.overwritingInstall) {\r\n            msg = `Successfully updated plugin from ${pluginDownloadUrl}`;\r\n        }\r\n\r\n        this.setState({\r\n            serverError: null,\r\n            lastMessage: msg,\r\n            overwritingInstall: false,\r\n            installing: false,\r\n            loading: false,\r\n        });\r\n    }\r\n\r\n    handleSubmitInstall = (e) => {\r\n        e.preventDefault();\r\n        return this.installFromUrl(false);\r\n    }\r\n\r\n    handleOverwriteInstallPluginCancel = () => {\r\n        this.setState({\r\n            confirmOverwriteInstallModal: false,\r\n            installing: false,\r\n            serverError: null,\r\n            lastMessage: null,\r\n        });\r\n    }\r\n\r\n    handleOverwriteInstallPlugin = () => {\r\n        this.setState({confirmOverwriteInstallModal: false});\r\n        return this.installFromUrl(true);\r\n    }\r\n\r\n    handleRemove = async (e) => {\r\n        this.setState({lastMessage: null, serverError: null});\r\n        e.preventDefault();\r\n        const pluginId = e.currentTarget.getAttribute('data-plugin-id');\r\n        this.setState({removing: pluginId});\r\n\r\n        const {error} = await this.props.actions.removePlugin(pluginId);\r\n        this.setState({removing: null});\r\n\r\n        if (error) {\r\n            this.setState({serverError: error.message});\r\n        }\r\n    }\r\n\r\n    handleEnable = async (e) => {\r\n        e.preventDefault();\r\n        this.setState({lastMessage: null, serverError: null});\r\n        const pluginId = e.currentTarget.getAttribute('data-plugin-id');\r\n\r\n        const {error} = await this.props.actions.enablePlugin(pluginId);\r\n\r\n        if (error) {\r\n            this.setState({serverError: error.message});\r\n        }\r\n    }\r\n\r\n    handleDisable = async (e) => {\r\n        this.setState({lastMessage: null, serverError: null});\r\n        e.preventDefault();\r\n        const pluginId = e.currentTarget.getAttribute('data-plugin-id');\r\n\r\n        const {error} = await this.props.actions.disablePlugin(pluginId);\r\n\r\n        if (error) {\r\n            this.setState({serverError: error.message});\r\n        }\r\n    }\r\n\r\n    renderTitle() {\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.plugin.management.title'\r\n                defaultMessage='Management'\r\n            />\r\n        );\r\n    }\r\n\r\n    renderOverwritePluginModal = ({show, onConfirm, onCancel}) => {\r\n        const title = (\r\n            <FormattedMessage\r\n                id='admin.plugin.upload.overwrite_modal.title'\r\n                defaultMessage='Overwrite existing plugin?'\r\n            />\r\n        );\r\n\r\n        const message = (\r\n            <FormattedMessage\r\n                id='admin.plugin.upload.overwrite_modal.desc'\r\n                defaultMessage='A plugin with this ID already exists. Would you like to overwrite it?'\r\n            />\r\n        );\r\n\r\n        const overwriteButton = (\r\n            <FormattedMessage\r\n                id='admin.plugin.upload.overwrite_modal.overwrite'\r\n                defaultMessage='Overwrite'\r\n            />\r\n        );\r\n\r\n        return (\r\n            <ConfirmModal\r\n                show={show}\r\n                title={title}\r\n                message={message}\r\n                confirmButtonClass='btn btn-danger'\r\n                confirmButtonText={overwriteButton}\r\n                onConfirm={onConfirm}\r\n                onCancel={onCancel}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderEnablePluginsSetting = () => {\r\n        const hideEnablePlugins = this.props.config.ExperimentalSettings.RestrictSystemAdmin;\r\n        if (!hideEnablePlugins) {\r\n            return (\r\n                <BooleanSetting\r\n                    id='enable'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.plugins.settings.enable'\r\n                            defaultMessage='Enable Plugins: '\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMarkdownMessage\r\n                            id='admin.plugins.settings.enableDesc'\r\n                            defaultMessage='When true, enables plugins on your Mattermost server. Use plugins to integrate with third-party systems, extend functionality, or customize the user interface of your Mattermost server. See [documentation](https://about.mattermost.com/default-plugin-uploads) to learn more.'\r\n                        />\r\n                    }\r\n                    value={this.state.enable}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('PluginSettings.Enable')}\r\n                />\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    renderSettings() {\r\n        const {enableUploads} = this.state;\r\n        const enable = this.props.config.PluginSettings.Enable;\r\n        let serverError = '';\r\n        let lastMessage = '';\r\n\r\n        if (this.state.serverError) {\r\n            serverError = <div className='col-sm-12'><div className='form-group has-error half'><label className='control-label'>{this.state.serverError}</label></div></div>;\r\n        }\r\n        if (this.state.lastMessage) {\r\n            lastMessage = <div className='col-sm-12'><div className='form-group half'>{this.state.lastMessage}</div></div>;\r\n        }\r\n\r\n        let btnClass = 'btn';\r\n        if (this.state.fileSelected) {\r\n            btnClass = 'btn btn-primary';\r\n        }\r\n\r\n        let fileName;\r\n        if (this.state.file) {\r\n            fileName = this.state.file.name;\r\n        }\r\n\r\n        let uploadButtonText;\r\n        if (this.state.uploading) {\r\n            uploadButtonText = (\r\n                <FormattedMessage\r\n                    id='admin.plugin.uploading'\r\n                    defaultMessage='Uploading...'\r\n                />\r\n            );\r\n        } else {\r\n            uploadButtonText = (\r\n                <FormattedMessage\r\n                    id='admin.plugin.upload'\r\n                    defaultMessage='Upload'\r\n                />\r\n            );\r\n        }\r\n\r\n        let installButtonText;\r\n        if (this.state.installing) {\r\n            installButtonText = (\r\n                <FormattedMessage\r\n                    id='admin.plugin.installing'\r\n                    defaultMessage='Installing...'\r\n                />\r\n            );\r\n        } else {\r\n            installButtonText = (\r\n                <FormattedMessage\r\n                    id='admin.plugin.install'\r\n                    defaultMessage='Install'\r\n                />\r\n            );\r\n        }\r\n\r\n        let pluginsList;\r\n        let pluginsContainer;\r\n        let pluginsListContainer;\r\n        const plugins = Object.values(this.props.pluginStatuses);\r\n        if (this.state.loading) {\r\n            pluginsList = <LoadingScreen/>;\r\n        } else if (plugins.length === 0) {\r\n            pluginsListContainer = (\r\n                <FormattedMessage\r\n                    id='admin.plugin.no_plugins'\r\n                    defaultMessage='No installed plugins.'\r\n                />\r\n            );\r\n        } else {\r\n            const showInstances = plugins.some((pluginStatus) => pluginStatus.instances.length > 1);\r\n            plugins.sort((a, b) => {\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                } else if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n\r\n                return 0;\r\n            });\r\n\r\n            pluginsList = plugins.map((pluginStatus) => {\r\n                const p = this.props.plugins[pluginStatus.id];\r\n                const hasSettings = Boolean(p && p.settings_schema && (p.settings_schema.header || p.settings_schema.footer || (p.settings_schema.settings && p.settings_schema.settings.length > 0)));\r\n                return (\r\n                    <PluginItem\r\n                        key={pluginStatus.id}\r\n                        pluginStatus={pluginStatus}\r\n                        removing={this.state.removing === pluginStatus.id}\r\n                        handleEnable={this.handleEnable}\r\n                        handleDisable={this.handleDisable}\r\n                        handleRemove={this.handleRemove}\r\n                        showInstances={showInstances}\r\n                        hasSettings={hasSettings}\r\n                    />\r\n                );\r\n            });\r\n\r\n            pluginsListContainer = (\r\n                <div className='alert alert-transparent'>\r\n                    {pluginsList}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (enable) {\r\n            pluginsContainer = (\r\n                <div className='form-group'>\r\n                    <label\r\n                        className='control-label col-sm-4'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.plugin.installedTitle'\r\n                            defaultMessage='Installed Plugins: '\r\n                        />\r\n                    </label>\r\n                    <div className='col-sm-8'>\r\n                        <p className='help-text'>\r\n                            <FormattedHTMLMessage\r\n                                id='admin.plugin.installedDesc'\r\n                                defaultMessage='Installed plugins on your Mattermost server. Pre-packaged plugins are installed by default, and can be disabled but not removed.'\r\n                            />\r\n                        </p>\r\n                        <br/>\r\n                        {pluginsListContainer}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let uploadHelpText;\r\n\r\n        if (enableUploads && enable) {\r\n            uploadHelpText = (\r\n                <FormattedMarkdownMessage\r\n                    id='admin.plugin.uploadDesc'\r\n                    defaultMessage='Upload a plugin for your Mattermost server. See [documentation](!https://about.mattermost.com/default-plugin-uploads) to learn more.'\r\n                />\r\n            );\r\n        } else if (enable === true && enableUploads === false) {\r\n            uploadHelpText = (\r\n                <FormattedMarkdownMessage\r\n                    id='admin.plugin.uploadDisabledDesc'\r\n                    defaultMessage='Enable plugin uploads in config.json. See [documentation](!https://about.mattermost.com/default-plugin-uploads) to learn more.'\r\n                />\r\n            );\r\n        } else {\r\n            uploadHelpText = (\r\n                <FormattedMarkdownMessage\r\n                    id='admin.plugin.uploadAndPluginDisabledDesc'\r\n                    defaultMessage='To enable plugins, set **Enable Plugins** to true. See [documentation](!https://about.mattermost.com/default-plugin-uploads) to learn more.'\r\n                />\r\n            );\r\n        }\r\n\r\n        const uploadBtnClass = enableUploads ? 'btn btn-primary' : 'btn';\r\n\r\n        const overwriteUploadPluginModal = this.state.confirmOverwriteUploadModal && this.renderOverwritePluginModal({\r\n            show: this.state.confirmOverwriteUploadModal,\r\n            onConfirm: this.handleOverwriteUploadPlugin,\r\n            onCancel: this.handleOverwriteUploadPluginCancel,\r\n        });\r\n\r\n        const overwriteInstallPluginModal = this.state.confirmOverwriteInstallModal && this.renderOverwritePluginModal({\r\n            show: this.state.confirmOverwriteInstallModal,\r\n            onConfirm: this.handleOverwriteInstallPlugin,\r\n            onCancel: this.handleOverwriteInstallPluginCancel,\r\n        });\r\n\r\n        return (\r\n            <div className='admin-console__wrapper'>\r\n                <div className='admin-console__content'>\r\n                    <SettingsGroup\r\n                        id={'PluginSettings'}\r\n                        container={false}\r\n                    >\r\n                        {this.renderEnablePluginsSetting()}\r\n\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='admin.plugin.uploadTitle'\r\n                                    defaultMessage='Upload Plugin: '\r\n                                />\r\n                            </label>\r\n                            <div className='col-sm-8'>\r\n                                <div className='file__upload'>\r\n                                    <button\r\n                                        className={uploadBtnClass}\r\n                                        disabled={!enableUploads || !enable}\r\n                                    >\r\n                                        <FormattedMessage\r\n                                            id='admin.plugin.choose'\r\n                                            defaultMessage='Choose File'\r\n                                        />\r\n                                    </button>\r\n                                    <input\r\n                                        ref='fileInput'\r\n                                        type='file'\r\n                                        accept='.gz'\r\n                                        onChange={this.handleUpload}\r\n                                        disabled={!enableUploads || !enable}\r\n                                    />\r\n                                </div>\r\n                                <button\r\n                                    className={btnClass}\r\n                                    disabled={!this.state.fileSelected}\r\n                                    onClick={this.handleSubmitUpload}\r\n                                >\r\n                                    {uploadButtonText}\r\n                                </button>\r\n                                <div className='help-text no-margin'>\r\n                                    {fileName}\r\n                                </div>\r\n                                {serverError}\r\n                                {lastMessage}\r\n                                <p className='help-text'>\r\n                                    {uploadHelpText}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label\r\n                                className='control-label col-sm-4'\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='admin.plugin.installTitle'\r\n                                    defaultMessage='Install Plugin from URL: '\r\n                                />\r\n                            </label>\r\n\r\n                            <div className='col-sm-8'>\r\n                                <p>\r\n                                    <input\r\n                                        style={{width: '100%'}}\r\n                                        onChange={this.onPluginDownloadUrlChange}\r\n                                        value={this.state.pluginDownloadUrl}\r\n                                        type='text'\r\n                                    />\r\n                                </p>\r\n                            </div>\r\n                            <div className='col-sm-4'/>\r\n                            <div className='col-sm-8'>\r\n                                <p>\r\n                                    <button\r\n                                        id='installPluginButton'\r\n                                        className={btnClass}\r\n                                        disabled={this.state.installing || !this.state.pluginDownloadUrl}\r\n                                        onClick={this.handleSubmitInstall}\r\n                                    >\r\n                                        {installButtonText}\r\n                                    </button>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <BooleanSetting\r\n                            id='allowInsecureDownloadUrl'\r\n                            label={\r\n                                <FormattedMessage\r\n                                    id='admin.plugins.settings.allowInsecureUrl'\r\n                                    defaultMessage='Allow Insecure Install URL:'\r\n                                />\r\n                            }\r\n                            helpText={\r\n                                <FormattedMarkdownMessage\r\n                                    id='admin.plugins.settings.allowInsecureUrlDesc'\r\n                                    defaultMessage='When false, URLs provided must use the HTTPS protocol.'\r\n                                />\r\n                            }\r\n                            value={this.state.allowInsecureDownloadUrl}\r\n                            onChange={this.handleChange}\r\n                            setByEnv={this.isSetByEnv('PluginSettings.AllowInsecureDownloadUrl')}\r\n                        />\r\n                        {pluginsContainer}\r\n                    </SettingsGroup>\r\n                    {overwriteUploadPluginModal}\r\n                    {overwriteInstallPluginModal}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {\r\n    getPlugins,\r\n    getPluginStatuses,\r\n    removePlugin,\r\n    uploadPlugin,\r\n    installPluginFromUrl,\r\n    enablePlugin,\r\n    disablePlugin,\r\n} from 'mattermost-redux/actions/admin';\r\n\r\nimport PluginManagement from './plugin_management.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        plugins: state.entities.admin.plugins,\r\n        pluginStatuses: state.entities.admin.pluginStatuses,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            uploadPlugin,\r\n            installPluginFromUrl,\r\n            removePlugin,\r\n            getPlugins,\r\n            getPluginStatuses,\r\n            enablePlugin,\r\n            disablePlugin,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PluginManagement);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport SchemaAdminSettings from 'components/admin_console/schema_admin_settings.jsx';\r\n\r\nexport default class CustomPluginSettings extends SchemaAdminSettings {\r\n    constructor(props) {\r\n        super(props);\r\n        this.isPlugin = true;\r\n        this.getStateFromConfig = CustomPluginSettings.getStateFromConfig;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.schema && props.schema.id !== state.prevSchemaId) {\r\n            return {\r\n                prevSchemaId: props.schema.id,\r\n                saveNeeded: false,\r\n                saving: false,\r\n                serverError: null,\r\n                errorTooltip: false,\r\n                ...CustomPluginSettings.getStateFromConfig(props.config, props.schema, props.roles),\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getConfigFromState(config) {\r\n        const schema = this.props.schema;\r\n\r\n        if (schema) {\r\n            if (!config.PluginSettings.Plugins[schema.id]) {\r\n                config.PluginSettings.Plugins[schema.id] = {};\r\n            }\r\n\r\n            const configSettings = config.PluginSettings.Plugins[schema.id];\r\n\r\n            const settings = schema.settings || [];\r\n            settings.forEach((setting) => {\r\n                const lowerKey = setting.key.toLowerCase();\r\n                const value = this.state[lowerKey];\r\n                if (value == null && setting.default == null) {\r\n                    Reflect.deleteProperty(configSettings, lowerKey);\r\n                } else if (value == null) {\r\n                    configSettings[lowerKey] = setting.default;\r\n                } else {\r\n                    configSettings[lowerKey] = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return config;\r\n    }\r\n\r\n    static getStateFromConfig(config, schema) {\r\n        const state = {};\r\n\r\n        if (schema) {\r\n            const configSettings = config.PluginSettings.Plugins[schema.id] || {};\r\n\r\n            const settings = schema.settings || [];\r\n            settings.forEach((setting) => {\r\n                const lowerKey = setting.key.toLowerCase();\r\n                state[lowerKey] = configSettings[lowerKey] == null ? setting.default : configSettings[lowerKey];\r\n            });\r\n        }\r\n\r\n        return state;\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {createSelector} from 'reselect';\r\n\r\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\r\n\r\nimport CustomPluginSettings from './custom_plugin_settings.jsx';\r\n\r\nfunction makeGetPluginSchema() {\r\n    return createSelector(\r\n        (state, pluginId) => state.entities.admin.plugins[pluginId],\r\n        (plugin) => {\r\n            if (!plugin) {\r\n                return null;\r\n            }\r\n\r\n            let settings;\r\n            if (plugin.settings_schema && plugin.settings_schema.settings) {\r\n                settings = plugin.settings_schema.settings.map((setting) => {\r\n                    return {\r\n                        ...setting,\r\n                        help_text_markdown: true,\r\n                        label: setting.display_name,\r\n                    };\r\n                });\r\n            }\r\n\r\n            return {\r\n                ...plugin.settings_schema,\r\n                id: plugin.id,\r\n                name: plugin.name,\r\n                settings,\r\n                translate: Boolean(plugin.translate),\r\n            };\r\n        }\r\n    );\r\n}\r\n\r\nfunction makeMapStateToProps() {\r\n    const getPluginSchema = makeGetPluginSchema();\r\n\r\n    return (state, ownProps) => {\r\n        const pluginId = ownProps.match.params.plugin_id;\r\n\r\n        return {\r\n            schema: getPluginSchema(state, pluginId),\r\n            roles: getRoles(state),\r\n        };\r\n    };\r\n}\r\n\r\nexport default connect(makeMapStateToProps)(CustomPluginSettings);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default class ReloadIcon extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <FormattedMessage\r\n                id='generic_icons.reload'\r\n                defaultMessage='Reload Icon'\r\n            >\r\n                {(title) => (\r\n                    <i\r\n                        className='fa fa-refresh'\r\n                        title={title}\r\n                    />\r\n                )}\r\n            </FormattedMessage>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedDate, FormattedMessage, FormattedTime} from 'react-intl';\r\nimport {Client4} from 'mattermost-redux/client';\r\n\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\nimport ReloadIcon from 'components/icon/reload_icon';\r\nimport LocalizedInput from 'components/localized_input/localized_input';\r\nimport {t} from 'utils/i18n.jsx';\r\n\r\nexport default class ComplianceReports extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Set if compliance reports are licensed\r\n         */\r\n        isLicensed: PropTypes.bool.isRequired,\r\n\r\n        /*\r\n         * Set if compliance reports are enabled in the config\r\n         */\r\n        enabled: PropTypes.bool.isRequired,\r\n\r\n        /*\r\n         * Array of reports to render\r\n         */\r\n        reports: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n        users: PropTypes.object.isRequired,\r\n\r\n        /*\r\n         * Error message to display\r\n         */\r\n        serverError: PropTypes.string,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /*\r\n             * Function to get compliance reports\r\n             */\r\n            getComplianceReports: PropTypes.func.isRequired,\r\n\r\n            /*\r\n             * Function to save compliance reports\r\n             */\r\n            createComplianceReport: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadingReports: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.isLicensed || !this.props.enabled) {\r\n            return;\r\n        }\r\n\r\n        this.props.actions.getComplianceReports().then(\r\n            () => this.setState({loadingReports: false})\r\n        );\r\n    }\r\n\r\n    reload = () => {\r\n        this.setState({loadingReports: true});\r\n\r\n        this.props.actions.getComplianceReports().then(\r\n            () => this.setState({loadingReports: false})\r\n        );\r\n    }\r\n\r\n    runReport = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({runningReport: true});\r\n\r\n        const job = {};\r\n        job.desc = this.refs.desc.value;\r\n        job.emails = this.refs.emails.value;\r\n        job.keywords = this.refs.keywords.value;\r\n        job.start_at = Date.parse(this.refs.from.value);\r\n        job.end_at = Date.parse(this.refs.to.value);\r\n\r\n        this.props.actions.createComplianceReport(job).then(\r\n            ({data}) => {\r\n                if (data) {\r\n                    this.refs.emails.value = '';\r\n                    this.refs.keywords.value = '';\r\n                    this.refs.desc.value = '';\r\n                    this.refs.from.value = '';\r\n                    this.refs.to.value = '';\r\n                }\r\n                this.setState({runningReport: false});\r\n            }\r\n        );\r\n    }\r\n\r\n    getDateTime(millis) {\r\n        const date = new Date(millis);\r\n        return (\r\n            <span style={style.date}>\r\n                <FormattedDate\r\n                    value={date}\r\n                    day='2-digit'\r\n                    month='short'\r\n                    year='numeric'\r\n                />\r\n                {' - '}\r\n                <FormattedTime\r\n                    value={date}\r\n                    hour='2-digit'\r\n                    minute='2-digit'\r\n                />\r\n            </span>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isLicensed || !this.props.enabled) {\r\n            return <div/>;\r\n        }\r\n\r\n        let content = null;\r\n        if (this.state.loadingReports) {\r\n            content = <LoadingScreen/>;\r\n        } else {\r\n            var list = [];\r\n\r\n            for (var i = 0; i < this.props.reports.length; i++) {\r\n                const report = this.props.reports[i];\r\n\r\n                let params = '';\r\n                if (report.type === 'adhoc') {\r\n                    params = (\r\n                        <span>\r\n                            <FormattedMessage\r\n                                id='admin.compliance_reports.from'\r\n                                defaultMessage='From:'\r\n                            />{' '}{this.getDateTime(report.start_at)}\r\n                            <br/>\r\n                            <FormattedMessage\r\n                                id='admin.compliance_reports.to'\r\n                                defaultMessage='To:'\r\n                            />{' '}{this.getDateTime(report.end_at)}\r\n                            <br/>\r\n                            <FormattedMessage\r\n                                id='admin.compliance_reports.emails'\r\n                                defaultMessage='Emails:'\r\n                            />{' '}{report.emails}\r\n                            <br/>\r\n                            <FormattedMessage\r\n                                id='admin.compliance_reports.keywords'\r\n                                defaultMessage='Keywords:'\r\n                            />{' '}{report.keywords}\r\n                        </span>);\r\n                }\r\n\r\n                let download = '';\r\n                let status = '';\r\n                if (report.status === 'finished') {\r\n                    download = (\r\n                        <a href={`${Client4.getBaseRoute()}/compliance/reports/${report.id}/download`}>\r\n                            <FormattedMessage\r\n                                id='admin.compliance_table.download'\r\n                                defaultMessage='Download'\r\n                            />\r\n                        </a>\r\n                    );\r\n\r\n                    status = (\r\n                        <span style={style.greenStatus}>{report.status}</span>\r\n                    );\r\n                } else if (report.status === 'failed') {\r\n                    status = (\r\n                        <span style={style.redStatus}>{report.status}</span>\r\n                    );\r\n                }\r\n\r\n                let user = report.user_id;\r\n                const profile = this.props.users[report.user_id];\r\n                if (profile) {\r\n                    user = profile.email;\r\n                }\r\n\r\n                list[i] = (\r\n                    <tr key={report.id}>\r\n                        <td style={style.dataCell}>{download}</td>\r\n                        <td>{this.getDateTime(report.create_at)}</td>\r\n                        <td>{status}</td>\r\n                        <td>{report.count}</td>\r\n                        <td>{report.type}</td>\r\n                        <td style={style.dataCell}>{report.desc}</td>\r\n                        <td>{user}</td>\r\n                        <td style={style.dataCell}>{params}</td>\r\n                    </tr>\r\n                );\r\n            }\r\n\r\n            content = (\r\n                <div style={style.content}>\r\n                    <table className='table'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th/>\r\n                                <th>\r\n                                    <FormattedMessage\r\n                                        id='admin.compliance_table.timestamp'\r\n                                        defaultMessage='Timestamp'\r\n                                    />\r\n                                </th>\r\n                                <th>\r\n                                    <FormattedMessage\r\n                                        id='admin.compliance_table.status'\r\n                                        defaultMessage='Status'\r\n                                    />\r\n                                </th>\r\n                                <th>\r\n                                    <FormattedMessage\r\n                                        id='admin.compliance_table.records'\r\n                                        defaultMessage='Records'\r\n                                    />\r\n                                </th>\r\n                                <th>\r\n                                    <FormattedMessage\r\n                                        id='admin.compliance_table.type'\r\n                                        defaultMessage='Type'\r\n                                    />\r\n                                </th>\r\n                                <th>\r\n                                    <FormattedMessage\r\n                                        id='admin.compliance_table.desc'\r\n                                        defaultMessage='Description'\r\n                                    />\r\n                                </th>\r\n                                <th>\r\n                                    <FormattedMessage\r\n                                        id='admin.compliance_table.userId'\r\n                                        defaultMessage='Requested By'\r\n                                    />\r\n                                </th>\r\n                                <th>\r\n                                    <FormattedMessage\r\n                                        id='admin.compliance_table.params'\r\n                                        defaultMessage='Params'\r\n                                    />\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {list}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let serverError = '';\r\n        if (this.props.serverError) {\r\n            serverError = (\r\n                <div\r\n                    className='form-group has-error'\r\n                    style={style.serverError}\r\n                >\r\n                    <label className='control-label'>{this.props.serverError}</label>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='panel compliance-panel'>\r\n                <h4>\r\n                    <FormattedMessage\r\n                        id='admin.compliance_reports.title'\r\n                        defaultMessage='Compliance Reports'\r\n                    />\r\n                </h4>\r\n                <div className='row'>\r\n                    <div className='col-sm-6 col-md-4 form-group'>\r\n                        <label>\r\n                            <FormattedMessage\r\n                                id='admin.compliance_reports.desc'\r\n                                defaultMessage='Job Name:'\r\n                            />\r\n                        </label>\r\n                        <LocalizedInput\r\n                            type='text'\r\n                            className='form-control'\r\n                            id='desc'\r\n                            ref='desc'\r\n                            placeholder={{id: t('admin.compliance_reports.desc_placeholder'), defaultMessage: 'E.g. \"Audit 445 for HR\"'}}\r\n                        />\r\n                    </div>\r\n                    <div className='col-sm-3 col-md-2 form-group'>\r\n                        <label>\r\n                            <FormattedMessage\r\n                                id='admin.compliance_reports.from'\r\n                                defaultMessage='From:'\r\n                            />\r\n                        </label>\r\n                        <LocalizedInput\r\n                            type='text'\r\n                            className='form-control'\r\n                            id='from'\r\n                            ref='from'\r\n                            placeholder={{id: t('admin.compliance_reports.from_placeholder'), defaultMessage: 'E.g. \"2016-03-11\"'}}\r\n                        />\r\n                    </div>\r\n                    <div className='col-sm-3 col-md-2 form-group'>\r\n                        <label>\r\n                            <FormattedMessage\r\n                                id='admin.compliance_reports.to'\r\n                                defaultMessage='To:'\r\n                            />\r\n                        </label>\r\n                        <LocalizedInput\r\n                            type='text'\r\n                            className='form-control'\r\n                            id='to'\r\n                            ref='to'\r\n                            placeholder={{id: t('admin.compliance_reports.to_placeholder'), defaultMessage: 'E.g. \"2016-03-15\"'}}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-sm-6 col-md-4 form-group'>\r\n                        <label>\r\n                            <FormattedMessage\r\n                                id='admin.compliance_reports.emails'\r\n                                defaultMessage='Emails:'\r\n                            />\r\n                        </label>\r\n                        <LocalizedInput\r\n                            type='text'\r\n                            className='form-control'\r\n                            id='emails'\r\n                            ref='emails'\r\n                            placeholder={{id: t('admin.compliance_reports.emails_placeholder'), defaultMessage: 'E.g. \"bill@example.com, bob@example.com\"'}}\r\n                        />\r\n                    </div>\r\n                    <div className='col-sm-6 col-md-4 form-group'>\r\n                        <label>\r\n                            <FormattedMessage\r\n                                id='admin.compliance_reports.keywords'\r\n                                defaultMessage='Keywords:'\r\n                            />\r\n                        </label>\r\n                        <LocalizedInput\r\n                            type='text'\r\n                            className='form-control'\r\n                            id='keywords'\r\n                            ref='keywords'\r\n                            placeholder={{id: t('admin.compliance_reports.keywords_placeholder'), defaultMessage: 'E.g. \"shorting stock\"'}}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='clearfix'>\r\n                    <button\r\n                        id='run-button'\r\n                        type='submit'\r\n                        className='btn btn-primary'\r\n                        onClick={this.runReport}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.compliance_reports.run'\r\n                            defaultMessage='Run Compliance Report'\r\n                        />\r\n                    </button>\r\n                </div>\r\n                {serverError}\r\n                <div className='text-right'>\r\n                    <button\r\n                        type='submit'\r\n                        className='btn btn-link'\r\n                        disabled={this.state.runningReport}\r\n                        onClick={this.reload}\r\n                    >\r\n                        <ReloadIcon/>\r\n                        <FormattedMessage\r\n                            id='admin.compliance_reports.reload'\r\n                            defaultMessage='Reload Completed Compliance Reports'\r\n                        />\r\n                    </button>\r\n                </div>\r\n                <div className='compliance-panel__table'>\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst style = {\r\n    content: {margin: 10},\r\n    greenStatus: {color: 'green'},\r\n    redStatus: {color: 'red'},\r\n    dataCell: {whiteSpace: 'nowrap'},\r\n    date: {whiteSpace: 'nowrap'},\r\n    serverError: {marginTop: '10px'},\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {createSelector} from 'reselect';\r\n\r\nimport {createComplianceReport, getComplianceReports} from 'mattermost-redux/actions/admin';\r\nimport {getComplianceReports as selectComplianceReports, getConfig} from 'mattermost-redux/selectors/entities/admin';\r\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport ComplianceReports from './compliance_reports.jsx';\r\n\r\nconst getUsersForReports = createSelector(\r\n    (state) => state.entities.users.profiles,\r\n    (state) => state.entities.admin.complianceReports,\r\n    (users, reports) => {\r\n        const usersMap = {};\r\n        Object.values(reports).forEach((r) => {\r\n            const u = users[r.user_id];\r\n            if (u) {\r\n                usersMap[u.id] = u;\r\n            }\r\n        });\r\n        return usersMap;\r\n    }\r\n);\r\n\r\nfunction mapStateToProps(state) {\r\n    const license = getLicense(state);\r\n    const isLicensed = license.IsLicensed === 'true';\r\n\r\n    let enabled = false;\r\n    const config = getConfig(state);\r\n    if (config && config.ComplianceSettings) {\r\n        enabled = config.ComplianceSettings.Enable;\r\n    }\r\n\r\n    let serverError;\r\n    const error = state.requests.admin.createCompliance.error;\r\n    if (error) {\r\n        serverError = error.message;\r\n    }\r\n\r\n    const reports = Object.values(selectComplianceReports(state)).sort((a, b) => {\r\n        return b.create_at - a.create_at;\r\n    });\r\n\r\n    return {\r\n        isLicensed,\r\n        enabled,\r\n        reports,\r\n        serverError,\r\n        users: getUsersForReports(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getComplianceReports,\r\n            createComplianceReport,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ComplianceReports);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport ComplianceReports from 'components/admin_console/compliance_reports';\r\nimport AuditTable from 'components/audit_table';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\n\r\nimport ReloadIcon from 'components/icon/reload_icon';\r\n\r\nexport default class Audits extends React.PureComponent {\r\n    static propTypes = {\r\n        isLicensed: PropTypes.bool.isRequired,\r\n\r\n        /*\r\n         * Array of audits to render\r\n         */\r\n        audits: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /*\r\n             * Function to fetch audits\r\n             */\r\n            getAudits: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadingAudits: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.actions.getAudits().then(\r\n            () => this.setState({loadingAudits: false})\r\n        );\r\n    }\r\n\r\n    reload = () => {\r\n        this.setState({loadingAudits: true});\r\n        this.props.actions.getAudits().then(\r\n            () => this.setState({loadingAudits: false})\r\n        );\r\n    }\r\n\r\n    activityLogHeader = () => {\r\n        const h4Style = {\r\n            display: 'inline-block',\r\n            marginBottom: '6px',\r\n        };\r\n        const divStyle = {\r\n            clear: 'both',\r\n        };\r\n        return (\r\n            <div style={divStyle}>\r\n                <h4 style={h4Style}>\r\n                    <FormattedMessage\r\n                        id='admin.complianceMonitoring.userActivityLogsTitle'\r\n                        defaultMessage='User Activity Logs'\r\n                    />\r\n                </h4>\r\n                <button\r\n                    type='submit'\r\n                    className='btn btn-link pull-right'\r\n                    onClick={this.reload}\r\n                >\r\n                    <ReloadIcon/>\r\n                    <FormattedMessage\r\n                        id='admin.audits.reload'\r\n                        defaultMessage='Reload User Activity Logs'\r\n                    />\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderComplianceReports = () => {\r\n        if (!this.props.isLicensed) {\r\n            return <div/>;\r\n        }\r\n        return (\r\n            <ComplianceReports/>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let content = null;\r\n\r\n        if (this.state.loadingAudits) {\r\n            content = <LoadingScreen/>;\r\n        } else {\r\n            content = (\r\n                <div>\r\n                    <AuditTable\r\n                        audits={this.props.audits}\r\n                        showUserId={true}\r\n                        showIp={true}\r\n                        showSession={true}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {this.renderComplianceReports()}\r\n                <div className='panel compliance-panel'>\r\n                    {this.activityLogHeader()}\r\n                    <div className='compliance-panel__table'>\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getAudits} from 'mattermost-redux/actions/admin';\r\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\r\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport Audits from './audits.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const license = getLicense(state);\r\n    const isLicensed = license.Compliance === 'true';\r\n\r\n    return {\r\n        isLicensed,\r\n        audits: Object.values(Selectors.getAudits(state)),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getAudits,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Audits);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport * as Utils from 'utils/utils';\r\nimport {t} from 'utils/i18n.jsx';\r\n\r\nimport LocalizedInput from 'components/localized_input/localized_input';\r\n\r\nimport Setting from './setting';\r\n\r\nexport default class CustomUrlSchemesSetting extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            id: PropTypes.string.isRequired,\r\n            value: PropTypes.array.isRequired,\r\n            onChange: PropTypes.func.isRequired,\r\n            disabled: PropTypes.bool,\r\n            setByEnv: PropTypes.bool.isRequired,\r\n        };\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: this.arrayToString(props.value),\r\n        };\r\n    }\r\n\r\n    stringToArray = (str) => {\r\n        return str.split(',').map((s) => s.trim()).filter(Boolean);\r\n    };\r\n\r\n    arrayToString = (arr) => {\r\n        return arr.join(',');\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const valueAsArray = this.stringToArray(e.target.value);\r\n\r\n        this.props.onChange(this.props.id, valueAsArray);\r\n\r\n        this.setState({\r\n            value: e.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const label = Utils.localizeMessage('admin.customization.customUrlSchemes', 'Custom URL Schemes:');\r\n        const helpText = Utils.localizeMessage(\r\n            'admin.customization.customUrlSchemesDesc',\r\n            'Allows message text to link if it begins with any of the comma-separated URL schemes listed. By default, the following schemes will create links: \"http\", \"https\", \"ftp\", \"tel\", and \"mailto\".'\r\n        );\r\n\r\n        return (\r\n            <Setting\r\n                label={label}\r\n                helpText={helpText}\r\n                inputId={this.props.id}\r\n                setByEnv={this.props.setByEnv}\r\n            >\r\n                <LocalizedInput\r\n                    id={this.props.id}\r\n                    className='form-control'\r\n                    type='text'\r\n                    placeholder={{id: t('admin.customization.customUrlSchemesPlaceholder'), defaultMessage: 'E.g.: \"git,smtp\"'}}\r\n                    value={this.state.value}\r\n                    onChange={this.handleChange}\r\n                    disabled={this.props.disabled || this.props.setByEnv}\r\n                />\r\n            </Setting>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {removeLicenseFile, uploadLicenseFile} from 'actions/admin_actions.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header.jsx';\r\n\r\nexport default class LicenseSettings extends React.Component {\r\n    static propTypes = {\r\n        license: PropTypes.object.isRequired,\r\n        config: PropTypes.object,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            fileSelected: false,\r\n            fileName: null,\r\n            serverError: null,\r\n            removing: false,\r\n            uploading: false,\r\n        };\r\n    }\r\n\r\n    handleChange = () => {\r\n        const element = this.refs.fileInput;\r\n        if (element && element.files.length > 0) {\r\n            this.setState({fileSelected: true, fileName: element.files[0].name});\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const element = this.refs.fileInput;\r\n        if (!element || element.files.length === 0) {\r\n            return;\r\n        }\r\n        const file = element.files[0];\r\n\r\n        this.setState({uploading: true});\r\n\r\n        uploadLicenseFile(\r\n            file,\r\n            () => {\r\n                this.setState({fileSelected: false, fileName: null, serverError: null, uploading: false});\r\n                window.location.reload(true);\r\n            },\r\n            (error) => {\r\n                Utils.clearFileInput(element[0]);\r\n                this.setState({fileSelected: false, fileName: null, serverError: error.message, uploading: false});\r\n            }\r\n        );\r\n    }\r\n\r\n    handleRemove = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({removing: true});\r\n\r\n        removeLicenseFile(\r\n            () => {\r\n                this.setState({fileSelected: false, fileName: null, serverError: null, removing: false});\r\n                window.location.reload(true);\r\n            },\r\n            (error) => {\r\n                this.setState({fileSelected: false, fileName: null, serverError: error.message, removing: false});\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var serverError = '';\r\n        if (this.state.serverError) {\r\n            serverError = <div className='col-sm-12'><div className='form-group has-error'><label className='control-label'>{this.state.serverError}</label></div></div>;\r\n        }\r\n\r\n        var btnClass = 'btn';\r\n        if (this.state.fileSelected) {\r\n            btnClass = 'btn btn-primary';\r\n        }\r\n\r\n        const {license} = this.props;\r\n\r\n        let edition;\r\n        let licenseType;\r\n        let licenseKey;\r\n\r\n        const issued = Utils.displayDate(parseInt(license.IssuedAt, 10)) + ' ' + Utils.displayTime(parseInt(license.IssuedAt, 10), true);\r\n        const startsAt = Utils.displayDate(parseInt(license.StartsAt, 10));\r\n        const expiresAt = Utils.displayDate(parseInt(license.ExpiresAt, 10));\r\n\r\n        if (license.IsLicensed === 'true') {\r\n            // Note: DO NOT LOCALISE THESE STRINGS. Legally we can not since the license is in English.\r\n            const sku = license.SkuShortName ? <React.Fragment>{`Edition: Mattermost Enterprise Edition ${license.SkuShortName}`}<br/></React.Fragment> : null;\r\n            edition = 'Mattermost Enterprise Edition. Enterprise features on this server have been unlocked with a license key and a valid subscription.';\r\n            licenseType = (\r\n                <div>\r\n                    <p>\r\n                        {'This software is offered under a commercial license.\\n\\nSee ENTERPRISE-EDITION-LICENSE.txt in your root install directory for details. See NOTICE.txt for information about open source software used in this system.\\n\\nYour subscription details are as follows:'}\r\n                    </p>\r\n                    {`Name: ${license.Name}`}<br/>\r\n                    {`Company or organization name: ${license.Company}`}<br/>\r\n                    {sku}\r\n                    {`Number of users: ${license.Users}`}<br/>\r\n                    {`License issued: ${issued}`}<br/>\r\n                    {`Start date of license: ${startsAt}`}<br/>\r\n                    {`Expiry date of license: ${expiresAt}`}<br/>\r\n                    <br/>\r\n                    {'See also '}<a href='https://about.mattermost.com/enterprise-edition-terms/'>{'Enterprise Edition Terms of Service'}</a>{' and '}<a href='https://about.mattermost.com/privacy/'>{'Privacy Policy.'}</a>\r\n                </div>\r\n            );\r\n\r\n            let removeButtonText = (\r\n                <FormattedMessage\r\n                    id='admin.license.keyRemove'\r\n                    defaultMessage='Remove Enterprise License and Downgrade Server'\r\n                />\r\n            );\r\n            if (this.state.removing) {\r\n                removeButtonText = (\r\n                    <FormattedMessage\r\n                        id='admin.license.removing'\r\n                        defaultMessage='Removing License...'\r\n                    />\r\n                );\r\n            }\r\n\r\n            licenseKey = (\r\n                <div className='col-sm-8'>\r\n                    <button\r\n                        className='btn btn-danger'\r\n                        onClick={this.handleRemove}\r\n                        id='remove-button'\r\n                    >\r\n                        {removeButtonText}\r\n                    </button>\r\n                    <br/>\r\n                    <br/>\r\n                    <p className='help-text'>\r\n                        {'If you migrate servers you may need to remove your license key to install it elsewhere. You can remove the key here, which will revert functionality to that of Team Edition.'}\r\n                    </p>\r\n                </div>\r\n            );\r\n        } else {\r\n            // Note: DO NOT LOCALISE THESE STRINGS. Legally we can not since the license is in English.\r\n            edition = (\r\n                <p>\r\n                    {'Mattermost Enterprise Edition. Unlock enterprise features in this software through the purchase of a subscription from '}\r\n                    <a\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'\r\n                        href='https://mattermost.com/'\r\n                    >\r\n                        {'https://mattermost.com/'}\r\n                    </a>\r\n                </p>\r\n            );\r\n\r\n            licenseType = 'This software is offered under a commercial license.\\n\\nSee ENTERPRISE-EDITION-LICENSE.txt in your root install directory for details. See NOTICE.txt for information about open source software used in this system.';\r\n\r\n            let fileName;\r\n            if (this.state.fileName) {\r\n                fileName = this.state.fileName;\r\n            } else {\r\n                fileName = (\r\n                    <FormattedMessage\r\n                        id='admin.license.noFile'\r\n                        defaultMessage='No file uploaded'\r\n                    />\r\n                );\r\n            }\r\n\r\n            let uploadButtonText = (\r\n                <FormattedMessage\r\n                    id='admin.license.upload'\r\n                    defaultMessage='Upload'\r\n                />\r\n            );\r\n            if (this.state.uploading) {\r\n                uploadButtonText = (\r\n                    <FormattedMessage\r\n                        id='admin.license.uploading'\r\n                        defaultMessage='Uploading License...'\r\n                    />\r\n                );\r\n            }\r\n\r\n            licenseKey = (\r\n                <div className='col-sm-8'>\r\n                    <div className='file__upload'>\r\n                        <button className='btn btn-primary'>\r\n                            <FormattedMessage\r\n                                id='admin.license.choose'\r\n                                defaultMessage='Choose File'\r\n                            />\r\n                        </button>\r\n                        <input\r\n                            ref='fileInput'\r\n                            type='file'\r\n                            accept='.mattermost-license'\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        className={btnClass}\r\n                        disabled={!this.state.fileSelected}\r\n                        onClick={this.handleSubmit}\r\n                        id='upload-button'\r\n                    >\r\n                        {uploadButtonText}\r\n                    </button>\r\n                    <div className='help-text no-margin'>\r\n                        {fileName}\r\n                    </div>\r\n                    <br/>\r\n                    {serverError}\r\n                    <p className='help-text no-margin'>\r\n                        <FormattedMarkdownMessage\r\n                            id='admin.license.uploadDesc'\r\n                            defaultMessage='Upload a license key for Mattermost Enterprise Edition to upgrade this server. [Visit us online](!http://mattermost.com) to learn more about the benefits of Enterprise Edition or to purchase a key.'\r\n                        />\r\n                    </p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='wrapper--fixed'>\r\n                <FormattedAdminHeader\r\n                    id='admin.license.title'\r\n                    defaultMessage='Edition and License'\r\n                />\r\n\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        <form\r\n                            className='form-horizontal'\r\n                            role='form'\r\n                        >\r\n                            <div className='form-group'>\r\n                                <label\r\n                                    className='control-label col-sm-4'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='admin.license.edition'\r\n                                        defaultMessage='Edition: '\r\n                                    />\r\n                                </label>\r\n                                <div className='col-sm-8'>\r\n                                    {edition}\r\n                                </div>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label\r\n                                    className='control-label col-sm-4'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='admin.license.type'\r\n                                        defaultMessage='License: '\r\n                                    />\r\n                                </label>\r\n                                <div className='col-sm-8'>\r\n                                    {licenseType}\r\n                                </div>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label\r\n                                    className='control-label col-sm-4'\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id='admin.license.key'\r\n                                        defaultMessage='License Key: '\r\n                                    />\r\n                                </label>\r\n                                {licenseKey}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\n\r\nconst AdminPanel = (props) => (\r\n    <div\r\n        className={'AdminPanel ' + props.className}\r\n        id={props.id}\r\n    >\r\n        <div\r\n            className='header'\r\n            onClick={props.onHeaderClick}\r\n        >\r\n            <div>\r\n                <h3>\r\n                    <FormattedMessage\r\n                        id={props.titleId}\r\n                        defaultMessage={props.titleDefault}\r\n                    />\r\n                </h3>\r\n                <span>\r\n                    <FormattedMarkdownMessage\r\n                        id={props.subtitleId}\r\n                        defaultMessage={props.subtitleDefault}\r\n                        values={props.subtitleValues}\r\n                    />\r\n                </span>\r\n            </div>\r\n            {props.button &&\r\n                <div className='button'>\r\n                    {props.button}\r\n                </div>\r\n            }\r\n        </div>\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nAdminPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string.isRequired,\r\n    id: PropTypes.string,\r\n    titleId: PropTypes.string.isRequired,\r\n    titleDefault: PropTypes.string.isRequired,\r\n    subtitleId: PropTypes.string.isRequired,\r\n    subtitleDefault: PropTypes.string.isRequired,\r\n    subtitleValues: PropTypes.object,\r\n    onHeaderClick: PropTypes.func,\r\n    button: PropTypes.node,\r\n};\r\n\r\nAdminPanel.defaultProps = {\r\n    className: '',\r\n};\r\n\r\nexport default AdminPanel;\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport AdminPanel from './admin_panel.jsx';\r\n\r\nconst AdminPanelWithLink = (props) => {\r\n    const button = (\r\n        <Link\r\n            className='btn btn-primary'\r\n            to={props.url}\r\n            disabled={props.disabled}\r\n        >\r\n            <FormattedMessage\r\n                id={props.linkTextId}\r\n                defaultMessage={props.linkTextDefault}\r\n            />\r\n        </Link>\r\n    );\r\n\r\n    return (\r\n        <AdminPanel\r\n            className={'AdminPanelWithLink ' + props.className}\r\n            id={props.id}\r\n            titleId={props.titleId}\r\n            titleDefault={props.titleDefault}\r\n            subtitleId={props.subtitleId}\r\n            subtitleDefault={props.subtitleDefault}\r\n            button={button}\r\n        >\r\n            {props.children}\r\n        </AdminPanel>\r\n    );\r\n};\r\n\r\nAdminPanelWithLink.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string.isRequired,\r\n    id: PropTypes.string,\r\n    titleId: PropTypes.string.isRequired,\r\n    titleDefault: PropTypes.string.isRequired,\r\n    subtitleId: PropTypes.string.isRequired,\r\n    subtitleDefault: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    disabled: PropTypes.bool,\r\n    linkTextId: PropTypes.string.isRequired,\r\n    linkTextDefault: PropTypes.string.isRequired,\r\n};\r\n\r\nAdminPanelWithLink.defaultProps = {\r\n    className: '',\r\n};\r\n\r\nexport default AdminPanelWithLink;\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper.jsx';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport Constants from 'utils/constants.jsx';\r\n\r\nconst MAX_TEAMS_PER_SCHEME_SUMMARY = 8;\r\n\r\nexport default class PermissionsSchemeSummary extends React.Component {\r\n    static propTypes = {\r\n        scheme: PropTypes.object.isRequired,\r\n        teams: PropTypes.array,\r\n        actions: PropTypes.shape({\r\n            deleteScheme: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showConfirmModal: false,\r\n            deleting: false,\r\n            serverError: null,\r\n        };\r\n    }\r\n\r\n    renderConfirmModal = () => {\r\n        const title = (\r\n            <FormattedMessage\r\n                id='admin.permissions.permissionsSchemeSummary.deleteSchemeTitle'\r\n                defaultMessage='Delete {scheme} scheme?'\r\n                values={{scheme: this.props.scheme.display_name}}\r\n            />\r\n        );\r\n\r\n        let serverError = null;\r\n        if (this.state.serverError) {\r\n            serverError = (\r\n                <div className='permission-scheme-summary-error-message'>\r\n                    <i className='fa fa-exclamation-circle'/> {this.state.serverError}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const message = (\r\n            <div>\r\n                <p>\r\n                    <FormattedMessage\r\n                        id='admin.permissions.permissionsSchemeSummary.deleteConfirmQuestion'\r\n                        defaultMessage='The permissions in the teams using this scheme will reset to the defaults in the System Scheme. Are you sure you want to delete the {schemeName} scheme?'\r\n                        values={{schemeName: this.props.scheme.display_name}}\r\n                    />\r\n                </p>\r\n                {serverError}\r\n            </div>\r\n        );\r\n\r\n        const confirmButton = (\r\n            <LoadingWrapper\r\n                loading={this.state.deleting}\r\n                text={Utils.localizeMessage('admin.permissions.permissionsSchemeSummary.deleting', 'Deleting...')}\r\n            >\r\n                <FormattedMessage\r\n                    id='admin.permissions.permissionsSchemeSummary.deleteConfirmButton'\r\n                    defaultMessage='Yes, Delete'\r\n                />\r\n            </LoadingWrapper>\r\n        );\r\n\r\n        return (\r\n            <ConfirmModal\r\n                show={this.state.showConfirmModal}\r\n                title={title}\r\n                message={message}\r\n                confirmButtonText={confirmButton}\r\n                onConfirm={this.handleDeleteConfirmed}\r\n                onCancel={this.handleDeleteCanceled}\r\n            />\r\n        );\r\n    }\r\n\r\n    stopPropagation = (e) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    handleDeleteCanceled = () => {\r\n        this.setState({\r\n            showConfirmModal: false,\r\n        });\r\n    }\r\n\r\n    handleDeleteConfirmed = async () => {\r\n        this.setState({deleting: true, serverError: null});\r\n        const data = await this.props.actions.deleteScheme(this.props.scheme.id);\r\n        if (data.error) {\r\n            this.setState({deleting: false, serverError: data.error.message});\r\n        } else {\r\n            this.setState({deleting: false, showConfirmModal: false});\r\n        }\r\n    }\r\n\r\n    delete = (e) => {\r\n        e.stopPropagation();\r\n        this.setState({showConfirmModal: true, serverError: null});\r\n    }\r\n\r\n    goToEdit = () => {\r\n        this.props.history.push('/admin_console/user_management/permissions/team_override_scheme/' + this.props.scheme.id);\r\n    }\r\n\r\n    render = () => {\r\n        const scheme = this.props.scheme;\r\n\r\n        let teams = this.props.teams ? this.props.teams.map((team) => (\r\n            <span\r\n                className='team'\r\n                key={team.id}\r\n            >\r\n                {team.display_name}\r\n            </span>\r\n        )) : [];\r\n\r\n        let extraTeams = null;\r\n        if (teams.length > MAX_TEAMS_PER_SCHEME_SUMMARY) {\r\n            extraTeams = (\r\n                <OverlayTrigger\r\n                    trigger={['hover', 'focus']}\r\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\r\n                    placement='bottom'\r\n                    overlay={\r\n                        <Tooltip\r\n                            className='team-scheme-extra-teams-overlay'\r\n                            id={scheme.id + '-extra-teams-overlay'}\r\n                        >\r\n                            {teams.slice(MAX_TEAMS_PER_SCHEME_SUMMARY)}\r\n                        </Tooltip>\r\n                    }\r\n                >\r\n                    <span\r\n                        className='team'\r\n                        key='extra-teams'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.permissions.permissionsSchemeSummary.moreTeams'\r\n                            defaultMessage='+{number} more'\r\n                            values={{number: teams.length - MAX_TEAMS_PER_SCHEME_SUMMARY}}\r\n                        />\r\n                    </span>\r\n                </OverlayTrigger>\r\n            );\r\n            teams = teams.slice(0, MAX_TEAMS_PER_SCHEME_SUMMARY);\r\n        }\r\n        const confirmModal = this.renderConfirmModal();\r\n\r\n        return (\r\n            <div\r\n                className='permissions-scheme-summary'\r\n                onClick={this.goToEdit}\r\n            >\r\n                <div onClick={this.stopPropagation}>{confirmModal}</div>\r\n                <div\r\n                    className='permissions-scheme-summary--header'\r\n                >\r\n                    <div className='title'>\r\n                        {scheme.display_name}\r\n                    </div>\r\n                    <div className='actions'>\r\n                        <Link\r\n                            className='edit-button'\r\n                            to={'/admin_console/user_management/permissions/team_override_scheme/' + scheme.id}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='admin.permissions.permissionsSchemeSummary.edit'\r\n                                defaultMessage='Edit'\r\n                            />\r\n                        </Link>\r\n                        {'-'}\r\n                        <a\r\n                            className='delete-button'\r\n                            onClick={this.delete}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='admin.permissions.permissionsSchemeSummary.delete'\r\n                                defaultMessage='Delete'\r\n                            />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div className='permissions-scheme-summary--description'>\r\n                    {scheme.description}\r\n                </div>\r\n                <div className='permissions-scheme-summary--teams'>\r\n                    {teams}\r\n                    {extraTeams}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {deleteScheme} from 'mattermost-redux/actions/schemes';\r\n\r\nimport {makeGetSchemeTeams} from 'mattermost-redux/selectors/entities/schemes';\r\n\r\nimport PermissionsSchemeSummary from './permissions_scheme_summary.jsx';\r\n\r\nfunction makeMapStateToProps() {\r\n    const getSchemeTeams = makeGetSchemeTeams();\r\n\r\n    return function mapStateToProps(state, ownProps) {\r\n        return {\r\n            teams: getSchemeTeams(state, {schemeId: ownProps.scheme.id}),\r\n        };\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            deleteScheme,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps)(PermissionsSchemeSummary);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {t} from 'utils/i18n';\r\nimport * as Utils from 'utils/utils';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\n\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper.jsx';\r\n\r\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header.jsx';\r\nimport AdminPanelWithLink from 'components/widgets/admin_console/admin_panel_with_link.jsx';\r\n\r\nimport PermissionsSchemeSummary from './permissions_scheme_summary';\r\n\r\nconst PAGE_SIZE = 30;\r\nconst PHASE_2_MIGRATION_IMCOMPLETE_STATUS_CODE = 501;\r\n\r\nexport default class PermissionSchemesSettings extends React.PureComponent {\r\n    static propTypes = {\r\n        schemes: PropTypes.object.isRequired,\r\n        jobsAreEnabled: PropTypes.bool,\r\n        clusterIsEnabled: PropTypes.bool,\r\n        license: PropTypes.shape({\r\n            CustomPermissionsSchemes: PropTypes.string,\r\n        }),\r\n        actions: PropTypes.shape({\r\n            loadSchemes: PropTypes.func.isRequired,\r\n            loadSchemeTeams: PropTypes.func.isRequired,\r\n        }),\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            loadingMore: false,\r\n            page: 0,\r\n            phase2MigrationIsComplete: false,\r\n        };\r\n    }\r\n\r\n    static defaultProps = {\r\n        schemes: {},\r\n    };\r\n\r\n    async UNSAFE_componentWillMount() { // eslint-disable-line camelcase\r\n        let schemes;\r\n        let phase2MigrationIsComplete = true; // Assume migration is complete unless HTTP status code says otherwise.\r\n        try {\r\n            schemes = await this.props.actions.loadSchemes('team', 0, PAGE_SIZE);\r\n            if (schemes.error.status_code === PHASE_2_MIGRATION_IMCOMPLETE_STATUS_CODE) {\r\n                phase2MigrationIsComplete = false;\r\n            }\r\n            const promises = [];\r\n            for (const scheme of schemes.data) {\r\n                promises.push(this.props.actions.loadSchemeTeams(scheme.id));\r\n            }\r\n            Promise.all(promises).then(() => this.setState({loading: false, phase2MigrationIsComplete}));\r\n        } catch (err) {\r\n            this.setState({loading: false, phase2MigrationIsComplete});\r\n        }\r\n    }\r\n\r\n    loadMoreSchemes = () => {\r\n        this.setState({loadingMore: true});\r\n        this.props.actions.loadSchemes('team', this.state.page + 1, PAGE_SIZE).then((schemes) => {\r\n            const promises = [];\r\n            for (const scheme of schemes.data) {\r\n                promises.push(this.props.actions.loadSchemeTeams(scheme.id));\r\n            }\r\n            Promise.all(promises).then(() => this.setState({loadingMore: false, page: this.state.page + 1}));\r\n        });\r\n    }\r\n\r\n    // |RunJobs && !EnableCluster|(*App).IsPhase2MigrationCompleted|View                                                   |\r\n    // |-------------------------|---------------------------------|-------------------------------------------------------|\r\n    // |true                     |true                             |null                                                   |\r\n    // |false                    |true                             |null (Jobs were disabled after a successful migration.)|\r\n    // |false                    |false                            |On hold view.                                          |\r\n    // |true                     |false                            |In progress view.                                      |\r\n    teamOverrideSchemesMigrationView = () => {\r\n        if (this.state.phase2MigrationIsComplete) {\r\n            return null;\r\n        }\r\n\r\n        const docLink = (\r\n            <a\r\n                href='https://docs.mattermost.com/administration/config-settings.html#jobs'\r\n                rel='noopener noreferrer'\r\n                target='_blank'\r\n            >\r\n                <FormattedMessage\r\n                    id='admin.permissions.documentationLinkText'\r\n                    defaultMessage='documentation'\r\n                />\r\n            </a>\r\n        );\r\n\r\n        if (this.props.jobsAreEnabled && !this.props.clusterIsEnabled) {\r\n            return this.teamOverrideUnavalableView(\r\n                t('admin.permissions.teamOverrideSchemesInProgress'),\r\n                'Migration job in progress: Team Override Schemes are not available until the job server completes the permissions migration. Learn more in the {documentationLink}.',\r\n                docLink\r\n            );\r\n        }\r\n\r\n        return this.teamOverrideUnavalableView(\r\n            t('admin.permissions.teamOverrideSchemesNoJobsEnabled'),\r\n            'Migration job on hold: Team Override Schemes are not available until the job server can execute the permissions migration. The job will be automatically started when the job server is enabled. Learn more in the {documentationLink}.',\r\n            docLink,\r\n        );\r\n    }\r\n\r\n    teamOverrideUnavalableView = (id, defaultMsg, documentationLink) => {\r\n        return (\r\n            <div className='team-override-unavailable'>\r\n                <div className='team-override-unavailable__inner'>\r\n                    <FormattedMessage\r\n                        id={id}\r\n                        defaultMessage={defaultMsg}\r\n                        values={{documentationLink}}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderTeamOverrideSchemes = () => {\r\n        const schemes = Object.values(this.props.schemes).map((scheme) => (\r\n            <PermissionsSchemeSummary\r\n                scheme={scheme}\r\n                history={this.props.history}\r\n                key={scheme.id}\r\n            />\r\n        ));\r\n        const hasCustomSchemes = this.props.license.CustomPermissionsSchemes === 'true';\r\n        const teamOverrideView = this.teamOverrideSchemesMigrationView();\r\n\r\n        if (hasCustomSchemes) {\r\n            return (\r\n                <AdminPanelWithLink\r\n                    className='permissions-block'\r\n                    titleId={t('admin.permissions.teamOverrideSchemesTitle')}\r\n                    titleDefault='Team Override Schemes'\r\n                    subtitleId={t('admin.permissions.teamOverrideSchemesBannerText')}\r\n                    subtitleDefault='Use when specific teams need permission exceptions to the [System Scheme](!https://about.mattermost.com/default-system-scheme).'\r\n                    url='/admin_console/user_management/permissions/team_override_scheme'\r\n                    disabled={teamOverrideView !== null}\r\n                    linkTextId={t('admin.permissions.teamOverrideSchemesNewButton')}\r\n                    linkTextDefault='New Team Override Scheme'\r\n                >\r\n                    {schemes.length === 0 && teamOverrideView === null &&\r\n                        <div className='no-team-schemes'>\r\n                            <FormattedMessage\r\n                                id='admin.permissions.teamOverrideSchemesNoSchemes'\r\n                                defaultMessage='No team override schemes created.'\r\n                            />\r\n                        </div>}\r\n                    {teamOverrideView}\r\n                    {schemes.length > 0 && schemes}\r\n                    {schemes.length === (PAGE_SIZE * (this.state.page + 1)) &&\r\n                        <button\r\n                            className='more-schemes theme style--none color--link'\r\n                            onClick={this.loadMoreSchemes}\r\n                            disabled={this.state.loadingMore}\r\n                        >\r\n                            <LoadingWrapper\r\n                                loading={this.state.loadingMore}\r\n                                text={Utils.localizeMessage('admin.permissions.loadingMoreSchemes', 'Loading...')}\r\n                            >\r\n                                <FormattedMessage\r\n                                    id='admin.permissions.loadMoreSchemes'\r\n                                    defaultMessage='Load more schemes'\r\n                                />\r\n                            </LoadingWrapper>\r\n                        </button>}\r\n                </AdminPanelWithLink>\r\n            );\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render = () => {\r\n        if (this.state.loading) {\r\n            return (<LoadingScreen/>);\r\n        }\r\n\r\n        const teamOverrideView = this.teamOverrideSchemesMigrationView();\r\n\r\n        return (\r\n            <div className='wrapper--fixed'>\r\n                <FormattedAdminHeader\r\n                    id='admin.permissions.permissionSchemes'\r\n                    defaultMessage='Permission Schemes'\r\n                />\r\n\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        <div className='banner info'>\r\n                            <div className='banner__content'>\r\n                                <span>\r\n                                    <FormattedMarkdownMessage\r\n                                        id='admin.permissions.introBanner'\r\n                                        defaultMessage='Permission Schemes set the default permissions for Team Admins, Channel Admins and everyone else. Learn more about permission schemes in our [documentation](!https://about.mattermost.com/default-advanced-permissions).'\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <AdminPanelWithLink\r\n                            titleId={t('admin.permissions.systemSchemeBannerTitle')}\r\n                            titleDefault='System Scheme'\r\n                            subtitleId={t('admin.permissions.systemSchemeBannerText')}\r\n                            subtitleDefault='Set the default permissions inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied.'\r\n                            url='/admin_console/user_management/permissions/system_scheme'\r\n                            disabled={teamOverrideView !== null}\r\n                            linkTextId={t('admin.permissions.systemSchemeBannerButton')}\r\n                            linkTextDefault='Edit Scheme'\r\n                        />\r\n\r\n                        {this.renderTeamOverrideSchemes()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nt('admin.permissions.group.delete_posts.description');\r\nt('admin.permissions.group.delete_posts.name');\r\nt('admin.permissions.group.integrations.description');\r\nt('admin.permissions.group.integrations.name');\r\nt('admin.permissions.group.posts.description');\r\nt('admin.permissions.group.posts.name');\r\nt('admin.permissions.group.private_channel.description');\r\nt('admin.permissions.group.private_channel.name');\r\nt('admin.permissions.group.public_channel.description');\r\nt('admin.permissions.group.public_channel.name');\r\nt('admin.permissions.group.reactions.description');\r\nt('admin.permissions.group.reactions.name');\r\nt('admin.permissions.group.send_invites.description');\r\nt('admin.permissions.group.send_invites.name');\r\nt('admin.permissions.group.teams.description');\r\nt('admin.permissions.group.teams.name');\r\nt('admin.permissions.group.edit_posts.description');\r\nt('admin.permissions.group.edit_posts.name');\r\nt('admin.permissions.group.teams_team_scope.description');\r\nt('admin.permissions.group.teams_team_scope.name');\r\nt('admin.permissions.permission.assign_system_admin_role.description');\r\nt('admin.permissions.permission.assign_system_admin_role.name');\r\nt('admin.permissions.permission.create_direct_channel.description');\r\nt('admin.permissions.permission.create_direct_channel.name');\r\nt('admin.permissions.permission.create_group_channel.description');\r\nt('admin.permissions.permission.create_group_channel.name');\r\nt('admin.permissions.permission.create_private_channel.description');\r\nt('admin.permissions.permission.create_private_channel.name');\r\nt('admin.permissions.permission.create_public_channel.description');\r\nt('admin.permissions.permission.create_public_channel.name');\r\nt('admin.permissions.permission.create_team.description');\r\nt('admin.permissions.permission.create_team.name');\r\nt('admin.permissions.permission.create_user_access_token.description');\r\nt('admin.permissions.permission.create_user_access_token.name');\r\nt('admin.permissions.permission.delete_others_posts.description');\r\nt('admin.permissions.permission.delete_others_posts.name');\r\nt('admin.permissions.permission.delete_post.description');\r\nt('admin.permissions.permission.delete_post.name');\r\nt('admin.permissions.permission.delete_private_channel.description');\r\nt('admin.permissions.permission.delete_private_channel.name');\r\nt('admin.permissions.permission.delete_public_channel.description');\r\nt('admin.permissions.permission.delete_public_channel.name');\r\nt('admin.permissions.permission.edit_other_users.description');\r\nt('admin.permissions.permission.edit_other_users.name');\r\nt('admin.permissions.permission.edit_post.description');\r\nt('admin.permissions.permission.edit_post.name');\r\nt('admin.permissions.permission.import_team.description');\r\nt('admin.permissions.permission.import_team.name');\r\nt('admin.permissions.permission.list_team_channels.description');\r\nt('admin.permissions.permission.list_team_channels.name');\r\nt('admin.permissions.permission.list_users_without_team.description');\r\nt('admin.permissions.permission.list_users_without_team.name');\r\nt('admin.permissions.permission.manage_channel_roles.description');\r\nt('admin.permissions.permission.manage_channel_roles.name');\r\nt('admin.permissions.permission.create_emojis.description');\r\nt('admin.permissions.permission.create_emojis.name');\r\nt('admin.permissions.permission.delete_emojis.description');\r\nt('admin.permissions.permission.delete_emojis.name');\r\nt('admin.permissions.permission.delete_others_emojis.description');\r\nt('admin.permissions.permission.delete_others_emojis.name');\r\nt('admin.permissions.permission.manage_jobs.description');\r\nt('admin.permissions.permission.manage_jobs.name');\r\nt('admin.permissions.permission.manage_oauth.description');\r\nt('admin.permissions.permission.manage_oauth.name');\r\nt('admin.permissions.permission.manage_private_channel_members.description');\r\nt('admin.permissions.permission.manage_private_channel_members.name');\r\nt('admin.permissions.permission.manage_private_channel_properties.description');\r\nt('admin.permissions.permission.manage_private_channel_properties.name');\r\nt('admin.permissions.permission.manage_public_channel_members.description');\r\nt('admin.permissions.permission.manage_public_channel_members.name');\r\nt('admin.permissions.permission.manage_public_channel_properties.description');\r\nt('admin.permissions.permission.manage_public_channel_properties.name');\r\nt('admin.permissions.permission.manage_roles.description');\r\nt('admin.permissions.permission.manage_roles.name');\r\nt('admin.permissions.permission.manage_slash_commands.description');\r\nt('admin.permissions.permission.manage_slash_commands.name');\r\nt('admin.permissions.permission.manage_system.description');\r\nt('admin.permissions.permission.manage_system.name');\r\nt('admin.permissions.permission.manage_team.description');\r\nt('admin.permissions.permission.manage_team.name');\r\nt('admin.permissions.permission.manage_team_roles.description');\r\nt('admin.permissions.permission.manage_team_roles.name');\r\nt('admin.permissions.permission.manage_incoming_webhooks.description');\r\nt('admin.permissions.permission.manage_incoming_webhooks.name');\r\nt('admin.permissions.permission.manage_outgoing_webhooks.description');\r\nt('admin.permissions.permission.manage_outgoing_webhooks.name');\r\nt('admin.permissions.permission.permanent_delete_user.description');\r\nt('admin.permissions.permission.permanent_delete_user.name');\r\nt('admin.permissions.permission.read_channel.description');\r\nt('admin.permissions.permission.read_channel.name');\r\nt('admin.permissions.permission.read_user_access_token.description');\r\nt('admin.permissions.permission.read_user_access_token.name');\r\nt('admin.permissions.permission.remove_user_from_team.description');\r\nt('admin.permissions.permission.remove_user_from_team.name');\r\nt('admin.permissions.permission.revoke_user_access_token.description');\r\nt('admin.permissions.permission.revoke_user_access_token.name');\r\nt('admin.permissions.permission.upload_file.description');\r\nt('admin.permissions.permission.upload_file.name');\r\nt('admin.permissions.permission.view_team.description');\r\nt('admin.permissions.permission.view_team.name');\r\nt('admin.permissions.permission.edit_others_posts.description');\r\nt('admin.permissions.permission.edit_others_posts.name');\r\nt('admin.permissions.roles.all_users.name');\r\nt('admin.permissions.roles.channel_admin.name');\r\nt('admin.permissions.roles.channel_user.name');\r\nt('admin.permissions.roles.system_admin.name');\r\nt('admin.permissions.roles.system_user.name');\r\nt('admin.permissions.roles.team_admin.name');\r\nt('admin.permissions.roles.team_user.name');\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getSchemeTeams as loadSchemeTeams, getSchemes as loadSchemes} from 'mattermost-redux/actions/schemes';\r\nimport {getSchemes} from 'mattermost-redux/selectors/entities/schemes';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport PermissionSchemesSettings from './permission_schemes_settings.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const schemes = getSchemes(state);\r\n    const config = getConfig(state);\r\n\r\n    return {\r\n        schemes,\r\n        jobsAreEnabled: config.RunJobs === 'true',\r\n        clusterIsEnabled: config.EnableCluster === 'true',\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            loadSchemes,\r\n            loadSchemeTeams,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionSchemesSettings);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport {browserHistory} from 'utils/browser_history';\r\n\r\nexport default class BlockableLink extends React.Component {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Bool whether navigation is blocked\r\n         */\r\n        blocked: PropTypes.bool.isRequired,\r\n\r\n        /*\r\n         * String Link destination\r\n         */\r\n        to: PropTypes.string.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /*\r\n             * Function for deferring navigation while blocked\r\n             */\r\n            deferNavigation: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        if (this.props.blocked) {\r\n            e.preventDefault();\r\n\r\n            this.props.actions.deferNavigation(() => {\r\n                browserHistory.push(this.props.to);\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const props = {...this.props};\r\n        Reflect.deleteProperty(props, 'blocked');\r\n        Reflect.deleteProperty(props, 'actions');\r\n\r\n        return (\r\n            <NavLink\r\n                {...props}\r\n                onClick={this.handleClick}\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {deferNavigation} from 'actions/admin_actions.jsx';\r\nimport {getNavigationBlocked} from 'selectors/views/admin';\r\n\r\nimport BlockableLink from './blockable_link.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        blocked: getNavigationBlocked(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            deferNavigation,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlockableLink);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\n\r\nexport default class AccordionToggleIcon extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <span {...this.props}>\r\n                <svg\r\n                    width='30px'\r\n                    height='30px'\r\n                    viewBox='0 0 30 30'\r\n                >\r\n                    <g\r\n                        id='Developer-Export'\r\n                        stroke='none'\r\n                        strokeWidth='1'\r\n                        fill='none'\r\n                        fillRule='evenodd'\r\n                    >\r\n                        <g\r\n                            transform='translate(-995.000000, -1372.000000)'\r\n                            id='All-Team-Members'\r\n                        >\r\n                            <g transform='translate(245.000000, 698.000000)'>\r\n                                <g\r\n                                    id='Team-Administrators'\r\n                                    transform='translate(0.000000, 651.000000)'\r\n                                >\r\n                                    <g id='accordion-header'>\r\n                                        <g\r\n                                            id='accordion---expanded'\r\n                                            transform='translate(750.000000, 23.000000)'\r\n                                        >\r\n                                            <path\r\n                                                d='M23.1484532,13.3124932 C23.3437659,13.1171805 23.3437659,12.7968676 23.1484532,12.6015549 L21.8515766,11.3124908 C21.6562639,11.1171781 21.3437635,11.1171781 21.1484508,11.3124908 L15.0000083,17.4609333 L8.8515659,11.3124908 C8.65625317,11.1171781 8.34375279,11.1171781 8.14844006,11.3124908 L6.85156352,12.6015549 C6.65625078,12.7968676 6.65625078,13.1171805 6.85156352,13.3124932 L14.6484454,21.1015626 C14.8437582,21.2968754 15.1562585,21.2968754 15.3515713,21.1015626 L23.1484532,13.3124932 Z'\r\n                                                id=''\r\n                                                fill='#979797'\r\n                                            />\r\n                                            <circle\r\n                                                id='Oval-2'\r\n                                                stroke='#989898'\r\n                                                strokeWidth='2'\r\n                                                cx='15'\r\n                                                cy='15'\r\n                                                r='14'\r\n                                            />\r\n                                        </g>\r\n                                    </g>\r\n                                </g>\r\n                            </g>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AccordionToggleIcon from 'components/svg/accordion_toggle_icon.jsx';\r\n\r\nimport AdminPanel from './admin_panel.jsx';\r\n\r\nconst AdminPanelTogglable = (props) => {\r\n    return (\r\n        <AdminPanel\r\n            className={'AdminPanelTogglable ' + props.className + (props.open ? '' : ' closed')}\r\n            id={props.id}\r\n            titleId={props.titleId}\r\n            titleDefault={props.titleDefault}\r\n            subtitleId={props.subtitleId}\r\n            subtitleDefault={props.subtitleDefault}\r\n            onHeaderClick={props.onToggle}\r\n            button={<AccordionToggleIcon/>}\r\n        >\r\n            {props.children}\r\n        </AdminPanel>\r\n    );\r\n};\r\n\r\nAdminPanelTogglable.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string.isRequired,\r\n    id: PropTypes.string,\r\n    open: PropTypes.bool.isRequired,\r\n    titleId: PropTypes.string.isRequired,\r\n    titleDefault: PropTypes.string.isRequired,\r\n    subtitleId: PropTypes.string.isRequired,\r\n    subtitleDefault: PropTypes.string.isRequired,\r\n    onToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nAdminPanelTogglable.defaultProps = {\r\n    className: '',\r\n    open: true,\r\n};\r\n\r\nexport default AdminPanelTogglable;\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\n\r\nexport default class CheckboxCheckedIcon extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <svg\r\n                width='18px'\r\n                height='18px'\r\n                viewBox='0 0 18 18'\r\n            >\r\n                <g\r\n                    id='Developer-Export'\r\n                    stroke='none'\r\n                    strokeWidth='1'\r\n                    fillRule='evenodd'\r\n                >\r\n                    <g\r\n                        transform='translate(-285.000000, -933.000000)'\r\n                        id='All-Team-Members'\r\n                    >\r\n                        <g transform='translate(245.000000, 698.000000)'>\r\n                            <g\r\n                                id='Channel-Administrators'\r\n                                transform='translate(0.000000, 106.000000)'\r\n                            >\r\n                                <g\r\n                                    id='data-table/column-1'\r\n                                    transform='translate(11.000000, 86.000000)'\r\n                                >\r\n                                    <g\r\n                                        id='row-checkbox---Public-Channels'\r\n                                        transform='translate(12.000000, 35.000000)'\r\n                                    >\r\n                                        <g\r\n                                            id='Stacked-Group'\r\n                                            transform='translate(0.000000, 5.000000)'\r\n                                        >\r\n                                            <g id='data-table/1st/row-checkbox-label-base'>\r\n                                                <g\r\n                                                    id='check-on-copy-11'\r\n                                                    transform='translate(14.000000, 0.000000)'\r\n                                                >\r\n                                                    <path\r\n                                                        d='M19,3 L5,3 C3.9,3 3,3.9 3,5 L3,19 C3,20.1 3.9,21 5,21 L19,21 C20.1,21 21,20.1 21,19 L21,5 C21,3.9 20.1,3 19,3 L19,3 Z M10,17 L5,12.1923077 L6.4,10.8461538 L10,14.3076923 L17.6,7 L19,8.34615385 L10,17 L10,17 Z'\r\n                                                        id='checkbox---checked'\r\n                                                    />\r\n                                                </g>\r\n                                            </g>\r\n                                        </g>\r\n                                    </g>\r\n                                </g>\r\n                            </g>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\n\r\nexport default class CheckboxPartialIcon extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <svg\r\n                width='18px'\r\n                height='18px'\r\n                viewBox='0 0 18 18'\r\n            >\r\n                <g\r\n                    id='Developer-Export'\r\n                    stroke='none'\r\n                    strokeWidth='1'\r\n                    fillRule='evenodd'\r\n                >\r\n                    <g\r\n                        transform='translate(-298.000000, -1273.000000)'\r\n                        id='All-Team-Members'\r\n                    >\r\n                        <g transform='translate(245.000000, 698.000000)'>\r\n                            <g\r\n                                id='Channel-Administrators'\r\n                                transform='translate(0.000000, 106.000000)'\r\n                            >\r\n                                <g\r\n                                    id='data-table/column-1'\r\n                                    transform='translate(11.000000, 86.000000)'\r\n                                >\r\n                                    <g\r\n                                        id='row-checkbox---@all-@channel-Mentions'\r\n                                        transform='translate(0.000000, 375.000000)'\r\n                                    >\r\n                                        <g id='Stacked-Group'>\r\n                                            <g\r\n                                                id='data-table/1st/row-checkbox-label-base'\r\n                                                transform='translate(25.000000, 5.000000)'\r\n                                            >\r\n                                                <g\r\n                                                    id='check-on-copy-11'\r\n                                                    transform='translate(14.000000, 0.000000)'\r\n                                                >\r\n                                                    <path\r\n                                                        d='M19,3 C20.1,3 21,3.9 21,5 L21,19 C21,20.1 20.1,21 19,21 L5,21 C3.9,21 3,20.1 3,19 L3,5 C3,3.9 3.9,3 5,3 L19,3 Z M7,11 L7,13 L17,13 L17,11 L7,11 Z'\r\n                                                        id='checkbox---partial'\r\n                                                    />\r\n                                                </g>\r\n                                            </g>\r\n                                        </g>\r\n                                    </g>\r\n                                </g>\r\n                            </g>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CheckboxCheckedIcon from 'components/svg/checkbox_checked_icon.jsx';\r\nimport CheckboxPartialIcon from 'components/svg/checkbox_partial_icon.jsx';\r\n\r\nexport default class PermissionCheckbox extends React.PureComponent {\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n    };\r\n\r\n    static defaultProps = {\r\n        value: '',\r\n    }\r\n\r\n    render() {\r\n        const {value} = this.props;\r\n        let icon = null;\r\n        let extraClass = '';\r\n        if (value === 'checked') {\r\n            icon = (<CheckboxCheckedIcon/>);\r\n            extraClass = 'checked';\r\n        } else if (value === 'intermediate') {\r\n            icon = (<CheckboxPartialIcon/>);\r\n            extraClass = 'intermediate';\r\n        }\r\n        return (\r\n            <div className={'permission-check ' + extraClass}>\r\n                {icon}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage, FormattedHTMLMessage, injectIntl, intlShape} from 'react-intl';\r\nimport {Overlay, Tooltip} from 'react-bootstrap';\r\n\r\nimport {generateId} from 'utils/utils.jsx';\r\nimport Constants from 'utils/constants.jsx';\r\n\r\nexport class PermissionDescription extends React.Component {\r\n    static propTypes = {\r\n        intl: intlShape.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n        rowType: PropTypes.string.isRequired,\r\n        inherited: PropTypes.object,\r\n        selectRow: PropTypes.func.isRequired,\r\n        additionalValues: PropTypes.object,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.id = generateId();\r\n\r\n        this.state = {\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    closeTooltip = () => {\r\n        this.setState({open: false});\r\n    }\r\n\r\n    openTooltip = (e) => {\r\n        const elm = e.currentTarget.querySelector('span');\r\n        const isElipsis = elm.offsetWidth < elm.scrollWidth;\r\n        this.setState({open: isElipsis});\r\n    }\r\n\r\n    parentPermissionClicked = (e) => {\r\n        const isInheritLink = e.target.parentElement.parentElement.className === 'inherit-link-wrapper';\r\n        if (e.target.parentElement.className !== 'permission-description' && !isInheritLink) {\r\n            e.stopPropagation();\r\n        } else if (isInheritLink) {\r\n            this.props.selectRow(this.props.id);\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {inherited, id, rowType} = this.props;\r\n\r\n        let content = '';\r\n        if (inherited) {\r\n            content = (\r\n                <span className='inherit-link-wrapper'>\r\n                    <FormattedHTMLMessage\r\n                        id='admin.permissions.inherited_from'\r\n                        values={{\r\n                            name: this.props.intl.formatMessage({\r\n                                id: 'admin.permissions.roles.' + inherited.name + '.name',\r\n                                defaultMessage: inherited.display_name,\r\n                            }),\r\n                        }}\r\n                    />\r\n                </span>\r\n            );\r\n        } else {\r\n            content = (\r\n                <FormattedMessage\r\n                    id={'admin.permissions.' + rowType + '.' + id + '.description'}\r\n                    values={this.props.additionalValues}\r\n                />\r\n            );\r\n        }\r\n        let tooltip = (\r\n            <Overlay\r\n                show={this.state.open}\r\n                delayShow={Constants.OVERLAY_TIME_DELAY}\r\n                placement='top'\r\n                target={this.refs.content}\r\n            >\r\n                <Tooltip id={this.id}>\r\n                    {content}\r\n                </Tooltip>\r\n            </Overlay>\r\n        );\r\n        if (content.props.values && Object.keys(content.props.values).length > 0) {\r\n            tooltip = null;\r\n        }\r\n        content = (\r\n            <span\r\n                className='permission-description'\r\n                onClick={this.parentPermissionClicked}\r\n                ref='content'\r\n                onMouseOver={this.openTooltip}\r\n                onMouseOut={this.closeTooltip}\r\n            >\r\n                {content}\r\n                {tooltip}\r\n            </span>\r\n        );\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default injectIntl(PermissionDescription);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport PermissionCheckbox from './permission_checkbox.jsx';\r\nimport PermissionDescription from './permission_description.jsx';\r\n\r\nexport default class PermissionRow extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        uniqId: PropTypes.string.isRequired,\r\n        inherited: PropTypes.object,\r\n        readOnly: PropTypes.bool,\r\n        selected: PropTypes.string,\r\n        selectRow: PropTypes.func.isRequired,\r\n        value: PropTypes.string.isRequired,\r\n        onChange: PropTypes.func.isRequired,\r\n        additionalValues: PropTypes.object,\r\n    };\r\n\r\n    toggleSelect = () => {\r\n        if (this.props.readOnly) {\r\n            return;\r\n        }\r\n        this.props.onChange(this.props.id);\r\n    }\r\n\r\n    render = () => {\r\n        const {id, uniqId, inherited, value, readOnly, selected, additionalValues} = this.props;\r\n        let classes = 'permission-row';\r\n        if (readOnly) {\r\n            classes += ' read-only';\r\n        }\r\n\r\n        if (selected === id) {\r\n            classes += ' selected';\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={classes}\r\n                onClick={this.toggleSelect}\r\n                id={uniqId}\r\n            >\r\n                <PermissionCheckbox value={value}/>\r\n                <span className='permission-name'>\r\n                    <FormattedMessage\r\n                        id={'admin.permissions.permission.' + id + '.name'}\r\n                    />\r\n                </span>\r\n                <PermissionDescription\r\n                    inherited={inherited}\r\n                    id={id}\r\n                    selectRow={this.props.selectRow}\r\n                    rowType='permission'\r\n                    additionalValues={additionalValues}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {PermissionsScope} from 'utils/constants.jsx';\r\n\r\nimport PermissionCheckbox from './permission_checkbox.jsx';\r\nimport PermissionRow from './permission_row.jsx';\r\nimport PermissionDescription from './permission_description.jsx';\r\n\r\nexport default class PermissionGroup extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        uniqId: PropTypes.string.isRequired,\r\n        permissions: PropTypes.array.isRequired,\r\n        readOnly: PropTypes.bool,\r\n        role: PropTypes.object,\r\n        parentRole: PropTypes.object,\r\n        scope: PropTypes.string.isRequired,\r\n        combined: PropTypes.bool,\r\n        selected: PropTypes.string,\r\n        selectRow: PropTypes.func.isRequired,\r\n        root: PropTypes.bool,\r\n        onChange: PropTypes.func.isRequired,\r\n        additionalValues: PropTypes.object,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: true,\r\n            prevPermissions: [],\r\n        };\r\n    }\r\n\r\n    UNSAFE_componentWillUpdate(nextProps) { // eslint-disable-line camelcase\r\n        if (this.props.selected !== nextProps.selected) {\r\n            if (this.getRecursivePermissions(this.props.permissions).indexOf(nextProps.selected) !== -1) {\r\n                this.setState({expanded: true});\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleExpanded = (e) => {\r\n        e.stopPropagation();\r\n        this.setState({expanded: !this.state.expanded});\r\n    }\r\n\r\n    toggleSelectRow = (id) => {\r\n        if (this.props.readOnly) {\r\n            return;\r\n        }\r\n        this.props.onChange([id]);\r\n    }\r\n\r\n    getRecursivePermissions = (permissions) => {\r\n        let result = [];\r\n        for (const permission of permissions) {\r\n            if (typeof permission === 'string') {\r\n                result.push(permission);\r\n            } else {\r\n                result = result.concat(this.getRecursivePermissions(permission.permissions));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    toggleSelectSubGroup = (ids) => {\r\n        if (this.props.readOnly) {\r\n            return;\r\n        }\r\n        this.props.onChange(ids);\r\n    }\r\n\r\n    toggleSelectGroup = () => {\r\n        const {readOnly, permissions, role, onChange} = this.props;\r\n        if (readOnly) {\r\n            return;\r\n        }\r\n        if (this.getStatus(permissions) === 'checked') {\r\n            const permissionsToToggle = [];\r\n            for (const permission of this.getRecursivePermissions(permissions)) {\r\n                if (!this.fromParent(permission)) {\r\n                    permissionsToToggle.push(permission);\r\n                }\r\n            }\r\n            this.setState({expanded: true});\r\n            onChange(permissionsToToggle);\r\n        } else if (this.getStatus(permissions) === '') {\r\n            const permissionsToToggle = [];\r\n            let expanded = true;\r\n            if (this.state.prevPermissions.length === 0) {\r\n                for (const permission of this.getRecursivePermissions(permissions)) {\r\n                    if (!this.fromParent(permission)) {\r\n                        permissionsToToggle.push(permission);\r\n                        expanded = false;\r\n                    }\r\n                }\r\n            } else {\r\n                for (const permission of this.getRecursivePermissions(permissions)) {\r\n                    if (this.state.prevPermissions.indexOf(permission) !== -1 && !this.fromParent(permission)) {\r\n                        permissionsToToggle.push(permission);\r\n                    }\r\n                }\r\n            }\r\n            onChange(permissionsToToggle);\r\n            this.setState({prevPermissions: [], expanded});\r\n        } else {\r\n            const permissionsToToggle = [];\r\n            for (const permission of this.getRecursivePermissions(permissions)) {\r\n                if (role.permissions.indexOf(permission) === -1 && !this.fromParent(permission)) {\r\n                    permissionsToToggle.push(permission);\r\n                }\r\n            }\r\n            this.setState({prevPermissions: role.permissions, expanded: false});\r\n            onChange(permissionsToToggle);\r\n        }\r\n    }\r\n\r\n    isInScope = (permission) => {\r\n        if (this.props.scope === 'channel_scope' && PermissionsScope[permission] !== 'channel_scope') {\r\n            return false;\r\n        }\r\n        if (this.props.scope === 'team_scope' && PermissionsScope[permission] === 'system_scope') {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    renderPermission = (permission, additionalValues) => {\r\n        if (!this.isInScope(permission)) {\r\n            return null;\r\n        }\r\n        const comesFromParent = this.fromParent(permission);\r\n        const active = comesFromParent || this.props.role.permissions.indexOf(permission) !== -1;\r\n        return (\r\n            <PermissionRow\r\n                key={permission}\r\n                id={permission}\r\n                uniqId={this.props.uniqId + '-' + permission}\r\n                selected={this.props.selected}\r\n                selectRow={this.props.selectRow}\r\n                readOnly={this.props.readOnly || comesFromParent}\r\n                inherited={comesFromParent ? this.props.parentRole : null}\r\n                value={active ? 'checked' : ''}\r\n                onChange={this.toggleSelectRow}\r\n                additionalValues={additionalValues}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderGroup = (g) => {\r\n        return (\r\n            <PermissionGroup\r\n                key={g.id}\r\n                id={g.id}\r\n                uniqId={this.props.uniqId + '-' + g.id}\r\n                selected={this.props.selected}\r\n                selectRow={this.props.selectRow}\r\n                readOnly={this.props.readOnly}\r\n                permissions={g.permissions}\r\n                additionalValues={this.props.additionalValues}\r\n                role={this.props.role}\r\n                parentRole={this.props.parentRole}\r\n                scope={this.props.scope}\r\n                onChange={this.toggleSelectSubGroup}\r\n                combined={g.combined}\r\n                root={false}\r\n            />\r\n        );\r\n    }\r\n\r\n    fromParent = (id) => {\r\n        return this.props.parentRole && this.props.parentRole.permissions.indexOf(id) !== -1;\r\n    }\r\n\r\n    getStatus = (permissions) => {\r\n        let anyChecked = false;\r\n        let anyUnchecked = false;\r\n        for (const permission of permissions) {\r\n            if (typeof permission === 'string') {\r\n                if (!this.isInScope(permission)) {\r\n                    continue;\r\n                }\r\n                anyChecked = anyChecked || this.fromParent(permission) || this.props.role.permissions.indexOf(permission) !== -1;\r\n                anyUnchecked = anyUnchecked || (!this.fromParent(permission) && this.props.role.permissions.indexOf(permission) === -1);\r\n            } else {\r\n                const status = this.getStatus(permission.permissions);\r\n                if (status === 'intermediate') {\r\n                    return 'intermediate';\r\n                }\r\n                if (status === 'checked') {\r\n                    anyChecked = true;\r\n                }\r\n                if (status === '') {\r\n                    anyUnchecked = true;\r\n                }\r\n            }\r\n        }\r\n        if (anyChecked && anyUnchecked) {\r\n            return 'intermediate';\r\n        }\r\n        if (anyChecked && !anyUnchecked) {\r\n            return 'checked';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    hasPermissionsOnScope = () => {\r\n        return this.getRecursivePermissions(this.props.permissions).some((permission) => this.isInScope(permission));\r\n    }\r\n\r\n    allPermissionsFromParent = (permissions) => {\r\n        for (const permission of permissions) {\r\n            if (typeof permission !== 'string') {\r\n                if (!this.allPermissionsFromParent(permission.permissions)) {\r\n                    return false;\r\n                }\r\n                continue;\r\n            }\r\n            if (this.isInScope(permission) && !this.fromParent(permission)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render = () => {\r\n        const {id, uniqId, permissions, readOnly, combined, root, selected, additionalValues} = this.props;\r\n        if (!this.hasPermissionsOnScope()) {\r\n            return null;\r\n        }\r\n        const permissionsRows = permissions.map((group) => {\r\n            if (typeof group === 'string') {\r\n                const addVals = additionalValues && additionalValues[group] ? additionalValues[group] : {};\r\n                return this.renderPermission(group, addVals);\r\n            }\r\n            return this.renderGroup(group);\r\n        });\r\n        if (root) {\r\n            return (\r\n                <div className={'permission-group-permissions ' + (this.state.expanded ? 'open' : '')}>\r\n                    {permissionsRows}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let inherited = null;\r\n        if (this.allPermissionsFromParent(this.props.permissions) && this.props.combined) {\r\n            inherited = this.props.parentRole;\r\n        }\r\n\r\n        let classes = '';\r\n        if (selected === id) {\r\n            classes += ' selected';\r\n        }\r\n\r\n        if (readOnly || this.allPermissionsFromParent(this.props.permissions)) {\r\n            classes += ' read-only';\r\n        }\r\n\r\n        if (combined) {\r\n            classes += ' combined';\r\n        }\r\n\r\n        return (\r\n            <div className='permission-group'>\r\n                {!root &&\r\n                    <div\r\n                        className={'permission-group-row ' + classes}\r\n                        onClick={this.toggleSelectGroup}\r\n                        id={uniqId}\r\n                    >\r\n                        {!combined &&\r\n                            <div\r\n                                className={'fa fa-caret-right permission-arrow ' + (this.state.expanded ? 'open' : '')}\r\n                                onClick={this.toggleExpanded}\r\n                            />}\r\n                        <PermissionCheckbox value={this.getStatus(this.props.permissions)}/>\r\n                        <span className='permission-name'>\r\n                            <FormattedMessage id={'admin.permissions.group.' + id + '.name'}/>\r\n                        </span>\r\n                        <PermissionDescription\r\n                            inherited={inherited}\r\n                            id={id}\r\n                            selectRow={this.props.selectRow}\r\n                            rowType='group'\r\n                        />\r\n                    </div>}\r\n                {!combined &&\r\n                    <div className={'permission-group-permissions ' + (this.state.expanded ? 'open' : '')}>\r\n                        {permissionsRows}\r\n                    </div>}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {Constants} from 'utils/constants';\r\nimport {t} from 'utils/i18n';\r\n\r\nexport default class EditPostTimeLimitButton extends React.Component {\r\n    static propTypes = {\r\n        timeLimit: PropTypes.number.isRequired,\r\n        onClick: PropTypes.func,\r\n    };\r\n\r\n    render = () => {\r\n        let messageID;\r\n        if (this.props.timeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT) {\r\n            messageID = t('edit_post.time_limit_button.no_limit');\r\n        } else {\r\n            messageID = t('edit_post.time_limit_button.for_n_seconds');\r\n        }\r\n\r\n        return (\r\n            <button\r\n                className='edit-post-time-limit-button'\r\n                onClick={this.props.onClick}\r\n            >\r\n                <i className='fa fa-gear'/>\r\n                <FormattedMessage\r\n                    id={messageID}\r\n                    values={{n: this.props.timeLimit}}\r\n                />\r\n            </button>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport EditPostTimeLimitButton from './edit_post_time_limit_button';\r\n\r\nfunction mapStateToProps(state) {\r\n    const {PostEditTimeLimit} = getConfig(state);\r\n\r\n    return {\r\n        timeLimit: parseInt(PostEditTimeLimit, 10),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditPostTimeLimitButton);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage, FormattedHTMLMessage} from 'react-intl';\r\nimport {Modal} from 'react-bootstrap';\r\n\r\nimport {Constants} from 'utils/constants';\r\nimport {localizeMessage} from 'utils/utils.jsx';\r\nimport {t} from 'utils/i18n';\r\n\r\nconst INT32_MAX = 2147483647;\r\n\r\nexport default class EditPostTimeLimitModal extends React.Component {\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        show: PropTypes.bool,\r\n        onClose: PropTypes.func.isRequired,\r\n        actions: PropTypes.shape({\r\n            updateConfig: PropTypes.func.isRequired,\r\n            getConfig: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postEditTimeLimit: parseInt(props.config.ServiceSettings.PostEditTimeLimit, 10),\r\n            saving: false,\r\n            errorMessage: '',\r\n        };\r\n    }\r\n\r\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\r\n        this.props.actions.getConfig();\r\n    }\r\n\r\n    save = async () => {\r\n        this.setState({saving: true, errorMessage: ''});\r\n\r\n        const val = parseInt(this.state.postEditTimeLimit, 10);\r\n        if (val !== Constants.UNSET_POST_EDIT_TIME_LIMIT) {\r\n            if (val.toString() === 'NaN' || val <= 0 || val > INT32_MAX) {\r\n                this.setState({errorMessage: localizeMessage('edit_post.time_limit_modal.invalid_time_limit', 'Invalid time limit'), saving: false});\r\n                return false;\r\n            }\r\n        }\r\n\r\n        const newConfig = JSON.parse(JSON.stringify(this.props.config));\r\n        newConfig.ServiceSettings.PostEditTimeLimit = val;\r\n\r\n        const {error: err} = await this.props.actions.updateConfig(newConfig);\r\n        if (err) {\r\n            this.setState({errorMessage: err, saving: false});\r\n        } else {\r\n            this.setState({saving: false});\r\n            this.props.onClose();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    handleOptionChange = (e) => {\r\n        const {value} = e.target;\r\n        if (value === Constants.ALLOW_EDIT_POST_ALWAYS) {\r\n            this.setState({postEditTimeLimit: Constants.UNSET_POST_EDIT_TIME_LIMIT});\r\n        } else {\r\n            this.setState({postEditTimeLimit: ''});\r\n        }\r\n    }\r\n\r\n    handleSecondsChange = (e) => {\r\n        const {value} = e.target;\r\n        this.setState({postEditTimeLimit: value});\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <Modal\r\n                dialogClassName='admin-modal edit-post-time-limit-modal'\r\n                show={this.props.show}\r\n                role='dialog'\r\n                aria-labelledby='editPostTimeModalLabel'\r\n            >\r\n                <Modal.Header\r\n                    closeButton={true}\r\n                >\r\n                    <Modal.Title\r\n                        componentClass='h1'\r\n                        id='editPostTimeModalLabel'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='edit_post.time_limit_modal.title'\r\n                            defaultMessage='Configure Global Edit Post Time Limit'\r\n                        />\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <FormattedHTMLMessage\r\n                        id='edit_post.time_limit_modal.description'\r\n                        defaultMessage='Setting a time limit <strong>applies to all users</strong> who have the \"Edit Post\" permissions in any permission scheme.'\r\n                    />\r\n                    <div className='padding-left x2 padding-top padding-bottom'>\r\n                        <div className='padding-top x2'>\r\n                            <input\r\n                                id='anytime'\r\n                                type='radio'\r\n                                name='limit'\r\n                                value={Constants.ALLOW_EDIT_POST_ALWAYS}\r\n                                checked={this.state.postEditTimeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT}\r\n                                onChange={this.handleOptionChange}\r\n                            />\r\n                            <label htmlFor='anytime'>\r\n                                <FormattedMessage\r\n                                    id='edit_post.time_limit_modal.option_label_anytime'\r\n                                    defaultMessage='Anytime'\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className='padding-top'>\r\n                            <input\r\n                                id='timelimit'\r\n                                type='radio'\r\n                                name='limit'\r\n                                value={Constants.ALLOW_EDIT_POST_TIME_LIMIT}\r\n                                checked={this.state.postEditTimeLimit !== Constants.UNSET_POST_EDIT_TIME_LIMIT}\r\n                                onChange={this.handleOptionChange}\r\n                            />\r\n                            <label htmlFor='timelimit'>\r\n                                <FormattedMessage\r\n                                    id='edit_post.time_limit_modal.option_label_time_limit.preinput'\r\n                                    defaultMessage='Can edit for'\r\n                                />\r\n                            </label>\r\n                            <input\r\n                                type='number'\r\n                                className='form-control inline'\r\n                                min='0'\r\n                                step='1'\r\n                                max={INT32_MAX}\r\n                                id='editPostTimeLimit'\r\n                                readOnly={this.state.postEditTimeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT}\r\n                                onChange={this.handleSecondsChange}\r\n                                value={this.state.postEditTimeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT ? '' : this.state.postEditTimeLimit}\r\n                            />\r\n                            <label htmlFor='timelimit'>\r\n                                <FormattedMessage\r\n                                    id='edit_post.time_limit_modal.option_label_time_limit.postinput'\r\n                                    defaultMessage='seconds after posting'\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className='padding-top x2 light'>\r\n                            <FormattedMessage\r\n                                id='edit_post.time_limit_modal.subscript'\r\n                                defaultMessage='Set the length of time users have to edit their messages after posting.'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className='edit-post-time-limit-modal__error'>\r\n                        {this.state.errorMessage}\r\n                    </div>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-cancel'\r\n                        onClick={this.props.onClose}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='confirm_modal.cancel'\r\n                            defaultMessage='Cancel'\r\n                        />\r\n                    </button>\r\n                    <button\r\n                        id='linkModalCloseButton'\r\n                        type='button'\r\n                        className='btn btn-default'\r\n                        onClick={this.save}\r\n                        disabled={this.state.saving}\r\n                    >\r\n                        <FormattedMessage\r\n                            id={this.state.saving ? t('save_button.saving') : t('edit_post.time_limit_modal.save_button')}\r\n                            defaultMessage='Save Edit Time'\r\n                        />\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getConfig, updateConfig} from 'mattermost-redux/actions/admin';\r\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\r\n\r\nimport EditPostTimeLimitModal from './edit_post_time_limit_modal';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        config: Selectors.getConfig(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            updateConfig,\r\n            getConfig,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPostTimeLimitModal);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport PermissionGroup from '../permission_group.jsx';\r\n\r\nimport EditPostTimeLimitButton from '../edit_post_time_limit_button';\r\nimport EditPostTimeLimitModal from '../edit_post_time_limit_modal';\r\n\r\nexport default class PermissionsTree extends React.Component {\r\n    static propTypes = {\r\n        scope: PropTypes.string.isRequired,\r\n        config: PropTypes.object.isRequired,\r\n        role: PropTypes.object.isRequired,\r\n        onToggle: PropTypes.func.isRequired,\r\n        parentRole: PropTypes.object,\r\n        selected: PropTypes.string,\r\n        selectRow: PropTypes.func.isRequired,\r\n        readOnly: PropTypes.bool,\r\n    };\r\n\r\n    static defaultProps = {\r\n        role: {\r\n            permissions: [],\r\n        },\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editTimeLimitModalIsVisible: false,\r\n        };\r\n\r\n        this.ADDITIONAL_VALUES = {\r\n            edit_post: {\r\n                editTimeLimitButton: <EditPostTimeLimitButton onClick={this.openPostTimeLimitModal}/>,\r\n            },\r\n        };\r\n\r\n        this.groups = [\r\n            {\r\n                id: 'teams',\r\n                permissions: [\r\n                    {\r\n                        id: 'send_invites',\r\n                        combined: true,\r\n                        permissions: [\r\n                            'invite_user',\r\n                            'get_public_link',\r\n                            'add_user_to_team',\r\n                        ],\r\n                    },\r\n                    'create_team',\r\n                ],\r\n            },\r\n            {\r\n                id: 'public_channel',\r\n                permissions: [\r\n                    'create_public_channel',\r\n                    'manage_public_channel_properties',\r\n                    'manage_public_channel_members',\r\n                    'delete_public_channel',\r\n                ],\r\n            },\r\n            {\r\n                id: 'private_channel',\r\n                permissions: [\r\n                    'create_private_channel',\r\n                    'manage_private_channel_properties',\r\n                    'manage_private_channel_members',\r\n                    'delete_private_channel',\r\n                ],\r\n            },\r\n            {\r\n                id: 'posts',\r\n                permissions: [\r\n                    {\r\n                        id: 'edit_posts',\r\n                        permissions: [\r\n                            'edit_post',\r\n                            'edit_others_posts',\r\n                        ],\r\n                    },\r\n                    {\r\n                        id: 'delete_posts',\r\n                        permissions: [\r\n                            'delete_post',\r\n                            'delete_others_posts',\r\n                        ],\r\n                    },\r\n                    {\r\n                        id: 'reactions',\r\n                        combined: true,\r\n                        permissions: [\r\n                            'add_reaction',\r\n                            'remove_reaction',\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: 'integrations',\r\n                permissions: [\r\n                ],\r\n            },\r\n        ];\r\n        this.updateGroups();\r\n    }\r\n\r\n    updateGroups = () => {\r\n        const {config, scope} = this.props;\r\n        const integrationsGroup = this.groups[this.groups.length - 1];\r\n        if (config.EnableIncomingWebhooks === 'true' && integrationsGroup.permissions.indexOf('manage_incoming_webhooks') === -1) {\r\n            integrationsGroup.permissions.push('manage_incoming_webhooks');\r\n        }\r\n        if (config.EnableOutgoingWebhooks === 'true' && integrationsGroup.permissions.indexOf('manage_outgoing_webhooks') === -1) {\r\n            integrationsGroup.permissions.push('manage_outgoing_webhooks');\r\n        }\r\n        if (config.EnableOAuthServiceProvider === 'true' && integrationsGroup.permissions.indexOf('manage_oauth') === -1) {\r\n            integrationsGroup.permissions.push('manage_oauth');\r\n        }\r\n        if (config.EnableCommands === 'true' && integrationsGroup.permissions.indexOf('manage_slash_commands') === -1) {\r\n            integrationsGroup.permissions.push('manage_slash_commands');\r\n        }\r\n        if (config.EnableCustomEmoji === 'true' && integrationsGroup.permissions.indexOf('create_emojis') === -1) {\r\n            integrationsGroup.permissions.push('create_emojis');\r\n        }\r\n        if (config.EnableCustomEmoji === 'true' && integrationsGroup.permissions.indexOf('delete_emojis') === -1) {\r\n            integrationsGroup.permissions.push('delete_emojis');\r\n        }\r\n        if (config.EnableCustomEmoji === 'true' && integrationsGroup.permissions.indexOf('delete_others_emojis') === -1) {\r\n            integrationsGroup.permissions.push('delete_others_emojis');\r\n        }\r\n        if (scope === 'team_scope' && this.groups[0].id !== 'teams_team_scope') {\r\n            this.groups[0].id = 'teams_team_scope';\r\n        }\r\n    }\r\n\r\n    openPostTimeLimitModal = () => {\r\n        this.setState({editTimeLimitModalIsVisible: true});\r\n    }\r\n\r\n    closePostTimeLimitModal = () => {\r\n        this.setState({editTimeLimitModalIsVisible: false});\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.config !== prevProps.config) {\r\n            this.updateGroups();\r\n        }\r\n    }\r\n\r\n    toggleGroup = (ids) => {\r\n        if (this.props.readOnly) {\r\n            return;\r\n        }\r\n        this.props.onToggle(this.props.role.name, ids);\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className='permissions-tree'>\r\n                <div className='permissions-tree--header'>\r\n                    <div className='permission-name'>\r\n                        <FormattedMessage\r\n                            id='admin.permissions.permissionsTree.permission'\r\n                            defaultMessage='Permission'\r\n                        />\r\n                    </div>\r\n                    <div className='permission-description'>\r\n                        <FormattedMessage\r\n                            id='admin.permissions.permissionsTree.description'\r\n                            defaultMessage='Description'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='permissions-tree--body'>\r\n                    <PermissionGroup\r\n                        key='all'\r\n                        id='all'\r\n                        uniqId={this.props.role.name}\r\n                        selected={this.props.selected}\r\n                        selectRow={this.props.selectRow}\r\n                        readOnly={this.props.readOnly}\r\n                        permissions={this.groups}\r\n                        additionalValues={this.ADDITIONAL_VALUES}\r\n                        role={this.props.role}\r\n                        parentRole={this.props.parentRole}\r\n                        scope={this.props.scope}\r\n                        combined={false}\r\n                        onChange={this.toggleGroup}\r\n                        root={true}\r\n                    />\r\n                </div>\r\n                <EditPostTimeLimitModal\r\n                    onClose={this.closePostTimeLimitModal}\r\n                    show={this.state.editTimeLimitModalIsVisible}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport PermissionsTree from './permissions_tree.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n\r\n    return {\r\n        config,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PermissionsTree);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport Permissions from 'mattermost-redux/constants/permissions';\r\n\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\n\r\nimport {PermissionsScope, DefaultRolePermissions} from 'utils/constants.jsx';\r\nimport {localizeMessage} from 'utils/utils.jsx';\r\nimport {t} from 'utils/i18n';\r\n\r\nimport SaveButton from 'components/save_button.jsx';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\nimport FormError from 'components/form_error.jsx';\r\nimport BlockableLink from 'components/admin_console/blockable_link';\r\nimport AdminPanelTogglable from 'components/widgets/admin_console/admin_panel_togglable.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\n\r\nimport PermissionsTree from '../permissions_tree';\r\n\r\nconst EXCLUDED_PERMISSIONS = [\r\n    Permissions.VIEW_MEMBERS,\r\n    Permissions.JOIN_PUBLIC_TEAMS,\r\n    Permissions.LIST_PUBLIC_TEAMS,\r\n    Permissions.JOIN_PRIVATE_TEAMS,\r\n    Permissions.LIST_PRIVATE_TEAMS,\r\n];\r\n\r\nexport default class PermissionSystemSchemeSettings extends React.Component {\r\n    static propTypes = {\r\n        roles: PropTypes.object.isRequired,\r\n        license: PropTypes.object.isRequired,\r\n        actions: PropTypes.shape({\r\n            loadRolesIfNeeded: PropTypes.func.isRequired,\r\n            editRole: PropTypes.func.isRequired,\r\n            setNavigationBlocked: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showResetDefaultModal: false,\r\n            loaded: false,\r\n            saving: false,\r\n            saveNeeded: false,\r\n            serverError: null,\r\n            roles: {},\r\n            openRoles: {\r\n                all_users: true,\r\n                system_admin: true,\r\n                team_admin: true,\r\n                channel_admin: true,\r\n            },\r\n        };\r\n        this.rolesNeeded = ['system_admin', 'system_user', 'team_admin', 'team_user', 'channel_admin', 'channel_user'];\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.actions.loadRolesIfNeeded(this.rolesNeeded);\r\n        if (this.rolesNeeded.every((roleName) => this.props.roles[roleName])) {\r\n            this.loadRolesIntoState(this.props);\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (!this.state.loaded && this.rolesNeeded.every((roleName) => nextProps.roles[roleName])) {\r\n            this.loadRolesIntoState(nextProps);\r\n        }\r\n    }\r\n\r\n    goToSelectedRow = () => {\r\n        const selected = document.querySelector('.permission-row.selected,.permission-group-row.selected');\r\n        if (selected) {\r\n            if (this.state.openRoles.all_users) {\r\n                selected.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n            } else {\r\n                this.toggleRole('all_users');\r\n\r\n                // Give it time to open and show everything\r\n                setTimeout(() => {\r\n                    selected.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n                }, 300);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    selectRow = (permission) => {\r\n        this.setState({selectedPermission: permission});\r\n\r\n        // Wait until next render\r\n        setTimeout(this.goToSelectedRow);\r\n\r\n        // Remove selection after animation\r\n        setTimeout(() => {\r\n            this.setState({selectedPermission: null});\r\n        }, 3000);\r\n    }\r\n\r\n    loadRolesIntoState(props) {\r\n        const {system_admin, team_admin, channel_admin, system_user, team_user, channel_user} = props.roles; // eslint-disable-line camelcase\r\n        this.setState({\r\n            selectedPermission: null,\r\n            loaded: true,\r\n            roles: {\r\n                system_admin,\r\n                team_admin,\r\n                channel_admin,\r\n                all_users: {\r\n                    name: 'all_users',\r\n                    displayName: 'All members',\r\n                    permissions: system_user.permissions.concat(team_user.permissions).concat(channel_user.permissions),\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    deriveRolesFromAllUsers = (role) => {\r\n        return {\r\n            system_user: {\r\n                ...this.props.roles.system_user,\r\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'system_scope'),\r\n            },\r\n            team_user: {\r\n                ...this.props.roles.team_user,\r\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'team_scope'),\r\n            },\r\n            channel_user: {\r\n                ...this.props.roles.channel_user,\r\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'channel_scope'),\r\n            },\r\n        };\r\n    }\r\n\r\n    restoreExcludedPermissions = (roles) => {\r\n        for (const permission of this.props.roles.system_user.permissions) {\r\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\r\n                roles.system_user.permissions.push(permission);\r\n            }\r\n        }\r\n        for (const permission of this.props.roles.team_user.permissions) {\r\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\r\n                roles.team_user.permissions.push(permission);\r\n            }\r\n        }\r\n        for (const permission of this.props.roles.channel_user.permissions) {\r\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\r\n                roles.channel_user.permissions.push(permission);\r\n            }\r\n        }\r\n        return roles;\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        const teamAdminPromise = this.props.actions.editRole(this.state.roles.team_admin);\r\n        const channelAdminPromise = this.props.actions.editRole(this.state.roles.channel_admin);\r\n        const roles = this.restoreExcludedPermissions(this.deriveRolesFromAllUsers(this.state.roles.all_users));\r\n        const systemUserPromise = this.props.actions.editRole(roles.system_user);\r\n        const teamUserPromise = this.props.actions.editRole(roles.team_user);\r\n        const channelUserPromise = this.props.actions.editRole(roles.channel_user);\r\n        this.setState({saving: true});\r\n\r\n        const results = await Promise.all([teamAdminPromise, channelAdminPromise, systemUserPromise, teamUserPromise, channelUserPromise]);\r\n        let serverError = null;\r\n        let saveNeeded = false;\r\n        for (const result of results) {\r\n            if (result.error) {\r\n                serverError = result.error.message;\r\n                saveNeeded = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({serverError, saving: false, saveNeeded});\r\n        this.props.actions.setNavigationBlocked(saveNeeded);\r\n    }\r\n\r\n    toggleRole = (roleId) => {\r\n        const newOpenRoles = {...this.state.openRoles};\r\n        newOpenRoles[roleId] = !newOpenRoles[roleId];\r\n        this.setState({openRoles: newOpenRoles});\r\n    }\r\n\r\n    togglePermission = (roleId, permissions) => {\r\n        const roles = {...this.state.roles};\r\n        const role = {...roles[roleId]};\r\n        const newPermissions = [...role.permissions];\r\n        for (const permission of permissions) {\r\n            if (newPermissions.indexOf(permission) === -1) {\r\n                newPermissions.push(permission);\r\n            } else {\r\n                newPermissions.splice(newPermissions.indexOf(permission), 1);\r\n            }\r\n        }\r\n        role.permissions = newPermissions;\r\n        roles[roleId] = role;\r\n\r\n        this.setState({roles, saveNeeded: true});\r\n        this.props.actions.setNavigationBlocked(true);\r\n    }\r\n\r\n    resetDefaults = () => {\r\n        const newRolesState = JSON.parse(JSON.stringify({...this.state.roles}));\r\n\r\n        Object.entries(DefaultRolePermissions).forEach(([roleName, permissions]) => {\r\n            newRolesState[roleName].permissions = permissions;\r\n        });\r\n\r\n        this.setState({roles: newRolesState, saveNeeded: true});\r\n        this.props.actions.setNavigationBlocked(true);\r\n    }\r\n\r\n    render = () => {\r\n        if (!this.state.loaded) {\r\n            return <LoadingScreen/>;\r\n        }\r\n        return (\r\n            <div className='wrapper--fixed'>\r\n                <div className='admin-console__header with-back'>\r\n                    <div>\r\n                        <BlockableLink\r\n                            to='/admin_console/user_management/permissions'\r\n                            className='fa fa-angle-left back'\r\n                        />\r\n                        <FormattedMessage\r\n                            id='admin.permissions.systemScheme'\r\n                            defaultMessage='System Scheme'\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        <div className={'banner info'}>\r\n                            <div className='banner__content'>\r\n                                <span>\r\n                                    <FormattedMarkdownMessage\r\n                                        id='admin.permissions.systemScheme.introBanner'\r\n                                        defaultMessage='Configure the default permissions for Team Admins, Channel Admins and other members. This scheme is inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied in specific teams.'\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <AdminPanelTogglable\r\n                            className='permissions-block'\r\n                            open={this.state.openRoles.all_users}\r\n                            id='all_users'\r\n                            onToggle={() => this.toggleRole('all_users')}\r\n                            titleId={t('admin.permissions.systemScheme.allMembersTitle')}\r\n                            titleDefault='All Members'\r\n                            subtitleId={t('admin.permissions.systemScheme.allMembersDescription')}\r\n                            subtitleDefault='Permissions granted to all members, including administrators and newly created users.'\r\n                        >\r\n                            <PermissionsTree\r\n                                selected={this.state.selectedPermission}\r\n                                role={this.state.roles.all_users}\r\n                                scope={'system_scope'}\r\n                                onToggle={this.togglePermission}\r\n                                selectRow={this.selectRow}\r\n                            />\r\n                        </AdminPanelTogglable>\r\n\r\n                        <AdminPanelTogglable\r\n                            className='permissions-block'\r\n                            open={this.state.openRoles.channel_admin}\r\n                            onToggle={() => this.toggleRole('channel_admin')}\r\n                            titleId={t('admin.permissions.systemScheme.channelAdminsTitle')}\r\n                            titleDefault='Channel Administrators'\r\n                            subtitleId={t('admin.permissions.systemScheme.channelAdminsDescription')}\r\n                            subtitleDefault='Permissions granted to channel creators and any users promoted to Channel Administrator.'\r\n                        >\r\n                            <PermissionsTree\r\n                                parentRole={this.state.roles.all_users}\r\n                                role={this.state.roles.channel_admin}\r\n                                scope={'channel_scope'}\r\n                                onToggle={this.togglePermission}\r\n                                selectRow={this.selectRow}\r\n                            />\r\n                        </AdminPanelTogglable>\r\n\r\n                        <AdminPanelTogglable\r\n                            className='permissions-block'\r\n                            open={this.state.openRoles.team_admin}\r\n                            onToggle={() => this.toggleRole('team_admin')}\r\n                            titleId={t('admin.permissions.systemScheme.teamAdminsTitle')}\r\n                            titleDefault='Team Administrators'\r\n                            subtitleId={t('admin.permissions.systemScheme.teamAdminsDescription')}\r\n                            subtitleDefault='Permissions granted to team creators and any users promoted to Team Administrator.'\r\n                        >\r\n                            <PermissionsTree\r\n                                parentRole={this.state.roles.all_users}\r\n                                role={this.state.roles.team_admin}\r\n                                scope={'team_scope'}\r\n                                onToggle={this.togglePermission}\r\n                                selectRow={this.selectRow}\r\n                            />\r\n                        </AdminPanelTogglable>\r\n\r\n                        <AdminPanelTogglable\r\n                            className='permissions-block'\r\n                            open={this.state.openRoles.system_admin}\r\n                            onToggle={() => this.toggleRole('system_admin')}\r\n                            titleId={t('admin.permissions.systemScheme.systemAdminsTitle')}\r\n                            titleDefault='System Administrators'\r\n                            subtitleId={t('admin.permissions.systemScheme.systemAdminsDescription')}\r\n                            subtitleDefault='Full permissions granted to System Administrators.'\r\n                        >\r\n                            <PermissionsTree\r\n                                readOnly={true}\r\n                                role={this.state.roles.system_admin}\r\n                                scope={'system_scope'}\r\n                                onToggle={this.togglePermission}\r\n                                selectRow={this.selectRow}\r\n                            />\r\n                        </AdminPanelTogglable>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='admin-console-save'>\r\n                    <SaveButton\r\n                        saving={this.state.saving}\r\n                        disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\r\n                        onClick={this.handleSubmit}\r\n                        savingMessage={localizeMessage('admin.saving', 'Saving Config...')}\r\n                    />\r\n                    <BlockableLink\r\n                        className='cancel-button'\r\n                        to='/admin_console/user_management/permissions'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.permissions.permissionSchemes.cancel'\r\n                            defaultMessage='Cancel'\r\n                        />\r\n                    </BlockableLink>\r\n                    <a\r\n                        onClick={() => this.setState({showResetDefaultModal: true})}\r\n                        className='cancel-button reset-defaults-btn'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.permissions.systemScheme.resetDefaultsButton'\r\n                            defaultMessage='Reset to Defaults'\r\n                        />\r\n                    </a>\r\n                    <div className='error-message'>\r\n                        <FormError error={this.state.serverError}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <ConfirmModal\r\n                    show={this.state.showResetDefaultModal}\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='admin.permissions.systemScheme.resetDefaultsButtonModalTitle'\r\n                            defaultMessage='Reset to Default?'\r\n                        />\r\n                    }\r\n                    message={\r\n                        <FormattedMessage\r\n                            id='admin.permissions.systemScheme.resetDefaultsButtonModalBody'\r\n                            defaultMessage='This will reset all selections on this page to their default settings. Are you sure you want to reset?'\r\n                        />\r\n                    }\r\n                    confirmButtonText={\r\n                        <FormattedMessage\r\n                            id='admin.permissions.systemScheme.resetDefaultsConfirmationButton'\r\n                            defaultMessage='Yes, Reset'\r\n                        />\r\n                    }\r\n                    onConfirm={() => {\r\n                        this.resetDefaults();\r\n                        this.setState({showResetDefaultModal: false});\r\n                    }}\r\n                    onCancel={() => this.setState({showResetDefaultModal: false})}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {loadRolesIfNeeded, editRole} from 'mattermost-redux/actions/roles';\r\n\r\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\r\n\r\nimport {setNavigationBlocked} from 'actions/admin_actions.jsx';\r\n\r\nimport PermissionSystemSchemeSettings from './permission_system_scheme_settings.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        roles: getRoles(state),\r\n        rolesRequest: state.requests.roles.getRolesByNames,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            loadRolesIfNeeded,\r\n            editRole,\r\n            setNavigationBlocked,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionSystemSchemeSettings);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {imageURLForTeam} from 'utils/utils.jsx';\r\n\r\nexport default class TeamInList extends React.Component {\r\n    static propTypes = {\r\n        team: PropTypes.object.isRequired,\r\n    }\r\n\r\n    render() {\r\n        const {team} = this.props;\r\n        const teamIconUrl = imageURLForTeam(team);\r\n        let icon = null;\r\n        if (teamIconUrl) {\r\n            icon = (\r\n                <div\r\n                    className='team-btn__image'\r\n                    style={{backgroundImage: `url('${teamIconUrl}')`}}\r\n                />\r\n            );\r\n        } else {\r\n            icon = (\r\n                <div className='team-btn__initials'>\r\n                    {team.display_name ? team.display_name.replace(/\\s/g, '').substring(0, 2) : '??'}\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className='team-info-block'>\r\n                <span className='icon'>{icon}</span>\r\n                <div className='team-data'>\r\n                    <div className='title'>{team.display_name}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Modal} from 'react-bootstrap';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport Constants, {ModalIdentifiers} from 'utils/constants.jsx';\r\nimport {localizeMessage} from 'utils/utils.jsx';\r\n\r\nimport MultiSelect from 'components/multiselect/multiselect.jsx';\r\nimport TeamInfo from 'components/team_info.jsx';\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nconst TEAMS_PER_PAGE = 50;\r\n\r\nexport default class TeamSelectorModal extends React.Component {\r\n    static propTypes = {\r\n        currentSchemeId: PropTypes.string,\r\n        alreadySelected: PropTypes.array,\r\n        searchTerm: PropTypes.string.isRequired,\r\n        teams: PropTypes.array.isRequired,\r\n        onModalDismissed: PropTypes.func,\r\n        onTeamsSelected: PropTypes.func,\r\n        modalID: PropTypes.string,\r\n        actions: PropTypes.shape({\r\n            loadTeams: PropTypes.func.isRequired,\r\n            setModalSearchTerm: PropTypes.func.isRequired,\r\n            searchTeams: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchTimeoutId = 0;\r\n\r\n        this.state = {\r\n            values: [],\r\n            show: true,\r\n            search: false,\r\n            loadingTeams: true,\r\n            confirmAddModal: false,\r\n            confirmAddTeam: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.actions.loadTeams(0, TEAMS_PER_PAGE + 1).then(() => {\r\n            this.setTeamsLoadingState(false);\r\n        });\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\r\n        if (this.props.searchTerm !== nextProps.searchTerm) {\r\n            clearTimeout(this.searchTimeoutId);\r\n\r\n            const searchTerm = nextProps.searchTerm;\r\n            if (searchTerm === '') {\r\n                return;\r\n            }\r\n\r\n            this.searchTimeoutId = setTimeout(\r\n                async () => {\r\n                    this.setTeamsLoadingState(true);\r\n                    await this.props.actions.searchTeams(searchTerm);\r\n                    this.setTeamsLoadingState(false);\r\n                },\r\n                Constants.SEARCH_TIMEOUT_MILLISECONDS\r\n            );\r\n        }\r\n    }\r\n\r\n    handleHide = () => {\r\n        this.props.actions.setModalSearchTerm('');\r\n        this.setState({show: false});\r\n    }\r\n\r\n    handleExit = () => {\r\n        if (this.props.onModalDismissed) {\r\n            this.props.onModalDismissed();\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if (this.state.values.length === 0) {\r\n            return;\r\n        }\r\n\r\n        this.props.onTeamsSelected(this.state.values);\r\n        this.handleHide();\r\n    }\r\n\r\n    addValue = (value, confirmed = false) => {\r\n        if (this.props.modalID === ModalIdentifiers.ADD_TEAMS_TO_SCHEME && value.scheme_id !== null && value.scheme_id !== '' && !confirmed) {\r\n            this.setState({confirmAddModal: true, confirmAddTeam: value});\r\n            return;\r\n        }\r\n        const values = Object.assign([], this.state.values);\r\n        const teamIds = values.map((v) => v.id);\r\n        if (value && value.id && teamIds.indexOf(value.id) === -1) {\r\n            values.push(value);\r\n        }\r\n\r\n        this.setState({values, confirmAddModal: false, confirmAddTeam: null});\r\n    }\r\n\r\n    setTeamsLoadingState = (loadingState) => {\r\n        this.setState({\r\n            loadingTeams: loadingState,\r\n        });\r\n    }\r\n\r\n    handlePageChange = (page, prevPage) => {\r\n        if (page > prevPage) {\r\n            this.setTeamsLoadingState(true);\r\n            this.props.actions.loadTeams(page, TEAMS_PER_PAGE + 1).then(() => {\r\n                this.setTeamsLoadingState(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDelete = (values) => {\r\n        this.setState({values});\r\n    }\r\n\r\n    search = (term, multiselectComponent) => {\r\n        if (multiselectComponent.state.page !== 0) {\r\n            multiselectComponent.setState({page: 0});\r\n        }\r\n        this.props.actions.setModalSearchTerm(term);\r\n    }\r\n\r\n    renderOption(option, isSelected, onAdd) {\r\n        var rowSelected = '';\r\n        if (isSelected) {\r\n            rowSelected = 'more-modal__row--selected';\r\n        }\r\n\r\n        return (\r\n            <div\r\n                key={option.id}\r\n                ref={isSelected ? 'selected' : option.id}\r\n                className={'more-modal__row clickable ' + rowSelected}\r\n                onClick={() => onAdd(option)}\r\n            >\r\n                <div\r\n                    className='more-modal__details'\r\n                >\r\n                    <TeamInfo team={option}/>\r\n                </div>\r\n                <div className='more-modal__actions'>\r\n                    <div className='more-modal__actions--round'>\r\n                        <i className='fa fa-plus'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderValue(props) {\r\n        return props.data.display_name;\r\n    }\r\n\r\n    renderConfirmModal(show, team) {\r\n        const title = (\r\n            <FormattedMessage\r\n                id='add_teams_to_scheme.confirmation.title'\r\n                defaultMessage='Team Override Scheme Change?'\r\n            />\r\n        );\r\n        const message = (\r\n            <FormattedMessage\r\n                id='add_teams_to_scheme.confirmation.message'\r\n                defaultMessage='This team is already selected in another team scheme, are you sure you want to move it to this team scheme?'\r\n            />\r\n        );\r\n        const confirmButtonText = (\r\n            <FormattedMessage\r\n                id='add_teams_to_scheme.confirmation.accept'\r\n                defaultMessage='Yes, Move Team'\r\n            />\r\n        );\r\n        return (\r\n            <ConfirmModal\r\n                show={show}\r\n                title={title}\r\n                message={message}\r\n                confirmButtonText={confirmButtonText}\r\n                onCancel={() => this.setState({confirmAddModal: false, confirmAddTeam: null})}\r\n                onConfirm={() => this.addValue(team, true)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const confirmModal = this.renderConfirmModal(this.state.confirmAddModal, this.state.confirmAddTeam);\r\n        const numRemainingText = (\r\n            <FormattedMessage\r\n                id='multiselect.selectTeams'\r\n                defaultMessage='Use ↑↓ to browse, ↵ to select.'\r\n            />\r\n        );\r\n\r\n        const buttonSubmitText = localizeMessage('multiselect.add', 'Add');\r\n\r\n        let teams = [];\r\n        if (this.props.teams) {\r\n            teams = this.props.teams.filter((team) => team.delete_at === 0);\r\n            teams = teams.filter((team) => team.scheme_id !== this.currentSchemeId);\r\n            teams = teams.filter((team) => this.props.alreadySelected.indexOf(team.id) === -1);\r\n            teams.sort((a, b) => {\r\n                const aName = a.display_name.toUpperCase();\r\n                const bName = b.display_name.toUpperCase();\r\n                if (aName === bName) {\r\n                    return 0;\r\n                }\r\n                if (aName > bName) {\r\n                    return 1;\r\n                }\r\n                return -1;\r\n            });\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                dialogClassName={'more-modal more-direct-channels team-selector-modal'}\r\n                show={this.state.show}\r\n                onHide={this.handleHide}\r\n                onExited={this.handleExit}\r\n                role='dialog'\r\n                aria-labelledby='teamSelectorModalLabel'\r\n            >\r\n                <Modal.Header closeButton={true}>\r\n                    <Modal.Title\r\n                        componentClass='h1'\r\n                        id='teamSelectorModalLabel'\r\n                    >\r\n                        <FormattedMarkdownMessage\r\n                            id='add_teams_to_scheme.title'\r\n                            defaultMessage='Add Teams To **Team Selection** List'\r\n                        />\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {confirmModal}\r\n                    <MultiSelect\r\n                        key='addTeamsToSchemeKey'\r\n                        options={teams}\r\n                        optionRenderer={this.renderOption}\r\n                        values={this.state.values}\r\n                        valueRenderer={this.renderValue}\r\n                        perPage={TEAMS_PER_PAGE}\r\n                        handlePageChange={this.handlePageChange}\r\n                        handleInput={this.search}\r\n                        handleDelete={this.handleDelete}\r\n                        handleAdd={this.addValue}\r\n                        handleSubmit={this.handleSubmit}\r\n                        numRemainingText={numRemainingText}\r\n                        buttonSubmitText={buttonSubmitText}\r\n                        saving={false}\r\n                        loading={this.state.loadingTeams}\r\n                        placeholderText={localizeMessage('multiselect.addTeamsPlaceholder', 'Search and add teams')}\r\n                    />\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getTeams as loadTeams, searchTeams} from 'mattermost-redux/actions/teams';\r\nimport {getTeams} from 'mattermost-redux/selectors/entities/teams';\r\n\r\nimport {setModalSearchTerm} from 'actions/views/search';\r\n\r\nimport TeamSelectorModal from './team_selector_modal.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const searchTerm = state.views.search.modalSearch;\r\n\r\n    const teams = Object.values(getTeams(state) || {}).filter((team) => {\r\n        return team.display_name.toLowerCase().startsWith(searchTerm.toLowerCase()) ||\r\n               team.description.toLowerCase().startsWith(searchTerm.toLowerCase());\r\n    });\r\n\r\n    return {\r\n        searchTerm,\r\n        teams,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            loadTeams,\r\n            setModalSearchTerm,\r\n            searchTeams,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamSelectorModal);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport AdminPanel from './admin_panel.jsx';\r\n\r\nconst AdminPanelWithButton = (props) => {\r\n    const button = (\r\n        <a\r\n            className='btn btn-primary'\r\n            onClick={props.onButtonClick}\r\n            disabled={props.disabled}\r\n        >\r\n            <FormattedMessage\r\n                id={props.buttonTextId}\r\n                defaultMessage={props.buttonTextDefault}\r\n            />\r\n        </a>\r\n    );\r\n\r\n    return (\r\n        <AdminPanel\r\n            className={'AdminPanelWithButton ' + props.className}\r\n            id={props.id}\r\n            titleId={props.titleId}\r\n            titleDefault={props.titleDefault}\r\n            subtitleId={props.subtitleId}\r\n            subtitleDefault={props.subtitleDefault}\r\n            button={button}\r\n        >\r\n            {props.children}\r\n        </AdminPanel>\r\n    );\r\n};\r\n\r\nAdminPanelWithButton.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string.isRequired,\r\n    id: PropTypes.string,\r\n    titleId: PropTypes.string.isRequired,\r\n    titleDefault: PropTypes.string.isRequired,\r\n    subtitleId: PropTypes.string.isRequired,\r\n    subtitleDefault: PropTypes.string.isRequired,\r\n    onButtonClick: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    buttonTextId: PropTypes.string,\r\n    buttonTextDefault: PropTypes.string,\r\n};\r\n\r\nAdminPanelWithButton.defaultProps = {\r\n    className: '',\r\n};\r\n\r\nexport default AdminPanelWithButton;\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport TeamInfo from 'components/team_info';\r\n\r\nexport default class TeamInList extends React.Component {\r\n    static propTypes = {\r\n        team: PropTypes.object.isRequired,\r\n        onRemoveTeam: PropTypes.func,\r\n    }\r\n\r\n    render() {\r\n        const team = this.props.team;\r\n        return (\r\n            <div\r\n                className='team'\r\n                key={team.id}\r\n            >\r\n                <TeamInfo team={team}/>\r\n                <a\r\n                    className='remove'\r\n                    onClick={() => this.props.onRemoveTeam(team.id)}\r\n                >\r\n                    <FormattedMessage\r\n                        id='admin.permissions.teamScheme.removeTeam'\r\n                        defaultMessage='Remove'\r\n                    />\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getTeamStats as loadTeamStats} from 'mattermost-redux/actions/teams';\r\n\r\nimport {getTeamStats} from 'mattermost-redux/selectors/entities/teams';\r\n\r\nimport TeamInList from './team_in_list.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        stats: getTeamStats(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            loadTeamStats,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamInList);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport Permissions from 'mattermost-redux/constants/permissions';\r\n\r\nimport {PermissionsScope, ModalIdentifiers} from 'utils/constants.jsx';\r\nimport {localizeMessage} from 'utils/utils.jsx';\r\nimport {t} from 'utils/i18n';\r\n\r\nimport SaveButton from 'components/save_button.jsx';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\nimport FormError from 'components/form_error.jsx';\r\nimport TeamSelectorModal from 'components/team_selector_modal';\r\nimport BlockableLink from 'components/admin_console/blockable_link';\r\nimport AdminPanel from 'components/widgets/admin_console/admin_panel.jsx';\r\nimport AdminPanelTogglable from 'components/widgets/admin_console/admin_panel_togglable.jsx';\r\nimport AdminPanelWithButton from 'components/widgets/admin_console/admin_panel_with_button.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\n\r\nimport PermissionsTree from '../permissions_tree';\r\n\r\nimport LocalizedInput from 'components/localized_input/localized_input';\r\n\r\nimport TeamInList from './team_in_list';\r\n\r\nconst EXCLUDED_PERMISSIONS = [\r\n    Permissions.VIEW_MEMBERS,\r\n    Permissions.JOIN_PUBLIC_TEAMS,\r\n    Permissions.LIST_PUBLIC_TEAMS,\r\n    Permissions.JOIN_PRIVATE_TEAMS,\r\n    Permissions.LIST_PRIVATE_TEAMS,\r\n];\r\n\r\nexport default class PermissionTeamSchemeSettings extends React.Component {\r\n    static propTypes = {\r\n        schemeId: PropTypes.string,\r\n        scheme: PropTypes.object,\r\n        roles: PropTypes.object,\r\n        teams: PropTypes.array,\r\n        actions: PropTypes.shape({\r\n            loadRolesIfNeeded: PropTypes.func.isRequired,\r\n            loadScheme: PropTypes.func.isRequired,\r\n            loadSchemeTeams: PropTypes.func.isRequired,\r\n            editRole: PropTypes.func.isRequired,\r\n            patchScheme: PropTypes.func.isRequired,\r\n            createScheme: PropTypes.func.isRequired,\r\n            updateTeamScheme: PropTypes.func.isRequired,\r\n            setNavigationBlocked: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            saving: false,\r\n            saveNeeded: false,\r\n            serverError: null,\r\n            roles: null,\r\n            teams: null,\r\n            addTeamOpen: false,\r\n            selectedPermission: null,\r\n            openRoles: {\r\n                all_users: true,\r\n                team_admin: true,\r\n                channel_admin: true,\r\n            },\r\n        };\r\n    }\r\n\r\n    static defaultProps = {\r\n        scheme: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.actions.loadRolesIfNeeded(['team_admin', 'team_user', 'channel_admin', 'channel_user']);\r\n        if (this.props.schemeId) {\r\n            this.props.actions.loadScheme(this.props.schemeId).then((result) => {\r\n                this.props.actions.loadRolesIfNeeded([\r\n                    result.data.default_team_user_role,\r\n                    result.data.default_team_admin_role,\r\n                    result.data.default_channel_user_role,\r\n                    result.data.default_channel_admin_role,\r\n                ]);\r\n            });\r\n            this.props.actions.loadSchemeTeams(this.props.schemeId);\r\n        }\r\n    }\r\n\r\n    isLoaded = (props) => {\r\n        if (props.schemeId) {\r\n            if (props.scheme !== null &&\r\n                props.teams !== null &&\r\n                props.roles[props.scheme.default_team_user_role] &&\r\n                props.roles[props.scheme.default_team_admin_role] &&\r\n                props.roles[props.scheme.default_channel_user_role] &&\r\n                props.roles[props.scheme.default_channel_admin_role]) {\r\n                return true;\r\n            }\r\n            return false;\r\n        } else if (props.roles.team_user &&\r\n            props.roles.team_admin &&\r\n            props.roles.channel_user &&\r\n            props.roles.channel_admin) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    goToSelectedRow = () => {\r\n        const selected = document.querySelector('.permission-row.selected,.permission-group-row.selected');\r\n        if (selected) {\r\n            if (this.state.openRoles.all_users) {\r\n                selected.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n            } else {\r\n                this.toggleRole('all_users');\r\n\r\n                // Give it time to open and show everything\r\n                setTimeout(() => {\r\n                    selected.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n                }, 300);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    selectRow = (permission) => {\r\n        this.setState({selectedPermission: permission});\r\n\r\n        // Wait until next render\r\n        setTimeout(this.goToSelectedRow);\r\n\r\n        // Remove selection after animation\r\n        setTimeout(() => {\r\n            this.setState({selectedPermission: null});\r\n        }, 3000);\r\n    }\r\n\r\n    getStateRoles = () => {\r\n        if (this.state.roles !== null) {\r\n            return this.state.roles;\r\n        }\r\n\r\n        let teamUser = null;\r\n        let teamAdmin = null;\r\n        let channelUser = null;\r\n        let channelAdmin = null;\r\n\r\n        if (this.props.schemeId) {\r\n            if (this.isLoaded(this.props)) {\r\n                teamUser = this.props.roles[this.props.scheme.default_team_user_role];\r\n                teamAdmin = this.props.roles[this.props.scheme.default_team_admin_role];\r\n                channelUser = this.props.roles[this.props.scheme.default_channel_user_role];\r\n                channelAdmin = this.props.roles[this.props.scheme.default_channel_admin_role];\r\n            }\r\n        } else if (this.isLoaded(this.props)) {\r\n            teamUser = this.props.roles.team_user;\r\n            teamAdmin = this.props.roles.team_admin;\r\n            channelUser = this.props.roles.channel_user;\r\n            channelAdmin = this.props.roles.channel_admin;\r\n        } else {\r\n            return null;\r\n        }\r\n        return {\r\n            team_admin: teamAdmin,\r\n            channel_admin: channelAdmin,\r\n            all_users: {\r\n                name: 'all_users',\r\n                displayName: 'All members',\r\n                permissions: teamUser.permissions.concat(channelUser.permissions),\r\n            },\r\n        };\r\n    }\r\n\r\n    deriveRolesFromAllUsers = (baseTeam, baseChannel, role) => {\r\n        return {\r\n            team_user: {\r\n                ...baseTeam,\r\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'team_scope'),\r\n            },\r\n            channel_user: {\r\n                ...baseChannel,\r\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'channel_scope'),\r\n            },\r\n        };\r\n    }\r\n\r\n    restoreExcludedPermissions = (baseTeam, baseChannel, roles) => {\r\n        for (const permission of baseTeam.permissions) {\r\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\r\n                roles.team_user.permissions.push(permission);\r\n            }\r\n        }\r\n        for (const permission of baseChannel.permissions) {\r\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\r\n                roles.channel_user.permissions.push(permission);\r\n            }\r\n        }\r\n        return roles;\r\n    }\r\n\r\n    handleNameChange = (e) => {\r\n        this.setState({schemeName: e.target.value, saveNeeded: true});\r\n        this.props.actions.setNavigationBlocked(true);\r\n    }\r\n\r\n    handleDescriptionChange = (e) => {\r\n        this.setState({schemeDescription: e.target.value, saveNeeded: true});\r\n        this.props.actions.setNavigationBlocked(true);\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        const roles = this.getStateRoles();\r\n        let teamAdmin = roles.team_admin;\r\n        let channelAdmin = roles.channel_admin;\r\n        const allUsers = roles.all_users;\r\n        const schemeName = this.state.schemeName || (this.props.scheme && this.props.scheme.display_name) || '';\r\n        const schemeDescription = this.state.schemeDescription || (this.props.scheme && this.props.scheme.description) || '';\r\n        let teamUser = null;\r\n        let channelUser = null;\r\n        let schemeId = null;\r\n\r\n        this.setState({saving: true});\r\n        if (this.props.schemeId) {\r\n            let derived = this.deriveRolesFromAllUsers(\r\n                this.props.roles[this.props.scheme.default_team_user_role],\r\n                this.props.roles[this.props.scheme.default_channel_user_role],\r\n                allUsers\r\n            );\r\n            derived = this.restoreExcludedPermissions(\r\n                this.props.roles[this.props.scheme.default_team_user_role],\r\n                this.props.roles[this.props.scheme.default_channel_user_role],\r\n                derived\r\n            );\r\n            teamUser = derived.team_user;\r\n            channelUser = derived.channel_user;\r\n            await this.props.actions.patchScheme(this.props.schemeId, {\r\n                display_name: schemeName,\r\n                description: schemeDescription,\r\n            });\r\n            schemeId = this.props.schemeId;\r\n        } else {\r\n            let derived = this.deriveRolesFromAllUsers(\r\n                this.props.roles.team_user,\r\n                this.props.roles.channel_user,\r\n                allUsers\r\n            );\r\n            derived = this.restoreExcludedPermissions(\r\n                this.props.roles.team_user,\r\n                this.props.roles.channel_user,\r\n                derived\r\n            );\r\n            teamUser = derived.team_user;\r\n            channelUser = derived.channel_user;\r\n            const result = await this.props.actions.createScheme({\r\n                display_name: schemeName,\r\n                description: schemeDescription,\r\n                scope: 'team',\r\n            });\r\n            if (result.error) {\r\n                this.setState({serverError: result.error.message, saving: false, saveNeeded: true});\r\n                this.props.actions.setNavigationBlocked(true);\r\n                return;\r\n            }\r\n            const newScheme = result.data;\r\n            schemeId = newScheme.id;\r\n            await this.props.actions.loadRolesIfNeeded([\r\n                newScheme.default_team_user_role,\r\n                newScheme.default_team_admin_role,\r\n                newScheme.default_channel_user_role,\r\n                newScheme.default_channel_admin_role,\r\n            ]);\r\n            teamUser = {...teamUser, id: this.props.roles[newScheme.default_team_user_role].id};\r\n            teamAdmin = {...teamAdmin, id: this.props.roles[newScheme.default_team_admin_role].id};\r\n            channelUser = {...channelUser, id: this.props.roles[newScheme.default_channel_user_role].id};\r\n            channelAdmin = {...channelAdmin, id: this.props.roles[newScheme.default_channel_admin_role].id};\r\n        }\r\n\r\n        const teamAdminPromise = this.props.actions.editRole(teamAdmin);\r\n        const channelAdminPromise = this.props.actions.editRole(channelAdmin);\r\n        const teamUserPromise = this.props.actions.editRole(teamUser);\r\n        const channelUserPromise = this.props.actions.editRole(channelUser);\r\n\r\n        const teamEditPromises = [];\r\n\r\n        const currentTeams = new Set((this.state.teams || this.props.teams || []).map((team) => team.id));\r\n        const serverTeams = new Set((this.props.teams || []).map((team) => team.id));\r\n\r\n        // Difference of sets (currentTeams - serverTeams)\r\n        const addedTeams = new Set([...currentTeams].filter((team) => !serverTeams.has(team)));\r\n\r\n        // Difference of sets (serverTeams - currentTeams)\r\n        const removedTeams = new Set([...serverTeams].filter((team) => !currentTeams.has(team)));\r\n\r\n        for (const teamId of addedTeams) {\r\n            teamEditPromises.push(this.props.actions.updateTeamScheme(teamId, schemeId));\r\n        }\r\n\r\n        for (const teamId of removedTeams) {\r\n            teamEditPromises.push(this.props.actions.updateTeamScheme(teamId, ''));\r\n        }\r\n\r\n        const results = await Promise.all([teamAdminPromise, channelAdminPromise, teamUserPromise, channelUserPromise, ...teamEditPromises]);\r\n\r\n        let serverError = null;\r\n        let saveNeeded = false;\r\n        for (const result of results) {\r\n            if (result.error) {\r\n                serverError = result.error.message;\r\n                saveNeeded = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({serverError, saving: false, saveNeeded});\r\n        this.props.actions.setNavigationBlocked(saveNeeded);\r\n        this.props.history.push('/admin_console/user_management/permissions');\r\n    }\r\n\r\n    toggleRole = (roleId) => {\r\n        const newOpenRoles = {...this.state.openRoles};\r\n        newOpenRoles[roleId] = !newOpenRoles[roleId];\r\n        this.setState({openRoles: newOpenRoles});\r\n    }\r\n\r\n    togglePermission = (roleId, permissions) => {\r\n        const roles = {...this.getStateRoles()};\r\n        let role = null;\r\n        if (roles.team_admin.name === roleId) {\r\n            role = {...roles.team_admin};\r\n        } else if (roles.channel_admin.name === roleId) {\r\n            role = {...roles.channel_admin};\r\n        } else if (roles.all_users.name === roleId) {\r\n            role = {...roles.all_users};\r\n        }\r\n        const newPermissions = [...role.permissions];\r\n        for (const permission of permissions) {\r\n            if (newPermissions.indexOf(permission) === -1) {\r\n                newPermissions.push(permission);\r\n            } else {\r\n                newPermissions.splice(newPermissions.indexOf(permission), 1);\r\n            }\r\n        }\r\n        role.permissions = newPermissions;\r\n        if (roles.team_admin.name === roleId) {\r\n            roles.team_admin = role;\r\n        } else if (roles.channel_admin.name === roleId) {\r\n            roles.channel_admin = role;\r\n        } else if (roles.all_users.name === roleId) {\r\n            roles.all_users = role;\r\n        }\r\n\r\n        this.setState({roles, saveNeeded: true});\r\n        this.props.actions.setNavigationBlocked(true);\r\n    }\r\n\r\n    openAddTeam = () => {\r\n        this.setState({addTeamOpen: true});\r\n    }\r\n\r\n    removeTeam = (teamId) => {\r\n        const teams = (this.state.teams || this.props.teams).filter((team) => team.id !== teamId);\r\n        this.setState({teams, saveNeeded: true});\r\n        this.props.actions.setNavigationBlocked(true);\r\n    }\r\n\r\n    addTeams = (teams) => {\r\n        const currentTeams = this.state.teams || this.props.teams || [];\r\n        this.setState({\r\n            teams: [...currentTeams, ...teams],\r\n            saveNeeded: true,\r\n        });\r\n        this.props.actions.setNavigationBlocked(true);\r\n    }\r\n\r\n    closeAddTeam = () => {\r\n        this.setState({addTeamOpen: false});\r\n    }\r\n\r\n    render = () => {\r\n        if (!this.isLoaded(this.props)) {\r\n            return <LoadingScreen/>;\r\n        }\r\n        const roles = this.getStateRoles();\r\n        const teams = this.state.teams || this.props.teams || [];\r\n        const schemeName = this.state.schemeName || (this.props.scheme && this.props.scheme.display_name) || '';\r\n        const schemeDescription = this.state.schemeDescription || (this.props.scheme && this.props.scheme.description) || '';\r\n        return (\r\n            <div className='wrapper--fixed'>\r\n                {this.state.addTeamOpen &&\r\n                    <TeamSelectorModal\r\n                        modalID={ModalIdentifiers.ADD_TEAMS_TO_SCHEME}\r\n                        onModalDismissed={this.closeAddTeam}\r\n                        onTeamsSelected={this.addTeams}\r\n                        currentSchemeId={this.props.schemeId}\r\n                        alreadySelected={teams.map((team) => team.id)}\r\n                    />\r\n                }\r\n                <div className='admin-console__header with-back'>\r\n                    <div>\r\n                        <BlockableLink\r\n                            to='/admin_console/user_management/permissions'\r\n                            className='fa fa-angle-left back'\r\n                        />\r\n                        <FormattedMessage\r\n                            id='admin.permissions.teamScheme'\r\n                            defaultMessage='Team Scheme'\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        <div className={'banner info'}>\r\n                            <div className='banner__content'>\r\n                                <span>\r\n                                    <FormattedMarkdownMessage\r\n                                        id='admin.permissions.teamScheme.introBanner'\r\n                                        defaultMessage='[Team Override Schemes](!https://about.mattermost.com/default-team-override-scheme) set the permissions for Team Admins, Channel Admins and other members in specific teams. Use a Team Override Scheme when specific teams need permission exceptions to the [System Scheme](!https://about.mattermost.com/default-system-scheme).'\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <AdminPanel\r\n                            titleId={t('admin.permissions.teamScheme.schemeDetailsTitle')}\r\n                            titleDefault='Scheme Details'\r\n                            subtitleId={t('admin.permissions.teamScheme.schemeDetailsDescription')}\r\n                            subtitleDefault='Set the name and description for this scheme.'\r\n                        >\r\n                            <div className='team-scheme-details'>\r\n                                <div className='form-group'>\r\n                                    <label\r\n                                        className='control-label'\r\n                                        htmlFor='scheme-name'\r\n                                    >\r\n                                        <FormattedMessage\r\n                                            id='admin.permissions.teamScheme.schemeNameLabel'\r\n                                            defaultMessage='Scheme Name:'\r\n                                        />\r\n                                    </label>\r\n                                    <LocalizedInput\r\n                                        id='scheme-name'\r\n                                        className='form-control'\r\n                                        type='text'\r\n                                        value={schemeName}\r\n                                        placeholder={{id: t('admin.permissions.teamScheme.schemeNamePlaceholder'), defaultMessage: 'Scheme Name'}}\r\n                                        onChange={this.handleNameChange}\r\n                                    />\r\n                                </div>\r\n                                <div className='form-group'>\r\n                                    <label\r\n                                        className='control-label'\r\n                                        htmlFor='scheme-description'\r\n                                    >\r\n                                        <FormattedMessage\r\n                                            id='admin.permissions.teamScheme.schemeDescriptionLabel'\r\n                                            defaultMessage='Scheme Description:'\r\n                                        />\r\n                                    </label>\r\n                                    <textarea\r\n                                        id='scheme-description'\r\n                                        className='form-control'\r\n                                        rows='5'\r\n                                        value={schemeDescription}\r\n                                        placeholder={localizeMessage('admin.permissions.teamScheme.schemeDescriptionPlaceholder', 'Scheme Description')}\r\n                                        onChange={this.handleDescriptionChange}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </AdminPanel>\r\n\r\n                        <AdminPanelWithButton\r\n                            className='permissions-block'\r\n                            titleId={t('admin.permissions.teamScheme.selectTeamsTitle')}\r\n                            titleDefault='Select teams to override permissions'\r\n                            subtitleId={t('admin.permissions.teamScheme.selectTeamsDescription')}\r\n                            subtitleDefault='Select teams where permission exceptions are required.'\r\n                            onButtonClick={this.openAddTeam}\r\n                            buttonTextId={t('admin.permissions.teamScheme.addTeams')}\r\n                            buttonTextDefault='Add Teams'\r\n                        >\r\n                            <div className='teams-list'>\r\n                                {teams.length === 0 &&\r\n                                    <div className='no-team-schemes'>\r\n                                        <FormattedMessage\r\n                                            id='admin.permissions.teamScheme.noTeams'\r\n                                            defaultMessage='No team selected. Please add teams to this list.'\r\n                                        />\r\n                                    </div>}\r\n                                {teams.map((team) => (\r\n                                    <TeamInList\r\n                                        key={team.id}\r\n                                        team={team}\r\n                                        onRemoveTeam={this.removeTeam}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                        </AdminPanelWithButton>\r\n\r\n                        <AdminPanelTogglable\r\n                            className='permissions-block all_users'\r\n                            open={this.state.openRoles.all_users}\r\n                            id='all_users'\r\n                            onToggle={() => this.toggleRole('all_users')}\r\n                            titleId={t('admin.permissions.systemScheme.allMembersTitle')}\r\n                            titleDefault='All Members'\r\n                            subtitleId={t('admin.permissions.systemScheme.allMembersDescription')}\r\n                            subtitleDefault='Permissions granted to all members, including administrators and newly created users.'\r\n                        >\r\n                            <PermissionsTree\r\n                                selected={this.state.selectedPermission}\r\n                                role={roles.all_users}\r\n                                scope={'team_scope'}\r\n                                onToggle={this.togglePermission}\r\n                                selectRow={this.selectRow}\r\n                            />\r\n                        </AdminPanelTogglable>\r\n\r\n                        <AdminPanelTogglable\r\n                            className='permissions-block channel_admin'\r\n                            open={this.state.openRoles.channel_admin}\r\n                            onToggle={() => this.toggleRole('channel_admin')}\r\n                            titleId={t('admin.permissions.systemScheme.channelAdminsTitle')}\r\n                            titleDefault='Channel Administrators'\r\n                            subtitleId={t('admin.permissions.systemScheme.channelAdminsDescription')}\r\n                            subtitleDefault='Permissions granted to channel creators and any users promoted to Channel Administrator.'\r\n                        >\r\n                            <PermissionsTree\r\n                                parentRole={roles.all_users}\r\n                                role={roles.channel_admin}\r\n                                scope={'channel_scope'}\r\n                                onToggle={this.togglePermission}\r\n                                selectRow={this.selectRow}\r\n                            />\r\n                        </AdminPanelTogglable>\r\n\r\n                        <AdminPanelTogglable\r\n                            className='permissions-block team_admin'\r\n                            open={this.state.openRoles.team_admin}\r\n                            onToggle={() => this.toggleRole('team_admin')}\r\n                            titleId={t('admin.permissions.systemScheme.teamAdminsTitle')}\r\n                            titleDefault='Team Administrators'\r\n                            subtitleId={t('admin.permissions.systemScheme.teamAdminsDescription')}\r\n                            subtitleDefault='Permissions granted to team creators and any users promoted to Team Administrator.'\r\n                        >\r\n                            <PermissionsTree\r\n                                parentRole={roles.all_users}\r\n                                role={roles.team_admin}\r\n                                scope={'team_scope'}\r\n                                onToggle={this.togglePermission}\r\n                                selectRow={this.selectRow}\r\n                            />\r\n                        </AdminPanelTogglable>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='admin-console-save'>\r\n                    <SaveButton\r\n                        saving={this.state.saving}\r\n                        disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\r\n                        onClick={this.handleSubmit}\r\n                        savingMessage={localizeMessage('admin.saving', 'Saving Config...')}\r\n                    />\r\n                    <BlockableLink\r\n                        className='cancel-button'\r\n                        to='/admin_console/user_management/permissions'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.permissions.permissionSchemes.cancel'\r\n                            defaultMessage='Cancel'\r\n                        />\r\n                    </BlockableLink>\r\n                    <div className='error-message'>\r\n                        <FormError error={this.state.serverError}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {loadRolesIfNeeded, editRole} from 'mattermost-redux/actions/roles';\r\n\r\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\r\nimport {getScheme, makeGetSchemeTeams} from 'mattermost-redux/selectors/entities/schemes';\r\n\r\nimport {getScheme as loadScheme, patchScheme, createScheme, getSchemeTeams as loadSchemeTeams} from 'mattermost-redux/actions/schemes';\r\n\r\nimport {updateTeamScheme} from 'mattermost-redux/actions/teams';\r\n\r\nimport {setNavigationBlocked} from 'actions/admin_actions.jsx';\r\n\r\nimport PermissionTeamSchemeSettings from './permission_team_scheme_settings.jsx';\r\n\r\nfunction makeMapStateToProps() {\r\n    const getSchemeTeams = makeGetSchemeTeams();\r\n\r\n    return (state, ownProps) => {\r\n        const schemeId = ownProps.match.params.scheme_id;\r\n        return {\r\n            schemeId,\r\n            scheme: schemeId ? getScheme(state, schemeId) : null,\r\n            teams: schemeId ? getSchemeTeams(state, {schemeId}) : null,\r\n            roles: getRoles(state),\r\n            rolesRequest: state.requests.roles.getRolesByNames,\r\n        };\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            loadRolesIfNeeded,\r\n            loadScheme,\r\n            loadSchemeTeams,\r\n            editRole,\r\n            patchScheme,\r\n            updateTeamScheme,\r\n            createScheme,\r\n            setNavigationBlocked,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps)(PermissionTeamSchemeSettings);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Modal} from 'react-bootstrap';\r\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\r\nimport {Client4} from 'mattermost-redux/client';\r\nimport {General} from 'mattermost-redux/constants';\r\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\r\n\r\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\nimport BotBadge from 'components/widgets/badges/bot_badge.jsx';\r\n\r\nfunction getStateFromProps(props) {\r\n    const roles = props.user && props.user.roles ? props.user.roles : '';\r\n\r\n    return {\r\n        error: null,\r\n        hasPostAllRole: UserUtils.hasPostAllRole(roles),\r\n        hasPostAllPublicRole: UserUtils.hasPostAllPublicRole(roles),\r\n        hasUserAccessTokenRole: UserUtils.hasUserAccessTokenRole(roles),\r\n        isSystemAdmin: UserUtils.isSystemAdmin(roles),\r\n    };\r\n}\r\n\r\nexport default class ManageRolesModal extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * Set to render the modal\r\n         */\r\n        show: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * The user the roles are being managed for\r\n         */\r\n        user: PropTypes.object,\r\n\r\n        /**\r\n         * Set if user access tokens are enabled\r\n         */\r\n        userAccessTokensEnabled: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * Function called when modal is dismissed\r\n         */\r\n        onModalDismissed: PropTypes.func.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n             * Function to update a user's roles\r\n             */\r\n            updateUserRoles: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = getStateFromProps(props);\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\r\n        const user = this.props.user || {};\r\n        const nextUser = nextProps.user || {};\r\n        if (user.id !== nextUser.id) {\r\n            this.setState(getStateFromProps(nextProps));\r\n        }\r\n    }\r\n\r\n    handleError = (error) => {\r\n        this.setState({\r\n            error,\r\n        });\r\n    }\r\n\r\n    handleSystemAdminChange = (e) => {\r\n        if (e.target.name === 'systemadmin') {\r\n            this.setState({isSystemAdmin: true});\r\n        } else if (e.target.name === 'systemmember') {\r\n            this.setState({isSystemAdmin: false});\r\n        }\r\n    };\r\n\r\n    handleUserAccessTokenChange = (e) => {\r\n        this.setState({\r\n            hasUserAccessTokenRole: e.target.checked,\r\n        });\r\n    };\r\n\r\n    handlePostAllChange = (e) => {\r\n        this.setState({\r\n            hasPostAllRole: e.target.checked,\r\n        });\r\n    };\r\n\r\n    handlePostAllPublicChange = (e) => {\r\n        this.setState({\r\n            hasPostAllPublicRole: e.target.checked,\r\n        });\r\n    };\r\n\r\n    trackRoleChanges = (roles, oldRoles) => {\r\n        if (UserUtils.hasUserAccessTokenRole(roles) && !UserUtils.hasUserAccessTokenRole(oldRoles)) {\r\n            trackEvent('actions', 'add_roles', {role: General.SYSTEM_USER_ACCESS_TOKEN_ROLE});\r\n        } else if (!UserUtils.hasUserAccessTokenRole(roles) && UserUtils.hasUserAccessTokenRole(oldRoles)) {\r\n            trackEvent('actions', 'remove_roles', {role: General.SYSTEM_USER_ACCESS_TOKEN_ROLE});\r\n        }\r\n\r\n        if (UserUtils.hasPostAllRole(roles) && !UserUtils.hasPostAllRole(oldRoles)) {\r\n            trackEvent('actions', 'add_roles', {role: General.SYSTEM_POST_ALL_ROLE});\r\n        } else if (!UserUtils.hasPostAllRole(roles) && UserUtils.hasPostAllRole(oldRoles)) {\r\n            trackEvent('actions', 'remove_roles', {role: General.SYSTEM_POST_ALL_ROLE});\r\n        }\r\n\r\n        if (UserUtils.hasPostAllPublicRole(roles) && !UserUtils.hasPostAllPublicRole(oldRoles)) {\r\n            trackEvent('actions', 'add_roles', {role: General.SYSTEM_POST_ALL_PUBLIC_ROLE});\r\n        } else if (!UserUtils.hasPostAllPublicRole(roles) && UserUtils.hasPostAllPublicRole(oldRoles)) {\r\n            trackEvent('actions', 'remove_roles', {role: General.SYSTEM_POST_ALL_PUBLIC_ROLE});\r\n        }\r\n    }\r\n\r\n    handleSave = async () => {\r\n        this.setState({error: null});\r\n\r\n        let roles = General.SYSTEM_USER_ROLE;\r\n\r\n        if (this.state.isSystemAdmin) {\r\n            roles += ' ' + General.SYSTEM_ADMIN_ROLE;\r\n        } else if (this.state.hasUserAccessTokenRole) {\r\n            roles += ' ' + General.SYSTEM_USER_ACCESS_TOKEN_ROLE;\r\n            if (this.state.hasPostAllRole) {\r\n                roles += ' ' + General.SYSTEM_POST_ALL_ROLE;\r\n            } else if (this.state.hasPostAllPublicRole) {\r\n                roles += ' ' + General.SYSTEM_POST_ALL_PUBLIC_ROLE;\r\n            }\r\n        }\r\n\r\n        const {data} = await this.props.actions.updateUserRoles(this.props.user.id, roles);\r\n\r\n        this.trackRoleChanges(roles, this.props.user.roles);\r\n\r\n        if (data) {\r\n            this.props.onModalDismissed();\r\n        } else {\r\n            this.handleError(\r\n                <FormattedMessage\r\n                    id='admin.manage_roles.saveError'\r\n                    defaultMessage='Unable to save roles.'\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    renderContents = () => {\r\n        const {user} = this.props;\r\n\r\n        if (user == null) {\r\n            return <div/>;\r\n        }\r\n\r\n        let name = UserUtils.getFullName(user);\r\n        if (name) {\r\n            name += ` (@${user.username})`;\r\n        } else {\r\n            name = `@${user.username}`;\r\n        }\r\n\r\n        let additionalRoles;\r\n        if (this.state.hasUserAccessTokenRole || this.state.isSystemAdmin || user.is_bot) {\r\n            additionalRoles = (\r\n                <div>\r\n                    <p>\r\n                        <FormattedMarkdownMessage\r\n                            id='admin.manage_roles.additionalRoles'\r\n                            defaultMessage='Select additional permissions for the account. [Read more about roles and permissions](!https://about.mattermost.com/default-permissions).'\r\n                        />\r\n                    </p>\r\n                    <div className='checkbox'>\r\n                        <label>\r\n                            <input\r\n                                type='checkbox'\r\n                                ref='postall'\r\n                                checked={this.state.hasPostAllRole || this.state.isSystemAdmin}\r\n                                disabled={this.state.isSystemAdmin}\r\n                                onChange={this.handlePostAllChange}\r\n                            />\r\n                            <strong>\r\n                                <FormattedMessage\r\n                                    id='admin.manage_roles.postAllRoleTitle'\r\n                                    defaultMessage='post:all'\r\n                                />\r\n                            </strong>\r\n                            <FormattedMessage\r\n                                id='admin.manage_roles.postAllRole'\r\n                                defaultMessage='Access to post to all Mattermost channels including direct messages.'\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                    <div className='checkbox'>\r\n                        <label>\r\n                            <input\r\n                                type='checkbox'\r\n                                ref='postallpublic'\r\n                                checked={this.state.hasPostAllPublicRole || this.state.hasPostAllRole || this.state.isSystemAdmin}\r\n                                disabled={this.state.hasPostAllRole || this.state.isSystemAdmin}\r\n                                onChange={this.handlePostAllPublicChange}\r\n                            />\r\n                            <strong>\r\n                                <FormattedMessage\r\n                                    id='admin.manage_roles.postAllPublicRoleTitle'\r\n                                    defaultMessage='post:channels'\r\n                                />\r\n                            </strong>\r\n                            <FormattedMessage\r\n                                id='admin.manage_roles.postAllPublicRole'\r\n                                defaultMessage='Access to post to all Mattermost public channels.'\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let userAccessTokenContent;\r\n        if (this.props.userAccessTokensEnabled) {\r\n            if (user.is_bot) {\r\n                userAccessTokenContent = (\r\n                    <div>\r\n                        <div className='member-row--padded member-row-lone-padding'>\r\n                            {additionalRoles}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else {\r\n                userAccessTokenContent = (\r\n                    <div>\r\n                        <div className='checkbox'>\r\n                            <label>\r\n                                <input\r\n                                    type='checkbox'\r\n                                    ref='postall'\r\n                                    checked={this.state.hasUserAccessTokenRole || this.state.isSystemAdmin}\r\n                                    disabled={this.state.isSystemAdmin}\r\n                                    onChange={this.handleUserAccessTokenChange}\r\n                                />\r\n                                <FormattedMarkdownMessage\r\n                                    id='admin.manage_roles.allowUserAccessTokens'\r\n                                    defaultMessage='Allow this account to generate [personal access tokens](!https://about.mattermost.com/default-user-access-tokens).'\r\n                                />\r\n                                <span className='d-block padding-top padding-bottom light'>\r\n                                    <FormattedHTMLMessage\r\n                                        id='admin.manage_roles.allowUserAccessTokensDesc'\r\n                                        defaultMessage=\"Removing this permission doesn't delete existing tokens. To delete them, go to the user's Manage Tokens menu.\"\r\n                                    />\r\n                                </span>\r\n                            </label>\r\n                        </div>\r\n                        <div className='member-row--padded'>\r\n                            {additionalRoles}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        let email = user.email;\r\n        if (user.is_bot) {\r\n            email = '';\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className='manage-teams__user'>\r\n                    <img\r\n                        alt={''}\r\n                        className='manage-teams__profile-picture'\r\n                        src={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\r\n                    />\r\n                    <div className='manage-teams__info'>\r\n                        <div className='manage-teams__name'>\r\n                            {name}\r\n                            <BotBadge\r\n                                show={Boolean(user.is_bot)}\r\n                                className='badge-admin'\r\n                            />\r\n                        </div>\r\n                        <div className='manage-teams__email'>\r\n                            {email}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className='manage-row--inner'>\r\n                        <div className='radio-inline'>\r\n                            <label>\r\n                                <input\r\n                                    name='systemadmin'\r\n                                    type='radio'\r\n                                    checked={this.state.isSystemAdmin}\r\n                                    onChange={this.handleSystemAdminChange}\r\n                                />\r\n                                <FormattedMessage\r\n                                    id='admin.manage_roles.systemAdmin'\r\n                                    defaultMessage='System Admin'\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className='radio-inline'>\r\n                            <label>\r\n                                <input\r\n                                    name='systemmember'\r\n                                    type='radio'\r\n                                    checked={!this.state.isSystemAdmin}\r\n                                    onChange={this.handleSystemAdminChange}\r\n                                />\r\n                                <FormattedMessage\r\n                                    id='admin.manage_roles.systemMember'\r\n                                    defaultMessage='Member'\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    {userAccessTokenContent}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                show={this.props.show}\r\n                onHide={this.props.onModalDismissed}\r\n                dialogClassName='manage-teams'\r\n                role='dialog'\r\n                aria-labelledby='manageRolesModalLabel'\r\n            >\r\n                <Modal.Header closeButton={true}>\r\n                    <Modal.Title\r\n                        componentClass='h1'\r\n                        id='manageRolesModalLabel'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.manage_roles.manageRolesTitle'\r\n                            defaultMessage='Manage Roles'\r\n                        />\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {this.renderContents()}\r\n                    {this.state.error}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-link'\r\n                        onClick={this.props.onModalDismissed}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.manage_roles.cancel'\r\n                            defaultMessage='Cancel'\r\n                        />\r\n                    </button>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-primary'\r\n                        onClick={this.handleSave}\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.manage_roles.save'\r\n                            defaultMessage='Save'\r\n                        />\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {updateUserRoles} from 'mattermost-redux/actions/users';\r\n\r\nimport ManageRolesModal from './manage_roles_modal.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userAccessTokensEnabled: state.entities.admin.config.ServiceSettings.EnableUserAccessTokens,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            updateUserRoles,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageRolesModal);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\r\nimport Menu from 'components/widgets/menu/menu';\r\nimport MenuItemAction from 'components/widgets/menu/menu_items/menu_item_action';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nexport default class ManageTeamsDropdown extends React.Component {\r\n    static propTypes = {\r\n        team: PropTypes.object.isRequired,\r\n        user: PropTypes.object.isRequired,\r\n        teamMember: PropTypes.object.isRequired,\r\n        onError: PropTypes.func.isRequired,\r\n        onMemberChange: PropTypes.func.isRequired,\r\n        updateTeamMemberSchemeRoles: PropTypes.func.isRequired,\r\n        handleRemoveUserFromTeam: PropTypes.func.isRequired,\r\n    };\r\n\r\n    makeTeamAdmin = async () => {\r\n        const {error} = await this.props.updateTeamMemberSchemeRoles(this.props.teamMember.team_id, this.props.user.id, true, true);\r\n        if (error) {\r\n            this.props.onError(error.message);\r\n        } else {\r\n            this.props.onMemberChange(this.props.teamMember.team_id);\r\n        }\r\n    };\r\n\r\n    makeMember = async () => {\r\n        const {error} = await this.props.updateTeamMemberSchemeRoles(this.props.teamMember.team_id, this.props.user.id, true, false);\r\n        if (error) {\r\n            this.props.onError(error.message);\r\n        } else {\r\n            this.props.onMemberChange(this.props.teamMember.team_id);\r\n        }\r\n    };\r\n\r\n    removeFromTeam = () => {\r\n        this.props.handleRemoveUserFromTeam(this.props.teamMember.team_id);\r\n    }\r\n\r\n    render() {\r\n        const isTeamAdmin = Utils.isAdmin(this.props.teamMember.roles) || this.props.teamMember.scheme_admin;\r\n        const {team} = this.props;\r\n        let title;\r\n        if (isTeamAdmin) {\r\n            title = Utils.localizeMessage('admin.user_item.teamAdmin', 'Team Admin');\r\n        } else {\r\n            title = Utils.localizeMessage('admin.user_item.teamMember', 'Team Member');\r\n        }\r\n\r\n        return (\r\n            <MenuWrapper>\r\n                <a>\r\n                    <span>{title} </span>\r\n                    <span className='caret'/>\r\n                </a>\r\n                <Menu\r\n                    openLeft={true}\r\n                    ariaLabel={Utils.localizeMessage('team_members_dropdown.menuAriaLabel', 'Team member role change')}\r\n                >\r\n                    <MenuItemAction\r\n                        show={!isTeamAdmin}\r\n                        onClick={this.makeTeamAdmin}\r\n                        text={Utils.localizeMessage('admin.user_item.makeTeamAdmin', 'Make Team Admin')}\r\n                    />\r\n                    <MenuItemAction\r\n                        show={isTeamAdmin}\r\n                        onClick={this.makeMember}\r\n                        text={Utils.localizeMessage('admin.user_item.makeMember', 'Make Member')}\r\n                    />\r\n                    <MenuItemAction\r\n                        show={!team.group_constrained}\r\n                        onClick={this.removeFromTeam}\r\n                        text={Utils.localizeMessage('team_members_dropdown.leave_team', 'Remove from Team')}\r\n                    />\r\n                </Menu>\r\n            </MenuWrapper>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default class RemoveFromTeamButton extends React.PureComponent {\r\n    static propTypes = {\r\n        teamId: PropTypes.string.isRequired,\r\n        handleRemoveUserFromTeam: PropTypes.func.isRequired,\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        this.props.handleRemoveUserFromTeam(this.props.teamId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button\r\n                className='btn btn-danger'\r\n                onClick={this.handleClick}\r\n            >\r\n                <FormattedMessage\r\n                    id='team_members_dropdown.leave_team'\r\n                    defaultMessage='Remove from Team'\r\n                />\r\n            </button>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Modal} from 'react-bootstrap';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Client4} from 'mattermost-redux/client';\r\n\r\nimport {filterAndSortTeamsByDisplayName} from 'utils/team_utils.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\n\r\nimport ManageTeamsDropdown from './manage_teams_dropdown.jsx';\r\nimport RemoveFromTeamButton from './remove_from_team_button.jsx';\r\n\r\nexport default class ManageTeamsModal extends React.Component {\r\n    static propTypes = {\r\n        locale: PropTypes.string.isRequired,\r\n        onModalDismissed: PropTypes.func.isRequired,\r\n        show: PropTypes.bool.isRequired,\r\n        user: PropTypes.object,\r\n        actions: PropTypes.shape({\r\n            getTeamMembersForUser: PropTypes.func.isRequired,\r\n            getTeamsForUser: PropTypes.func.isRequired,\r\n            updateTeamMemberSchemeRoles: PropTypes.func.isRequired,\r\n            removeUserFromTeam: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: null,\r\n            teams: null,\r\n            teamMembers: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user) {\r\n            this.loadTeamsAndTeamMembers();\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\r\n        const userId = this.props.user ? this.props.user.id : '';\r\n        const nextUserId = nextProps.user ? nextProps.user.id : '';\r\n\r\n        if (userId !== nextUserId) {\r\n            this.setState({\r\n                teams: null,\r\n                teamMembers: null,\r\n            });\r\n\r\n            if (nextProps.user) {\r\n                this.loadTeamsAndTeamMembers(nextProps.user);\r\n            }\r\n        }\r\n    }\r\n\r\n    loadTeamsAndTeamMembers = async (user = this.props.user) => {\r\n        this.getTeamMembers(user.id);\r\n        const {data} = await this.props.actions.getTeamsForUser(user.id);\r\n        this.setState({\r\n            teams: filterAndSortTeamsByDisplayName(data, this.props.locale),\r\n        });\r\n    }\r\n\r\n    handleError = (error) => {\r\n        this.setState({\r\n            error,\r\n        });\r\n    }\r\n\r\n    getTeamMembers = async (userId = this.props.user.id) => {\r\n        const {data} = await this.props.actions.getTeamMembersForUser(userId);\r\n        if (data) {\r\n            this.setState({\r\n                teamMembers: data,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleMemberRemove = (teamId) => {\r\n        this.setState({\r\n            teams: this.state.teams.filter((team) => team.id !== teamId),\r\n            teamMembers: this.state.teamMembers.filter((teamMember) => teamMember.team_id !== teamId),\r\n        });\r\n    }\r\n\r\n    handleRemoveUserFromTeam = async (teamId) => {\r\n        const {actions, user} = this.props;\r\n\r\n        const {data, error} = await actions.removeUserFromTeam(teamId, user.id);\r\n        if (data) {\r\n            this.handleMemberRemove(teamId);\r\n        } else if (error) {\r\n            this.handleError(error.message);\r\n        }\r\n    }\r\n\r\n    handleMemberChange = () => {\r\n        this.getTeamMembers(this.props.user.id);\r\n    };\r\n\r\n    renderContents = () => {\r\n        const {user} = this.props;\r\n        const {teams, teamMembers} = this.state;\r\n\r\n        if (!user) {\r\n            return <LoadingScreen/>;\r\n        }\r\n\r\n        const isSystemAdmin = Utils.isAdmin(user.roles);\r\n\r\n        let name = Utils.getFullName(user);\r\n        if (name) {\r\n            name += ` (@${user.username})`;\r\n        } else {\r\n            name = `@${user.username}`;\r\n        }\r\n\r\n        let teamList;\r\n        if (teams && teamMembers) {\r\n            teamList = teams.map((team) => {\r\n                const teamMember = teamMembers.find((member) => member.team_id === team.id);\r\n                if (!teamMember) {\r\n                    return null;\r\n                }\r\n\r\n                let action;\r\n                if (isSystemAdmin) {\r\n                    action = (\r\n                        <RemoveFromTeamButton\r\n                            teamId={team.id}\r\n                            handleRemoveUserFromTeam={this.handleRemoveUserFromTeam}\r\n                        />\r\n                    );\r\n                } else {\r\n                    action = (\r\n                        <ManageTeamsDropdown\r\n                            user={user}\r\n                            team={team}\r\n                            teamMember={teamMember}\r\n                            onError={this.handleError}\r\n                            onMemberChange={this.handleMemberChange}\r\n                            updateTeamMemberSchemeRoles={this.props.actions.updateTeamMemberSchemeRoles}\r\n                            handleRemoveUserFromTeam={this.handleRemoveUserFromTeam}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                return (\r\n                    <div\r\n                        key={team.id}\r\n                        className='manage-teams__team'\r\n                    >\r\n                        <div className='manage-teams__team-name'>\r\n                            {team.display_name}\r\n                        </div>\r\n                        <div className='manage-teams__team-actions'>\r\n                            {action}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            });\r\n        } else {\r\n            teamList = <LoadingScreen/>;\r\n        }\r\n\r\n        let systemAdminIndicator = null;\r\n        if (isSystemAdmin) {\r\n            systemAdminIndicator = (\r\n                <div className='manage-teams__system-admin'>\r\n                    <FormattedMessage\r\n                        id='admin.user_item.sysAdmin'\r\n                        defaultMessage='System Admin'\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className='manage-teams__user'>\r\n                    <img\r\n                        alt={''}\r\n                        className='manage-teams__profile-picture'\r\n                        src={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\r\n                    />\r\n                    <div className='manage-teams__info'>\r\n                        <div className='manage-teams__name'>\r\n                            {name}\r\n                        </div>\r\n                        <div className='manage-teams__email'>\r\n                            {user.email}\r\n                        </div>\r\n                    </div>\r\n                    {systemAdminIndicator}\r\n                </div>\r\n                <div className='manage-teams__teams'>\r\n                    {teamList}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                show={this.props.show}\r\n                onHide={this.props.onModalDismissed}\r\n                dialogClassName='manage-teams modal--overflow-visible'\r\n                role='dialog'\r\n                aria-labelledby='manageTeamsModalLabel'\r\n            >\r\n                <Modal.Header closeButton={true}>\r\n                    <Modal.Title\r\n                        componentClass='h1'\r\n                        id='manageTeamsModalLabel'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.user_item.manageTeams'\r\n                            defaultMessage='Manage Teams'\r\n                        />\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {this.renderContents()}\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {updateTeamMemberSchemeRoles, getTeamMembersForUser, getTeamsForUser, removeUserFromTeam} from 'mattermost-redux/actions/teams';\r\n\r\nimport {getCurrentLocale} from 'selectors/i18n';\r\n\r\nimport ManageTeamsModal from './manage_teams_modal';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        locale: getCurrentLocale(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getTeamMembersForUser,\r\n            getTeamsForUser,\r\n            updateTeamMemberSchemeRoles,\r\n            removeUserFromTeam,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTeamsModal);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\r\n\r\nexport default class RevokeTokenButton extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Token id to revoke\r\n         */\r\n        tokenId: PropTypes.string.isRequired,\r\n\r\n        /*\r\n         * Function to call on error\r\n         */\r\n        onError: PropTypes.func.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n             * Function to revoke a user access token\r\n             */\r\n            revokeUserAccessToken: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    handleClick = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const {error} = await this.props.actions.revokeUserAccessToken(this.props.tokenId);\r\n        trackEvent('system_console', 'revoke_user_access_token');\r\n\r\n        if (error) {\r\n            this.props.onError(error.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button\r\n                className='btn btn-danger'\r\n                onClick={this.handleClick}\r\n            >\r\n                <FormattedMessage\r\n                    id='admin.revoke_token_button.delete'\r\n                    defaultMessage='Delete'\r\n                />\r\n            </button>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {revokeUserAccessToken} from 'mattermost-redux/actions/users';\r\n\r\nimport RevokeTokenButton from './revoke_token_button.jsx';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            revokeUserAccessToken,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(RevokeTokenButton);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Modal} from 'react-bootstrap';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Client4} from 'mattermost-redux/client';\r\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\r\n\r\nimport RevokeTokenButton from 'components/admin_console/revoke_token_button';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nexport default class ManageTokensModal extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * Set to render the modal\r\n         */\r\n        show: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * The user the roles are being managed for\r\n         */\r\n        user: PropTypes.object,\r\n\r\n        /**\r\n         * The personal access tokens for a user, object with token ids as keys\r\n         */\r\n        userAccessTokens: PropTypes.object,\r\n\r\n        /**\r\n         * Function called when modal is dismissed\r\n         */\r\n        onModalDismissed: PropTypes.func.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /**\r\n             * Function to get a user's access tokens\r\n             */\r\n            getUserAccessTokensForUser: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {error: null};\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\r\n        const userId = this.props.user ? this.props.user.id : null;\r\n        const nextUserId = nextProps.user ? nextProps.user.id : null;\r\n        if (nextUserId && nextUserId !== userId) {\r\n            this.props.actions.getUserAccessTokensForUser(nextUserId, 0, 200);\r\n        }\r\n    }\r\n\r\n    handleError = (error) => {\r\n        this.setState({\r\n            error,\r\n        });\r\n    }\r\n\r\n    renderContents = () => {\r\n        const {user, userAccessTokens} = this.props;\r\n\r\n        if (!user) {\r\n            return <LoadingScreen/>;\r\n        }\r\n\r\n        let name = UserUtils.getFullName(user);\r\n        if (name) {\r\n            name += ` (@${user.username})`;\r\n        } else {\r\n            name = `@${user.username}`;\r\n        }\r\n\r\n        let tokenList;\r\n        if (userAccessTokens) {\r\n            const userAccessTokensList = Object.values(userAccessTokens);\r\n\r\n            if (userAccessTokensList.length === 0) {\r\n                tokenList = (\r\n                    <div className='manage-row__empty'>\r\n                        <FormattedMessage\r\n                            id='admin.manage_tokens.userAccessTokensNone'\r\n                            defaultMessage='No personal access tokens.'\r\n                        />\r\n                    </div>\r\n                );\r\n            } else {\r\n                tokenList = userAccessTokensList.map((token) => {\r\n                    return (\r\n                        <div\r\n                            key={token.id}\r\n                            className='manage-teams__team'\r\n                        >\r\n                            <div className='manage-teams__team-name'>\r\n                                <div className='whitespace--nowrap overflow--ellipsis'>\r\n                                    <FormattedMessage\r\n                                        id='admin.manage_tokens.userAccessTokensNameLabel'\r\n                                        defaultMessage='Token Description: '\r\n                                    />\r\n                                    {token.description}\r\n                                </div>\r\n                                <div className='whitespace--nowrap overflow--ellipsis'>\r\n                                    <FormattedMessage\r\n                                        id='admin.manage_tokens.userAccessTokensIdLabel'\r\n                                        defaultMessage='Token ID: '\r\n                                    />\r\n                                    {token.id}\r\n                                </div>\r\n                            </div>\r\n                            <div className='manage-teams__team-actions'>\r\n                                <RevokeTokenButton\r\n                                    tokenId={token.id}\r\n                                    onError={this.handleError}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                });\r\n            }\r\n        } else {\r\n            tokenList = <LoadingScreen/>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className='manage-teams__user'>\r\n                    <img\r\n                        alt={''}\r\n                        className='manage-teams__profile-picture'\r\n                        src={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\r\n                    />\r\n                    <div className='manage-teams__info'>\r\n                        <div className='manage-teams__name'>\r\n                            {name}\r\n                        </div>\r\n                        <div className='manage-teams__email'>\r\n                            {user.email}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='padding-top x2'>\r\n                    <FormattedMarkdownMessage\r\n                        id='admin.manage_tokens.userAccessTokensDescription'\r\n                        defaultMessage='Personal access tokens function similarly to session tokens and can be used by integrations to [interact with this Mattermost server](!https://about.mattermost.com/default-api-authentication). Tokens are disabled if the user is deactivated. Learn more about [personal access tokens](!https://about.mattermost.com/default-user-access-tokens).'\r\n                    />\r\n                </div>\r\n                <div className='manage-teams__teams'>\r\n                    {tokenList}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                show={this.props.show}\r\n                onHide={this.props.onModalDismissed}\r\n                dialogClassName='manage-teams'\r\n                role='dialog'\r\n                aria-labelledby='manageTokensModalLabel'\r\n            >\r\n                <Modal.Header closeButton={true}>\r\n                    <Modal.Title\r\n                        componentClass='h1'\r\n                        id='manageTokensModalLabel'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.manage_tokens.manageTokensTitle'\r\n                            defaultMessage='Manage Personal Access Tokens'\r\n                        />\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {this.renderContents()}\r\n                    {this.state.error}\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getUserAccessTokensForUser} from 'mattermost-redux/actions/users';\r\n\r\nimport ManageTokensModal from './manage_tokens_modal.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const userId = ownProps.user ? ownProps.user.id : '';\r\n\r\n    return {\r\n        userAccessTokens: state.entities.admin.userAccessTokensByUser[userId],\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getUserAccessTokensForUser,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTokensModal);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Modal} from 'react-bootstrap';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {adminResetPassword} from 'actions/admin_actions.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nexport default class ResetPasswordModal extends React.Component {\r\n    static propTypes = {\r\n        user: PropTypes.object,\r\n        currentUserId: PropTypes.string.isRequired,\r\n        show: PropTypes.bool.isRequired,\r\n        onModalSubmit: PropTypes.func,\r\n        onModalDismissed: PropTypes.func,\r\n        passwordConfig: PropTypes.object,\r\n    };\r\n\r\n    static defaultProps = {\r\n        show: false,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.doSubmit = this.doSubmit.bind(this);\r\n        this.doCancel = this.doCancel.bind(this);\r\n\r\n        this.state = {\r\n            serverErrorNewPass: null,\r\n            serverErrorCurrentPass: null,\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({\r\n            serverErrorNewPass: null,\r\n            serverErrorCurrentPass: null,\r\n        });\r\n    }\r\n\r\n    doSubmit(e) {\r\n        e.preventDefault();\r\n        let currentPassword = '';\r\n        if (this.refs.currentPassword) {\r\n            currentPassword = this.refs.currentPassword.value;\r\n            if (currentPassword === '') {\r\n                let errorMsg = '';\r\n                errorMsg = (\r\n                    <FormattedMessage\r\n                        id='admin.reset_password.missing_current'\r\n                        defaultMessage='Please enter your current password.'\r\n                    />\r\n                );\r\n                this.setState({serverErrorCurrentPass: errorMsg});\r\n                return;\r\n            }\r\n        }\r\n\r\n        const password = this.refs.password.value;\r\n\r\n        const {valid, error} = Utils.isValidPassword(password, this.props.passwordConfig);\r\n        if (!valid && error) {\r\n            this.setState({serverErrorNewPass: error});\r\n            return;\r\n        }\r\n\r\n        this.setState({serverErrorNewPass: null});\r\n\r\n        adminResetPassword(\r\n            this.props.user.id,\r\n            currentPassword,\r\n            password,\r\n            () => {\r\n                this.props.onModalSubmit(this.props.user);\r\n            },\r\n            (err) => {\r\n                this.setState({serverErrorCurrentPass: err.message});\r\n            }\r\n        );\r\n    }\r\n\r\n    doCancel() {\r\n        this.setState({\r\n            serverErrorNewPass: null,\r\n            serverErrorCurrentPass: null,\r\n        });\r\n        this.props.onModalDismissed();\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.user;\r\n        if (user == null) {\r\n            return <div/>;\r\n        }\r\n\r\n        let urlClass = 'input-group input-group--limit';\r\n        let serverErrorNewPass = null;\r\n\r\n        if (this.state.serverErrorNewPass) {\r\n            urlClass += ' has-error';\r\n            serverErrorNewPass = <div className='has-error'><p className='input__help error'>{this.state.serverErrorNewPass}</p></div>;\r\n        }\r\n\r\n        let title;\r\n        if (user.auth_service) {\r\n            title = (\r\n                <FormattedMessage\r\n                    id='admin.reset_password.titleSwitch'\r\n                    defaultMessage='Switch Account to Email/Password'\r\n                />\r\n            );\r\n        } else {\r\n            title = (\r\n                <FormattedMessage\r\n                    id='admin.reset_password.titleReset'\r\n                    defaultMessage='Reset Password'\r\n                />\r\n            );\r\n        }\r\n\r\n        let currentPassword = null;\r\n        let serverErrorCurrentPass = null;\r\n        let newPasswordFocus = true;\r\n        if (this.props.currentUserId === user.id) {\r\n            newPasswordFocus = false;\r\n            let urlClassCurrentPass = 'input-group input-group--limit';\r\n            if (this.state.serverErrorCurrentPass) {\r\n                urlClassCurrentPass += ' has-error';\r\n                serverErrorCurrentPass = <div className='has-error'><p className='input__help error'>{this.state.serverErrorCurrentPass}</p></div>;\r\n            }\r\n            currentPassword = (\r\n                <div className='col-sm-10 password__group-addon-space'>\r\n                    <div className={urlClassCurrentPass}>\r\n                        <span\r\n                            data-toggle='tooltip'\r\n                            title='Current Password'\r\n                            className='input-group-addon password__group-addon'\r\n                        >\r\n                            <FormattedMessage\r\n                                id='admin.reset_password.curentPassword'\r\n                                defaultMessage='Current Password'\r\n                            />\r\n                        </span>\r\n                        <input\r\n                            type='password'\r\n                            ref='currentPassword'\r\n                            className='form-control'\r\n                            autoFocus={true}\r\n                            tabIndex='1'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                show={this.props.show}\r\n                onHide={this.doCancel}\r\n                role='dialog'\r\n                aria-labelledby='resetPasswordModalLabel'\r\n            >\r\n                <Modal.Header closeButton={true}>\r\n                    <Modal.Title\r\n                        componentClass='h1'\r\n                        id='resetPasswordModalLabel'\r\n                    >\r\n                        {title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <form\r\n                    role='form'\r\n                    className='form-horizontal'\r\n                >\r\n                    <Modal.Body>\r\n                        <div className='form-group'>\r\n                            {currentPassword}\r\n                            <div className='col-sm-10'>\r\n                                <div className={urlClass}>\r\n                                    <span\r\n                                        data-toggle='tooltip'\r\n                                        title='New Password'\r\n                                        className='input-group-addon password__group-addon'\r\n                                    >\r\n                                        <FormattedMessage\r\n                                            id='admin.reset_password.newPassword'\r\n                                            defaultMessage='New Password'\r\n                                        />\r\n                                    </span>\r\n                                    <input\r\n                                        type='password'\r\n                                        ref='password'\r\n                                        className='form-control'\r\n                                        autoFocus={newPasswordFocus}\r\n                                        tabIndex='1'\r\n                                    />\r\n                                </div>\r\n                                {serverErrorNewPass}\r\n                                {serverErrorCurrentPass}\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button\r\n                            type='button'\r\n                            className='btn btn-link'\r\n                            onClick={this.doCancel}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='admin.reset_password.cancel'\r\n                                defaultMessage='Cancel'\r\n                            />\r\n                        </button>\r\n                        <button\r\n                            onClick={this.doSubmit}\r\n                            type='submit'\r\n                            className='btn btn-primary'\r\n                            tabIndex='2'\r\n                        >\r\n                            <FormattedMessage\r\n                                id='admin.reset_password.reset'\r\n                                defaultMessage='Reset'\r\n                            />\r\n                        </button>\r\n                    </Modal.Footer>\r\n                </form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\r\n\r\nimport {getPasswordConfig} from 'utils/utils.jsx';\r\n\r\nimport ResetPasswordModal from './reset_password_modal.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n\r\n    return {\r\n        currentUserId: getCurrentUserId(state),\r\n        passwordConfig: getPasswordConfig(config),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ResetPasswordModal);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Modal} from 'react-bootstrap';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {isEmail} from 'mattermost-redux/utils/helpers';\r\n\r\nimport {adminResetEmail} from 'actions/admin_actions.jsx';\r\n\r\nexport default class ResetEmailModal extends React.Component {\r\n    static propTypes = {\r\n        user: PropTypes.object,\r\n        show: PropTypes.bool.isRequired,\r\n        onModalSubmit: PropTypes.func,\r\n        onModalDismissed: PropTypes.func,\r\n        passwordConfig: PropTypes.object,\r\n    };\r\n\r\n    static defaultProps = {\r\n        show: false,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: null,\r\n        };\r\n    }\r\n\r\n    doSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.refs.email) {\r\n            const email = this.refs.email.value;\r\n            if (!isEmail(email)) {\r\n                const errMsg = (\r\n                    <FormattedMessage\r\n                        id='user.settings.general.validEmail'\r\n                        defaultMessage='Please enter a valid email address.'\r\n                    />\r\n                );\r\n                this.setState({error: errMsg});\r\n                return;\r\n            }\r\n        }\r\n\r\n        const user = Object.assign({}, this.props.user);\r\n        const email = this.refs.email.value.trim().toLowerCase();\r\n        user.email = email;\r\n\r\n        this.setState({error: null});\r\n\r\n        adminResetEmail(\r\n            user,\r\n            () => {\r\n                this.props.onModalSubmit(this.props.user);\r\n            },\r\n            (err) => {\r\n                const serverError = err.message ? err.message : err;\r\n                this.setState({error: serverError});\r\n            }\r\n        );\r\n    }\r\n\r\n    doCancel = () => {\r\n        this.setState({error: null});\r\n        this.props.onModalDismissed();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.user) {\r\n            return <div/>;\r\n        }\r\n\r\n        let urlClass = 'input-group input-group--limit';\r\n        let errorMsg = null;\r\n        if (this.state.error) {\r\n            urlClass += ' has-error';\r\n            errorMsg = <div className='has-error'><p className='input__help error'>{this.state.error}</p></div>;\r\n        }\r\n\r\n        const title = (\r\n            <FormattedMessage\r\n                id='admin.reset_email.titleReset'\r\n                defaultMessage='Update Email'\r\n            />\r\n        );\r\n\r\n        return (\r\n            <Modal\r\n                show={this.props.show}\r\n                onHide={this.doCancel}\r\n                role='dialog'\r\n                aria-labelledby='resetEmailModalLabel'\r\n            >\r\n                <Modal.Header closeButton={true}>\r\n                    <Modal.Title\r\n                        componentClass='h1'\r\n                        id='resetEmailModalLabel'\r\n                    >\r\n                        {title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <form\r\n                    role='form'\r\n                    className='form-horizontal'\r\n                >\r\n                    <Modal.Body>\r\n                        <div className='form-group'>\r\n                            <div className='col-sm-10'>\r\n                                <div className={urlClass}>\r\n                                    <span\r\n                                        data-toggle='tooltip'\r\n                                        title='New Email'\r\n                                        className='input-group-addon email__group-addon'\r\n                                    >\r\n                                        <FormattedMessage\r\n                                            id='admin.reset_email.newEmail'\r\n                                            defaultMessage='New Email'\r\n                                        />\r\n                                    </span>\r\n                                    <input\r\n                                        type='email'\r\n                                        ref='email'\r\n                                        className='form-control'\r\n                                        maxLength='128'\r\n                                        autoFocus={true}\r\n                                        tabIndex='1'\r\n                                    />\r\n                                </div>\r\n                                {errorMsg}\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button\r\n                            type='button'\r\n                            className='btn btn-link'\r\n                            onClick={this.doCancel}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='admin.reset_email.cancel'\r\n                                defaultMessage='Cancel'\r\n                            />\r\n                        </button>\r\n                        <button\r\n                            onClick={this.doSubmit}\r\n                            type='submit'\r\n                            className='btn btn-primary'\r\n                            tabIndex='2'\r\n                        >\r\n                            <FormattedMessage\r\n                                id='admin.reset_email.reset'\r\n                                defaultMessage='Reset'\r\n                            />\r\n                        </button>\r\n                    </Modal.Footer>\r\n                </form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Client4} from 'mattermost-redux/client';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport ProfilePicture from 'components/profile_picture.jsx';\r\nimport BotBadge from 'components/widgets/badges/bot_badge.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nexport default class UserListRowWithError extends React.Component {\r\n    static propTypes = {\r\n        user: PropTypes.object.isRequired,\r\n        status: PropTypes.string,\r\n        extraInfo: PropTypes.arrayOf(PropTypes.object),\r\n        actions: PropTypes.arrayOf(PropTypes.func),\r\n        actionProps: PropTypes.object,\r\n        actionUserProps: PropTypes.object,\r\n        index: PropTypes.number,\r\n        totalUsers: PropTypes.number,\r\n        userCount: PropTypes.number,\r\n    };\r\n\r\n    static defaultProps = {\r\n        extraInfo: [],\r\n        actions: [],\r\n        actionProps: {},\r\n        actionUserProps: {},\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n        this.onError = this.onError.bind(this);\r\n    }\r\n\r\n    onError(errorObj) {\r\n        this.setState({\r\n            error: errorObj,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let buttons = null;\r\n        if (this.props.actions) {\r\n            buttons = this.props.actions.map((Action, index) => {\r\n                return (\r\n                    <Action\r\n                        key={index.toString()}\r\n                        user={this.props.user}\r\n                        index={this.props.index}\r\n                        totalUsers={this.props.totalUsers}\r\n                        {...this.props.actionProps}\r\n                        {...this.props.actionUserProps}\r\n                        onError={this.onError}\r\n                    />\r\n                );\r\n            });\r\n        }\r\n\r\n        // QUICK HACK, NEEDS A PROP FOR TOGGLING STATUS\r\n        let email = this.props.user.email;\r\n        let emailStyle = 'more-modal__description';\r\n        let status;\r\n        if (this.props.user.is_bot) {\r\n            email = null;\r\n        } else if (this.props.extraInfo && this.props.extraInfo.length > 0) {\r\n            email = (\r\n                <FormattedMarkdownMessage\r\n                    id='admin.user_item.emailTitle'\r\n                    defaultMessage='**Email:** {email}'\r\n                    values={{\r\n                        email: this.props.user.email,\r\n                    }}\r\n                />\r\n            );\r\n            emailStyle = '';\r\n        } else if (this.props.user.status) {\r\n            status = this.props.user.status;\r\n        } else {\r\n            status = this.props.status;\r\n        }\r\n\r\n        if (this.props.user.is_bot) {\r\n            status = null;\r\n        }\r\n\r\n        let userCountID = null;\r\n        let userCountEmail = null;\r\n        if (this.props.userCount >= 0) {\r\n            userCountID = Utils.createSafeId('userListRowName' + this.props.userCount);\r\n            userCountEmail = Utils.createSafeId('userListRowEmail' + this.props.userCount);\r\n        }\r\n\r\n        let error = null;\r\n        if (this.state.error) {\r\n            error = (\r\n                <div className='has-error'>\r\n                    <label className='has-error control-label'>{this.state.error.message}</label>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div\r\n                key={this.props.user.id}\r\n                className='more-modal__row'\r\n            >\r\n                <ProfilePicture\r\n                    src={Client4.getProfilePictureUrl(this.props.user.id, this.props.user.last_picture_update)}\r\n                    status={status}\r\n                    width='32'\r\n                    height='32'\r\n                />\r\n                <div className='more-modal__right'>\r\n                    <div className='more-modal__top'>\r\n                        <div className='more-modal__details'>\r\n                            <div\r\n                                id={userCountID}\r\n                                className='more-modal__name'\r\n                            >\r\n                                {Utils.displayEntireNameForUser(this.props.user)}\r\n                                <BotBadge\r\n                                    className='badge-admin'\r\n                                    show={Boolean(this.props.user.is_bot)}\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                id={userCountEmail}\r\n                                className={emailStyle}\r\n                            >\r\n                                {email}\r\n                            </div>\r\n                            {this.props.extraInfo}\r\n                        </div>\r\n                        <div\r\n                            className='more-modal__actions'\r\n                        >\r\n                            {buttons}\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className='more-modal__bottom'\r\n                    >\r\n                        {error}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getStatusForUserId} from 'mattermost-redux/selectors/entities/users';\r\n\r\nimport UserListRow from './user_list_row_with_error.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const user = ownProps.user || {};\r\n    return {\r\n        status: getStatusForUserId(state, user.id),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserListRow);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\r\nimport {Permissions} from 'mattermost-redux/constants';\r\n\r\nimport {adminResetMfa} from 'actions/admin_actions.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\nimport {Constants} from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport {t} from 'utils/i18n';\r\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\r\n\r\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\r\nimport Menu from 'components/widgets/menu/menu';\r\nimport MenuItemAction from 'components/widgets/menu/menu_items/menu_item_action';\r\n\r\nconst ROWS_FROM_BOTTOM_TO_OPEN_UP = 5;\r\n\r\nexport default class SystemUsersDropdown extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * User to manage with dropdown\r\n         */\r\n        user: PropTypes.object.isRequired,\r\n\r\n        /**\r\n         * Whether MFA is licensed and enabled.\r\n         */\r\n        mfaEnabled: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * Whether or not user access tokens are enabled.\r\n         */\r\n        enableUserAccessTokens: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * Whether or not the experimental authentication transfer is enabled.\r\n         */\r\n        experimentalEnableAuthenticationTransfer: PropTypes.bool.isRequired,\r\n\r\n        /*\r\n         * Function to open password reset, takes user as an argument\r\n         */\r\n        doPasswordReset: PropTypes.func.isRequired,\r\n\r\n        /*\r\n         * Function to open email reset, takes user as an argument\r\n         */\r\n        doEmailReset: PropTypes.func.isRequired,\r\n\r\n        /*\r\n         * Function to open manage teams, takes user as an argument\r\n         */\r\n        doManageTeams: PropTypes.func.isRequired,\r\n\r\n        /*\r\n         * Function to open manage roles, takes user as an argument\r\n         */\r\n        doManageRoles: PropTypes.func.isRequired,\r\n\r\n        /*\r\n         * Function to open manage tokens, takes user as an argument\r\n         */\r\n        doManageTokens: PropTypes.func.isRequired,\r\n\r\n        /*\r\n         * The function to call when an error occurs\r\n         */\r\n        onError: PropTypes.func.isRequired,\r\n        currentUser: PropTypes.object.isRequired,\r\n        index: PropTypes.number.isRequired,\r\n        totalUsers: PropTypes.number.isRequired,\r\n        actions: PropTypes.shape({\r\n            updateUserActive: PropTypes.func.isRequired,\r\n            revokeAllSessionsForUser: PropTypes.func.isRequired,\r\n            loadBots: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n        config: PropTypes.object.isRequired,\r\n        bots: PropTypes.object.isRequired,\r\n\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showDeactivateMemberModal: false,\r\n            showRevokeSessionsModal: false,\r\n            user: null,\r\n            role: null,\r\n        };\r\n    }\r\n\r\n    handleMakeActive = (e) => {\r\n        e.preventDefault();\r\n        this.props.actions.updateUserActive(this.props.user.id, true).\r\n            then(this.onUpdateActiveResult);\r\n    }\r\n\r\n    handleManageTeams = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.doManageTeams(this.props.user);\r\n    }\r\n\r\n    handleManageRoles = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.doManageRoles(this.props.user);\r\n    }\r\n\r\n    handleManageTokens = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.doManageTokens(this.props.user);\r\n    }\r\n\r\n    handleResetPassword = (e) => {\r\n        e.preventDefault();\r\n        this.props.doPasswordReset(this.props.user);\r\n    }\r\n\r\n    handleResetEmail = (e) => {\r\n        e.preventDefault();\r\n        this.props.doEmailReset(this.props.user);\r\n    }\r\n\r\n    handleResetMfa = (e) => {\r\n        e.preventDefault();\r\n        adminResetMfa(this.props.user.id, null, this.props.onError);\r\n    }\r\n\r\n    handleShowDeactivateMemberModal = async (e) => {\r\n        e.preventDefault();\r\n        if (this.shouldDisableBotsWhenOwnerIsDeactivated()) {\r\n            const {data} = await this.props.actions.loadBots(\r\n                Constants.Integrations.START_PAGE_NUM,\r\n                Constants.Integrations.PAGE_SIZE\r\n            );\r\n            if (data) {\r\n                this.setState({loading: false, showDeactivateMemberModal: true});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleDeactivateMember = () => {\r\n        this.props.actions.updateUserActive(this.props.user.id, false).\r\n            then(this.onUpdateActiveResult);\r\n        this.setState({showDeactivateMemberModal: false});\r\n    }\r\n\r\n    onUpdateActiveResult = ({error}) => {\r\n        if (error) {\r\n            this.props.onError({id: error.server_error_id, ...error});\r\n        }\r\n    }\r\n\r\n    handleDeactivateCancel = () => {\r\n        this.setState({showDeactivateMemberModal: false});\r\n    }\r\n\r\n    renderDeactivateMemberModal = () => {\r\n        const user = this.props.user;\r\n        const title = (\r\n            <FormattedMessage\r\n                id='deactivate_member_modal.title'\r\n                defaultMessage='Deactivate {username}'\r\n                values={{\r\n                    username: this.props.user.username,\r\n                }}\r\n            />\r\n        );\r\n\r\n        const defaultMessage = (\r\n            <FormattedMarkdownMessage\r\n                id='deactivate_member_modal.desc'\r\n                defaultMessage='This action deactivates {username}. They will be logged out and not have access to any teams or channels on this system.\\n'\r\n                values={{\r\n                    username: user.username,\r\n                }}\r\n            />);\r\n\r\n        let warning;\r\n        if (user.auth_service !== '' && user.auth_service !== Constants.EMAIL_SERVICE) {\r\n            warning = (\r\n                <strong>\r\n                    <br/>\r\n                    <br/>\r\n                    <FormattedMessage\r\n                        id='deactivate_member_modal.sso_warning'\r\n                        defaultMessage='You must also deactivate this user in the SSO provider or they will be reactivated on next login or sync.'\r\n                    />\r\n                </strong>\r\n            );\r\n        }\r\n\r\n        const confirmationMessage = (\r\n            <FormattedMarkdownMessage\r\n                id='deactivate_member_modal.desc.confirm'\r\n                defaultMessage='Are you sure you want to deactivate {username}?'\r\n                values={{\r\n                    username: user.username,\r\n                }}\r\n            />);\r\n        let messageForUsersWithBotAccounts;\r\n        if (this.shouldDisableBotsWhenOwnerIsDeactivated()) {\r\n            for (const bot of Object.values(this.props.bots)) {\r\n                if (bot.owner_id === user.id) {\r\n                    messageForUsersWithBotAccounts = (\r\n                        <FormattedMarkdownMessage\r\n                            id='deactivate_member_modal.desc.for_users_with_bot_accounts'\r\n                            defaultMessage='This action deactivates {username}.\\n \\n * They will be logged out and not have access to any teams or channels on this system.\\n * Bot accounts they manage will be disabled along with their integrations. To enable them again, go to Integrations > Bot Accounts. [Learn more about bot accounts](!https://mattermost.com/pl/default-bot-accounts).\\n \\n \\n'\r\n                            values={{\r\n                                username: user.username,\r\n                            }}\r\n                        />);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const message = (\r\n            <div>\r\n                {messageForUsersWithBotAccounts || defaultMessage}\r\n                {confirmationMessage}\r\n                {warning}\r\n            </div>\r\n        );\r\n\r\n        const confirmButtonClass = 'btn btn-danger';\r\n        const deactivateMemberButton = (\r\n            <FormattedMessage\r\n                id='deactivate_member_modal.deactivate'\r\n                defaultMessage='Deactivate'\r\n            />\r\n        );\r\n\r\n        return (\r\n            <ConfirmModal\r\n                show={this.state.showDeactivateMemberModal}\r\n                title={title}\r\n                message={message}\r\n                confirmButtonClass={confirmButtonClass}\r\n                confirmButtonText={deactivateMemberButton}\r\n                onConfirm={this.handleDeactivateMember}\r\n                onCancel={this.handleDeactivateCancel}\r\n            />\r\n        );\r\n    }\r\n\r\n    shouldDisableBotsWhenOwnerIsDeactivated() {\r\n        return this.props.config &&\r\n            this.props.config.ServiceSettings &&\r\n            this.props.config.ServiceSettings.DisableBotsWhenOwnerIsDeactivated;\r\n    }\r\n\r\n    handleShowRevokeSessionsModal = (e) => {\r\n        e.preventDefault();\r\n        this.setState({showRevokeSessionsModal: true});\r\n    }\r\n\r\n    handleRevokeSessions = async () => {\r\n        const me = this.props.currentUser;\r\n\r\n        const {data, error} = await this.props.actions.revokeAllSessionsForUser(this.props.user.id);\r\n        if (data && this.props.user.id === me.id) {\r\n            emitUserLoggedOutEvent();\r\n        } else if (error) {\r\n            this.props.onError(error);\r\n        }\r\n\r\n        this.setState({showRevokeSessionsModal: false});\r\n    }\r\n\r\n    handleRevokeSessionsCancel = () => {\r\n        this.setState({showRevokeSessionsModal: false});\r\n    }\r\n\r\n    renderRevokeSessionsModal = () => {\r\n        const title = (\r\n            <FormattedMessage\r\n                id='revoke_user_sessions_modal.title'\r\n                defaultMessage='Revoke Sessions for {username}'\r\n                values={{\r\n                    username: this.props.user.username,\r\n                }}\r\n            />\r\n        );\r\n\r\n        const message = (\r\n            <FormattedMessage\r\n                id='revoke_user_sessions_modal.desc'\r\n                defaultMessage='This action revokes all sessions for {username}. They will be logged out from all devices. Are you sure you want to revoke all sessions for {username}?'\r\n                values={{\r\n                    username: this.props.user.username,\r\n                }}\r\n            />\r\n        );\r\n\r\n        const revokeUserButtonButton = (\r\n            <FormattedMessage\r\n                id='revoke_user_sessions_modal.revoke'\r\n                defaultMessage='Revoke'\r\n            />\r\n        );\r\n\r\n        return (\r\n            <ConfirmModal\r\n                show={this.state.showRevokeSessionsModal}\r\n                title={title}\r\n                message={message}\r\n                confirmButtonClass='btn btn-danger'\r\n                confirmButtonText={revokeUserButtonButton}\r\n                onConfirm={this.handleRevokeSessions}\r\n                onCancel={this.handleRevokeSessionsCancel}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderAccessToken = () => {\r\n        const userAccessTokensEnabled = this.props.enableUserAccessTokens;\r\n        if (!userAccessTokensEnabled) {\r\n            return null;\r\n        }\r\n\r\n        const user = this.props.user;\r\n        const hasPostAllRole = UserUtils.hasPostAllRole(user.roles);\r\n        const hasPostAllPublicRole = UserUtils.hasPostAllPublicRole(user.roles);\r\n        const hasUserAccessTokenRole = UserUtils.hasUserAccessTokenRole(user.roles);\r\n        const isSystemAdmin = UserUtils.isSystemAdmin(user.roles);\r\n\r\n        let messageId = '';\r\n        if (hasUserAccessTokenRole || isSystemAdmin) {\r\n            if (hasPostAllRole) {\r\n                messageId = t('admin.user_item.userAccessTokenPostAll');\r\n            } else if (hasPostAllPublicRole) {\r\n                messageId = t('admin.user_item.userAccessTokenPostAllPublic');\r\n            } else {\r\n                messageId = t('admin.user_item.userAccessTokenYes');\r\n            }\r\n        }\r\n\r\n        if (!messageId) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className='light margin-top half'>\r\n                <FormattedMessage\r\n                    key='admin.user_item.userAccessToken'\r\n                    id={messageId}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.user;\r\n        if (!user) {\r\n            return <div/>;\r\n        }\r\n\r\n        let currentRoles = (\r\n            <FormattedMessage\r\n                id='admin.user_item.member'\r\n                defaultMessage='Member'\r\n            />\r\n        );\r\n\r\n        if (user.roles.length > 0 && Utils.isSystemAdmin(user.roles)) {\r\n            currentRoles = (\r\n                <FormattedMessage\r\n                    id='team_members_dropdown.systemAdmin'\r\n                    defaultMessage='System Admin'\r\n                />\r\n            );\r\n        }\r\n\r\n        let showMakeActive = false;\r\n        let showMakeNotActive = !Utils.isSystemAdmin(user.roles);\r\n        let showManageTeams = true;\r\n        let showRevokeSessions = true;\r\n        const showMfaReset = this.props.mfaEnabled && Boolean(user.mfa_active);\r\n\r\n        if (user.delete_at > 0) {\r\n            currentRoles = (\r\n                <FormattedMessage\r\n                    id='admin.user_item.inactive'\r\n                    defaultMessage='Inactive'\r\n                />\r\n            );\r\n            showMakeActive = true;\r\n            showMakeNotActive = false;\r\n            showManageTeams = false;\r\n            showRevokeSessions = false;\r\n        }\r\n\r\n        let disableActivationToggle = false;\r\n        if (user.auth_service === Constants.LDAP_SERVICE) {\r\n            disableActivationToggle = true;\r\n        }\r\n\r\n        const deactivateMemberModal = this.renderDeactivateMemberModal();\r\n        const revokeSessionsModal = this.renderRevokeSessionsModal();\r\n\r\n        const {index, totalUsers} = this.props;\r\n        let openUp = false;\r\n        if (totalUsers > ROWS_FROM_BOTTOM_TO_OPEN_UP && totalUsers - index <= ROWS_FROM_BOTTOM_TO_OPEN_UP) {\r\n            openUp = true;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {deactivateMemberModal}\r\n                {revokeSessionsModal}\r\n                <MenuWrapper>\r\n                    <div className='text-right'>\r\n                        <a>\r\n                            <span>{currentRoles} </span>\r\n                            <span className='caret'/>\r\n                        </a>\r\n                        {this.renderAccessToken()}\r\n                    </div>\r\n                    <div>\r\n                        <Menu\r\n                            openLeft={true}\r\n                            openUp={openUp}\r\n                            ariaLabel={Utils.localizeMessage('admin.user_item.menuAriaLabel', 'User Actions Menu')}\r\n                        >\r\n                            <MenuItemAction\r\n                                show={showMakeActive}\r\n                                onClick={this.handleMakeActive}\r\n                                text={Utils.localizeMessage('admin.user_item.makeActive', 'Activate')}\r\n                                disabled={disableActivationToggle}\r\n                            />\r\n                            <MenuItemAction\r\n                                show={showMakeNotActive}\r\n                                onClick={this.handleShowDeactivateMemberModal}\r\n                                text={Utils.localizeMessage('admin.user_item.makeInactive', 'Deactivate')}\r\n                                disabled={disableActivationToggle}\r\n                            />\r\n                            <MenuItemAction\r\n                                onClick={this.handleManageRoles}\r\n                                text={Utils.localizeMessage('admin.user_item.manageRoles', 'Manage Roles')}\r\n                            />\r\n                            <MenuItemAction\r\n                                show={showManageTeams}\r\n                                onClick={this.handleManageTeams}\r\n                                text={Utils.localizeMessage('admin.user_item.manageTeams', 'Manage Teams')}\r\n                            />\r\n                            <MenuItemAction\r\n                                show={this.props.enableUserAccessTokens}\r\n                                onClick={this.handleManageTokens}\r\n                                text={Utils.localizeMessage('admin.user_item.manageTokens', 'Manage Tokens')}\r\n                            />\r\n                            <MenuItemAction\r\n                                show={showMfaReset}\r\n                                onClick={this.handleResetMfa}\r\n                                text={Utils.localizeMessage('admin.user_item.resetMfa', 'Remove MFA')}\r\n                            />\r\n                            <MenuItemAction\r\n                                show={Boolean(user.auth_service) && this.props.experimentalEnableAuthenticationTransfer}\r\n                                onClick={this.handleResetPassword}\r\n                                text={Utils.localizeMessage('admin.user_item.switchToEmail', 'Switch to Email/Password')}\r\n                            />\r\n                            <MenuItemAction\r\n                                show={!user.auth_service}\r\n                                onClick={this.handleResetPassword}\r\n                                text={Utils.localizeMessage('admin.user_item.resetPwd', 'Reset Password')}\r\n                            />\r\n                            <MenuItemAction\r\n                                show={!user.auth_service && user.id !== this.state.userId}\r\n                                onClick={this.handleResetEmail}\r\n                                text={Utils.localizeMessage('admin.user_item.resetEmail', 'Update Email')}\r\n                            />\r\n                            <SystemPermissionGate permissions={[Permissions.REVOKE_USER_ACCESS_TOKEN]}>\r\n                                <MenuItemAction\r\n                                    show={showRevokeSessions}\r\n                                    onClick={this.handleShowRevokeSessionsModal}\r\n                                    text={Utils.localizeMessage('admin.user_item.revokeSessions', 'Revoke Sessions')}\r\n                                />\r\n                            </SystemPermissionGate>\r\n                        </Menu>\r\n                    </div>\r\n                </MenuWrapper>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {updateUserActive, revokeAllSessionsForUser} from 'mattermost-redux/actions/users';\r\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\r\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\r\nimport {loadBots} from 'mattermost-redux/actions/bots';\r\n\r\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\r\n\r\nimport SystemUsersDropdown from './system_users_dropdown.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const bots = getBotAccounts(state);\r\n    return {\r\n        config: Selectors.getConfig(state),\r\n        currentUser: getCurrentUser(state),\r\n        bots,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            updateUserActive,\r\n            revokeAllSessionsForUser,\r\n            loadBots,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUsersDropdown);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {Constants} from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport ManageRolesModal from 'components/admin_console/manage_roles_modal';\r\nimport ManageTeamsModal from 'components/admin_console/manage_teams_modal';\r\nimport ManageTokensModal from 'components/admin_console/manage_tokens_modal';\r\nimport ResetPasswordModal from 'components/admin_console/reset_password_modal';\r\nimport ResetEmailModal from 'components/admin_console/reset_email_modal/reset_email_modal.jsx';\r\nimport SearchableUserList from 'components/searchable_user_list/searchable_user_list.jsx';\r\nimport UserListRowWithError from 'components/user_list_row_with_error';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nimport SystemUsersDropdown from '../system_users_dropdown';\r\n\r\nexport default class SystemUsersList extends React.Component {\r\n    static propTypes = {\r\n        users: PropTypes.arrayOf(PropTypes.object),\r\n        usersPerPage: PropTypes.number,\r\n        total: PropTypes.number,\r\n        nextPage: PropTypes.func,\r\n        search: PropTypes.func.isRequired,\r\n        focusOnMount: PropTypes.bool,\r\n        renderFilterRow: PropTypes.func,\r\n\r\n        teamId: PropTypes.string.isRequired,\r\n        filter: PropTypes.string.isRequired,\r\n        term: PropTypes.string.isRequired,\r\n        onTermChange: PropTypes.func.isRequired,\r\n\r\n        /**\r\n         * Whether MFA is licensed and enabled.\r\n         */\r\n        mfaEnabled: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * Whether or not user access tokens are enabled.\r\n         */\r\n        enableUserAccessTokens: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * Whether or not the experimental authentication transfer is enabled.\r\n         */\r\n        experimentalEnableAuthenticationTransfer: PropTypes.bool.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n            getUser: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            page: 0,\r\n\r\n            showManageTeamsModal: false,\r\n            showManageRolesModal: false,\r\n            showManageTokensModal: false,\r\n            showPasswordModal: false,\r\n            showEmailModal: false,\r\n            user: null,\r\n        };\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\r\n        if (nextProps.teamId !== this.props.teamId) {\r\n            this.setState({page: 0});\r\n        }\r\n    }\r\n\r\n    nextPage = () => {\r\n        this.setState({page: this.state.page + 1});\r\n\r\n        this.props.nextPage(this.state.page + 1);\r\n    }\r\n\r\n    previousPage = () => {\r\n        this.setState({page: this.state.page - 1});\r\n    }\r\n\r\n    search = (term) => {\r\n        this.props.search(term);\r\n\r\n        if (term !== '') {\r\n            this.setState({page: 0});\r\n        }\r\n    }\r\n\r\n    doManageTeams = (user) => {\r\n        this.setState({\r\n            showManageTeamsModal: true,\r\n            user,\r\n        });\r\n    }\r\n\r\n    doManageRoles = (user) => {\r\n        this.setState({\r\n            showManageRolesModal: true,\r\n            user,\r\n        });\r\n    }\r\n\r\n    doManageTokens = (user) => {\r\n        this.setState({\r\n            showManageTokensModal: true,\r\n            user,\r\n        });\r\n    }\r\n\r\n    doManageTeamsDismiss = () => {\r\n        this.setState({\r\n            showManageTeamsModal: false,\r\n            user: null,\r\n        });\r\n    }\r\n\r\n    doManageRolesDismiss = () => {\r\n        this.setState({\r\n            showManageRolesModal: false,\r\n            user: null,\r\n        });\r\n    }\r\n\r\n    doManageTokensDismiss = () => {\r\n        this.setState({\r\n            showManageTokensModal: false,\r\n            user: null,\r\n        });\r\n    }\r\n\r\n    doPasswordReset = (user) => {\r\n        this.setState({\r\n            showPasswordModal: true,\r\n            user,\r\n        });\r\n    }\r\n\r\n    doPasswordResetDismiss = () => {\r\n        this.setState({\r\n            showPasswordModal: false,\r\n            user: null,\r\n        });\r\n    }\r\n\r\n    doPasswordResetSubmit = (user) => {\r\n        this.props.actions.getUser(user.id);\r\n\r\n        this.setState({\r\n            showPasswordModal: false,\r\n            user: null,\r\n        });\r\n    }\r\n\r\n    doEmailReset = (user) => {\r\n        this.setState({\r\n            showEmailModal: true,\r\n            user,\r\n        });\r\n    }\r\n\r\n    doEmailResetDismiss = () => {\r\n        this.setState({\r\n            showEmailModal: false,\r\n            user: null,\r\n        });\r\n    }\r\n\r\n    doEmailResetSubmit = (user) => {\r\n        this.props.actions.getUser(user.id);\r\n\r\n        this.setState({\r\n            showEmailModal: false,\r\n            user: null,\r\n        });\r\n    }\r\n\r\n    getInfoForUser(user) {\r\n        const info = [];\r\n\r\n        if (user.auth_service) {\r\n            let service;\r\n            if (user.auth_service === Constants.LDAP_SERVICE || user.auth_service === Constants.SAML_SERVICE) {\r\n                service = user.auth_service.toUpperCase();\r\n            } else {\r\n                service = Utils.toTitleCase(user.auth_service);\r\n            }\r\n\r\n            info.push(\r\n                <FormattedMarkdownMessage\r\n                    key='admin.user_item.authServiceNotEmail'\r\n                    id='admin.user_item.authServiceNotEmail'\r\n                    defaultMessage='**Sign-in Method:** {service}'\r\n                    values={{\r\n                        service,\r\n                    }}\r\n                />\r\n            );\r\n        } else {\r\n            info.push(\r\n                <FormattedMarkdownMessage\r\n                    key='admin.user_item.authServiceEmail'\r\n                    id='admin.user_item.authServiceEmail'\r\n                    defaultMessage='**Sign-in Method:** Email'\r\n                />\r\n            );\r\n        }\r\n\r\n        if (this.props.mfaEnabled) {\r\n            info.push(', ');\r\n\r\n            if (user.mfa_active) {\r\n                info.push(\r\n                    <FormattedMarkdownMessage\r\n                        key='admin.user_item.mfaYes'\r\n                        id='admin.user_item.mfaYes'\r\n                        defaultMessage='**MFA**: Yes'\r\n                    />\r\n                );\r\n            } else {\r\n                info.push(\r\n                    <FormattedMarkdownMessage\r\n                        key='admin.user_item.mfaNo'\r\n                        id='admin.user_item.mfaNo'\r\n                        defaultMessage='**MFA**: No'\r\n                    />\r\n                );\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n\r\n    renderCount(count, total, startCount, endCount, isSearch) {\r\n        if (total) {\r\n            if (isSearch) {\r\n                return (\r\n                    <FormattedMessage\r\n                        id='system_users_list.countSearch'\r\n                        defaultMessage='{count, number} {count, plural, one {user} other {users}} of {total, number} total'\r\n                        values={{\r\n                            count,\r\n                            total,\r\n                        }}\r\n                    />\r\n                );\r\n            } else if (startCount !== 0 || endCount !== total) {\r\n                return (\r\n                    <FormattedMessage\r\n                        id='system_users_list.countPage'\r\n                        defaultMessage='{startCount, number} - {endCount, number} {count, plural, one {user} other {users}} of {total, number} total'\r\n                        values={{\r\n                            count,\r\n                            startCount: startCount + 1,\r\n                            endCount,\r\n                            total,\r\n                        }}\r\n                    />\r\n                );\r\n            }\r\n\r\n            return (\r\n                <FormattedMessage\r\n                    id='system_users_list.count'\r\n                    defaultMessage='{count, number} {count, plural, one {user} other {users}}'\r\n                    values={{\r\n                        count,\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const extraInfo = {};\r\n        if (this.props.users) {\r\n            for (const user of this.props.users) {\r\n                extraInfo[user.id] = this.getInfoForUser(user);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <SearchableUserList\r\n                    {...this.props}\r\n                    renderCount={this.renderCount}\r\n                    extraInfo={extraInfo}\r\n                    actions={[SystemUsersDropdown]}\r\n                    actionProps={{\r\n                        mfaEnabled: this.props.mfaEnabled,\r\n                        enableUserAccessTokens: this.props.enableUserAccessTokens,\r\n                        experimentalEnableAuthenticationTransfer: this.props.experimentalEnableAuthenticationTransfer,\r\n                        doPasswordReset: this.doPasswordReset,\r\n                        doEmailReset: this.doEmailReset,\r\n                        doManageTeams: this.doManageTeams,\r\n                        doManageRoles: this.doManageRoles,\r\n                        doManageTokens: this.doManageTokens,\r\n                    }}\r\n                    nextPage={this.nextPage}\r\n                    previousPage={this.previousPage}\r\n                    search={this.search}\r\n                    page={this.state.page}\r\n                    term={this.props.term}\r\n                    onTermChange={this.props.onTermChange}\r\n                    rowComponentType={UserListRowWithError}\r\n                />\r\n                <ManageTeamsModal\r\n                    user={this.state.user}\r\n                    show={this.state.showManageTeamsModal}\r\n                    onModalDismissed={this.doManageTeamsDismiss}\r\n                />\r\n                <ManageRolesModal\r\n                    user={this.state.user}\r\n                    show={this.state.showManageRolesModal}\r\n                    onModalDismissed={this.doManageRolesDismiss}\r\n                />\r\n                <ManageTokensModal\r\n                    user={this.state.user}\r\n                    show={this.state.showManageTokensModal}\r\n                    onModalDismissed={this.doManageTokensDismiss}\r\n                />\r\n                <ResetPasswordModal\r\n                    user={this.state.user}\r\n                    show={this.state.showPasswordModal}\r\n                    onModalSubmit={this.doPasswordResetSubmit}\r\n                    onModalDismissed={this.doPasswordResetDismiss}\r\n                />\r\n                <ResetEmailModal\r\n                    user={this.state.user}\r\n                    show={this.state.showEmailModal}\r\n                    onModalSubmit={this.doEmailResetSubmit}\r\n                    onModalDismissed={this.doEmailResetDismiss}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\nimport {UserSearchOptions, SearchUserOptionsFilter} from 'utils/constants.jsx';\r\n\r\nexport function getFilterOptions(filter) {\r\n    const options = {};\r\n    if (filter === SearchUserOptionsFilter.SYSTEM_ADMIN) {\r\n        options[UserSearchOptions.ROLE] = SearchUserOptionsFilter.SYSTEM_ADMIN;\r\n    } else if (filter === SearchUserOptionsFilter.ALLOW_INACTIVE) {\r\n        options[SearchUserOptionsFilter.ALLOW_INACTIVE] = true;\r\n    }\r\n    return options;\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {getUser, getProfiles, getProfilesInTeam, getProfilesWithoutTeam, searchProfiles, searchProfilesInTeam} from 'mattermost-redux/selectors/entities/users';\r\n\r\nimport {getFilterOptions} from 'utils/get_users';\r\n\r\nconst ALL_USERS = '';\r\nconst NO_TEAM = 'no_team';\r\nconst USER_ID_LENGTH = 26;\r\n\r\nexport function getUsers(state, loading, teamId, term, filter) {\r\n    if (loading) {\r\n        // Show no users while loading.\r\n        return [];\r\n    }\r\n    const filters = getFilterOptions(filter);\r\n    if (term) {\r\n        let users = [];\r\n        if (teamId) {\r\n            users = searchProfilesInTeam(state, teamId, term, false, filters);\r\n        } else {\r\n            users = searchProfiles(state, term, false, filters);\r\n        }\r\n\r\n        if (users.length === 0 && term.length === USER_ID_LENGTH) {\r\n            const user = getUser(state, term);\r\n            if (user) {\r\n                users = [user];\r\n            }\r\n        }\r\n\r\n        return users;\r\n    }\r\n\r\n    if (teamId === ALL_USERS) {\r\n        return getProfiles(state, filters);\r\n    } else if (teamId === NO_TEAM) {\r\n        return getProfilesWithoutTeam(state, filters);\r\n    }\r\n\r\n    return getProfilesInTeam(state, teamId, filters);\r\n}\r\n\r\nexport function getNonBotUsers(state, loading, teamId, term, filter) {\r\n    return getUsers(state, loading, teamId, term, filter).filter((user) => {\r\n        return !user.is_bot;\r\n    });\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getUser} from 'mattermost-redux/actions/users';\r\n\r\nimport SystemUsersList from './system_users_list.jsx';\r\nimport {getNonBotUsers} from './selectors.jsx';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const users = getNonBotUsers(state, ownProps.loading, ownProps.teamId, ownProps.term, ownProps.filter);\r\n    return {\r\n        users,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getUser,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUsersList);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {debounce} from 'mattermost-redux/actions/helpers';\r\n\r\nimport {getStandardAnalytics} from 'actions/admin_actions.jsx';\r\nimport {Constants, UserSearchOptions, SearchUserTeamFilter, SearchUserOptionsFilter} from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport {t} from 'utils/i18n.jsx';\r\n\r\nimport LocalizedInput from 'components/localized_input/localized_input';\r\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header.jsx';\r\n\r\nimport SystemUsersList from './list';\r\n\r\nconst USER_ID_LENGTH = 26;\r\nconst USERS_PER_PAGE = 50;\r\n\r\nexport default class SystemUsers extends React.Component {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Array of team objects\r\n         */\r\n        teams: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\r\n        /**\r\n         * Title of the app or site.\r\n         */\r\n        siteName: PropTypes.string,\r\n\r\n        /**\r\n         * Whether or not MFA is licensed and enabled.\r\n         */\r\n        mfaEnabled: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * Whether or not user access tokens are enabled.\r\n         */\r\n        enableUserAccessTokens: PropTypes.bool.isRequired,\r\n\r\n        /**\r\n         * Whether or not the experimental authentication transfer is enabled.\r\n         */\r\n        experimentalEnableAuthenticationTransfer: PropTypes.bool.isRequired,\r\n        totalUsers: PropTypes.number.isRequired,\r\n        searchTerm: PropTypes.string.isRequired,\r\n        teamId: PropTypes.string.isRequired,\r\n        filter: PropTypes.string.isRequired,\r\n        users: PropTypes.object.isRequired,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /*\r\n             * Function to get teams\r\n             */\r\n            getTeams: PropTypes.func.isRequired,\r\n\r\n            /*\r\n             * Function to get statistics for a team\r\n             */\r\n            getTeamStats: PropTypes.func.isRequired,\r\n\r\n            /*\r\n             * Function to get a user\r\n             */\r\n            getUser: PropTypes.func.isRequired,\r\n\r\n            /*\r\n             * Function to get a user access token\r\n             */\r\n            getUserAccessToken: PropTypes.func.isRequired,\r\n            loadProfilesAndTeamMembers: PropTypes.func.isRequired,\r\n            loadProfilesWithoutTeam: PropTypes.func.isRequired,\r\n            getProfiles: PropTypes.func.isRequired,\r\n            setSystemUsersSearch: PropTypes.func.isRequired,\r\n            searchProfiles: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            searching: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadDataForTeam(this.props.teamId, this.props.filter);\r\n        this.props.actions.getTeams(0, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.actions.setSystemUsersSearch('', '', '');\r\n    }\r\n\r\n    loadDataForTeam = async (teamId, filter) => {\r\n        const {\r\n            getProfiles,\r\n            loadProfilesWithoutTeam,\r\n            loadProfilesAndTeamMembers,\r\n            getTeamStats,\r\n        } = this.props.actions;\r\n\r\n        if (this.props.searchTerm) {\r\n            this.search(this.props.searchTerm, teamId, filter);\r\n            return;\r\n        }\r\n\r\n        const options = this.getFilterOptions(filter);\r\n\r\n        if (teamId === SearchUserTeamFilter.ALL_USERS) {\r\n            await Promise.all([\r\n                getProfiles(0, Constants.PROFILE_CHUNK_SIZE, options),\r\n                getStandardAnalytics(),\r\n            ]);\r\n        } else if (teamId === SearchUserTeamFilter.NO_TEAM) {\r\n            await loadProfilesWithoutTeam(0, Constants.PROFILE_CHUNK_SIZE);\r\n        } else {\r\n            await Promise.all([\r\n                loadProfilesAndTeamMembers(0, Constants.PROFILE_CHUNK_SIZE, teamId),\r\n                getTeamStats(teamId),\r\n            ]);\r\n        }\r\n\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    handleTeamChange = (e) => {\r\n        const teamId = e.target.value;\r\n        this.loadDataForTeam(teamId, this.props.filter);\r\n        this.props.actions.setSystemUsersSearch(this.props.searchTerm, teamId, this.props.filter);\r\n    }\r\n\r\n    handleFilterChange = (e) => {\r\n        const filter = e.target.value;\r\n        this.loadDataForTeam(this.props.teamId, filter);\r\n        this.props.actions.setSystemUsersSearch(this.props.searchTerm, this.props.teamId, filter);\r\n    }\r\n\r\n    handleTermChange = (term) => {\r\n        this.props.actions.setSystemUsersSearch(term, this.props.teamId, this.props.filter);\r\n    }\r\n\r\n    nextPage = async (page) => {\r\n        // Paging isn't supported while searching\r\n        const {\r\n            getProfiles,\r\n            loadProfilesWithoutTeam,\r\n            loadProfilesAndTeamMembers,\r\n        } = this.props.actions;\r\n\r\n        if (this.props.teamId === SearchUserTeamFilter.ALL_USERS) {\r\n            await getProfiles(page + 1, USERS_PER_PAGE, {});\r\n        } else if (this.props.teamId === SearchUserTeamFilter.NO_TEAM) {\r\n            await loadProfilesWithoutTeam(page + 1, USERS_PER_PAGE);\r\n        } else {\r\n            await loadProfilesAndTeamMembers(page + 1, USERS_PER_PAGE, this.props.teamId);\r\n        }\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    doSearch = debounce(async (term, teamId, filter = '') => {\r\n        this.setState({loading: true});\r\n\r\n        const options = {\r\n            ...this.getFilterOptions(filter),\r\n            ...teamId && {team_id: teamId},\r\n            ...teamId === SearchUserTeamFilter.NO_TEAM && {\r\n                [UserSearchOptions.WITHOUT_TEAM]: true,\r\n            },\r\n        };\r\n\r\n        const {data: profiles} = await this.props.actions.searchProfiles(term, options);\r\n        if (profiles.length === 0 && term.length === USER_ID_LENGTH) {\r\n            await this.getUserByTokenOrId(term);\r\n        }\r\n\r\n        this.setState({loading: false});\r\n    }, Constants.SEARCH_TIMEOUT_MILLISECONDS, true);\r\n\r\n    getFilterOptions = (filter) => {\r\n        const options = {};\r\n        if (filter === SearchUserOptionsFilter.SYSTEM_ADMIN) {\r\n            options[UserSearchOptions.ROLE] = SearchUserOptionsFilter.SYSTEM_ADMIN;\r\n        } else if (filter === SearchUserOptionsFilter.ALLOW_INACTIVE) {\r\n            options[SearchUserOptionsFilter.ALLOW_INACTIVE] = true;\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getUserById = async (id) => {\r\n        if (this.props.users[id]) {\r\n            this.setState({loading: false});\r\n            return;\r\n        }\r\n\r\n        await this.props.actions.getUser(id);\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    getUserByTokenOrId = async (id) => {\r\n        if (this.props.enableUserAccessTokens) {\r\n            const {data} = await this.props.actions.getUserAccessToken(id);\r\n\r\n            if (data) {\r\n                this.setState({term: data.user_id});\r\n                this.getUserById(data.user_id);\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.getUserById(id);\r\n    }\r\n\r\n    renderFilterRow = (doSearch) => {\r\n        const teams = this.props.teams.map((team) => (\r\n            <option\r\n                key={team.id}\r\n                value={team.id}\r\n            >\r\n                {team.display_name}\r\n            </option>\r\n        ));\r\n\r\n        return (\r\n            <div className='system-users__filter-row'>\r\n                <div className='system-users__filter'>\r\n                    <LocalizedInput\r\n                        id='searchUsers'\r\n                        ref='filter'\r\n                        className='form-control filter-textbox'\r\n                        placeholder={{id: t('filtered_user_list.search'), defaultMessage: 'Search users'}}\r\n                        onInput={doSearch}\r\n                    />\r\n                </div>\r\n                <label>\r\n                    <span className='system-users__team-filter-label'>\r\n                        <FormattedMessage\r\n                            id='filtered_user_list.team'\r\n                            defaultMessage='Team:'\r\n                        />\r\n                    </span>\r\n                    <select\r\n                        className='form-control system-users__team-filter'\r\n                        onChange={this.handleTeamChange}\r\n                        value={this.props.teamId}\r\n                    >\r\n                        <option value={SearchUserTeamFilter.ALL_USERS}>{Utils.localizeMessage('admin.system_users.allUsers', 'All Users')}</option>\r\n                        <option value={SearchUserTeamFilter.NO_TEAM}>{Utils.localizeMessage('admin.system_users.noTeams', 'No Teams')}</option>\r\n                        {teams}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <span className='system-users__filter-label'>\r\n                        <FormattedMessage\r\n                            id='filtered_user_list.userStatus'\r\n                            defaultMessage='User Status:'\r\n                        />\r\n                    </span>\r\n                    <select\r\n                        className='form-control system-users__filter'\r\n                        value={this.props.filter}\r\n                        onChange={this.handleFilterChange}\r\n                    >\r\n                        <option value=''>{Utils.localizeMessage('admin.system_users.allUsers', 'All Users')}</option>\r\n                        <option value={SearchUserOptionsFilter.SYSTEM_ADMIN}>{Utils.localizeMessage('admin.system_users.system_admin', 'System Admin')}</option>\r\n                        <option value={SearchUserOptionsFilter.ALLOW_INACTIVE}>{Utils.localizeMessage('admin.system_users.inactive', 'Inactive')}</option>\r\n                    </select>\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='wrapper--fixed'>\r\n                <FormattedAdminHeader\r\n                    id='admin.system_users.title'\r\n                    defaultMessage='{siteName} Users'\r\n                    values={{\r\n                        siteName: this.props.siteName,\r\n                    }}\r\n                />\r\n\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        <div className='more-modal__list member-list-holder'>\r\n                            <SystemUsersList\r\n                                loading={this.state.loading}\r\n                                renderFilterRow={this.renderFilterRow}\r\n                                search={this.doSearch}\r\n                                nextPage={this.nextPage}\r\n                                usersPerPage={USERS_PER_PAGE}\r\n                                total={this.props.totalUsers}\r\n                                teams={this.props.teams}\r\n                                teamId={this.props.teamId}\r\n                                filter={this.props.filter}\r\n                                term={this.props.searchTerm}\r\n                                onTermChange={this.handleTermChange}\r\n                                mfaEnabled={this.props.mfaEnabled}\r\n                                enableUserAccessTokens={this.props.enableUserAccessTokens}\r\n                                experimentalEnableAuthenticationTransfer={this.props.experimentalEnableAuthenticationTransfer}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getTeams, getTeamStats} from 'mattermost-redux/actions/teams';\r\nimport {\r\n    getUser,\r\n    getUserAccessToken,\r\n    getProfiles,\r\n    searchProfiles,\r\n} from 'mattermost-redux/actions/users';\r\nimport {getTeamsList} from 'mattermost-redux/selectors/entities/teams';\r\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {Stats} from 'mattermost-redux/constants';\r\n\r\nimport {loadProfilesAndTeamMembers, loadProfilesWithoutTeam} from 'actions/user_actions.jsx';\r\n\r\nimport {setSystemUsersSearch} from 'actions/views/search';\r\nimport {SearchUserTeamFilter} from 'utils/constants.jsx';\r\n\r\nimport SystemUsers from './system_users.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n\r\n    const siteName = config.SiteName;\r\n    const mfaEnabled = config.EnableMultifactorAuthentication === 'true';\r\n    const enableUserAccessTokens = config.EnableUserAccessTokens === 'true';\r\n    const experimentalEnableAuthenticationTransfer = config.ExperimentalEnableAuthenticationTransfer === 'true';\r\n\r\n    const search = state.views.search.systemUsersSearch;\r\n    let totalUsers = 0;\r\n    let searchTerm = '';\r\n    let teamId = '';\r\n    let filter = '';\r\n    if (search) {\r\n        searchTerm = search.term || '';\r\n        teamId = search.team || '';\r\n        filter = search.filter || '';\r\n\r\n        if (!teamId || teamId === SearchUserTeamFilter.ALL_USERS) {\r\n            const stats = state.entities.admin.analytics || {[Stats.TOTAL_USERS]: 0, [Stats.TOTAL_INACTIVE_USERS]: 0};\r\n            totalUsers = stats[Stats.TOTAL_USERS] + stats[Stats.TOTAL_INACTIVE_USERS];\r\n        } else if (teamId === SearchUserTeamFilter.NO_TEAM) {\r\n            totalUsers = 0;\r\n        } else {\r\n            const stats = state.entities.teams.stats[teamId] || {total_member_count: 0};\r\n            totalUsers = stats.total_member_count;\r\n        }\r\n    }\r\n\r\n    return {\r\n        teams: getTeamsList(state),\r\n        siteName,\r\n        mfaEnabled,\r\n        totalUsers,\r\n        searchTerm,\r\n        teamId,\r\n        filter,\r\n        enableUserAccessTokens,\r\n        users: getUsers(state),\r\n        experimentalEnableAuthenticationTransfer,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getTeams,\r\n            getTeamStats,\r\n            getUser,\r\n            getUserAccessToken,\r\n            loadProfilesAndTeamMembers,\r\n            setSystemUsersSearch,\r\n            loadProfilesWithoutTeam,\r\n            getProfiles,\r\n            searchProfiles,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUsers);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport NextIcon from 'components/icon/next_icon';\r\n\r\nconst NEXT_BUTTON_TIMEOUT = 500;\r\n\r\nexport default class Logs extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Array of logs to render\r\n         */\r\n        logs: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n        page: PropTypes.number.isRequired,\r\n        perPage: PropTypes.number.isRequired,\r\n        nextPage: PropTypes.func.isRequired,\r\n        previousPage: PropTypes.func.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.logPanel = React.createRef();\r\n\r\n        this.state = {\r\n            nextDisabled: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Scroll Down to get the latest logs\r\n        const node = this.logPanel.current;\r\n        node.scrollTop = node.scrollHeight;\r\n        node.focus();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // Scroll Down to get the latest logs\r\n        const node = this.logPanel.current;\r\n        node.scrollTop = node.scrollHeight;\r\n    }\r\n\r\n    nextPage = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({nextDisabled: true});\r\n        this.nextTimeoutId = setTimeout(() => this.setState({nextDisabled: false}), NEXT_BUTTON_TIMEOUT);\r\n\r\n        this.props.nextPage();\r\n    }\r\n\r\n    previousPage = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.previousPage();\r\n    }\r\n\r\n    render() {\r\n        let content = null;\r\n        let nextButton;\r\n        let previousButton;\r\n\r\n        if (this.props.logs.length >= this.props.perPage) {\r\n            nextButton = (\r\n                <button\r\n                    className='btn btn-default filter-control filter-control__next pull-right'\r\n                    onClick={this.nextPage}\r\n                    disabled={this.state.nextDisabled}\r\n                >\r\n                    <FormattedMessage\r\n                        id='admin.logs.next'\r\n                        defaultMessage='Next'\r\n                    />\r\n                    <NextIcon additionalClassName='margin-left'/>\r\n                </button>\r\n            );\r\n        }\r\n\r\n        if (this.props.page > 0) {\r\n            previousButton = (\r\n                <button\r\n                    className='btn btn-default filter-control filter-control__prev'\r\n                    onClick={this.previousPage}\r\n                >\r\n                    <FormattedMessage\r\n                        id='generic_icons.previous'\r\n                        defaultMessage='Previous Icon'\r\n                    >\r\n                        {(title) => (\r\n                            <i\r\n                                className='fa fa-angle-left'\r\n                                title={title}\r\n                            />\r\n                        )}\r\n                    </FormattedMessage>\r\n                    <FormattedMessage\r\n                        id='admin.logs.prev'\r\n                        defaultMessage='Previous'\r\n                    />\r\n                </button>\r\n            );\r\n        }\r\n\r\n        content = [];\r\n\r\n        for (let i = 0; i < this.props.logs.length; i++) {\r\n            const style = {\r\n                whiteSpace: 'nowrap',\r\n                fontFamily: 'monospace',\r\n            };\r\n\r\n            if (this.props.logs[i].indexOf('[EROR]') > 0) {\r\n                style.color = 'red';\r\n            }\r\n\r\n            content.push(<br key={'br_' + i}/>);\r\n            content.push(\r\n                <span\r\n                    key={'log_' + i}\r\n                    style={style}\r\n                >\r\n                    {this.props.logs[i]}\r\n                </span>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div\r\n                    tabIndex='-1'\r\n                    ref={this.logPanel}\r\n                    className='log__panel'\r\n                >\r\n                    {content}\r\n                </div>\r\n                <div className='padding-top padding-bottom x2 filter-controls'>\r\n                    {previousButton}\r\n                    {nextButton}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\n\r\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header.jsx';\r\n\r\nimport LogList from './log_list.jsx';\r\n\r\nexport default class Logs extends React.Component {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Array of logs to render\r\n         */\r\n        logs: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n        nextPage: PropTypes.func,\r\n\r\n        actions: PropTypes.shape({\r\n\r\n            /*\r\n             * Function to fetch logs\r\n             */\r\n            getLogs: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingLogs: true,\r\n            page: 0,\r\n            perPage: 1000,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.actions.getLogs(this.state.page, this.state.perPage).then(\r\n            () => this.setState({loadingLogs: false})\r\n        );\r\n    }\r\n\r\n    UNSAFE_componentWillUpdate(nextProps, nextState) { // eslint-disable-line camelcase\r\n        if (this.state.page !== nextState.page) {\r\n            this.props.actions.getLogs(nextState.page, nextState.perPage).then(\r\n                () => this.setState({loadingLogs: false})\r\n            );\r\n        }\r\n    }\r\n\r\n    nextPage = () => {\r\n        this.setState({page: this.state.page + 1});\r\n    }\r\n\r\n    previousPage = () => {\r\n        this.setState({page: this.state.page - 1});\r\n    }\r\n\r\n    reload = () => {\r\n        this.setState({loadingLogs: true});\r\n        this.props.actions.getLogs(this.state.page, this.state.perPage).then(\r\n            () => this.setState({loadingLogs: false})\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let content = null;\r\n\r\n        if (this.state.loadingLogs) {\r\n            content = <LoadingScreen/>;\r\n        } else {\r\n            content = (\r\n                <LogList\r\n                    {...this.props}\r\n                    nextPage={this.nextPage}\r\n                    previousPage={this.previousPage}\r\n                    page={this.state.page}\r\n                    perPage={this.state.perPage}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='wrapper--admin'>\r\n                <FormattedAdminHeader\r\n                    id='admin.logs.title'\r\n                    defaultMessage='Server Logs'\r\n                />\r\n\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        <div className='banner'>\r\n                            <div className='banner__content'>\r\n                                <FormattedMessage\r\n                                    id='admin.logs.bannerDesc'\r\n                                    defaultMessage='To look up users by User ID or Token ID, go to Reporting > Users and paste the ID into the search filter.'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            type='submit'\r\n                            className='btn btn-primary'\r\n                            onClick={this.reload}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='admin.logs.reload'\r\n                                defaultMessage='Reload'\r\n                            />\r\n                        </button>\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getLogs} from 'mattermost-redux/actions/admin';\r\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\r\n\r\nimport Logs from './logs.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        logs: Selectors.getLogs(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getLogs,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Logs);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport {UploadStatuses} from 'utils/constants.jsx';\r\n\r\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper.jsx';\r\nimport SuccessIcon from 'components/icon/success_icon';\r\n\r\nexport default class UploadButton extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Upload status - loading, complete, default ('')\r\n         */\r\n        status: PropTypes.string,\r\n\r\n        /*\r\n         * Primary class of the button\r\n         */\r\n        primaryClass: PropTypes.string,\r\n\r\n        /*\r\n         * Disable the button\r\n         */\r\n        disabled: PropTypes.bool,\r\n\r\n        /*\r\n         * Funtion to call on button click\r\n         */\r\n        onClick: PropTypes.func,\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            status,\r\n            primaryClass,\r\n            disabled,\r\n            onClick,\r\n        } = this.props;\r\n\r\n        let buttonContent;\r\n        if (status === UploadStatuses.COMPLETE) {\r\n            buttonContent = [\r\n                <SuccessIcon key='icon'/>,\r\n                ' ',\r\n                Utils.localizeMessage('admin.team.uploaded', 'Uploaded!'),\r\n            ];\r\n        } else {\r\n            buttonContent = Utils.localizeMessage('admin.team.upload', 'Upload');\r\n        }\r\n\r\n        return (\r\n            <button\r\n                className={primaryClass}\r\n                disabled={disabled}\r\n                onClick={onClick}\r\n                id='upload-button'\r\n            >\r\n                <LoadingWrapper\r\n                    loading={status === UploadStatuses.LOADING}\r\n                    text={Utils.localizeMessage('admin.team.uploading', 'Uploading...')}\r\n                >\r\n                    {buttonContent}\r\n                </LoadingWrapper>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport $ from 'jquery';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\r\nimport {Client4} from 'mattermost-redux/client';\r\n\r\nimport {uploadBrandImage} from 'actions/admin_actions.jsx';\r\nimport {UploadStatuses} from 'utils/constants.jsx';\r\nimport FormError from 'components/form_error.jsx';\r\n\r\nimport UploadButton from './upload_button.jsx';\r\n\r\nconst HTTP_STATUS_OK = 200;\r\n\r\nexport default class BrandImageSetting extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Set to disable the setting\r\n         */\r\n        disabled: PropTypes.bool.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleImageChange = this.handleImageChange.bind(this);\r\n        this.handleImageSubmit = this.handleImageSubmit.bind(this);\r\n\r\n        this.state = {\r\n            brandImage: null,\r\n            brandImageExists: false,\r\n            brandImageTimestamp: Date.now(),\r\n            error: '',\r\n            status: UploadStatuses.DEFAULT,\r\n        };\r\n    }\r\n\r\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\r\n        fetch(Client4.getBrandImageUrl(this.state.brandImageTimestamp)).then(\r\n            (resp) => {\r\n                if (resp.status === HTTP_STATUS_OK) {\r\n                    this.setState({brandImageExists: true});\r\n                } else {\r\n                    this.setState({brandImageExists: false});\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.refs.image) {\r\n            const reader = new FileReader();\r\n\r\n            const img = this.refs.image;\r\n            reader.onload = (e) => {\r\n                $(img).attr('src', e.target.result);\r\n            };\r\n\r\n            reader.readAsDataURL(this.state.brandImage);\r\n        }\r\n    }\r\n\r\n    handleImageChange() {\r\n        const element = $(this.refs.fileInput);\r\n\r\n        if (element.prop('files').length > 0) {\r\n            this.setState({\r\n                brandImage: element.prop('files')[0],\r\n                status: UploadStatuses.DEFAULT,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleImageSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (!this.state.brandImage) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.status === UploadStatuses.LOADING) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            error: '',\r\n            status: UploadStatuses.LOADING,\r\n        });\r\n\r\n        uploadBrandImage(\r\n            this.state.brandImage,\r\n            () => {\r\n                this.setState({\r\n                    brandImageExists: true,\r\n                    brandImage: null,\r\n                    brandImageTimestamp: Date.now(),\r\n                    status: UploadStatuses.COMPLETE,\r\n                });\r\n            },\r\n            (err) => {\r\n                this.setState({\r\n                    error: err.message,\r\n                    status: UploadStatuses.DEFAULT,\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let btnPrimaryClass = 'btn';\r\n        if (this.state.brandImage) {\r\n            btnPrimaryClass += ' btn-primary';\r\n        }\r\n\r\n        let letbtnDefaultClass = 'btn';\r\n        if (!this.props.disabled) {\r\n            letbtnDefaultClass += ' btn-default';\r\n        }\r\n\r\n        let img = null;\r\n        if (this.state.brandImage) {\r\n            img = (\r\n                <img\r\n                    ref='image'\r\n                    className='brand-img'\r\n                    alt='brand image'\r\n                    src=''\r\n                />\r\n            );\r\n        } else if (this.state.brandImageExists) {\r\n            img = (\r\n                <img\r\n                    className='brand-img'\r\n                    alt='brand image'\r\n                    src={Client4.getBrandImageUrl(this.state.brandImageTimestamp)}\r\n                />\r\n            );\r\n        } else {\r\n            img = (\r\n                <p>\r\n                    <FormattedMessage\r\n                        id='admin.team.noBrandImage'\r\n                        defaultMessage='No brand image uploaded'\r\n                    />\r\n                </p>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='form-group'>\r\n                <label className='control-label col-sm-4'>\r\n                    <FormattedMessage\r\n                        id='admin.team.brandImageTitle'\r\n                        defaultMessage='Custom Brand Image:'\r\n                    />\r\n                </label>\r\n                <div className='col-sm-8'>\r\n                    {img}\r\n                </div>\r\n                <div className='col-sm-4'/>\r\n                <div className='col-sm-8'>\r\n                    <div className='file__upload'>\r\n                        <button\r\n                            className={letbtnDefaultClass}\r\n                            disabled={this.props.disabled}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='admin.team.chooseImage'\r\n                                defaultMessage='Choose New Image'\r\n                            />\r\n                        </button>\r\n                        <input\r\n                            ref='fileInput'\r\n                            type='file'\r\n                            accept='.jpg,.png,.bmp'\r\n                            disabled={this.props.disabled}\r\n                            onChange={this.handleImageChange}\r\n                        />\r\n                    </div>\r\n                    <UploadButton\r\n                        primaryClass={btnPrimaryClass}\r\n                        status={this.state.status}\r\n                        disabled={this.props.disabled || !this.state.brandImage}\r\n                        onClick={this.handleImageSubmit}\r\n                    />\r\n                    <br/>\r\n                    <FormError error={this.state.error}/>\r\n                    <p className='help-text no-margin'>\r\n                        <FormattedHTMLMessage\r\n                            id='admin.team.uploadDesc'\r\n                            defaultMessage='Customize your user experience by adding a custom image to your login screen. See examples at <a href=\"http://docs.mattermost.com/administration/config-settings.html#custom-branding\" target=\"_blank\">docs.mattermost.com/administration/config-settings.html#custom-branding</a>.'\r\n                        />\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {localizeMessage} from 'utils/utils.jsx';\r\n\r\nimport CheckboxCheckedIcon from 'components/svg/checkbox_checked_icon.jsx';\r\nimport LoadingSpinner from 'components/widgets/loading/loading_spinner.jsx';\r\n\r\nexport default class GroupRow extends React.Component {\r\n    static propTypes = {\r\n        primary_key: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        mattermost_group_id: PropTypes.string,\r\n        has_syncables: PropTypes.bool,\r\n        checked: PropTypes.bool,\r\n        failed: PropTypes.bool,\r\n        onCheckToggle: PropTypes.func,\r\n        actions: PropTypes.shape({\r\n            link: PropTypes.func.isRequired,\r\n            unlink: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    onRowClick = () => {\r\n        this.props.onCheckToggle(this.props.primary_key);\r\n    }\r\n\r\n    linkHandler = async (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        this.setState({loading: true});\r\n        await this.props.actions.link(this.props.primary_key);\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    unlinkHandler = async (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        this.setState({loading: true});\r\n        await this.props.actions.unlink(this.props.primary_key);\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    renderActions = () => {\r\n        if (!this.props.mattermost_group_id) {\r\n            return null;\r\n        }\r\n        if (this.props.has_syncables) {\r\n            return (\r\n                <Link to={'/admin_console/user_management/groups/' + this.props.mattermost_group_id}>\r\n                    <FormattedMessage\r\n                        id='admin.group_settings.group_row.edit'\r\n                        defaultMessage='Edit'\r\n                    />\r\n                </Link>\r\n            );\r\n        }\r\n        return (\r\n            <Link to={'/admin_console/user_management/groups/' + this.props.mattermost_group_id}>\r\n                <FormattedMessage\r\n                    id='admin.group_settings.group_row.configure'\r\n                    defaultMessage='Configure'\r\n                />\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    renderLinked = () => {\r\n        if (this.state.loading) {\r\n            return (\r\n                <a href='#'>\r\n                    {this.props.mattermost_group_id &&\r\n                        <LoadingSpinner text={localizeMessage('admin.group_settings.group_row.unlinking', 'Unlinking')}/>\r\n                    }\r\n                    {!this.props.mattermost_group_id &&\r\n                        <LoadingSpinner text={localizeMessage('admin.group_settings.group_row.linking', 'Linking')}/>\r\n                    }\r\n                </a>\r\n            );\r\n        }\r\n        if (this.props.mattermost_group_id) {\r\n            if (this.props.failed) {\r\n                return (\r\n                    <a\r\n                        href='#'\r\n                        onClick={this.unlinkHandler}\r\n                        className='warning'\r\n                    >\r\n                        <i className='icon fa fa-exclamation-triangle'/>\r\n                        <FormattedMessage\r\n                            id='admin.group_settings.group_row.unlink_failed'\r\n                            defaultMessage='Unlink failed'\r\n                        />\r\n                    </a>\r\n                );\r\n            }\r\n            return (\r\n                <a\r\n                    href='#'\r\n                    onClick={this.unlinkHandler}\r\n                >\r\n                    <i className='icon fa fa-link'/>\r\n                    <FormattedMessage\r\n                        id='admin.group_settings.group_row.linked'\r\n                        defaultMessage='Linked'\r\n                    />\r\n                </a>\r\n            );\r\n        }\r\n        if (this.props.failed) {\r\n            return (\r\n                <a\r\n                    href='#'\r\n                    onClick={this.linkHandler}\r\n                    className='warning'\r\n                >\r\n                    <i className='icon fa fa-exclamation-triangle'/>\r\n                    <FormattedMessage\r\n                        id='admin.group_settings.group_row.link_failed'\r\n                        defaultMessage='Link failed'\r\n                    />\r\n                </a>\r\n            );\r\n        }\r\n        return (\r\n            <a\r\n                href='#'\r\n                onClick={this.linkHandler}\r\n            >\r\n                <i className='icon fa fa-unlink'/>\r\n                <FormattedMessage\r\n                    id='admin.group_settings.group_row.not_linked'\r\n                    defaultMessage='Not Linked'\r\n                />\r\n            </a>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className={'group ' + (this.props.checked ? 'checked' : '')}\r\n                onClick={this.onRowClick}\r\n            >\r\n                <div className='group-row'>\r\n                    <div\r\n                        className={'group-check ' + (this.props.checked ? 'checked' : '')}\r\n                    >\r\n                        {this.props.checked && <CheckboxCheckedIcon/>}\r\n                    </div>\r\n                    <span className='group-name'>\r\n                        {this.props.name}\r\n                    </span>\r\n                    <span className='group-description'>\r\n                        {this.renderLinked()}\r\n                    </span>\r\n                    <span className='group-actions'>\r\n                        {this.renderActions()}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nimport GroupRow from 'components/admin_console/group_settings/group_row.jsx';\r\nimport NextIcon from 'components/icon/next_icon';\r\nimport PreviousIcon from 'components/icon/previous_icon';\r\nimport SearchIcon from 'components/svg/search_icon';\r\nimport CheckboxCheckedIcon from 'components/svg/checkbox_checked_icon.jsx';\r\n\r\nimport {Constants} from 'utils/constants';\r\n\r\nconst LDAP_GROUPS_PAGE_SIZE = 200;\r\n\r\nconst FILTER_STATE_SEARCH_KEY_MAPPING = {\r\n    filterIsConfigured: {filter: 'is:configured', option: {is_configured: true}},\r\n    filterIsUnconfigured: {filter: 'is:notconfigured', option: {is_configured: false}},\r\n    filterIsLinked: {filter: 'is:linked', option: {is_linked: true}},\r\n    filterIsUnlinked: {filter: 'is:notlinked', option: {is_linked: false}},\r\n};\r\n\r\nexport default class GroupsList extends React.PureComponent {\r\n    static propTypes = {\r\n        groups: PropTypes.arrayOf(PropTypes.object),\r\n        total: PropTypes.number,\r\n        actions: PropTypes.shape({\r\n            getLdapGroups: PropTypes.func.isRequired,\r\n            link: PropTypes.func.isRequired,\r\n            unlink: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    static defaultProps = {\r\n        groups: [],\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checked: {},\r\n            loading: true,\r\n            page: 0,\r\n            showFilters: false,\r\n            searchString: '',\r\n        };\r\n        Object.entries(FILTER_STATE_SEARCH_KEY_MAPPING).forEach(([key]) => {\r\n            this.state[key] = false;\r\n        });\r\n    }\r\n\r\n    closeFilters = () => {\r\n        this.setState({showFilters: false});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.actions.getLdapGroups(this.state.page, LDAP_GROUPS_PAGE_SIZE).then(() => {\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n    previousPage = async (e) => {\r\n        e.preventDefault();\r\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\r\n        this.setState({checked: {}, page, loading: true});\r\n        this.searchGroups(page);\r\n    }\r\n\r\n    nextPage = async (e) => {\r\n        e.preventDefault();\r\n        const page = this.state.page + 1;\r\n        this.setState({checked: {}, page, loading: true});\r\n        this.searchGroups(page);\r\n    }\r\n\r\n    onCheckToggle = (key) => {\r\n        const newChecked = {...this.state.checked};\r\n        newChecked[key] = !newChecked[key];\r\n        this.setState({checked: newChecked});\r\n    }\r\n\r\n    linkSelectedGroups = () => {\r\n        for (const group of this.props.groups) {\r\n            if (this.state.checked[group.primary_key] && !group.mattermost_group_id) {\r\n                this.props.actions.link(group.primary_key);\r\n            }\r\n        }\r\n    }\r\n\r\n    unlinkSelectedGroups = () => {\r\n        for (const group of this.props.groups) {\r\n            if (this.state.checked[group.primary_key] && group.mattermost_group_id) {\r\n                this.props.actions.unlink(group.primary_key);\r\n            }\r\n        }\r\n    }\r\n\r\n    selectionActionButtonType = () => {\r\n        let hasSelectedLinked = false;\r\n        for (const group of this.props.groups) {\r\n            if (this.state.checked[group.primary_key]) {\r\n                if (!group.mattermost_group_id) {\r\n                    return 'link';\r\n                }\r\n                hasSelectedLinked = true;\r\n            }\r\n        }\r\n        if (hasSelectedLinked) {\r\n            return 'unlink';\r\n        }\r\n\r\n        return 'disabled';\r\n    }\r\n\r\n    renderSelectionActionButton = () => {\r\n        switch (this.selectionActionButtonType()) {\r\n        case 'link':\r\n            return (\r\n                <button\r\n                    className='btn btn-primary'\r\n                    onClick={this.linkSelectedGroups}\r\n                >\r\n                    <i className='icon fa fa-link'/>\r\n                    <FormattedMessage\r\n                        id='admin.group_settings.groups_list.link_selected'\r\n                        defaultMessage='Link Selected Groups'\r\n                    />\r\n                </button>\r\n            );\r\n        case 'unlink':\r\n            return (\r\n                <button\r\n                    className='btn btn-primary'\r\n                    onClick={this.unlinkSelectedGroups}\r\n                >\r\n                    <i className='icon fa fa-unlink'/>\r\n                    <FormattedMessage\r\n                        id='admin.group_settings.groups_list.unlink_selected'\r\n                        defaultMessage='Unlink Selected Groups'\r\n                    />\r\n                </button>\r\n            );\r\n        default:\r\n            return (\r\n                <button\r\n                    className='btn btn-inactive disabled'\r\n                >\r\n                    <i className='icon fa fa-link'/>\r\n                    <FormattedMessage\r\n                        id='admin.group_settings.groups_list.link_selected'\r\n                        defaultMessage='Link Selected Groups'\r\n                    />\r\n                </button>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderRows = () => {\r\n        if (this.state.loading) {\r\n            return (\r\n                <div className='groups-list-loading'>\r\n                    <i className='fa fa-spinner fa-pulse fa-2x'/>\r\n                </div>\r\n            );\r\n        }\r\n        if (this.props.groups.length === 0) {\r\n            return (\r\n                <div className='groups-list-empty'>\r\n                    <FormattedMessage\r\n                        id='admin.group_settings.groups_list.no_groups_found'\r\n                        defaultMessage='No groups found'\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n        return this.props.groups.map((item) => {\r\n            return (\r\n                <GroupRow\r\n                    key={item.primary_key}\r\n                    primary_key={item.primary_key}\r\n                    name={item.name}\r\n                    mattermost_group_id={item.mattermost_group_id}\r\n                    has_syncables={item.has_syncables}\r\n                    failed={item.failed}\r\n                    checked={Boolean(this.state.checked[item.primary_key])}\r\n                    onCheckToggle={this.onCheckToggle}\r\n                    actions={{\r\n                        link: this.props.actions.link,\r\n                        unlink: this.props.actions.unlink,\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    regex = (str) => {\r\n        return new RegExp(`(${str})`, 'i');\r\n    }\r\n\r\n    searchGroups = (page) => {\r\n        let {searchString} = this.state;\r\n\r\n        const newState = {...this.state};\r\n        delete newState.page;\r\n        delete newState.checked;\r\n\r\n        let q = searchString;\r\n        let opts = {q: ''};\r\n\r\n        Object.entries(FILTER_STATE_SEARCH_KEY_MAPPING).forEach(([key, value]) => {\r\n            const re = this.regex(value.filter);\r\n            if (re.test(searchString)) {\r\n                newState[key] = true;\r\n                q = q.replace(re, '');\r\n                opts = Object.assign(opts, value.option);\r\n            } else if (this.state[key]) {\r\n                searchString += ' ' + value.filter;\r\n            }\r\n        });\r\n\r\n        opts.q = q.trim();\r\n\r\n        newState.searchString = searchString;\r\n        newState.showFilters = false;\r\n        newState.loading = true;\r\n        newState.showFilters = false;\r\n        this.setState(newState);\r\n\r\n        this.props.actions.getLdapGroups(page, LDAP_GROUPS_PAGE_SIZE, opts).then(() => {\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n    handleGroupSearchKeyUp = (e) => {\r\n        const {key} = e;\r\n        const {searchString} = this.state;\r\n        if (key === Constants.KeyCodes.ENTER[0]) {\r\n            this.setState({page: 0});\r\n            this.searchGroups();\r\n        }\r\n        const newState = {};\r\n        Object.entries(FILTER_STATE_SEARCH_KEY_MAPPING).forEach(([k, value]) => {\r\n            if (!this.regex(value.filter).test(searchString)) {\r\n                newState[k] = false;\r\n            }\r\n        });\r\n        this.setState(newState);\r\n    }\r\n\r\n    newSearchString = (searchString, stateKey, checked) => {\r\n        let newSearchString = searchString;\r\n        const {filter} = FILTER_STATE_SEARCH_KEY_MAPPING[stateKey];\r\n        const re = this.regex(filter);\r\n        const stringFilterPresent = re.test(searchString);\r\n\r\n        if (stringFilterPresent && !checked) {\r\n            newSearchString = searchString.replace(re, '').trim();\r\n        }\r\n\r\n        if (!stringFilterPresent && checked) {\r\n            newSearchString += ' ' + filter;\r\n        }\r\n\r\n        return newSearchString.replace(/\\s{2,}/g, ' ');\r\n    }\r\n\r\n    handleFilterCheck = (updates) => {\r\n        let {searchString} = this.state;\r\n        updates.forEach((item) => {\r\n            searchString = this.newSearchString(searchString, item[0], item[1]);\r\n            this.setState({[item[0]]: item[1]});\r\n        });\r\n        this.setState({searchString});\r\n    }\r\n\r\n    renderSearchFilters = () => {\r\n        return (\r\n            <div\r\n                id='group-filters'\r\n                className='group-search-filters'\r\n                onClick={(e) => {\r\n                    e.nativeEvent.stopImmediatePropagation();\r\n                }}\r\n            >\r\n                <div className='filter-row'>\r\n                    <span\r\n                        className={'filter-check ' + (this.state.filterIsLinked ? 'checked' : '')}\r\n                        onClick={() => this.handleFilterCheck([['filterIsLinked', !this.state.filterIsLinked], ['filterIsUnlinked', false]])}\r\n                    >\r\n                        {this.state.filterIsLinked && <CheckboxCheckedIcon/>}\r\n                    </span>\r\n                    <span>\r\n                        <FormattedMessage\r\n                            id='admin.group_settings.filters.isLinked'\r\n                            defaultMessage='Is Linked'\r\n                        />\r\n                    </span>\r\n                </div>\r\n                <div className='filter-row'>\r\n                    <span\r\n                        className={'filter-check ' + (this.state.filterIsUnlinked ? 'checked' : '')}\r\n                        onClick={() => this.handleFilterCheck([['filterIsUnlinked', !this.state.filterIsUnlinked], ['filterIsLinked', false]])}\r\n                    >\r\n                        {this.state.filterIsUnlinked && <CheckboxCheckedIcon/>}\r\n                    </span>\r\n                    <span>\r\n                        <FormattedMessage\r\n                            id='admin.group_settings.filters.isUnlinked'\r\n                            defaultMessage='Is Not Linked'\r\n                        />\r\n                    </span>\r\n                </div>\r\n                <div className='filter-row'>\r\n                    <span\r\n                        className={'filter-check ' + (this.state.filterIsConfigured ? 'checked' : '')}\r\n                        onClick={() => this.handleFilterCheck([['filterIsConfigured', !this.state.filterIsConfigured], ['filterIsUnconfigured', false]])}\r\n                    >\r\n                        {this.state.filterIsConfigured && <CheckboxCheckedIcon/>}\r\n                    </span>\r\n                    <span>\r\n                        <FormattedMessage\r\n                            id='admin.group_settings.filters.isConfigured'\r\n                            defaultMessage='Is Configured'\r\n                        />\r\n                    </span>\r\n                </div>\r\n                <div className='filter-row'>\r\n                    <span\r\n                        className={'filter-check ' + (this.state.filterIsUnconfigured ? 'checked' : '')}\r\n                        onClick={() => this.handleFilterCheck([['filterIsUnconfigured', !this.state.filterIsUnconfigured], ['filterIsConfigured', false]])}\r\n                    >\r\n                        {this.state.filterIsUnconfigured && <CheckboxCheckedIcon/>}\r\n                    </span>\r\n                    <span>\r\n                        <FormattedMessage\r\n                            id='admin.group_settings.filters.isUnconfigured'\r\n                            defaultMessage='Is Not Configured'\r\n                        />\r\n                    </span>\r\n                </div>\r\n                <a\r\n                    onClick={() => {\r\n                        this.setState({page: 0});\r\n                        this.searchGroups(0);\r\n                    }}\r\n                    className='btn btn-primary search-groups-btn'\r\n                >\r\n                    <FormattedMessage\r\n                        id='search_bar.search'\r\n                        defaultMessage='Search'\r\n                    />\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    resetFiltersAndSearch = () => {\r\n        const newState = {\r\n            showFilters: false,\r\n            searchString: '',\r\n            loading: true,\r\n            page: 0,\r\n        };\r\n        Object.entries(FILTER_STATE_SEARCH_KEY_MAPPING).forEach(([key]) => {\r\n            newState[key] = false;\r\n        });\r\n        this.setState(newState);\r\n        this.props.actions.getLdapGroups(this.state.page, LDAP_GROUPS_PAGE_SIZE, {q: ''}).then(() => {\r\n            this.setState({loading: false});\r\n        });\r\n    };\r\n\r\n    render = () => {\r\n        const startCount = (this.state.page * LDAP_GROUPS_PAGE_SIZE) + 1;\r\n        let endCount = (this.state.page * LDAP_GROUPS_PAGE_SIZE) + LDAP_GROUPS_PAGE_SIZE;\r\n        const total = this.props.total;\r\n        if (endCount > total) {\r\n            endCount = total;\r\n        }\r\n        const lastPage = endCount === total;\r\n        const firstPage = this.state.page === 0;\r\n        return (\r\n            <div className='groups-list'>\r\n                <div className='groups-list--global-actions'>\r\n                    <div className='group-list-search'>\r\n                        <input\r\n                            type='text'\r\n                            placeholder={Utils.localizeMessage('search_bar.search', 'Search')}\r\n                            onKeyUp={this.handleGroupSearchKeyUp}\r\n                            onChange={(e) => this.setState({searchString: e.target.value})}\r\n                            value={this.state.searchString}\r\n                        />\r\n                        <SearchIcon\r\n                            id='searchIcon'\r\n                            className='search__icon'\r\n                            aria-hidden='true'\r\n                        />\r\n                        <i\r\n                            className={'fa fa-times-circle group-filter-action ' + (this.state.searchString.length ? '' : 'hidden')}\r\n                            onClick={this.resetFiltersAndSearch}\r\n                        />\r\n                        <i\r\n                            className={'fa fa-caret-down group-filter-action ' + (this.state.showFilters ? 'hidden' : '')}\r\n                            onClick={() => {\r\n                                document.addEventListener('click', this.closeFilters, {once: true});\r\n                                this.setState({showFilters: true});\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    {this.state.showFilters && this.renderSearchFilters()}\r\n                    <div className='group-list-link-unlink'>\r\n                        {this.renderSelectionActionButton()}\r\n                    </div>\r\n                </div>\r\n                <div className='groups-list--header'>\r\n                    <div className='group-name'>\r\n                        <FormattedMessage\r\n                            id='admin.group_settings.groups_list.nameHeader'\r\n                            defaultMessage='Name'\r\n                        />\r\n                    </div>\r\n                    <div className='group-description'>\r\n                        <FormattedMessage\r\n                            id='admin.group_settings.groups_list.mappingHeader'\r\n                            defaultMessage='Mattermost Linking'\r\n                        />\r\n                    </div>\r\n                    <div className='group-actions'/>\r\n                </div>\r\n                <div className='groups-list--body'>\r\n                    {this.renderRows()}\r\n                </div>\r\n                <div className='groups-list--footer'>\r\n                    <div className='counter'>\r\n                        <FormattedMessage\r\n                            id='admin.group_settings.groups_list.paginatorCount'\r\n                            defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\r\n                            values={{\r\n                                startCount,\r\n                                endCount,\r\n                                total,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\r\n                        onClick={firstPage ? null : this.previousPage}\r\n                        disabled={firstPage}\r\n                    >\r\n                        <PreviousIcon/>\r\n                    </button>\r\n                    <button\r\n                        className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\r\n                        onClick={lastPage ? null : this.nextPage}\r\n                        disabled={lastPage}\r\n                    >\r\n                        <NextIcon/>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {createSelector} from 'reselect';\r\n\r\nimport {linkLdapGroup, unlinkLdapGroup, getLdapGroups as fetchLdapGroups} from 'mattermost-redux/actions/admin';\r\nimport {getLdapGroups, getLdapGroupsCount} from 'mattermost-redux/selectors/entities/admin';\r\n\r\nimport GroupsList from './groups_list.jsx';\r\n\r\nconst getSortedListOfLdapGroups = createSelector(\r\n    getLdapGroups,\r\n    (ldapGroups) => {\r\n        const groups = Object.values(ldapGroups);\r\n        groups.sort((a, b) => a.name.localeCompare(b.name));\r\n        return groups;\r\n    }\r\n);\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        groups: getSortedListOfLdapGroups(state),\r\n        total: getLdapGroupsCount(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getLdapGroups: fetchLdapGroups,\r\n            link: linkLdapGroup,\r\n            unlink: unlinkLdapGroup,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupsList);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {t} from 'utils/i18n';\r\nimport GroupsList from 'components/admin_console/group_settings/groups_list';\r\nimport AdminPanel from 'components/widgets/admin_console/admin_panel.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nimport {getSiteURL} from 'utils/url.jsx';\r\n\r\nexport default class GroupSettings extends React.PureComponent {\r\n    render = () => {\r\n        const siteURL = getSiteURL();\r\n        return (\r\n            <div className='wrapper--fixed'>\r\n                <div className='admin-console__header'>\r\n                    <FormattedMessage\r\n                        id='admin.group_settings.groupsPageTitle'\r\n                        defaultMessage='Groups'\r\n                    />\r\n                </div>\r\n\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        <div className={'banner info'}>\r\n                            <div className='banner__content'>\r\n                                <FormattedMarkdownMessage\r\n                                    id='admin.group_settings.introBanner'\r\n                                    defaultMessage={'Groups are a way to organize users and apply actions to all users within that group.\\nFor more information on Groups, please see [documentation](!https://www.mattermost.com/default-ad-ldap-groups).'}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <AdminPanel\r\n                            id='ldap_groups'\r\n                            titleId={t('admin.group_settings.ldapGroupsTitle')}\r\n                            titleDefault='AD/LDAP Groups'\r\n                            subtitleId={t('admin.group_settings.ldapGroupsDescription')}\r\n                            subtitleDefault={`Link and configure groups from your AD/LDAP to Mattermost. Please ensure you have configured a [group filter](${siteURL}/admin_console/authentication/ldap).`}\r\n                            subtitleValues={{siteURL}}\r\n                        >\r\n                            <GroupsList/>\r\n                        </AdminPanel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default class GroupProfile extends React.PureComponent {\r\n    static propTypes = {\r\n        name: PropTypes.string.isRequired,\r\n    };\r\n\r\n    render = () => {\r\n        const {name} = this.props;\r\n\r\n        return (\r\n            <div className='group-profile'>\r\n                <div className='group-profile-field'>\r\n                    <label>\r\n                        <FormattedMessage\r\n                            id='admin.group_settings.group_details.group_profile.name'\r\n                            defaultMessage='Name:'\r\n                        />\r\n                    </label>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        value={name}\r\n                        disabled={true}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\n\r\nimport GlobeIcon from 'components/svg/globe_icon';\r\nimport LockIcon from 'components/svg/lock_icon';\r\n\r\nexport default class GroupTeamsAndChannelsRow extends React.PureComponent {\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        implicit: PropTypes.bool,\r\n        hasChildren: PropTypes.bool,\r\n        collapsed: PropTypes.bool,\r\n        onRemoveItem: PropTypes.func.isRequired,\r\n        onToggleCollapse: PropTypes.func.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showConfirmationModal: false,\r\n        };\r\n    }\r\n\r\n    removeItem = () => {\r\n        this.props.onRemoveItem(this.props.id, this.props.type);\r\n        this.setState({showConfirmationModal: false});\r\n    }\r\n\r\n    toggleCollapse = () => {\r\n        this.props.onToggleCollapse(this.props.id);\r\n    }\r\n\r\n    render = () => {\r\n        let extraClasses = '';\r\n        let arrowIcon = null;\r\n        if (this.props.hasChildren) {\r\n            arrowIcon = (\r\n                <i\r\n                    className={'fa fa-caret-right' + (this.props.collapsed ? '' : ' open')}\r\n                    onClick={this.toggleCollapse}\r\n                />\r\n            );\r\n            extraClasses += ' has-clidren';\r\n        }\r\n\r\n        if (this.props.collapsed) {\r\n            extraClasses += ' collapsed';\r\n        }\r\n\r\n        let teamIcon = null;\r\n        let channelIcon = null;\r\n        switch (this.props.type) {\r\n        case 'public-team':\r\n            teamIcon = (\r\n                <div className='team-icon team-icon-public'>\r\n                    <i className={'fa fa-circle-o-notch'}/>\r\n                </div>\r\n            );\r\n            break;\r\n        case 'private-team':\r\n            teamIcon = (\r\n                <div className='team-icon team-icon-private'>\r\n                    <span className='fa-stack fa-2x'>\r\n                        <i className={'fa fa-circle-thin fa-stack-2x'}/>\r\n                        <i className={'fa fa-lock fa-stack-1x'}/>\r\n                    </span>\r\n                </div>\r\n            );\r\n            break;\r\n        default:\r\n            teamIcon = (<div className='team-icon'/>);\r\n        }\r\n\r\n        switch (this.props.type) {\r\n        case 'public-channel':\r\n            channelIcon = (\r\n                <div className='channel-icon'>\r\n                    <GlobeIcon className='icon icon__globe'/>\r\n                </div>\r\n            );\r\n            break;\r\n        case 'private-channel':\r\n            channelIcon = (\r\n                <div className='channel-icon'>\r\n                    <LockIcon className='icon icon__lock'/>\r\n                </div>\r\n            );\r\n            break;\r\n        }\r\n\r\n        const displayType = this.props.type.split('-')[1];\r\n\r\n        return (\r\n            <div className={'group-teams-and-channels-row' + extraClasses}>\r\n                <ConfirmModal\r\n                    show={this.state.showConfirmationModal}\r\n                    title={\r\n                        <FormattedMessage\r\n                            id='admin.group_settings.group_details.group_teams_and_channels_row.remove.confirm_header'\r\n                            defaultMessage={`Remove Membership from the '${this.props.name}' ${displayType}?`}\r\n                            values={{name: this.props.name, displayType}}\r\n                        />\r\n                    }\r\n                    message={\r\n                        <FormattedMessage\r\n                            id='admin.group_settings.group_details.group_teams_and_channels_row.remove.confirm_body'\r\n                            defaultMessage={`Removing this membership will prevent future users in this group from being added to the '${this.props.name}' ${displayType}.`}\r\n                            values={{name: this.props.name, displayType}}\r\n                        />\r\n                    }\r\n                    confirmButtonText={\r\n                        <FormattedMessage\r\n                            id='admin.group_settings.group_details.group_teams_and_channels_row.remove.confirm_button'\r\n                            defaultMessage='Yes, Remove'\r\n                        />\r\n                    }\r\n                    onConfirm={this.removeItem}\r\n                    onCancel={() => this.setState({showConfirmationModal: false})}\r\n                />\r\n\r\n                <div className='arrow-icon'>\r\n                    {arrowIcon}\r\n                </div>\r\n                {teamIcon}\r\n                {channelIcon}\r\n                <div className='name'>\r\n                    {this.props.name}\r\n                </div>\r\n                <div className='remove'>\r\n                    {!this.props.implicit &&\r\n                        <button\r\n                            className='btn btn-link'\r\n                            onClick={() => this.setState({showConfirmationModal: true})}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='admin.group_settings.group_details.group_teams_and_channels_row.remove'\r\n                                defaultMessage='Remove'\r\n                            />\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Groups} from 'mattermost-redux/constants';\r\n\r\nimport GroupTeamsAndChannelsRow from 'components/admin_console/group_settings/group_details/group_teams_and_channels_row.jsx';\r\n\r\nexport default class GroupTeamsAndChannels extends React.PureComponent {\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        teams: PropTypes.arrayOf(PropTypes.object),\r\n        channels: PropTypes.arrayOf(PropTypes.object),\r\n        loading: PropTypes.bool.isRequired,\r\n        getGroupSyncables: PropTypes.func.isRequired,\r\n        unlink: PropTypes.func.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: {},\r\n        };\r\n    }\r\n\r\n    onToggleCollapse = (id) => {\r\n        const collapsed = {...this.state.collapsed};\r\n        collapsed[id] = !collapsed[id];\r\n        this.setState({collapsed});\r\n    }\r\n\r\n    onRemoveItem = async (id, type) => {\r\n        if (type === 'public-team' || type === 'private-team') {\r\n            await this.props.unlink(this.props.id, id, Groups.SYNCABLE_TYPE_TEAM);\r\n            await this.props.getGroupSyncables(this.props.id, Groups.SYNCABLE_TYPE_TEAM);\r\n        } else {\r\n            await this.props.unlink(this.props.id, id, Groups.SYNCABLE_TYPE_CHANNEL);\r\n            await this.props.getGroupSyncables(this.props.id, Groups.SYNCABLE_TYPE_CHANNEL);\r\n        }\r\n    }\r\n\r\n    teamsAndChannelsToEntries = (teams, channels) => {\r\n        const entries = [];\r\n\r\n        const existingTeams = new Set();\r\n        const teamEntries = [];\r\n        teams.forEach((team) => {\r\n            existingTeams.add(team.team_id);\r\n            teamEntries.push({\r\n                type: team.team_type === 'O' ? 'public-team' : 'private-team',\r\n                hasChildren: channels.some((channel) => channel.team_id === team.team_id),\r\n                name: team.team_display_name,\r\n                collapsed: this.state.collapsed[team.team_id],\r\n                id: team.team_id,\r\n                implicit: false,\r\n            });\r\n        });\r\n\r\n        const channelEntriesByTeam = {};\r\n        channels.forEach((channel) => {\r\n            channelEntriesByTeam[channel.team_id] = channelEntriesByTeam[channel.team_id] || [];\r\n            channelEntriesByTeam[channel.team_id].push({\r\n                type: channel.channel_type === 'O' ? 'public-channel' : 'private-channel',\r\n                name: channel.channel_display_name,\r\n                id: channel.channel_id,\r\n            });\r\n\r\n            if (!existingTeams.has(channel.team_id)) {\r\n                existingTeams.add(channel.team_id);\r\n                teamEntries.push({\r\n                    type: channel.team_type === 'O' ? 'public-team' : 'private-team',\r\n                    hasChildren: true,\r\n                    name: channel.team_display_name,\r\n                    collapsed: this.state.collapsed[channel.team_id],\r\n                    id: channel.team_id,\r\n                    implicit: true,\r\n                });\r\n            }\r\n        });\r\n\r\n        teamEntries.sort((a, b) => a.name.localeCompare(b.name));\r\n        teamEntries.forEach((team) => {\r\n            entries.push(team);\r\n            if (team.hasChildren && !team.collapsed) {\r\n                const teamChannels = channelEntriesByTeam[team.id];\r\n                teamChannels.sort((a, b) => a.name.localeCompare(b.name));\r\n                entries.push(...teamChannels);\r\n            }\r\n        });\r\n\r\n        return entries;\r\n    }\r\n\r\n    render = () => {\r\n        const entries = this.teamsAndChannelsToEntries(this.props.teams, this.props.channels);\r\n\r\n        if (this.props.loading) {\r\n            return (\r\n                <div className='group-teams-and-channels'>\r\n                    <div className='group-teams-and-channels-loading'>\r\n                        <i className='fa fa-spinner fa-pulse fa-2x'/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (entries.length === 0) {\r\n            return (\r\n                <div className='group-teams-and-channels'>\r\n                    <div className='group-teams-and-channels-empty'>\r\n                        <FormattedMessage\r\n                            id='admin.group_settings.group_details.group_teams_and_channels.no-teams-or-channels-speicified'\r\n                            defaultMessage='No teams or channels specified yet'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='group-teams-and-channels'>\r\n                <div className='group-teams-and-channels--header'>\r\n                    <FormattedMessage\r\n                        id='admin.group_settings.group_profile.group_teams_and_channels.name'\r\n                        defaultMessage='Name'\r\n                    />\r\n                </div>\r\n                <div className='group-teams-and-channels--body'>\r\n                    {entries.map((entry) => (\r\n                        <GroupTeamsAndChannelsRow\r\n                            key={entry.id}\r\n                            onRemoveItem={this.onRemoveItem}\r\n                            onToggleCollapse={this.onToggleCollapse}\r\n                            {...entry}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {Client4} from 'mattermost-redux/client';\r\n\r\nexport default class GroupUsersRow extends React.PureComponent {\r\n    static propTypes = {\r\n        username: PropTypes.string.isRequired,\r\n        displayName: PropTypes.string.isRequired,\r\n        email: PropTypes.string.isRequired,\r\n        userId: PropTypes.string.isRequired,\r\n        lastPictureUpdate: PropTypes.number.isRequired,\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className='group-users-row'>\r\n                <img\r\n                    className='profile-picture'\r\n                    alt={''}\r\n                    src={Client4.getProfilePictureUrl(this.props.userId, this.props.lastPictureUpdate)}\r\n                />\r\n                <div className='user-data'>\r\n                    <div className='name-row'>\r\n                        <span className='username'>{'@' + this.props.username}</span>\r\n                        {'-'}\r\n                        <span className='display-name'>{this.props.displayName}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='email-label'>\r\n                            <FormattedMessage\r\n                                id='admin.group_settings.group_details.group_users.email'\r\n                                defaultMessage='Email:'\r\n                            />\r\n                        </span>\r\n                        <span className='email'>{this.props.email}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport GroupUsersRow from 'components/admin_console/group_settings/group_details/group_users_row';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\nimport NextIcon from 'components/icon/next_icon';\r\nimport PreviousIcon from 'components/icon/previous_icon';\r\n\r\nconst GROUP_MEMBERS_PAGE_SIZE = 20;\r\n\r\nexport default class GroupUsers extends React.PureComponent {\r\n    static propTypes = {\r\n        groupID: PropTypes.string.isRequired,\r\n        members: PropTypes.arrayOf(PropTypes.object),\r\n        total: PropTypes.number.isRequired,\r\n        getMembers: PropTypes.func.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            page: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getMembers(this.props.groupID, 0, GROUP_MEMBERS_PAGE_SIZE).then(() => {\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n    previousPage = async () => {\r\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\r\n        this.setState({page, loading: true});\r\n        await this.props.getMembers(this.props.groupID, page, GROUP_MEMBERS_PAGE_SIZE);\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    nextPage = async () => {\r\n        const page = (this.state.page + 1) * GROUP_MEMBERS_PAGE_SIZE >= this.props.total ? this.state.page : this.state.page + 1;\r\n        this.setState({page, loading: true});\r\n        await this.props.getMembers(this.props.groupID, page, GROUP_MEMBERS_PAGE_SIZE);\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    renderRows = () => {\r\n        if (this.props.members.length === 0) {\r\n            return (\r\n                <div className='group-users-empty'>\r\n                    <FormattedMessage\r\n                        id='admin.group_settings.group_details.group_users.no-users-found'\r\n                        defaultMessage='No users found'\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n        return this.props.members.map((member) => {\r\n            return (\r\n                <GroupUsersRow\r\n                    key={member.id}\r\n                    username={member.username}\r\n                    displayName={member.first_name + ' ' + member.last_name}\r\n                    email={member.email}\r\n                    userId={member.id}\r\n                    lastPictureUpdate={member.last_picture_update}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    renderPagination = () => {\r\n        if (this.props.members.length === 0) {\r\n            return (<div className='group-users--footer empty'/>);\r\n        }\r\n\r\n        const startCount = (this.state.page * GROUP_MEMBERS_PAGE_SIZE) + 1;\r\n        let endCount = (this.state.page * GROUP_MEMBERS_PAGE_SIZE) + GROUP_MEMBERS_PAGE_SIZE;\r\n        const total = this.props.total;\r\n        if (endCount > total) {\r\n            endCount = total;\r\n        }\r\n        const lastPage = endCount === total;\r\n        const firstPage = this.state.page === 0;\r\n\r\n        return (\r\n            <div className='group-users--footer'>\r\n                <div className='counter'>\r\n                    <FormattedMessage\r\n                        id='admin.group_settings.groups_list.paginatorCount'\r\n                        defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\r\n                        values={{\r\n                            startCount,\r\n                            endCount,\r\n                            total,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <button\r\n                    className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\r\n                    onClick={this.previousPage}\r\n                    disabled={firstPage}\r\n                >\r\n                    <PreviousIcon/>\r\n                </button>\r\n                <button\r\n                    className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\r\n                    onClick={this.nextPage}\r\n                    disabled={lastPage}\r\n                >\r\n                    <NextIcon/>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className='group-users'>\r\n                <div className='group-users--header'>\r\n                    <FormattedMarkdownMessage\r\n                        id='admin.group_settings.group_profile.group_users.ldapConnector'\r\n                        defaultMessage={'AD/LDAP Connector is configured to sync and manage this group and its users. [Click here to view](/admin_console/authentication/ldap)'}\r\n                    />\r\n                </div>\r\n                <div className='group-users--body'>\r\n                    <div className={'group-users-loading ' + (this.state.loading ? 'active' : '')}>\r\n                        <i className='fa fa-spinner fa-pulse fa-2x'/>\r\n                    </div>\r\n                    {this.renderRows()}\r\n                </div>\r\n                {this.renderPagination()}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Modal} from 'react-bootstrap';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport Constants from 'utils/constants.jsx';\r\nimport {localizeMessage, compareChannels} from 'utils/utils.jsx';\r\n\r\nimport MultiSelect from 'components/multiselect/multiselect.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nimport GlobeIcon from 'components/svg/globe_icon';\r\nimport LockIcon from 'components/svg/lock_icon';\r\n\r\nconst CHANNELS_PER_PAGE = 50;\r\n\r\nexport default class ChannelSelectorModal extends React.Component {\r\n    static propTypes = {\r\n        searchTerm: PropTypes.string.isRequired,\r\n        onModalDismissed: PropTypes.func,\r\n        onChannelsSelected: PropTypes.func,\r\n        groupID: PropTypes.string.isRequired,\r\n        actions: PropTypes.shape({\r\n            loadChannels: PropTypes.func.isRequired,\r\n            setModalSearchTerm: PropTypes.func.isRequired,\r\n            searchChannels: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchTimeoutId = 0;\r\n\r\n        this.state = {\r\n            values: [],\r\n            show: true,\r\n            search: false,\r\n            loadingChannels: true,\r\n            channels: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.actions.loadChannels(0, CHANNELS_PER_PAGE + 1, this.props.groupID, true).then((response) => {\r\n            this.setState({channels: response.data.sort(compareChannels)});\r\n            this.setChannelsLoadingState(false);\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) { // eslint-disable-line camelcase\r\n        if (prevProps.searchTerm !== this.props.searchTerm) {\r\n            clearTimeout(this.searchTimeoutId);\r\n\r\n            const searchTerm = this.props.searchTerm;\r\n            if (searchTerm === '') {\r\n                this.props.actions.loadChannels(0, CHANNELS_PER_PAGE + 1, this.props.groupID, true).then((response) => {\r\n                    this.setState({channels: response.data.sort(compareChannels)});\r\n                    this.setChannelsLoadingState(false);\r\n                });\r\n            } else {\r\n                this.searchTimeoutId = setTimeout(\r\n                    async () => {\r\n                        this.setChannelsLoadingState(true);\r\n                        const response = await this.props.actions.searchChannels(searchTerm, this.props.groupID, true);\r\n                        this.setState({channels: response.data});\r\n                        this.setChannelsLoadingState(false);\r\n                    },\r\n                    Constants.SEARCH_TIMEOUT_MILLISECONDS\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    handleHide = () => {\r\n        this.props.actions.setModalSearchTerm('');\r\n        this.setState({show: false});\r\n    }\r\n\r\n    handleExit = () => {\r\n        if (this.props.onModalDismissed) {\r\n            this.props.onModalDismissed();\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if (this.state.values.length === 0) {\r\n            return;\r\n        }\r\n\r\n        this.props.onChannelsSelected(this.state.values);\r\n        this.handleHide();\r\n    }\r\n\r\n    addValue = (value) => {\r\n        const values = Object.assign([], this.state.values);\r\n        if (value && value.id && values.findIndex((v) => v.id === value.id) === -1) {\r\n            values.push(value);\r\n        }\r\n\r\n        this.setState({values});\r\n    }\r\n\r\n    setChannelsLoadingState = (loadingState) => {\r\n        this.setState({\r\n            loadingChannels: loadingState,\r\n        });\r\n    }\r\n\r\n    handlePageChange = (page, prevPage) => {\r\n        if (page > prevPage) {\r\n            this.setChannelsLoadingState(true);\r\n            this.props.actions.loadChannels(page, CHANNELS_PER_PAGE + 1, this.props.groupID, true).then((response) => {\r\n                const newState = [...this.state.channels];\r\n                const stateChannelIDs = this.state.channels.map((stateChannel) => stateChannel.id);\r\n                response.data.forEach((serverChannel) => {\r\n                    if (!stateChannelIDs.includes(serverChannel.id)) {\r\n                        newState.push(serverChannel);\r\n                    }\r\n                });\r\n                this.setState({channels: newState.sort(compareChannels)});\r\n                this.setChannelsLoadingState(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDelete = (values) => {\r\n        this.setState({values});\r\n    }\r\n\r\n    search = (term, multiselectComponent) => {\r\n        if (multiselectComponent.state.page !== 0) {\r\n            multiselectComponent.setState({page: 0});\r\n        }\r\n        this.props.actions.setModalSearchTerm(term);\r\n    }\r\n\r\n    renderOption(option, isSelected, onAdd) {\r\n        let rowSelected = '';\r\n        if (isSelected) {\r\n            rowSelected = 'more-modal__row--selected';\r\n        }\r\n\r\n        return (\r\n            <div\r\n                key={option.id}\r\n                ref={isSelected ? 'selected' : option.id}\r\n                className={'more-modal__row clickable ' + rowSelected}\r\n                onClick={() => onAdd(option)}\r\n            >\r\n                <div\r\n                    className='more-modal__details'\r\n                >\r\n                    {option.type === 'P' &&\r\n                        <LockIcon className='icon icon__lock'/>}\r\n                    {option.type === 'O' &&\r\n                        <GlobeIcon className='icon icon__globe'/>}\r\n                    <span className='channel-name'>{option.display_name}</span>\r\n                    <span className='team-name'>{'(' + option.team_display_name + ')'}</span>\r\n                </div>\r\n                <div className='more-modal__actions'>\r\n                    <div className='more-modal__actions--round'>\r\n                        <i className='fa fa-plus'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderValue(props) {\r\n        return props.data.display_name + ' (' + props.data.team_display_name + ')';\r\n    }\r\n\r\n    render() {\r\n        const numRemainingText = (\r\n            <FormattedMessage\r\n                id='multiselect.selectChannels'\r\n                defaultMessage='Use ↑↓ to browse, ↵ to select.'\r\n            />\r\n        );\r\n\r\n        const buttonSubmitText = localizeMessage('multiselect.add', 'Add');\r\n\r\n        return (\r\n            <Modal\r\n                dialogClassName={'more-modal more-direct-channels channel-selector-modal'}\r\n                show={this.state.show}\r\n                onHide={this.handleHide}\r\n                onExited={this.handleExit}\r\n                role='dialog'\r\n                aria-labelledby='channelSelectorModalLabel'\r\n            >\r\n                <Modal.Header closeButton={true}>\r\n                    <Modal.Title\r\n                        componentClass='h1'\r\n                        id='channelSelectorModalLabel'\r\n                    >\r\n                        <FormattedMarkdownMessage\r\n                            id='add_channels_to_scheme.title'\r\n                            defaultMessage='Add Channels To **Channel Selection** List'\r\n                        />\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <MultiSelect\r\n                        key='addChannelsToSchemeKey'\r\n                        options={this.state.channels}\r\n                        optionRenderer={this.renderOption}\r\n                        values={this.state.values}\r\n                        valueRenderer={this.renderValue}\r\n                        perPage={CHANNELS_PER_PAGE}\r\n                        handlePageChange={this.handlePageChange}\r\n                        handleInput={this.search}\r\n                        handleDelete={this.handleDelete}\r\n                        handleAdd={this.addValue}\r\n                        handleSubmit={this.handleSubmit}\r\n                        numRemainingText={numRemainingText}\r\n                        buttonSubmitText={buttonSubmitText}\r\n                        saving={false}\r\n                        loading={this.state.loadingChannels}\r\n                        placeholderText={localizeMessage('multiselect.addChannelsPlaceholder', 'Search and add channels')}\r\n                    />\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getAllChannels as loadChannels, searchAllChannels} from 'mattermost-redux/actions/channels';\r\n\r\nimport {setModalSearchTerm} from 'actions/views/search';\r\n\r\nimport ChannelSelectorModal from './channel_selector_modal.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        searchTerm: state.views.search.modalSearch,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            loadChannels,\r\n            setModalSearchTerm,\r\n            searchChannels: searchAllChannels,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelSelectorModal);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Groups} from 'mattermost-redux/constants';\r\n\r\nimport {t} from 'utils/i18n';\r\nimport {localizeMessage} from 'utils/utils.jsx';\r\nimport GroupProfile from 'components/admin_console/group_settings/group_details/group_profile';\r\nimport GroupTeamsAndChannels from 'components/admin_console/group_settings/group_details/group_teams_and_channels';\r\nimport GroupUsers from 'components/admin_console/group_settings/group_details/group_users';\r\nimport AdminPanel from 'components/widgets/admin_console/admin_panel.jsx';\r\nimport BlockableLink from 'components/admin_console/blockable_link';\r\n\r\nimport TeamSelectorModal from 'components/team_selector_modal';\r\nimport ChannelSelectorModal from 'components/channel_selector_modal';\r\nimport Menu from 'components/widgets/menu/menu';\r\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\r\nimport MenuItemAction from 'components/widgets/menu/menu_items/menu_item_action';\r\n\r\nexport default class GroupDetails extends React.PureComponent {\r\n    static propTypes = {\r\n        groupID: PropTypes.string.isRequired,\r\n        group: PropTypes.object,\r\n        groupTeams: PropTypes.arrayOf(PropTypes.object),\r\n        groupChannels: PropTypes.arrayOf(PropTypes.object),\r\n        members: PropTypes.arrayOf(PropTypes.object),\r\n        memberCount: PropTypes.number.isRequired,\r\n        actions: PropTypes.shape({\r\n            getGroup: PropTypes.func.isRequired,\r\n            getMembers: PropTypes.func.isRequired,\r\n            getGroupSyncables: PropTypes.func.isRequired,\r\n            link: PropTypes.func.isRequired,\r\n            unlink: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    static defaultProps = {\r\n        members: [],\r\n        groupTeams: [],\r\n        groupChannels: [],\r\n        group: {display_name: ''},\r\n        memberCount: 0,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingTeamsAndChannels: true,\r\n            addTeamOpen: false,\r\n            addChannelOpen: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {groupID, actions} = this.props;\r\n        actions.getGroup(groupID);\r\n        Promise.all([\r\n            actions.getGroupSyncables(groupID, Groups.SYNCABLE_TYPE_TEAM),\r\n            actions.getGroupSyncables(groupID, Groups.SYNCABLE_TYPE_CHANNEL),\r\n        ]).then(() => {\r\n            this.setState({loadingTeamsAndChannels: false});\r\n        });\r\n    }\r\n\r\n    openAddChannel = () => {\r\n        this.setState({addChannelOpen: true});\r\n    }\r\n\r\n    closeAddChannel = () => {\r\n        this.setState({addChannelOpen: false});\r\n    }\r\n\r\n    openAddTeam = () => {\r\n        this.setState({addTeamOpen: true});\r\n    }\r\n\r\n    closeAddTeam = () => {\r\n        this.setState({addTeamOpen: false});\r\n    }\r\n\r\n    addTeams = (teams) => {\r\n        const promises = [];\r\n        for (const team of teams) {\r\n            promises.push(this.props.actions.link(this.props.groupID, team.id, Groups.SYNCABLE_TYPE_TEAM, {auto_add: true}));\r\n        }\r\n        return Promise.all(promises).finally(() => this.props.actions.getGroupSyncables(this.props.groupID, Groups.SYNCABLE_TYPE_TEAM));\r\n    }\r\n\r\n    addChannels = async (channels) => {\r\n        const promises = [];\r\n        for (const channel of channels) {\r\n            promises.push(this.props.actions.link(this.props.groupID, channel.id, Groups.SYNCABLE_TYPE_CHANNEL, {auto_add: true}));\r\n        }\r\n        return Promise.all(promises).finally(() => this.props.actions.getGroupSyncables(this.props.groupID, Groups.SYNCABLE_TYPE_CHANNEL));\r\n    }\r\n\r\n    render = () => {\r\n        const {group, members, groupTeams, groupChannels, memberCount} = this.props;\r\n        return (\r\n            <div className='wrapper--fixed'>\r\n                <div className='admin-console__header with-back'>\r\n                    <div>\r\n                        <BlockableLink\r\n                            to='/admin_console/user_management/groups'\r\n                            className='fa fa-angle-left back'\r\n                        />\r\n                        <FormattedMessage\r\n                            id='admin.group_settings.group_detail.group_configuration'\r\n                            defaultMessage='Group Configuration'\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        <div className='banner info'>\r\n                            <div className='banner__content'>\r\n                                <FormattedMessage\r\n                                    id='admin.group_settings.group_detail.introBanner'\r\n                                    defaultMessage='Configure default teams and channels and view users belonging to this group.'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <AdminPanel\r\n                            id='group_profile'\r\n                            titleId={t('admin.group_settings.group_detail.groupProfileTitle')}\r\n                            titleDefault='Group Profile'\r\n                            subtitleId={t('admin.group_settings.group_detail.groupProfileDescription')}\r\n                            subtitleDefault='The name for this group.'\r\n                        >\r\n                            <GroupProfile\r\n                                name={group.display_name}\r\n                            />\r\n                        </AdminPanel>\r\n\r\n                        <AdminPanel\r\n                            id='group_teams_and_channels'\r\n                            titleId={t('admin.group_settings.group_detail.groupTeamsAndChannelsTitle')}\r\n                            titleDefault='Team and Channel Membership'\r\n                            subtitleId={t('admin.group_settings.group_detail.groupTeamsAndChannelsDescription')}\r\n                            subtitleDefault='Set default teams and channels for group members. Teams added will include default channels, town-square, and off-topic. Adding a channel without setting the team will add the implied team to the listing below.'\r\n                            button={(\r\n                                <div className='group-profile-add-menu'>\r\n                                    <MenuWrapper>\r\n                                        <button className='btn btn-primary'>\r\n                                            <FormattedMessage\r\n                                                id='admin.group_settings.group_details.add_team_or_channel'\r\n                                                defaultMessage='Add Team or Channel'\r\n                                            />\r\n                                            <i className={'fa fa-caret-down'}/>\r\n                                        </button>\r\n                                        <Menu ariaLabel={localizeMessage('admin.group_settings.group_details.menuAriaLabel', 'Add Team or Channel Menu')}>\r\n                                            <MenuItemAction\r\n                                                onClick={this.openAddTeam}\r\n                                                text={localizeMessage('admin.group_settings.group_details.add_team', 'Add Team')}\r\n                                            />\r\n                                            <MenuItemAction\r\n                                                onClick={this.openAddChannel}\r\n                                                text={localizeMessage('admin.group_settings.group_details.add_channel', 'Add Channel')}\r\n                                            />\r\n                                        </Menu>\r\n                                    </MenuWrapper>\r\n                                </div>\r\n                            )}\r\n                        >\r\n                            <GroupTeamsAndChannels\r\n                                id={this.props.groupID}\r\n                                teams={groupTeams}\r\n                                channels={groupChannels}\r\n                                loading={this.state.loadingTeamsAndChannels}\r\n                                getGroupSyncables={this.props.actions.getGroupSyncables}\r\n                                unlink={this.props.actions.unlink}\r\n                            />\r\n                        </AdminPanel>\r\n                        {this.state.addTeamOpen &&\r\n                            <TeamSelectorModal\r\n                                onModalDismissed={this.closeAddTeam}\r\n                                onTeamsSelected={this.addTeams}\r\n                                alreadySelected={this.props.groupTeams.map((team) => team.team_id)}\r\n                            />\r\n                        }\r\n                        {this.state.addChannelOpen &&\r\n                            <ChannelSelectorModal\r\n                                onModalDismissed={this.closeAddChannel}\r\n                                onChannelsSelected={this.addChannels}\r\n                                alreadySelected={this.props.groupChannels.map((channel) => channel.channel_id)}\r\n                                groupID={this.props.groupID}\r\n                            />\r\n                        }\r\n\r\n                        <AdminPanel\r\n                            id='group_users'\r\n                            titleId={t('admin.group_settings.group_detail.groupUsersTitle')}\r\n                            titleDefault='Users'\r\n                            subtitleId={t('admin.group_settings.group_detail.groupUsersDescription')}\r\n                            subtitleDefault='Listing of users in Mattermost associated with this group.'\r\n                        >\r\n                            <GroupUsers\r\n                                members={members}\r\n                                total={memberCount}\r\n                                groupID={this.props.groupID}\r\n                                getMembers={this.props.actions.getMembers}\r\n                            />\r\n                        </AdminPanel>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {linkGroupSyncable, unlinkGroupSyncable, getGroup as fetchGroup, getGroupMembers as fetchMembers, getGroupSyncables as fetchGroupSyncables} from 'mattermost-redux/actions/groups';\r\nimport {getGroup, getGroupTeams, getGroupChannels, getGroupMembers, getGroupMemberCount} from 'mattermost-redux/selectors/entities/groups';\r\n\r\nimport GroupDetails from './group_details.jsx';\r\n\r\nfunction mapStateToProps(state, props) {\r\n    const groupID = props.match.params.group_id;\r\n    const group = getGroup(state, groupID);\r\n    const groupTeams = getGroupTeams(state, groupID);\r\n    const groupChannels = getGroupChannels(state, groupID);\r\n    const members = getGroupMembers(state, groupID);\r\n    const memberCount = getGroupMemberCount(state, groupID);\r\n\r\n    return {\r\n        groupID,\r\n        group,\r\n        groupTeams,\r\n        groupChannels,\r\n        members,\r\n        memberCount,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getGroup: fetchGroup,\r\n            getMembers: fetchMembers,\r\n            getGroupSyncables: fetchGroupSyncables,\r\n            link: linkGroupSyncable,\r\n            unlink: unlinkGroupSyncable,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupDetails);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nexport default class TeamButton extends React.PureComponent {\r\n    render() {\r\n        const {small, teamIconUrl} = this.props;\r\n        const classModifier = small ? 'small' : 'large';\r\n        let content;\r\n        if (teamIconUrl) {\r\n            content = (\r\n                <div className='team-btn__content'>\r\n                    <div\r\n                        className={`team-btn__image team-btn-${classModifier}__image`}\r\n                        style={{backgroundImage: `url('${teamIconUrl}')`}}\r\n                    />\r\n                </div>\r\n            );\r\n        } else {\r\n            let initials = this.props.displayName;\r\n            initials = initials ? initials.replace(/\\s/g, '').substring(0, 2) : '??';\r\n\r\n            content = (\r\n                <div className='team-btn__content'>\r\n                    <div className={`team-btn__initials team-btn-${classModifier}__initials`}>\r\n                        {initials}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className='team-container'\r\n            >\r\n                <div className={`team-btn team-btn-${classModifier}`} >\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTeamButton.propTypes = {\r\n    small: PropTypes.bool,\r\n    teamIconUrl: PropTypes.string,\r\n    displayName: PropTypes.string,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport * as Utils from 'utils/utils';\r\n\r\nimport TeamImage from '../details/team_image.jsx';\r\n\r\nexport default class TeamRow extends React.Component {\r\n    static propTypes = {\r\n        team: PropTypes.object.isRequired,\r\n        onRowClick: PropTypes.func.isRequired,\r\n    };\r\n\r\n    handleRowClick = () => {\r\n        const {team, onRowClick} = this.props;\r\n        onRowClick(team.id);\r\n    }\r\n    render = () => {\r\n        const {team} = this.props;\r\n        const teamIconUrl = Utils.imageURLForTeam(team);\r\n        return (\r\n            <div\r\n                className={'group '}\r\n                onClick={this.handleRowClick}\r\n            >\r\n                <div className='group-row group-row-large'>\r\n                    <div className='group-name'>\r\n                        <div className='col-sm-auto'>\r\n                            <TeamImage\r\n                                small={true}\r\n                                teamIconUrl={teamIconUrl}\r\n                                displayName={team.display_name}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className='col-sm-auto'>\r\n                            <b>{team.display_name}</b>\r\n                            {team.description && (\r\n                                <div\r\n                                    className='overflow--ellipsis text-nowrap'\r\n                                    style={{maxWidth: 500}}\r\n                                >\r\n                                    {team.description}\r\n                                </div>)}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <span className='group-description'>\r\n                        <FormattedMessage\r\n                            id={`admin.team_settings.team_row.managementMethod.${team.group_constrained ? 'group' : 'manual'}`}\r\n                            defaultMessage={team.group_constrained ? 'Group Sync' : 'Manual Invites'}\r\n                        />\r\n                    </span>\r\n                    <span className='group-actions'>\r\n                        <Link to={`/admin_console/user_management/teams/${team.id}`}>\r\n                            <FormattedMessage\r\n                                id='admin.team_settings.team_row.configure'\r\n                                defaultMessage='Edit'\r\n                            />\r\n                        </Link>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport NextIcon from 'components/icon/next_icon';\r\nimport PreviousIcon from 'components/icon/previous_icon';\r\n\r\nconst PAGE_SIZE = 10;\r\n\r\nexport default class AbstractList extends React.PureComponent {\r\n    static propTypes = {\r\n        data: PropTypes.arrayOf(PropTypes.object),\r\n        onPageChangedCallback: PropTypes.func,\r\n        total: PropTypes.number.isRequired,\r\n        header: PropTypes.node.isRequired,\r\n        renderRow: PropTypes.func.isRequired,\r\n        emptyListTextId: PropTypes.string.isRequired,\r\n        emptyListTextDefaultMessage: PropTypes.string.isRequired,\r\n        actions: PropTypes.shape({\r\n            getData: PropTypes.func.isRequired,\r\n            removeGroup: PropTypes.func,\r\n        }).isRequired,\r\n    };\r\n\r\n    static defaultProps = {\r\n        data: [],\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            page: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.performSearch(this.state.page);\r\n    }\r\n\r\n    previousPage = async (e) => {\r\n        e.preventDefault();\r\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\r\n        this.setState({page, loading: true});\r\n        this.performSearch(page);\r\n    }\r\n\r\n    nextPage = async (e) => {\r\n        e.preventDefault();\r\n        const page = this.state.page + 1;\r\n        this.setState({page, loading: true});\r\n        this.performSearch(page);\r\n    }\r\n\r\n    renderRows = () => {\r\n        if (this.state.loading) {\r\n            return (\r\n                <div className='groups-list-loading'>\r\n                    <i className='fa fa-spinner fa-pulse fa-2x'/>\r\n                </div>\r\n            );\r\n        }\r\n        if (this.props.data.length === 0) {\r\n            return (\r\n                <div className='groups-list-empty'>\r\n                    <FormattedMessage\r\n                        id={this.props.emptyListTextId}\r\n                        defaultMessage={this.props.emptyListTextDefaultMessage}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n        return this.props.data.slice(0, PAGE_SIZE).map(this.props.renderRow);\r\n    }\r\n\r\n    performSearch = (page) => {\r\n        const newState = {...this.state};\r\n        delete newState.page;\r\n\r\n        newState.loading = true;\r\n        this.setState(newState);\r\n\r\n        this.props.actions.getData(page, PAGE_SIZE).then(() => {\r\n            if (this.props.onPageChangedCallback) {\r\n                this.props.onPageChangedCallback(this.getPaging());\r\n            }\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n    getPaging() {\r\n        const startCount = (this.state.page * PAGE_SIZE) + 1;\r\n        let endCount = (this.state.page * PAGE_SIZE) + PAGE_SIZE;\r\n        const total = this.props.total;\r\n        if (endCount > total) {\r\n            endCount = total;\r\n        }\r\n        return {startCount, endCount, total};\r\n    }\r\n\r\n    render = () => {\r\n        const {startCount, endCount, total} = this.getPaging();\r\n        const lastPage = endCount === total;\r\n        const firstPage = this.state.page === 0;\r\n        return (\r\n            <div className='groups-list'>\r\n                {this.props.header}\r\n                <div className='groups-list--body'>\r\n                    {this.renderRows()}\r\n                </div>\r\n                <div className='groups-list--footer'>\r\n                    <div className='counter'>\r\n                        <FormattedMessage\r\n                            id='admin.team_channel_settings.list.paginatorCount'\r\n                            defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\r\n                            values={{\r\n                                startCount,\r\n                                endCount,\r\n                                total,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\r\n                        onClick={firstPage ? null : this.previousPage}\r\n                        disabled={firstPage}\r\n                    >\r\n                        <PreviousIcon/>\r\n                    </button>\r\n                    <button\r\n                        className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\r\n                        onClick={lastPage ? null : this.nextPage}\r\n                        disabled={lastPage}\r\n                    >\r\n                        <NextIcon/>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport TeamRow from 'components/admin_console/team_channel_settings/team/list/team_row.jsx';\r\nimport AbstractList from 'components/admin_console/team_channel_settings/abstract_list.jsx';\r\nimport {browserHistory} from 'utils/browser_history';\r\n\r\nconst Header = () => (\r\n    <div className='groups-list--header'>\r\n        <div className='group-name'>\r\n            <FormattedMessage\r\n                id='admin.team_settings.team_list.nameHeader'\r\n                defaultMessage='Name'\r\n            />\r\n        </div>\r\n        <div className='group-description'>\r\n            <FormattedMessage\r\n                id='admin.team_settings.team_list.mappingHeader'\r\n                defaultMessage='Management'\r\n            />\r\n        </div>\r\n        <div className='group-actions'/>\r\n    </div>\r\n);\r\n\r\nexport default class TeamList extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <AbstractList\r\n                header={<Header/>}\r\n                renderRow={this.renderRow}\r\n                {...this.props}\r\n            />);\r\n    }\r\n\r\n    renderRow = (item) => {\r\n        return (\r\n            <TeamRow\r\n                key={item.id}\r\n                team={item}\r\n                onRowClick={this.onTeamClick}\r\n            />\r\n        );\r\n    }\r\n\r\n    onTeamClick = (id) => {\r\n        browserHistory.push(`/admin_console/user_management/teams/${id}`);\r\n    }\r\n}\r\n\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {createSelector} from 'reselect';\r\n\r\nimport {getTeams as fetchTeams} from 'mattermost-redux/actions/teams';\r\nimport {getTeams} from 'mattermost-redux/selectors/entities/teams';\r\n\r\nimport {t} from 'utils/i18n';\r\n\r\nimport TeamList from './team_list.jsx';\r\n\r\nconst getSortedListOfTeams = createSelector(\r\n    getTeams,\r\n    (teams) => Object.values(teams).sort((a, b) => a.name.localeCompare(b.name))\r\n);\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: getSortedListOfTeams(state),\r\n        total: state.entities.teams.totalCount || 0,\r\n        emptyListTextId: t('admin.team_settings.team_list.no_teams_found'),\r\n        emptyListTextDefaultMessage: 'No teams found',\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getData: (page, pageSize) => fetchTeams(page, pageSize, true),\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamList);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {t} from 'utils/i18n';\r\nimport TeamList from 'components/admin_console/team_channel_settings/team/list';\r\nimport AdminPanel from 'components/widgets/admin_console/admin_panel.jsx';\r\n\r\nexport class TeamsSettings extends React.Component {\r\n    static propTypes = {\r\n        siteName: PropTypes.string.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startCount: 0,\r\n            endCount: 1,\r\n            total: 0,\r\n        };\r\n    }\r\n\r\n    onPageChangedCallback = ({startCount, endCount, total}) => {\r\n        this.setState({startCount, endCount, total});\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className='wrapper--fixed'>\r\n                <div className='admin-console__header'>\r\n                    <FormattedMessage\r\n                        id='admin.team_settings.groupsPageTitle'\r\n                        defaultMessage='{siteName} Teams'\r\n                        values={{siteName: this.props.siteName}}\r\n                    />\r\n                </div>\r\n\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        <AdminPanel\r\n                            id='teams'\r\n                            titleId={t('admin.team_settings.title')}\r\n                            titleDefault='Teams'\r\n                            subtitleId={t('admin.team_settings.description')}\r\n                            subtitleDefault={'Showing {startCount, number} - {endCount, number} of {total, number} teams. Search for and [manage team settings](www.mattermost.com/pl/default-team-management.html).'}\r\n                            subtitleValues={{...this.state}}\r\n                        >\r\n                            <TeamList onPageChangedCallback={this.onPageChangedCallback}/>\r\n                        </AdminPanel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {TeamsSettings} from './team_settings';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n    const siteName = config.SiteName;\r\n\r\n    return {\r\n        siteName,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(TeamsSettings);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\n\r\nexport default class RemoveConfirmModal extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Bool whether the modal is shown\r\n         */\r\n        show: PropTypes.bool.isRequired,\r\n\r\n        /*\r\n         * Action to call on confirm\r\n         */\r\n        onConfirm: PropTypes.func.isRequired,\r\n\r\n        /*\r\n         * Action to call on cancel\r\n         */\r\n        onCancel: PropTypes.func.isRequired,\r\n\r\n        /*\r\n         * Indicates if the message is for removal from channel or team\r\n         */\r\n        inChannel: PropTypes.bool.isRequired,\r\n\r\n        /*\r\n         * Number of users to be removed\r\n         */\r\n        amount: PropTypes.number.isRequired,\r\n\r\n    }\r\n\r\n    render() {\r\n        const {amount, inChannel} = this.props;\r\n        const title = (\r\n            <FormattedMessage\r\n                id='admin.team_channel_settings.removeConfirmModal.title'\r\n                defaultMessage='Save and remove {amount} users?'\r\n                values={{amount}}\r\n            />\r\n        );\r\n\r\n        const message = (\r\n            <FormattedMessage\r\n                id='admin.team_channel_settings.removeConfirmModal.message'\r\n                defaultMessage='{amount} users will be removed on the next AD/LDAP synchronization. They are not in groups linked to this {type}. Are you sure you wish to remove these users?'\r\n                values={{amount, type: inChannel ? 'channel' : 'group'}}\r\n            />\r\n        );\r\n\r\n        const buttonClass = 'btn btn-primary';\r\n        const button = (\r\n            <FormattedMessage\r\n                id='admin.team_channel_settings.removeConfirmModal.remove'\r\n                defaultMessage='Save and Remove Users'\r\n            />\r\n        );\r\n\r\n        const modalClass = 'discard-changes-modal';\r\n\r\n        const {show, onConfirm, onCancel} = this.props;\r\n\r\n        return (\r\n            <ConfirmModal\r\n                show={show}\r\n                title={title}\r\n                message={message}\r\n                modalClass={modalClass}\r\n                confirmButtonClass={buttonClass}\r\n                confirmButtonText={button}\r\n                onConfirm={onConfirm}\r\n                onCancel={onCancel}\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {Client4} from 'mattermost-redux/client';\r\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\r\n\r\nimport {t} from 'utils/i18n';\r\nimport * as Utils from 'utils/utils';\r\n\r\nexport default class AdminGroupUsersRow extends React.PureComponent {\r\n    static propTypes = {\r\n        displayName: PropTypes.string.isRequired,\r\n        user: PropTypes.object.isRequired,\r\n        lastPictureUpdate: PropTypes.number.isRequired,\r\n    };\r\n\r\n    renderRolesColumn = (member) => {\r\n        return member.roles.split(' ').map((role) => Utils.localizeMessage('admin.permissions.roles.' + role + '.name', role)).join(', ');\r\n    }\r\n    renderGroupsColumn = (member) => {\r\n        if (member.groups.length === 1) {\r\n            return member.groups[0].display_name;\r\n        }\r\n        return (\r\n            <OverlayTrigger\r\n                placement='top'\r\n                overlay={\r\n                    <Tooltip id='groupsTooltip'>\r\n                        {member.groups.map((g) => g.display_name).join(', ')}\r\n                    </Tooltip>\r\n                }\r\n            >\r\n                <a href='#'>\r\n                    <FormattedMessage\r\n                        id={t('team_channel_settings.group.group_user_row.numberOfGroups')}\r\n                        defaultMessage={'{amount} Groups'}\r\n                        values={{amount: member.groups.length}}\r\n                    />\r\n                </a>\r\n            </OverlayTrigger>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        const {user, lastPictureUpdate, displayName} = this.props;\r\n        return (\r\n            <div\r\n                className={'group '}\r\n            >\r\n                <div\r\n                    className='group-row'\r\n                    style={{padding: '30px 0px'}}\r\n                >\r\n                    <div className='group-name'>\r\n                        <div className='row'>\r\n                            <div className='col-sm-2'>\r\n                                <img\r\n                                    className='group-user-profile-picture'\r\n                                    alt={''}\r\n                                    src={Client4.getProfilePictureUrl(user.id, lastPictureUpdate)}\r\n                                />\r\n                            </div>\r\n                            <div className='col-sm-10'>\r\n                                <div className='row'>\r\n                                    <b>{'@' + user.username}&nbsp;</b>\r\n                                    {'-'}&nbsp;\r\n                                    {displayName}\r\n                                </div>\r\n                                <div className='row'>\r\n                                    {user.email}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <span\r\n                        className='group-user-removal-column group-description'\r\n                    >{this.renderRolesColumn(user)}</span>\r\n                    <span\r\n                        className='group-user-removal-column group-description'\r\n                    >{this.renderGroupsColumn(user)}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport NextIcon from 'components/icon/next_icon';\r\nimport PreviousIcon from 'components/icon/previous_icon';\r\n\r\nimport GroupUsersRow from './group_users_row';\r\n\r\nconst GROUP_MEMBERS_PAGE_SIZE = 10;\r\n\r\nexport default class AdminGroupUsers extends React.PureComponent {\r\n    static propTypes = {\r\n        members: PropTypes.arrayOf(PropTypes.object),\r\n        total: PropTypes.number.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 0,\r\n        };\r\n    }\r\n\r\n    previousPage = async () => {\r\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\r\n        this.setState({page});\r\n    }\r\n\r\n    nextPage = async () => {\r\n        const page = (this.state.page + 1) * GROUP_MEMBERS_PAGE_SIZE >= this.props.total ? this.state.page : this.state.page + 1;\r\n        this.setState({page});\r\n    }\r\n\r\n    renderRows = () =>\r\n        this.props.members.map((member) =>\r\n            (\r\n                <GroupUsersRow\r\n                    key={member.id}\r\n                    user={member}\r\n                    displayName={member.first_name + ' ' + member.last_name}\r\n                    lastPictureUpdate={member.last_picture_update || 0}\r\n                />\r\n            ))\r\n\r\n    renderPagination = () => {\r\n        const {page} = this.state;\r\n        const startCount = (page * GROUP_MEMBERS_PAGE_SIZE) + 1;\r\n        let endCount = (page * GROUP_MEMBERS_PAGE_SIZE) + GROUP_MEMBERS_PAGE_SIZE;\r\n        const total = this.props.total;\r\n        if (endCount > total) {\r\n            endCount = total;\r\n        }\r\n        const lastPage = endCount === total;\r\n        const firstPage = page === 0;\r\n\r\n        return (\r\n            <div className='groups-list--footer'>\r\n                <div className='counter'>\r\n                    <FormattedMessage\r\n                        id='admin.team_channel_settings.list.paginatorCount'\r\n                        defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\r\n                        values={{\r\n                            startCount,\r\n                            endCount,\r\n                            total,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <button\r\n                    className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\r\n                    onClick={this.previousPage}\r\n                    disabled={firstPage}\r\n                >\r\n                    <PreviousIcon/>\r\n                </button>\r\n                <button\r\n                    className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\r\n                    onClick={this.nextPage}\r\n                    disabled={lastPage}\r\n                >\r\n                    <NextIcon/>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className='groups-list'>\r\n                <div className='groups-list--header'>\r\n                    <div className='group-name'>\r\n                        <FormattedMessage\r\n                            id='admin.team_channel_settings.user_list.nameHeader'\r\n                            defaultMessage='Name'\r\n                        />\r\n                    </div>\r\n                    <div className='group-description'>\r\n                        <FormattedMessage\r\n                            id='admin.team_channel_settings.user_list.roleHeader'\r\n                            defaultMessage='Role'\r\n                        />\r\n                    </div>\r\n                    <div className='group-description'>\r\n                        <FormattedMessage\r\n                            id='admin.team_channel_settings.user_list.groupsHeader'\r\n                            defaultMessage='Groups'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='groups-list--body'>\r\n                    {this.renderRows()}\r\n                </div>\r\n\r\n                {this.renderPagination()}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Modal} from 'react-bootstrap';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\n\r\nimport GroupsUsers from './group/group_users.jsx';\r\n\r\nexport default class UsersToBeRemovedModal extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /*\r\n         * Number of users to be removed\r\n         */\r\n        total: PropTypes.number.isRequired,\r\n\r\n        /*\r\n         * users to be removed\r\n         */\r\n        users: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            values: [],\r\n            show: true,\r\n        };\r\n    }\r\n\r\n    handleHide = () => {\r\n        this.setState({show: false});\r\n    }\r\n\r\n    render() {\r\n        const {users, total} = this.props;\r\n        const title = (\r\n            <FormattedMarkdownMessage\r\n                id='admin.team_channel_settings.usersToBeRemovedModal.title'\r\n                defaultMessage='**{total} Users** To Be Removed'\r\n                values={{total}}\r\n            />\r\n        );\r\n\r\n        const message = (\r\n            <FormattedMessage\r\n                id='admin.team_channel_settings.usersToBeRemovedModal.message'\r\n                defaultMessage='The members listed below are not in any of the groups currently linked to this team. Because this team is set to be managed by group sync they will all be removed once saved.'\r\n            />\r\n        );\r\n\r\n        const button = (\r\n            <FormattedMessage\r\n                id='admin.team_channel_settings.usersToBeRemovedModal.close'\r\n                defaultMessage='Close'\r\n            />\r\n        );\r\n\r\n        return (\r\n            <Modal\r\n                dialogClassName={'settings-modal'}\r\n                show={this.state.show}\r\n                onHide={this.handleHide}\r\n                id='confirmModal'\r\n                role='dialog'\r\n                aria-labelledby='confirmModalLabel'\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title\r\n                        componentClass='h1'\r\n                        id='confirmModalLabel'\r\n                    >\r\n                        {title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className='group-users-to-remove-modal-description'>{message}</div>\r\n                    <GroupsUsers\r\n                        members={users}\r\n                        total={total}\r\n                    />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button\r\n                        autoFocus={true}\r\n                        type='button'\r\n                        className='btn btn-primary'\r\n                        onClick={this.handleHide}\r\n                        id='closeModalButton'\r\n                    >\r\n                        {button}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport * as PropTypes from 'prop-types';\r\n\r\nimport FormError from 'components/form_error';\r\n\r\nimport ToggleModalButton from 'components/toggle_modal_button.jsx';\r\n\r\nimport UsersToBeRemovedModal from './users_to_be_removed_modal';\r\n\r\nexport const NeedGroupsError = () => (\r\n    <FormError\r\n        error={(\r\n            <FormattedMessage\r\n                id='admin.team_channel_settings.need_groups'\r\n                defaultMessage='You must add at least one group to manage this team by sync group members.'\r\n            />)}\r\n    />\r\n);\r\n\r\nexport class UsersWillBeRemovedError extends React.PureComponent {\r\n    static propTypes = {\r\n        users: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n        total: PropTypes.number.isRequired,\r\n    }\r\n\r\n    render() {\r\n        const {total, users} = this.props;\r\n        return (\r\n            <FormError\r\n                iconClassName='fa-exclamation-triangle'\r\n                textClassName='has-warning'\r\n                error={(\r\n                    <span>\r\n                        <FormattedMessage\r\n                            id='admin.team_channel_settings.users_will_be_removed'\r\n                            defaultMessage='{amount} Users will be removed from this team. They are not in groups linked to this team.'\r\n                            values={{amount: total}}\r\n                        />\r\n                        <ToggleModalButton\r\n                            className='btn btn-link'\r\n                            dialogType={UsersToBeRemovedModal}\r\n                            dialogProps={{total, users}}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='admin.team_channel_settings.view_removed_users'\r\n                                defaultMessage='View These Users'\r\n                            />\r\n                        </ToggleModalButton>\r\n                    </span>\r\n                )}\r\n            />\r\n\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\nimport React from 'react';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SaveButton from 'components/save_button';\r\nimport {localizeMessage} from 'utils/utils';\r\nimport BlockableLink from 'components/admin_console/blockable_link';\r\n\r\nexport default function SaveChangesPanel({saveNeeded, onClick, saving, serverError, cancelLink}) {\r\n    return (\r\n        <div className='admin-console-save'>\r\n            <SaveButton\r\n                saving={saving}\r\n                disabled={!saveNeeded}\r\n                onClick={onClick}\r\n                savingMessage={localizeMessage('admin.team_channel_settings.saving', 'Saving Config...')}\r\n            />\r\n            <BlockableLink\r\n                className='cancel-button'\r\n                to={cancelLink}\r\n            >\r\n                <FormattedMessage\r\n                    id='admin.team_channel_settings.cancel'\r\n                    defaultMessage='Cancel'\r\n                />\r\n            </BlockableLink>\r\n\r\n            <div className='error-message'>\r\n                {serverError}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nSaveChangesPanel.propTypes = {\r\n    saving: PropTypes.bool.isRequired,\r\n    saveNeeded: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    cancelLink: PropTypes.string.isRequired,\r\n    serverError: PropTypes.node,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {t} from 'utils/i18n';\r\n\r\nimport AdminPanel from 'components/widgets/admin_console/admin_panel.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nimport * as Utils from 'utils/utils';\r\n\r\nimport TeamImage from './team_image.jsx';\r\n\r\nexport function TeamProfile({team}) {\r\n    const teamIconUrl = Utils.imageURLForTeam(team);\r\n\r\n    return (\r\n        <AdminPanel\r\n            id='team_profile'\r\n            titleId={t('admin.team_settings.team_detail.profileTitle')}\r\n            titleDefault='Team Profile'\r\n            subtitleId={t('admin.team_settings.team_detail.profileDescription')}\r\n            subtitleDefault='Summary of the team, including team name and description.'\r\n        >\r\n\r\n            <div className='group-teams-and-channels'>\r\n\r\n                <div className='group-teams-and-channels--body'>\r\n                    <div className='row'>\r\n                        <div className='col-sm-2'>\r\n                            <TeamImage\r\n                                displayName={team.display_name}\r\n                                teamIconUrl={teamIconUrl}\r\n                            />\r\n                        </div>\r\n                        <div className='col-sm-10'>\r\n                            <div className='row'>\r\n                                <FormattedMarkdownMessage\r\n                                    id='admin.team_settings.team_detail.teamName'\r\n                                    defaultMessage='**Team Name**:'\r\n                                />\r\n                                <br/>\r\n                                {team.display_name}\r\n                            </div>\r\n                            <div className='row'>\r\n                                <FormattedMarkdownMessage\r\n                                    id='admin.team_settings.team_detail.teamDescription'\r\n                                    defaultMessage='**Team Description**:'\r\n                                />\r\n                                <br/>\r\n                                {team.description || Utils.localizeMessage('admin.team_settings.team_detail.profileNoDescription', 'No team description added.')}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </AdminPanel>\r\n    );\r\n}\r\n\r\nTeamProfile.propTypes = {\r\n    team: PropTypes.object.isRequired,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Toggle({onToggle, toggled}) {\r\n    return (\r\n        <button\r\n            type='button'\r\n            onClick={onToggle}\r\n            className={`btn btn-lg btn-toggle ${toggled && 'active'}`}\r\n            aria-pressed={toggled ? 'true' : 'false'}\r\n            autoComplete='off'\r\n        >\r\n            <div className='handle'/>\r\n        </button>);\r\n}\r\n\r\nToggle.propTypes = {\r\n    onToggle: PropTypes.func.isRequired,\r\n    toggled: PropTypes.bool,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Toggle from 'components/toggle';\r\n\r\nexport default class LineSwitch extends React.PureComponent {\r\n    static propTypes = {\r\n        title: PropTypes.node.isRequired,\r\n        toggled: PropTypes.bool.isRequired,\r\n        subTitle: PropTypes.node.isRequired,\r\n        onToggle: PropTypes.func.isRequired,\r\n        children: PropTypes.node,\r\n    };\r\n\r\n    render() {\r\n        const {title, subTitle, toggled, onToggle, children} = this.props;\r\n        return (<div className='padding-bottom x2'>\r\n            <div className='row align-items-start'>\r\n                <div className='col-sm-10'>\r\n                    <label className='control-label'>{title}</label>\r\n                </div>\r\n                <div className='col-sm-2'>\r\n                    <Toggle\r\n                        onToggle={onToggle}\r\n                        toggled={toggled}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-sm-10'>\r\n                    <div className='help-text'>{subTitle}</div>\r\n                </div>\r\n            </div>\r\n            {children}\r\n        </div>);\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {t} from 'utils/i18n';\r\nimport AdminPanel from 'components/widgets/admin_console/admin_panel.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nimport LineSwitch from '../../line_switch.jsx';\r\n\r\nconst SyncGroupsToggle = ({syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains, onToggle}) => (\r\n    <LineSwitch\r\n        toggled={syncChecked}\r\n        onToggle={() => onToggle(!syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains)}\r\n        title={(\r\n            <FormattedMessage\r\n                id='admin.team_settings.team_details.syncGroupMembers'\r\n                defaultMessage='Sync Group Members'\r\n            />\r\n        )}\r\n        subTitle={(\r\n            <FormattedMarkdownMessage\r\n                id='admin.team_settings.team_details.syncGroupMembersDescr'\r\n                defaultMessage='When enabled, adding and removing users from groups will add or remove them from this team. The only way of inviting members to this team is by adding the groups they belong to. [Learn More](www.mattermost.com/pl/default-ldap-group-constrained-team-channel.html)'\r\n            />\r\n        )}\r\n    />);\r\n\r\nSyncGroupsToggle.propTypes = {\r\n    syncChecked: PropTypes.bool.isRequired,\r\n    allAllowedChecked: PropTypes.bool.isRequired,\r\n    allowedDomainsChecked: PropTypes.bool.isRequired,\r\n    allowedDomains: PropTypes.string.isRequired,\r\n    onToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nconst AllowAllToggle = ({syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains, onToggle}) =>\r\n    !syncChecked && (\r\n        <LineSwitch\r\n            toggled={allAllowedChecked}\r\n            onToggle={() => onToggle(syncChecked, !allAllowedChecked, allowedDomainsChecked, allowedDomains)}\r\n            title={(\r\n                <FormattedMessage\r\n                    id='admin.team_settings.team_details.anyoneCanJoin'\r\n                    defaultMessage='Anyone can join this team'\r\n                />\r\n            )}\r\n            subTitle={(\r\n                <FormattedMessage\r\n                    id='admin.team_settings.team_details.anyoneCanJoinDescr'\r\n                    defaultMessage='This team can be discovered allowing anyone with an account to join this team.'\r\n                />\r\n            )}\r\n        />);\r\n\r\nAllowAllToggle.propTypes = {\r\n    syncChecked: PropTypes.bool.isRequired,\r\n    allAllowedChecked: PropTypes.bool.isRequired,\r\n    allowedDomainsChecked: PropTypes.bool.isRequired,\r\n    allowedDomains: PropTypes.string.isRequired,\r\n    onToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nconst AllowedDomainsToggle = ({syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains, onToggle}) =>\r\n    !syncChecked && (\r\n        <LineSwitch\r\n            toggled={allowedDomainsChecked}\r\n            onToggle={() => onToggle(syncChecked, allAllowedChecked, !allowedDomainsChecked, allowedDomains)}\r\n            title={(\r\n                <FormattedMessage\r\n                    id='admin.team_settings.team_details.specificDomains'\r\n                    defaultMessage='Only specific email domains can join this team'\r\n                />\r\n            )}\r\n            subTitle={(\r\n                <FormattedMessage\r\n                    id='admin.team_settings.team_details.specificDomainsDescr'\r\n                    defaultMessage='Users can only join the team if their email matches one of the specified domains'\r\n                />\r\n            )}\r\n        >\r\n            <div className='help-text'>\r\n                <FormattedMessage\r\n                    id='admin.team_settings.team_details.csvDomains'\r\n                    defaultMessage='Comma Separated Email Domain List'\r\n                />\r\n            </div>\r\n            <input\r\n                type='text'\r\n                value={allowedDomains}\r\n                placeholder='mattermost.org'\r\n                className='form-control'\r\n                onChange={(e) => this.setToggles(syncChecked, allAllowedChecked, allowedDomainsChecked, e.currentTarget.value)}\r\n            />\r\n        </LineSwitch>);\r\n\r\nAllowedDomainsToggle.propTypes = {\r\n    syncChecked: PropTypes.bool.isRequired,\r\n    allAllowedChecked: PropTypes.bool.isRequired,\r\n    allowedDomainsChecked: PropTypes.bool.isRequired,\r\n    allowedDomains: PropTypes.string.isRequired,\r\n    onToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport const TeamModes = ({allAllowedChecked, syncChecked, allowedDomains, allowedDomainsChecked, onToggle}) => (\r\n    <AdminPanel\r\n        id='team_manage'\r\n        titleId={t('admin.team_settings.team_detail.manageTitle')}\r\n        titleDefault='Team Management'\r\n        subtitleId={t('admin.team_settings.team_detail.manageDescription')}\r\n        subtitleDefault='Choose between inviting members manually or syncing members automatically from groups.'\r\n    >\r\n        <div className='group-teams-and-channels'>\r\n            <div className='group-teams-and-channels--body'>\r\n                <SyncGroupsToggle\r\n                    allAllowedChecked={allAllowedChecked}\r\n                    allowedDomainsChecked={allowedDomainsChecked}\r\n                    allowedDomains={allowedDomains}\r\n                    syncChecked={syncChecked}\r\n                    onToggle={onToggle}\r\n                />\r\n                <AllowAllToggle\r\n                    allAllowedChecked={allAllowedChecked}\r\n                    allowedDomainsChecked={allowedDomainsChecked}\r\n                    allowedDomains={allowedDomains}\r\n                    syncChecked={syncChecked}\r\n                    onToggle={onToggle}\r\n                />\r\n                <AllowedDomainsToggle\r\n                    allAllowedChecked={allAllowedChecked}\r\n                    allowedDomainsChecked={allowedDomainsChecked}\r\n                    allowedDomains={allowedDomains}\r\n                    syncChecked={syncChecked}\r\n                    onToggle={onToggle}\r\n                />\r\n            </div>\r\n        </div>\r\n    </AdminPanel>);\r\n\r\nTeamModes.propTypes = {\r\n    syncChecked: PropTypes.bool.isRequired,\r\n    allAllowedChecked: PropTypes.bool.isRequired,\r\n    allowedDomainsChecked: PropTypes.bool.isRequired,\r\n    onToggle: PropTypes.func.isRequired,\r\n    allowedDomains: PropTypes.string.isRequired,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default class GroupRow extends React.Component {\r\n    static propTypes = {\r\n        group: PropTypes.object.isRequired,\r\n        removeGroup: PropTypes.func.isRequired,\r\n    };\r\n\r\n    removeGroup = () => {\r\n        this.props.removeGroup(this.props.group.id);\r\n    }\r\n\r\n    render = () => {\r\n        const {group} = this.props;\r\n        return (\r\n            <div\r\n                className={'group '}\r\n            >\r\n                <div className='group-row'>\r\n                    <span className='group-name'>\r\n                        {group.display_name || group.name}\r\n                    </span>\r\n                    <span className='group-description'>\r\n                        <FormattedMessage\r\n                            id='admin.team_channel_settings.group_row.members'\r\n                            defaultMessage='{memberCount} members'\r\n                            values={{memberCount: group.member_count}}\r\n                        />\r\n                    </span>\r\n                    <span className='group-actions'>\r\n                        <a\r\n                            href='#'\r\n                            onClick={this.removeGroup}\r\n                        >\r\n                            <FormattedMessage\r\n                                id='admin.team_channel_settings.group_row.remove'\r\n                                defaultMessage='Remove'\r\n                            />\r\n                        </a>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AbstractList from 'components/admin_console/team_channel_settings/abstract_list.jsx';\r\n\r\nimport GroupRow from './group_row';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='groups-list--header'>\r\n            <div className='group-name'>\r\n                <FormattedMessage\r\n                    id='admin.team_channel_settings.group_list.nameHeader'\r\n                    defaultMessage='Name'\r\n                />\r\n            </div>\r\n            <div className='group-description'>\r\n                <FormattedMessage\r\n                    id='admin.team_channel_settings.group_list.membersHeader'\r\n                    defaultMessage='Members'\r\n                />\r\n            </div>\r\n            <div className='group-actions'/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default class GroupList extends React.PureComponent {\r\n    static propTypes = {\r\n        removeGroup: PropTypes.func,\r\n    }\r\n\r\n    renderRow = (item) => {\r\n        return (\r\n            <GroupRow\r\n                key={item.id}\r\n                group={item}\r\n                removeGroup={this.props.removeGroup}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AbstractList\r\n                header={<Header/>}\r\n                renderRow={this.renderRow}\r\n                {...this.props}\r\n            />);\r\n    }\r\n}\r\n\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {t} from 'utils/i18n';\r\n\r\nimport List from './group_list.jsx';\r\n\r\nfunction mapStateToProps(state, {groups, totalGroups, isModeSync, onGroupRemoved}) {\r\n    return {\r\n        data: groups,\r\n        removeGroup: onGroupRemoved,\r\n        emptyListTextId: isModeSync ? t('admin.team_channel_settings.group_list.no-synced-groups') : t('admin.team_channel_settings.group_list.no-groups'),\r\n        emptyListTextDefaultMessage: isModeSync ? 'At least one group must be specified' : 'No groups specified yet',\r\n        total: totalGroups,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps() {\r\n    return {\r\n        actions: {\r\n            getData: () => Promise.resolve(),\r\n        },\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {t} from 'utils/i18n';\r\nimport AdminPanel from 'components/widgets/admin_console/admin_panel.jsx';\r\n\r\nimport ToggleModalButton from 'components/toggle_modal_button.jsx';\r\n\r\nimport AddGroupsToTeamModal from 'components/add_groups_to_team_modal';\r\n\r\nimport GroupList from '../../group';\r\n\r\nexport const TeamGroups = ({onGroupRemoved, syncChecked, team, onAddCallback, totalGroups, groups, removedGroups}) => (\r\n    <AdminPanel\r\n        id='team_groups'\r\n        titleId={syncChecked ? t('admin.team_settings.team_detail.syncedGroupsTitle') : t('admin.team_settings.team_detail.groupsTitle')}\r\n        titleDefault={syncChecked ? 'Synced Groups' : 'Groups'}\r\n        subtitleId={syncChecked ? t('admin.team_settings.team_detail.syncedGroupsDescription') : t('admin.team_settings.team_detail.groupsDescription')}\r\n        subtitleDefault={syncChecked ? 'Add and remove team members based on their group membership.' : 'Group members will be added to the team.'}\r\n        button={\r\n            <ToggleModalButton\r\n                className='btn btn-primary'\r\n                dialogType={AddGroupsToTeamModal}\r\n                dialogProps={{\r\n                    team,\r\n                    onAddCallback,\r\n                    skipCommit: true,\r\n                    excludeGroups: groups,\r\n                    includeGroups: removedGroups,\r\n                }}\r\n            >\r\n                <FormattedMessage\r\n                    id='admin.team_settings.team_details.add_group'\r\n                    defaultMessage='Add Group'\r\n                />\r\n            </ToggleModalButton>}\r\n    >\r\n        <GroupList\r\n            team={team}\r\n            isModeSync={syncChecked}\r\n            groups={groups}\r\n            totalGroups={totalGroups}\r\n            onGroupRemoved={onGroupRemoved}\r\n        />\r\n    </AdminPanel>);\r\n\r\nTeamGroups.propTypes = {\r\n    syncChecked: PropTypes.bool.isRequired,\r\n    team: PropTypes.object.isRequired,\r\n    totalGroups: PropTypes.number.isRequired,\r\n    groups: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    removedGroups: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onAddCallback: PropTypes.func.isRequired,\r\n    onGroupRemoved: PropTypes.func.isRequired,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {Groups} from 'mattermost-redux/constants';\r\n\r\nimport BlockableLink from 'components/admin_console/blockable_link';\r\n\r\nimport FormError from 'components/form_error';\r\n\r\nimport RemoveConfirmModal from '../../remove_confirm_modal';\r\nimport {NeedGroupsError, UsersWillBeRemovedError} from '../../errors';\r\n\r\nimport SaveChangesPanel from '../../save_changes_panel';\r\n\r\nimport {TeamProfile} from './team_profile';\r\nimport {TeamModes} from './team_modes';\r\nimport {TeamGroups} from './team_groups';\r\n\r\nexport default class TeamDetails extends React.Component {\r\n    static propTypes = {\r\n        teamID: PropTypes.string.isRequired,\r\n        team: PropTypes.object.isRequired,\r\n        totalGroups: PropTypes.number.isRequired,\r\n        groups: PropTypes.arrayOf(PropTypes.object),\r\n        allGroups: PropTypes.object.isRequired,\r\n        actions: PropTypes.shape({\r\n            setNavigationBlocked: PropTypes.func.isRequired,\r\n            getTeam: PropTypes.func.isRequired,\r\n            linkGroupSyncable: PropTypes.func.isRequired,\r\n            unlinkGroupSyncable: PropTypes.func.isRequired,\r\n            membersMinusGroupMembers: PropTypes.func.isRequired,\r\n            getGroups: PropTypes.func.isRequired,\r\n            patchTeam: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    static defaultProps = {\r\n        team: {display_name: '', id: ''},\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const team = props.team;\r\n        this.state = {\r\n            groups: props.groups,\r\n            syncChecked: Boolean(team.group_constrained),\r\n            allAllowedChecked: team.allow_open_invite,\r\n            allowedDomainsChecked: team.allowed_domains !== '',\r\n            allowedDomains: team.allowed_domains,\r\n            saving: false,\r\n            showRemoveConfirmation: false,\r\n            usersToRemove: 0,\r\n            totalGroups: props.totalGroups,\r\n            saveNeeded: false,\r\n            serverError: null,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) { // TODO: find out how to do this without the lifecycle\r\n        if (prevProps.totalGroups !== this.props.totalGroups) {\r\n            // eslint-disable-next-line react/no-did-update-set-state\r\n            this.setState({totalGroups: this.props.totalGroups});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {teamID, actions} = this.props;\r\n        actions.getTeam(teamID).\r\n            then(() => actions.getGroups(teamID)).\r\n            then(() => this.setState({groups: this.props.groups}));\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        this.setState({showRemoveConfirmation: false, saving: true});\r\n        const {groups, allAllowedChecked, allowedDomainsChecked, allowedDomains, syncChecked} = this.state;\r\n\r\n        let serverError = null;\r\n        let saveNeeded = false;\r\n\r\n        const {team, groups: origGroups, teamID, actions} = this.props;\r\n        if (this.state.groups.length === 0 && syncChecked) {\r\n            serverError = <NeedGroupsError/>;\r\n            saveNeeded = true;\r\n        } else {\r\n            const {error} = await actions.patchTeam({\r\n                ...team,\r\n                group_constrained: syncChecked,\r\n                allowed_domains: allowedDomainsChecked ? allowedDomains : '',\r\n                allow_open_invite: allAllowedChecked,\r\n            });\r\n            if (error) {\r\n                serverError = <FormError error={error.message}/>;\r\n            } else {\r\n                const unlink = origGroups.filter((g) => !groups.includes(g)).map((g) => actions.unlinkGroupSyncable(g.id, teamID, Groups.SYNCABLE_TYPE_TEAM));\r\n                const link = groups.filter((g) => !origGroups.includes(g)).map((g) => actions.linkGroupSyncable(g.id, teamID, Groups.SYNCABLE_TYPE_TEAM));\r\n                const result = await Promise.all([...unlink, ...link]);\r\n                const resultWithError = result.find((r) => r.error);\r\n                if (resultWithError) {\r\n                    serverError = <FormError error={resultWithError.error.message}/>;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({serverError, saving: false, saveNeeded});\r\n        actions.setNavigationBlocked(saveNeeded);\r\n    }\r\n\r\n    setToggles = (syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains) => {\r\n        this.setState({\r\n            saveNeeded: true,\r\n            syncChecked,\r\n            allAllowedChecked: !syncChecked && allAllowedChecked,\r\n            allowedDomainsChecked: !syncChecked && allowedDomainsChecked,\r\n            allowedDomains,\r\n        }, () => {\r\n            if (syncChecked) {\r\n                this.processGroupsChange(this.state.groups);\r\n            }\r\n        });\r\n        this.props.actions.setNavigationBlocked(true);\r\n    }\r\n\r\n    async processGroupsChange(groups) {\r\n        const {teamID, actions} = this.props;\r\n        actions.setNavigationBlocked(true);\r\n\r\n        let serverError = null;\r\n        let usersToRemove = 0;\r\n        if (this.state.syncChecked) {\r\n            try {\r\n                if (groups.length === 0) {\r\n                    serverError = <NeedGroupsError/>;\r\n                } else {\r\n                    const result = await actions.membersMinusGroupMembers(teamID, groups.map((g) => g.id));\r\n                    usersToRemove = result.data.total_count;\r\n                    if (usersToRemove > 0) {\r\n                        serverError = (\r\n                            <UsersWillBeRemovedError\r\n                                total={usersToRemove}\r\n                                users={result.data.users}\r\n                            />\r\n                        );\r\n                    }\r\n                }\r\n            } catch (ex) {\r\n                serverError = ex;\r\n            }\r\n        }\r\n        this.setState({groups, usersToRemove, saveNeeded: true, serverError});\r\n    }\r\n\r\n    handleGroupRemoved = (gid) => {\r\n        const groups = this.state.groups.filter((g) => g.id !== gid);\r\n        this.setState({totalGroups: this.state.totalGroups - 1});\r\n        this.processGroupsChange(groups);\r\n    }\r\n\r\n    handleGroupChange = (groupIDs) => {\r\n        const groups = [...this.state.groups, ...groupIDs.map((gid) => this.props.allGroups[gid])];\r\n        this.setState({totalGroups: this.state.totalGroups + groupIDs.length});\r\n        this.processGroupsChange(groups);\r\n    }\r\n\r\n    hideRemoveUsersModal = () => {\r\n        this.setState({showRemoveConfirmation: false});\r\n    }\r\n    showRemoveUsersModal = () => {\r\n        if (this.state.usersToRemove > 0) {\r\n            this.setState({showRemoveConfirmation: true});\r\n        } else {\r\n            this.handleSubmit();\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const {team} = this.props;\r\n        const {totalGroups, saving, saveNeeded, serverError, groups, allAllowedChecked, allowedDomainsChecked, allowedDomains, syncChecked, showRemoveConfirmation, usersToRemove} = this.state;\r\n        const removedGroups = this.props.groups.filter((g) => !groups.includes(g));\r\n\r\n        return (\r\n            <div className='wrapper--fixed'>\r\n                <div className='admin-console__header with-back'>\r\n                    <div>\r\n                        <BlockableLink\r\n                            to='/admin_console/user_management/teams'\r\n                            className='fa fa-angle-left back'\r\n                        />\r\n                        <FormattedMessage\r\n                            id='admin.team_settings.team_detail.group_configuration'\r\n                            defaultMessage='Team Configuration'\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        <RemoveConfirmModal\r\n                            amount={usersToRemove}\r\n                            inChannel={false}\r\n                            show={showRemoveConfirmation}\r\n                            onCancel={this.hideRemoveUsersModal}\r\n                            onConfirm={this.handleSubmit}\r\n                        />\r\n                        <TeamProfile\r\n                            team={team}\r\n                        />\r\n\r\n                        <TeamModes\r\n                            allAllowedChecked={allAllowedChecked}\r\n                            allowedDomainsChecked={allowedDomainsChecked}\r\n                            allowedDomains={allowedDomains}\r\n                            syncChecked={syncChecked}\r\n                            onToggle={this.setToggles}\r\n                        />\r\n\r\n                        <TeamGroups\r\n                            syncChecked={syncChecked}\r\n                            team={team}\r\n                            groups={groups}\r\n                            removedGroups={removedGroups}\r\n                            totalGroups={totalGroups}\r\n                            onAddCallback={this.handleGroupChange}\r\n                            onGroupRemoved={this.handleGroupRemoved}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <SaveChangesPanel\r\n                    saving={saving}\r\n                    cancelLink='/admin_console/user_management/teams'\r\n                    saveNeeded={saveNeeded}\r\n                    onClick={this.showRemoveUsersModal}\r\n                    serverError={serverError}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getTeam} from 'mattermost-redux/selectors/entities/teams';\r\n\r\nimport {getTeam as fetchTeam, membersMinusGroupMembers, patchTeam} from 'mattermost-redux/actions/teams';\r\n\r\nimport {getAllGroups, getGroupsAssociatedToTeam} from 'mattermost-redux/selectors/entities/groups';\r\n\r\nimport {\r\n    getGroupsAssociatedToTeam as fetchAssociatedGroups,\r\n    linkGroupSyncable,\r\n    unlinkGroupSyncable,\r\n} from 'mattermost-redux/actions/groups';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {setNavigationBlocked} from 'actions/admin_actions';\r\n\r\nimport TeamDetails from './team_details';\r\n\r\nfunction mapStateToProps(state, props) {\r\n    const teamID = props.match.params.team_id;\r\n    const team = getTeam(state, teamID);\r\n    const groups = getGroupsAssociatedToTeam(state, teamID);\r\n    const totalGroups = state.entities.teams.groupsAssociatedToTeam && state.entities.teams.groupsAssociatedToTeam[teamID] ? state.entities.teams.groupsAssociatedToTeam[teamID].totalCount : 0;\r\n    const allGroups = getAllGroups(state, teamID);\r\n    return {\r\n        team,\r\n        groups,\r\n        totalGroups,\r\n        allGroups,\r\n        teamID,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getTeam: fetchTeam,\r\n            getGroups: fetchAssociatedGroups,\r\n            patchTeam,\r\n            linkGroupSyncable,\r\n            unlinkGroupSyncable,\r\n            membersMinusGroupMembers,\r\n            setNavigationBlocked,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamDetails);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {Constants} from 'utils/constants';\r\nimport GlobeIcon from 'components/svg/globe_icon';\r\nimport LockIcon from 'components/svg/lock_icon';\r\n\r\nexport default class ChannelRow extends React.Component {\r\n    static propTypes = {\r\n        channel: PropTypes.object.isRequired,\r\n        onRowClick: PropTypes.func.isRequired,\r\n    };\r\n\r\n    handleRowClick = () => {\r\n        const {channel, onRowClick} = this.props;\r\n        onRowClick(channel.id);\r\n    }\r\n    render = () => {\r\n        const {channel} = this.props;\r\n        return (\r\n            <div\r\n                className={'group '}\r\n                onClick={this.handleRowClick}\r\n            >\r\n                <div className='group-row'>\r\n                    <span className='group-name'>\r\n                        {channel.type === Constants.PRIVATE_CHANNEL ? <LockIcon className='channel-icon channel-icon__lock'/> : <GlobeIcon className='channel-icon channel-icon__globe'/>}\r\n                        {channel.name}\r\n                    </span>\r\n                    <span className='group-description'>\r\n                        {channel.team_name}\r\n                    </span>\r\n                    <span className='group-description'>\r\n                        <FormattedMessage\r\n                            id={`admin.channel_settings.channel_row.managementMethod.${channel.group_constrained ? 'group' : 'manual'}`}\r\n                            defaultMessage={channel.group_constrained ? 'Group Sync' : 'Manual Invites'}\r\n                        />\r\n                    </span>\r\n                    <span className='group-actions'>\r\n                        <Link to={`/admin_console/user_management/channels/${channel.id}`}>\r\n                            <FormattedMessage\r\n                                id='admin.channel_settings.channel_row.configure'\r\n                                defaultMessage='Edit'\r\n                            />\r\n                        </Link>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport AbstractList from 'components/admin_console/team_channel_settings/abstract_list.jsx';\r\nimport {browserHistory} from 'utils/browser_history';\r\n\r\nimport ChannelRow from './channel_row';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='groups-list--header'>\r\n            <div className='group-name'>\r\n                <FormattedMessage\r\n                    id='admin.channel_settings.channel_list.nameHeader'\r\n                    defaultMessage='Name'\r\n                />\r\n            </div>\r\n            <div className='group-description'>\r\n                <FormattedMessage\r\n                    id='admin.channel_settings.channel_list.teamHeader'\r\n                    defaultMessage='Team'\r\n                />\r\n            </div>\r\n            <div className='group-description'>\r\n                <FormattedMessage\r\n                    id='admin.channel_settings.channel_list.managementHeader'\r\n                    defaultMessage='Management'\r\n                />\r\n            </div>\r\n            <div className='group-actions'/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default class ChannelList extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <AbstractList\r\n                header={<Header/>}\r\n                renderRow={this.renderRow}\r\n                {...this.props}\r\n            />);\r\n    }\r\n\r\n    renderRow = (item) => {\r\n        return (\r\n            <ChannelRow\r\n                key={item.id}\r\n                channel={item}\r\n                onRowClick={this.onChannelClick}\r\n            />\r\n        );\r\n    }\r\n\r\n    onChannelClick = (id) => {\r\n        browserHistory.push(`/admin_console/user_management/channels/${id}`);\r\n    }\r\n}\r\n\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {createSelector} from 'reselect';\r\n\r\nimport {getAllChannelsWithCount as getData} from 'mattermost-redux/actions/channels';\r\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\r\n\r\nimport {t} from 'utils/i18n';\r\n\r\nimport {Constants} from 'utils/constants';\r\n\r\nimport List from './channel_list.jsx';\r\n\r\nconst compareByTypeAndName = (a, b) => {\r\n    if (a.type === b.type) {\r\n        return a.name.localeCompare(b.name);\r\n    }\r\n    return a.type === Constants.OPEN_CHANNEL ? 1 : -1;\r\n};\r\n\r\nconst getSortedListOfChannels = createSelector(\r\n    getAllChannels,\r\n    (teams) => Object.values(teams).\r\n        filter((c) => c.type === Constants.OPEN_CHANNEL || c.type === Constants.PRIVATE_CHANNEL).\r\n        sort(compareByTypeAndName)\r\n);\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: getSortedListOfChannels(state),\r\n        total: state.entities.channels.totalCount,\r\n        emptyListTextId: t('admin.channel_settings.channel_list.no_channels_found'),\r\n        emptyListTextDefaultMessage: 'No channels found',\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getData,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {t} from 'utils/i18n';\r\nimport ChannelsList from 'components/admin_console/team_channel_settings/channel/list';\r\nimport AdminPanel from 'components/widgets/admin_console/admin_panel.jsx';\r\n\r\nexport class ChannelsSettings extends React.Component {\r\n    static propTypes = {\r\n        siteName: PropTypes.string.isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startCount: 0,\r\n            endCount: 1,\r\n            total: 0,\r\n        };\r\n    }\r\n\r\n    onPageChangedCallback = ({startCount, endCount, total}) => {\r\n        this.setState({startCount, endCount, total});\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className='wrapper--fixed'>\r\n                <div className='admin-console__header'>\r\n                    <FormattedMessage\r\n                        id='admin.channel_settings.groupsPageTitle'\r\n                        defaultMessage='{siteName} Channels'\r\n                        values={{siteName: this.props.siteName}}\r\n                    />\r\n                </div>\r\n\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        <AdminPanel\r\n                            id='channels'\r\n                            titleId={t('admin.channel_settings.title')}\r\n                            titleDefault='Channels'\r\n                            subtitleId={t('admin.channel_settings.description')}\r\n                            subtitleDefault={'Showing {startCount, number} - {endCount, number} of {total, number} channels. Search for and manage channel settings.'}\r\n                            subtitleValues={{...this.state}}\r\n                        >\r\n                            <ChannelsList onPageChangedCallback={this.onPageChangedCallback}/>\r\n                        </AdminPanel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {ChannelsSettings} from './channel_settings';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n    const siteName = config.SiteName;\r\n\r\n    return {\r\n        siteName,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChannelsSettings);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {t} from 'utils/i18n';\r\n\r\nimport AdminPanel from 'components/widgets/admin_console/admin_panel.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\nimport LineSwitch from '../../line_switch';\r\n\r\nconst SyncGroupsToggle = ({isSynced, isPublic, onToggle}) => (\r\n    <LineSwitch\r\n        toggled={isSynced}\r\n        onToggle={() => onToggle(!isSynced, isPublic)}\r\n        title={(\r\n            <FormattedMessage\r\n                id='admin.channel_settings.channel_details.syncGroupMembers'\r\n                defaultMessage='Sync Group Members'\r\n            />\r\n        )}\r\n        subTitle={(\r\n            <FormattedMarkdownMessage\r\n                id='admin.channel_settings.channel_details.syncGroupMembersDescr'\r\n                defaultMessage='When enabled, adding and removing users from groups will add or remove them from this channel. The only way of inviting members to this channel is by adding the groups they belong to. [Learn More](www.mattermost.com/pl/default-ldap-group-constrained-team-channel.html)'\r\n            />\r\n        )}\r\n    />);\r\n\r\nSyncGroupsToggle.propTypes = {\r\n    isPublic: PropTypes.bool.isRequired,\r\n    isSynced: PropTypes.bool.isRequired,\r\n    onToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nconst AllowAllToggle = ({isSynced, isPublic, onToggle}) =>\r\n    !isSynced && (\r\n        <LineSwitch\r\n            toggled={isPublic}\r\n            onToggle={() => onToggle(isSynced, !isPublic)}\r\n            title={(\r\n                <FormattedMessage\r\n                    id='admin.channel_settings.channel_details.isPublic'\r\n                    defaultMessage='Public channel or private channel'\r\n                />\r\n            )}\r\n            subTitle={(\r\n                <FormattedMessage\r\n                    id='admin.channel_settings.channel_details.isPublicDescr'\r\n                    defaultMessage='If `public` the channel is discoverable and any user can join, or if `private` invitations are required.'\r\n                />\r\n            )}\r\n        />);\r\n\r\nAllowAllToggle.propTypes = {\r\n    isPublic: PropTypes.bool.isRequired,\r\n    isSynced: PropTypes.bool.isRequired,\r\n    onToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport const ChannelModes = ({isPublic, isSynced, onToggle}) => (\r\n    <AdminPanel\r\n        id='channel_manage'\r\n        titleId={t('admin.channel_settings.channel_detail.manageTitle')}\r\n        titleDefault='Channel Management'\r\n        subtitleId={t('admin.channel_settings.channel_detail.manageDescription')}\r\n        subtitleDefault='Choose between inviting members manually or syncing members automatically from groups.'\r\n    >\r\n        <div className='group-teams-and-channels'>\r\n            <div className='group-teams-and-channels--body'>\r\n                <SyncGroupsToggle\r\n                    isPublic={isPublic}\r\n                    isSynced={isSynced}\r\n                    onToggle={onToggle}\r\n                />\r\n                <AllowAllToggle\r\n                    isPublic={isPublic}\r\n                    isSynced={isSynced}\r\n                    onToggle={onToggle}\r\n                />\r\n            </div>\r\n        </div>\r\n    </AdminPanel>);\r\n\r\nChannelModes.propTypes = {\r\n    isPublic: PropTypes.bool.isRequired,\r\n    isSynced: PropTypes.bool.isRequired,\r\n    onToggle: PropTypes.func.isRequired,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {t} from 'utils/i18n';\r\n\r\nimport AdminPanel from 'components/widgets/admin_console/admin_panel.jsx';\r\nimport ToggleModalButton from 'components/toggle_modal_button';\r\nimport AddGroupsToChannelModal from 'components/add_groups_to_channel_modal';\r\nimport GroupList from '../../group';\r\n\r\nexport const ChannelGroups = ({onGroupRemoved, onAddCallback, totalGroups, groups, removedGroups, channel, synced}) => (\r\n    <AdminPanel\r\n        id='channel_groups'\r\n        titleId={synced ? t('admin.channel_settings.channel_detail.syncedGroupsTitle') : t('admin.channel_settings.channel_detail.groupsTitle')}\r\n        titleDefault={synced ? 'Synced Groups' : 'Groups'}\r\n        subtitleId={synced ? t('admin.channel_settings.channel_detail.syncedGroupsDescription') : t('admin.channel_settings.channel_detail.groupsDescription')}\r\n        subtitleDefault={synced ? 'Add and remove channel members based on their group membership.' : 'Group members will be added to the channel.'}\r\n        button={\r\n            <ToggleModalButton\r\n                className='btn btn-primary'\r\n                dialogType={AddGroupsToChannelModal}\r\n                dialogProps={{\r\n                    channel,\r\n                    onAddCallback,\r\n                    skipCommit: true,\r\n                    includeGroups: removedGroups,\r\n                    excludeGroups: groups,\r\n                }}\r\n            >\r\n                <FormattedMessage\r\n                    id='admin.channel_settings.channel_details.add_group'\r\n                    defaultMessage='Add Group'\r\n                />\r\n            </ToggleModalButton>}\r\n    >\r\n        {channel.id && (\r\n            <GroupList\r\n                channel={channel}\r\n                groups={groups}\r\n                totalGroups={totalGroups}\r\n                onGroupRemoved={onGroupRemoved}\r\n                isModeSync={synced}\r\n            />\r\n        )}\r\n\r\n    </AdminPanel>);\r\n\r\nChannelGroups.propTypes = {\r\n    synced: PropTypes.bool.isRequired,\r\n    channel: PropTypes.object.isRequired,\r\n    onAddCallback: PropTypes.func.isRequired,\r\n    totalGroups: PropTypes.number.isRequired,\r\n    groups: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    removedGroups: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onGroupRemoved: PropTypes.func.isRequired,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {t} from 'utils/i18n';\r\n\r\nimport AdminPanel from 'components/widgets/admin_console/admin_panel.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nexport const ChannelProfile = (props) => (\r\n    <AdminPanel\r\n        id='channel_profile'\r\n        titleId={t('admin.channel_settings.channel_detail.profileTitle')}\r\n        titleDefault='Channel Profile'\r\n        subtitleId={t('admin.channel_settings.channel_detail.profileDescription')}\r\n        subtitleDefault='Summary of the channel, including the channel name.'\r\n    >\r\n\r\n        <div className='group-teams-and-channels'>\r\n\r\n            <div className='group-teams-and-channels--body'>\r\n                <FormattedMarkdownMessage\r\n                    id='admin.channel_settings.channel_detail.channelName'\r\n                    defaultMessage='**Name**'\r\n                />\r\n                <br/>\r\n                {props.channel.name}\r\n            </div>\r\n        </div>\r\n\r\n    </AdminPanel>);\r\n\r\nChannelProfile.propTypes = {\r\n    channel: PropTypes.object.isRequired,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {Groups} from 'mattermost-redux/constants';\r\n\r\nimport BlockableLink from 'components/admin_console/blockable_link';\r\nimport FormError from 'components/form_error';\r\nimport Constants from 'utils/constants';\r\n\r\nimport {NeedGroupsError, UsersWillBeRemovedError} from '../../errors';\r\nimport RemoveConfirmModal from '../../remove_confirm_modal';\r\nimport SaveChangesPanel from '../../save_changes_panel';\r\n\r\nimport {ChannelModes} from './channel_modes';\r\nimport {ChannelGroups} from './channel_groups';\r\nimport {ChannelProfile} from './channel_profile';\r\n\r\nexport default class ChannelDetails extends React.Component {\r\n    static propTypes = {\r\n        channelID: PropTypes.string.isRequired,\r\n        channel: PropTypes.object.isRequired,\r\n        groups: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n        totalGroups: PropTypes.number.isRequired,\r\n        allGroups: PropTypes.object.isRequired,\r\n        actions: PropTypes.shape({\r\n            getGroups: PropTypes.func.isRequired,\r\n            linkGroupSyncable: PropTypes.func.isRequired,\r\n            unlinkGroupSyncable: PropTypes.func.isRequired,\r\n            membersMinusGroupMembers: PropTypes.func.isRequired,\r\n            setNavigationBlocked: PropTypes.func.isRequired,\r\n            getChannel: PropTypes.func.isRequired,\r\n            patchChannel: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    static defaultProps = {\r\n        channel: {display_name: '', id: ''},\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSynced: Boolean(props.channel.group_constrained),\r\n            isPublic: props.channel.type === Constants.OPEN_CHANNEL,\r\n            saving: false,\r\n            totalGroups: props.totalGroups,\r\n            showRemoveConfirmation: false,\r\n            usersToRemove: 0,\r\n            groups: props.groups,\r\n            saveNeeded: false,\r\n            serverError: null,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) { // TODO: find out how to do this without the lifecycle\r\n        if (prevProps.totalGroups !== this.props.totalGroups) {\r\n            // eslint-disable-next-line react/no-did-update-set-state\r\n            this.setState({totalGroups: this.props.totalGroups});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {channelID, actions} = this.props;\r\n        actions.getChannel(channelID).\r\n            then(() => actions.getGroups(channelID)).\r\n            then(() => this.setState({groups: this.props.groups}));\r\n    }\r\n\r\n    setToggles = (isSynced, isPublic) => {\r\n        this.setState({\r\n            saveNeeded: true,\r\n            isSynced,\r\n            isPublic: !isSynced && isPublic,\r\n        });\r\n        this.props.actions.setNavigationBlocked(true);\r\n    }\r\n\r\n    processGroupsChange(groups) {\r\n        const {actions, channelID} = this.props;\r\n        actions.setNavigationBlocked(true);\r\n\r\n        let serverError = null;\r\n        let usersToRemove = 0;\r\n        if (this.state.isSynced) {\r\n            try {\r\n                if (groups.length === 0) {\r\n                    serverError = <NeedGroupsError/>;\r\n                } else {\r\n                    actions.membersMinusGroupMembers(channelID, groups.map((g) => g.id)).then((result) => {\r\n                        usersToRemove = result.data.total_count;\r\n                        if (usersToRemove > 0) {\r\n                            serverError = (\r\n                                <UsersWillBeRemovedError\r\n                                    total={usersToRemove}\r\n                                    users={result.data.users}\r\n                                />\r\n                            );\r\n                        }\r\n                    });\r\n                }\r\n            } catch (ex) {\r\n                serverError = ex;\r\n            }\r\n        }\r\n        this.setState({groups, usersToRemove, saveNeeded: true, serverError});\r\n    }\r\n\r\n    handleGroupRemoved = (gid) => {\r\n        const groups = this.state.groups.filter((g) => g.id !== gid);\r\n        this.setState({totalGroups: this.state.totalGroups - 1});\r\n\r\n        this.processGroupsChange(groups);\r\n    }\r\n\r\n    handleGroupChange = (groupIDs) => {\r\n        const groups = [...this.state.groups, ...groupIDs.map((gid) => this.props.allGroups[gid])];\r\n        this.setState({totalGroups: this.state.totalGroups + groupIDs.length});\r\n\r\n        this.processGroupsChange(groups);\r\n    }\r\n\r\n    hideRemoveUsersModal = () => {\r\n        this.setState({showRemoveConfirmation: false});\r\n    }\r\n    showRemoveUsersModal = () => {\r\n        if (this.state.usersToRemove > 0) {\r\n            this.setState({showRemoveConfirmation: true});\r\n        } else {\r\n            this.handleSubmit();\r\n        }\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        this.setState({showRemoveConfirmation: false, saving: true});\r\n        const {groups, isSynced, isPublic} = this.state;\r\n\r\n        let serverError = null;\r\n        let saveNeeded = false;\r\n\r\n        const {groups: origGroups, channelID, actions, channel} = this.props;\r\n        if (this.state.groups.length === 0 && isSynced) {\r\n            serverError = <NeedGroupsError/>;\r\n            saveNeeded = true;\r\n        } else {\r\n            const {error} = await actions.patchChannel(channel.id, {\r\n                ...channel,\r\n                group_constrained: isSynced,\r\n                type: isPublic ? Constants.OPEN_CHANNEL : Constants.PRIVATE_CHANNEL,\r\n            });\r\n            if (error) {\r\n                serverError = <FormError error={error.message}/>;\r\n            } else {\r\n                const unlink = origGroups.filter((g) => !groups.includes(g)).map((g) => actions.unlinkGroupSyncable(g.id, channelID, Groups.SYNCABLE_TYPE_CHANNEL));\r\n                const link = groups.filter((g) => !origGroups.includes(g)).map((g) => actions.linkGroupSyncable(g.id, channelID, Groups.SYNCABLE_TYPE_CHANNEL));\r\n                const result = await Promise.all([...unlink, ...link]);\r\n                const resultWithError = result.find((r) => r.error);\r\n                if (resultWithError) {\r\n                    serverError = <FormError error={resultWithError.error.message}/>;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({serverError, saving: false, saveNeeded});\r\n        actions.setNavigationBlocked(saveNeeded);\r\n    }\r\n\r\n    render = () => {\r\n        const {totalGroups, saving, saveNeeded, serverError, isSynced, isPublic, groups, showRemoveConfirmation, usersToRemove} = this.state;\r\n        const {channel} = this.props;\r\n        const removedGroups = this.props.groups.filter((g) => !groups.includes(g));\r\n\r\n        return (\r\n            <div className='wrapper--fixed'>\r\n                <div className='admin-console__header with-back'>\r\n                    <div>\r\n                        <BlockableLink\r\n                            to='/admin_console/user_management/channels'\r\n                            className='fa fa-angle-left back'\r\n                        />\r\n                        <FormattedMessage\r\n                            id='admin.channel_settings.channel_detail.channel_configuration'\r\n                            defaultMessage='Channel Configuration'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='admin-console__wrapper'>\r\n                    <div className='admin-console__content'>\r\n                        <RemoveConfirmModal\r\n                            amount={usersToRemove}\r\n                            inChannel={false}\r\n                            show={showRemoveConfirmation}\r\n                            onCancel={this.hideRemoveUsersModal}\r\n                            onConfirm={this.handleSubmit}\r\n                        />\r\n                        <ChannelProfile channel={channel}/>\r\n\r\n                        <ChannelModes\r\n                            isPublic={isPublic}\r\n                            isSynced={isSynced}\r\n                            onToggle={this.setToggles}\r\n                        />\r\n\r\n                        <ChannelGroups\r\n                            synced={isSynced}\r\n                            channel={channel}\r\n                            totalGroups={totalGroups}\r\n                            groups={groups}\r\n                            removedGroups={removedGroups}\r\n                            onAddCallback={this.handleGroupChange}\r\n                            onGroupRemoved={this.handleGroupRemoved}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <SaveChangesPanel\r\n                    saving={saving}\r\n                    saveNeeded={saveNeeded}\r\n                    onClick={this.showRemoveUsersModal}\r\n                    serverError={serverError}\r\n                    cancelLink='/admin_console/user_management/channels'\r\n                />\r\n\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getChannel} from 'mattermost-redux/selectors/entities/channels';\r\nimport {getAllGroups, getGroupsAssociatedToChannel} from 'mattermost-redux/selectors/entities/groups';\r\nimport {getChannel as fetchChannel, membersMinusGroupMembers, patchChannel} from 'mattermost-redux/actions/channels';\r\nimport {\r\n    getGroupsAssociatedToChannel as fetchAssociatedGroups,\r\n    linkGroupSyncable,\r\n    unlinkGroupSyncable,\r\n} from 'mattermost-redux/actions/groups';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {setNavigationBlocked} from 'actions/admin_actions';\r\n\r\nimport ChannelDetails from './channel_details';\r\n\r\nfunction mapStateToProps(state, props) {\r\n    const channelID = props.match.params.channel_id;\r\n    const channel = getChannel(state, channelID) || {};\r\n    const groups = getGroupsAssociatedToChannel(state, channelID);\r\n    const allGroups = getAllGroups(state, channel.team_id);\r\n    const totalGroups = state.entities.channels.groupsAssociatedToChannel && state.entities.channels.groupsAssociatedToChannel[channelID] ? state.entities.channels.groupsAssociatedToChannel[channelID].totalCount : 0;\r\n    return {\r\n        channel,\r\n        allGroups,\r\n        totalGroups,\r\n        groups,\r\n        channelID,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getChannel: fetchChannel,\r\n            getGroups: fetchAssociatedGroups,\r\n            linkGroupSyncable,\r\n            unlinkGroupSyncable,\r\n            membersMinusGroupMembers,\r\n            patchChannel,\r\n            setNavigationBlocked,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelDetails);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport Constants from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport {t} from 'utils/i18n';\r\n\r\nimport AdminSettings from './admin_settings.jsx';\r\nimport Setting from './setting.jsx';\r\nimport SettingsGroup from './settings_group.jsx';\r\nimport TextSetting from './text_setting.jsx';\r\n\r\nexport default class PasswordSettings extends AdminSettings {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getConfigFromState = this.getConfigFromState.bind(this);\r\n\r\n        this.renderSettings = this.renderSettings.bind(this);\r\n\r\n        this.getSampleErrorMsg = this.getSampleErrorMsg.bind(this);\r\n\r\n        this.handlePasswordLengthChange = this.handlePasswordLengthChange.bind(this);\r\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n\r\n        this.state = Object.assign(this.state, {\r\n            passwordMinimumLength: props.config.PasswordSettings.MinimumLength,\r\n            passwordLowercase: props.config.PasswordSettings.Lowercase,\r\n            passwordNumber: props.config.PasswordSettings.Number,\r\n            passwordUppercase: props.config.PasswordSettings.Uppercase,\r\n            passwordSymbol: props.config.PasswordSettings.Symbol,\r\n            maximumLoginAttempts: props.config.ServiceSettings.MaximumLoginAttempts,\r\n        });\r\n\r\n        // Update sample message from config settings\r\n        t('user.settings.security.passwordErrorLowercase');\r\n        t('user.settings.security.passwordErrorLowercaseUppercase');\r\n        t('user.settings.security.passwordErrorLowercaseUppercaseNumber');\r\n        t('user.settings.security.passwordErrorLowercaseUppercaseNumberSymbol');\r\n        t('user.settings.security.passwordErrorLowercaseUppercaseSymbol');\r\n        t('user.settings.security.passwordErrorLowercaseNumber');\r\n        t('user.settings.security.passwordErrorLowercaseNumberSymbol');\r\n        t('user.settings.security.passwordErrorLowercaseSymbol');\r\n        t('user.settings.security.passwordErrorUppercase');\r\n        t('user.settings.security.passwordErrorUppercaseNumber');\r\n        t('user.settings.security.passwordErrorUppercaseNumberSymbol');\r\n        t('user.settings.security.passwordErrorUppercaseSymbol');\r\n        t('user.settings.security.passwordErrorNumber');\r\n        t('user.settings.security.passwordErrorNumberSymbol');\r\n        t('user.settings.security.passwordErrorSymbol');\r\n\r\n        let sampleErrorMsgId = 'user.settings.security.passwordError';\r\n        if (props.config.PasswordSettings.Lowercase) {\r\n            sampleErrorMsgId += 'Lowercase';\r\n        }\r\n        if (props.config.PasswordSettings.Uppercase) {\r\n            sampleErrorMsgId += 'Uppercase';\r\n        }\r\n        if (props.config.PasswordSettings.Number) {\r\n            sampleErrorMsgId += 'Number';\r\n        }\r\n        if (props.config.PasswordSettings.Symbol) {\r\n            sampleErrorMsgId += 'Symbol';\r\n        }\r\n        this.sampleErrorMsg = (\r\n            <FormattedMessage\r\n                id={sampleErrorMsgId}\r\n                default='Your password must contain between {min} and {max} characters.'\r\n                values={{\r\n                    min: (this.state.passwordMinimumLength || Constants.MIN_PASSWORD_LENGTH),\r\n                    max: Constants.MAX_PASSWORD_LENGTH,\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    getConfigFromState(config) {\r\n        config.PasswordSettings.MinimumLength = this.parseIntNonZero(this.state.passwordMinimumLength, Constants.MIN_PASSWORD_LENGTH);\r\n        config.PasswordSettings.Lowercase = this.refs.lowercase.checked;\r\n        config.PasswordSettings.Uppercase = this.refs.uppercase.checked;\r\n        config.PasswordSettings.Number = this.refs.number.checked;\r\n        config.PasswordSettings.Symbol = this.refs.symbol.checked;\r\n\r\n        config.ServiceSettings.MaximumLoginAttempts = this.parseIntNonZero(this.state.maximumLoginAttempts);\r\n\r\n        return config;\r\n    }\r\n\r\n    getStateFromConfig(config) {\r\n        return {\r\n            passwordMinimumLength: config.PasswordSettings.MinimumLength,\r\n            passwordLowercase: config.PasswordSettings.Lowercase,\r\n            passwordNumber: config.PasswordSettings.Number,\r\n            passwordUppercase: config.PasswordSettings.Uppercase,\r\n            passwordSymbol: config.PasswordSettings.Symbol,\r\n            maximumLoginAttempts: config.ServiceSettings.MaximumLoginAttempts,\r\n        };\r\n    }\r\n\r\n    getSampleErrorMsg(minLength) {\r\n        if (this.props.config.PasswordSettings.MinimumLength > Constants.MAX_PASSWORD_LENGTH || this.props.config.PasswordSettings.MinimumLength < Constants.MIN_PASSWORD_LENGTH) {\r\n            return (\r\n                <FormattedMessage\r\n                    id='user.settings.security.passwordMinLength'\r\n                    default='Invalid minimum length, cannot show preview.'\r\n                />\r\n            );\r\n        }\r\n        let sampleErrorMsgId = 'user.settings.security.passwordError';\r\n        if (this.refs.lowercase.checked) {\r\n            sampleErrorMsgId += 'Lowercase';\r\n        }\r\n        if (this.refs.uppercase.checked) {\r\n            sampleErrorMsgId += 'Uppercase';\r\n        }\r\n        if (this.refs.number.checked) {\r\n            sampleErrorMsgId += 'Number';\r\n        }\r\n        if (this.refs.symbol.checked) {\r\n            sampleErrorMsgId += 'Symbol';\r\n        }\r\n        return (\r\n            <FormattedMessage\r\n                id={sampleErrorMsgId}\r\n                default='Your password must contain between {min} and {max} characters.'\r\n                values={{\r\n                    min: (minLength || Constants.MIN_PASSWORD_LENGTH),\r\n                    max: Constants.MAX_PASSWORD_LENGTH,\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    handlePasswordLengthChange(id, value) {\r\n        this.sampleErrorMsg = this.getSampleErrorMsg(value);\r\n        this.handleChange(id, value);\r\n    }\r\n\r\n    handleCheckboxChange(id, value) {\r\n        this.sampleErrorMsg = this.getSampleErrorMsg(this.state.passwordMinimumLength);\r\n        this.handleChange(id, value);\r\n    }\r\n\r\n    renderTitle() {\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.security.password'\r\n                defaultMessage='Password'\r\n            />\r\n        );\r\n    }\r\n\r\n    renderSettings() {\r\n        return (\r\n            <SettingsGroup>\r\n                <div>\r\n                    <TextSetting\r\n                        id='passwordMinimumLength'\r\n                        label={\r\n                            <FormattedMessage\r\n                                id='admin.password.minimumLength'\r\n                                defaultMessage='Minimum Password Length:'\r\n                            />\r\n                        }\r\n                        placeholder={Utils.localizeMessage('admin.password.minimumLengthExample', 'E.g.: \"5\"')}\r\n                        helpText={\r\n                            <FormattedMessage\r\n                                id='admin.password.minimumLengthDescription'\r\n                                defaultMessage='Minimum number of characters required for a valid password. Must be a whole number greater than or equal to {min} and less than or equal to {max}.'\r\n                                values={{\r\n                                    min: Constants.MIN_PASSWORD_LENGTH,\r\n                                    max: Constants.MAX_PASSWORD_LENGTH,\r\n                                }}\r\n                            />\r\n                        }\r\n                        value={this.state.passwordMinimumLength}\r\n                        onChange={this.handlePasswordLengthChange}\r\n                        setByEnv={this.isSetByEnv('PasswordSettings.MinimumLength')}\r\n                    />\r\n                    <Setting\r\n                        label={\r\n                            <FormattedMessage\r\n                                id='passwordRequirements'\r\n                                defaultMessage='Password Requirements:'\r\n                            />\r\n                        }\r\n                    >\r\n                        <div>\r\n                            <label className='checkbox-inline'>\r\n                                <input\r\n                                    type='checkbox'\r\n                                    ref='lowercase'\r\n                                    defaultChecked={this.state.passwordLowercase}\r\n                                    name='admin.password.lowercase'\r\n                                    onChange={this.handleCheckboxChange}\r\n                                />\r\n                                <FormattedMessage\r\n                                    id='admin.password.lowercase'\r\n                                    defaultMessage='At least one lowercase letter'\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div>\r\n                            <label className='checkbox-inline'>\r\n                                <input\r\n                                    type='checkbox'\r\n                                    ref='uppercase'\r\n                                    defaultChecked={this.state.passwordUppercase}\r\n                                    name='admin.password.uppercase'\r\n                                    onChange={this.handleCheckboxChange}\r\n                                />\r\n                                <FormattedMessage\r\n                                    id='admin.password.uppercase'\r\n                                    defaultMessage='At least one uppercase letter'\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div>\r\n                            <label className='checkbox-inline'>\r\n                                <input\r\n                                    type='checkbox'\r\n                                    ref='number'\r\n                                    defaultChecked={this.state.passwordNumber}\r\n                                    name='admin.password.number'\r\n                                    onChange={this.handleCheckboxChange}\r\n                                />\r\n                                <FormattedMessage\r\n                                    id='admin.password.number'\r\n                                    defaultMessage='At least one number'\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div>\r\n                            <label className='checkbox-inline'>\r\n                                <input\r\n                                    type='checkbox'\r\n                                    ref='symbol'\r\n                                    defaultChecked={this.state.passwordSymbol}\r\n                                    name='admin.password.symbol'\r\n                                    onChange={this.handleCheckboxChange}\r\n                                />\r\n                                <FormattedMessage\r\n                                    id='admin.password.symbol'\r\n                                    defaultMessage='At least one symbol (e.g. \"~!@#$%^&*()\")'\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div>\r\n                            <br/>\r\n                            <label>\r\n                                <FormattedMessage\r\n                                    id='admin.password.preview'\r\n                                    defaultMessage='Error message preview:'\r\n                                />\r\n                            </label>\r\n                            <br/>\r\n                            {this.sampleErrorMsg}\r\n                        </div>\r\n                    </Setting>\r\n                </div>\r\n                <TextSetting\r\n                    id='maximumLoginAttempts'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.service.attemptTitle'\r\n                            defaultMessage='Maximum Login Attempts:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.service.attemptExample', 'E.g.: \"10\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.service.attemptDescription'\r\n                            defaultMessage='Login attempts allowed before user is locked out and required to reset password via email.'\r\n                        />\r\n                    }\r\n                    value={this.state.maximumLoginAttempts}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('ServiceSettings.MaximumLoginAttempts')}\r\n                />\r\n            </SettingsGroup>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport Constants from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nimport AdminSettings from './admin_settings.jsx';\r\nimport DropdownSetting from './dropdown_setting.jsx';\r\nimport SettingsGroup from './settings_group.jsx';\r\nimport TextSetting from './text_setting.jsx';\r\n\r\nconst PUSH_NOTIFICATIONS_OFF = 'off';\r\nconst PUSH_NOTIFICATIONS_MHPNS = 'mhpns';\r\nconst PUSH_NOTIFICATIONS_MTPNS = 'mtpns';\r\nconst PUSH_NOTIFICATIONS_CUSTOM = 'custom';\r\n\r\nexport default class PushSettings extends AdminSettings {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.canSave = this.canSave.bind(this);\r\n        this.handleAgreeChange = this.handleAgreeChange.bind(this);\r\n        this.getConfigFromState = this.getConfigFromState.bind(this);\r\n        this.renderSettings = this.renderSettings.bind(this);\r\n        this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n    }\r\n\r\n    canSave() {\r\n        return this.state.pushNotificationServerType !== PUSH_NOTIFICATIONS_MHPNS || this.state.agree;\r\n    }\r\n\r\n    handleAgreeChange(e) {\r\n        this.setState({\r\n            agree: e.target.checked,\r\n        });\r\n    }\r\n\r\n    handleDropdownChange(id, value) {\r\n        if (id === 'pushNotificationServerType') {\r\n            this.setState({\r\n                agree: false,\r\n            });\r\n\r\n            if (value === PUSH_NOTIFICATIONS_MHPNS) {\r\n                this.setState({\r\n                    pushNotificationServer: Constants.MHPNS,\r\n                });\r\n            } else if (value === PUSH_NOTIFICATIONS_MTPNS) {\r\n                this.setState({\r\n                    pushNotificationServer: Constants.MTPNS,\r\n                });\r\n            } else if (value === PUSH_NOTIFICATIONS_CUSTOM &&\r\n                (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MTPNS ||\r\n                this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS)) {\r\n                this.setState({\r\n                    pushNotificationServer: '',\r\n                });\r\n            }\r\n        }\r\n\r\n        this.handleChange(id, value);\r\n    }\r\n\r\n    getConfigFromState(config) {\r\n        config.EmailSettings.SendPushNotifications = this.state.pushNotificationServerType !== PUSH_NOTIFICATIONS_OFF;\r\n        config.EmailSettings.PushNotificationServer = this.state.pushNotificationServer.trim();\r\n        config.TeamSettings.MaxNotificationsPerChannel = this.state.maxNotificationsPerChannel;\r\n\r\n        return config;\r\n    }\r\n\r\n    getStateFromConfig(config) {\r\n        let pushNotificationServerType = PUSH_NOTIFICATIONS_CUSTOM;\r\n        let agree = false;\r\n        if (!config.EmailSettings.SendPushNotifications) {\r\n            pushNotificationServerType = PUSH_NOTIFICATIONS_OFF;\r\n        } else if (config.EmailSettings.PushNotificationServer === Constants.MHPNS &&\r\n            this.props.license.IsLicensed === 'true' && this.props.license.MHPNS === 'true') {\r\n            pushNotificationServerType = PUSH_NOTIFICATIONS_MHPNS;\r\n            agree = true;\r\n        } else if (config.EmailSettings.PushNotificationServer === Constants.MTPNS) {\r\n            pushNotificationServerType = PUSH_NOTIFICATIONS_MTPNS;\r\n        }\r\n\r\n        let pushNotificationServer = config.EmailSettings.PushNotificationServer;\r\n        if (pushNotificationServerType === PUSH_NOTIFICATIONS_MTPNS) {\r\n            pushNotificationServer = Constants.MTPNS;\r\n        } else if (pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS) {\r\n            pushNotificationServer = Constants.MHPNS;\r\n        }\r\n\r\n        const maxNotificationsPerChannel = config.TeamSettings.MaxNotificationsPerChannel;\r\n\r\n        return {\r\n            pushNotificationServerType,\r\n            pushNotificationServer,\r\n            maxNotificationsPerChannel,\r\n            agree,\r\n        };\r\n    }\r\n\r\n    isPushNotificationServerSetByEnv = () => {\r\n        // Assume that if one of these has been set using an environment variable,\r\n        // all of them have been set that way\r\n        return this.isSetByEnv('EmailSettings.SendPushNotifications') ||\r\n            this.isSetByEnv('EmailSettings.PushNotificationServer');\r\n    };\r\n\r\n    renderTitle() {\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.environment.pushNotificationServer'\r\n                defaultMessage='Push Notification Server'\r\n            />\r\n        );\r\n    }\r\n\r\n    renderSettings() {\r\n        const pushNotificationServerTypes = [];\r\n        pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_OFF, text: Utils.localizeMessage('admin.email.pushOff', 'Do not send push notifications')});\r\n        if (this.props.license.IsLicensed === 'true' && this.props.license.MHPNS === 'true') {\r\n            pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_MHPNS, text: Utils.localizeMessage('admin.email.mhpns', 'Use HPNS connection with uptime SLA to send notifications to iOS and Android apps')});\r\n        }\r\n        pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_MTPNS, text: Utils.localizeMessage('admin.email.mtpns', 'Use TPNS connection to send notifications to iOS and Android apps')});\r\n        pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_CUSTOM, text: Utils.localizeMessage('admin.email.selfPush', 'Manually enter Push Notification Service location')});\r\n\r\n        let sendHelpText = null;\r\n        let pushServerHelpText = null;\r\n        if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_OFF) {\r\n            sendHelpText = (\r\n                <FormattedMarkdownMessage\r\n                    id='admin.email.pushOffHelp'\r\n                    defaultMessage='Please see [documentation on push notifications](!https://about.mattermost.com/default-mobile-push-notifications/) to learn more about setup options.'\r\n                />\r\n            );\r\n        } else if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS) {\r\n            pushServerHelpText = (\r\n                <FormattedMarkdownMessage\r\n                    id='admin.email.mhpnsHelp'\r\n                    defaultMessage='Download [Mattermost iOS app](!https://about.mattermost.com/mattermost-ios-app/) from iTunes. Download [Mattermost Android app](!https://about.mattermost.com/mattermost-android-app/) from Google Play. Learn more about the [Mattermost Hosted Push Notification Service](!https://about.mattermost.com/default-hpns/).'\r\n                />\r\n            );\r\n        } else if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MTPNS) {\r\n            pushServerHelpText = (\r\n                <FormattedMarkdownMessage\r\n                    id='admin.email.mtpnsHelp'\r\n                    defaultMessage='Download [Mattermost iOS app](!https://about.mattermost.com/mattermost-ios-app/) from iTunes. Download [Mattermost Android app](!https://about.mattermost.com/mattermost-android-app/) from Google Play. Learn more about the [Mattermost Test Push Notification Service](!https://about.mattermost.com/default-tpns/).'\r\n                />\r\n            );\r\n        } else {\r\n            pushServerHelpText = (\r\n                <FormattedMarkdownMessage\r\n                    id='admin.email.easHelp'\r\n                    defaultMessage='Learn more about compiling and deploying your own mobile apps from an [Enterprise App Store](!https://about.mattermost.com/default-enterprise-app-store).'\r\n                />\r\n            );\r\n        }\r\n\r\n        let tosCheckbox;\r\n        if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS) {\r\n            tosCheckbox = (\r\n                <div className='form-group'>\r\n                    <div className='col-sm-4'/>\r\n                    <div className='col-sm-8'>\r\n                        <input\r\n                            type='checkbox'\r\n                            ref='agree'\r\n                            checked={this.state.agree}\r\n                            onChange={this.handleAgreeChange}\r\n                        />\r\n                        <FormattedMarkdownMessage\r\n                            id='admin.email.agreeHPNS'\r\n                            defaultMessage=' I understand and accept the Mattermost Hosted Push Notification Service [Terms of Service](!https://about.mattermost.com/hpns-terms/) and [Privacy Policy](!https://about.mattermost.com/hpns-privacy/).'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <SettingsGroup>\r\n                <DropdownSetting\r\n                    id='pushNotificationServerType'\r\n                    values={pushNotificationServerTypes}\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.email.pushTitle'\r\n                            defaultMessage='Enable Push Notifications: '\r\n                        />\r\n                    }\r\n                    value={this.state.pushNotificationServerType}\r\n                    onChange={this.handleDropdownChange}\r\n                    helpText={sendHelpText}\r\n                    setByEnv={this.isPushNotificationServerSetByEnv()}\r\n                />\r\n                {tosCheckbox}\r\n                <TextSetting\r\n                    id='pushNotificationServer'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.email.pushServerTitle'\r\n                            defaultMessage='Push Notification Server:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.email.pushServerEx', 'E.g.: \"https://push-test.mattermost.com\"')}\r\n                    helpText={pushServerHelpText}\r\n                    value={this.state.pushNotificationServer}\r\n                    onChange={this.handleChange}\r\n                    disabled={this.state.pushNotificationServerType !== PUSH_NOTIFICATIONS_CUSTOM}\r\n                    setByEnv={this.isSetByEnv('EmailSettings.PushNotificationServer')}\r\n                />\r\n                <TextSetting\r\n                    id='maxNotificationsPerChannel'\r\n                    type='number'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.team.maxNotificationsPerChannelTitle'\r\n                            defaultMessage='Max Notifications Per Channel:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.team.maxNotificationsPerChannelExample', 'E.g.: \"1000\"')}\r\n                    helpText={\r\n                        <FormattedMarkdownMessage\r\n                            id='admin.team.maxNotificationsPerChannelDescription'\r\n                            defaultMessage='Maximum total number of users in a channel before users typing messages, @all, @here, and @channel no longer send notifications because of performance.'\r\n                        />\r\n                    }\r\n                    value={this.state.maxNotificationsPerChannel}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('TeamSettings.MaxNotificationsPerChannel')}\r\n                />\r\n            </SettingsGroup>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {JobTypes} from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport ConfirmModal from 'components/confirm_modal.jsx';\r\n\r\nimport AdminSettings from './admin_settings.jsx';\r\nimport DropdownSetting from './dropdown_setting.jsx';\r\nimport JobsTable from './jobs';\r\nimport SettingsGroup from './settings_group.jsx';\r\nimport TextSetting from './text_setting.jsx';\r\n\r\nexport default class DataRetentionSettings extends AdminSettings {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getConfigFromState = this.getConfigFromState.bind(this);\r\n\r\n        this.renderSettings = this.renderSettings.bind(this);\r\n        this.renderConfirmModal = this.renderConfirmModal.bind(this);\r\n    }\r\n\r\n    getConfigFromState(config) {\r\n        config.DataRetentionSettings.EnableMessageDeletion = this.state.enableMessageDeletion === 'true';\r\n        config.DataRetentionSettings.EnableFileDeletion = this.state.enableFileDeletion === 'true';\r\n        config.DataRetentionSettings.MessageRetentionDays = parseInt(this.state.messageRetentionDays, 10);\r\n        config.DataRetentionSettings.FileRetentionDays = parseInt(this.state.fileRetentionDays, 10);\r\n        config.DataRetentionSettings.DeletionJobStartTime = this.state.deletionJobStartTime;\r\n\r\n        return config;\r\n    }\r\n\r\n    getStateFromConfig(config) {\r\n        return {\r\n            enableMessageDeletion: String(config.DataRetentionSettings.EnableMessageDeletion),\r\n            enableFileDeletion: String(config.DataRetentionSettings.EnableFileDeletion),\r\n            messageRetentionDays: config.DataRetentionSettings.MessageRetentionDays,\r\n            fileRetentionDays: config.DataRetentionSettings.FileRetentionDays,\r\n            deletionJobStartTime: config.DataRetentionSettings.DeletionJobStartTime,\r\n            showConfirmModal: false,\r\n        };\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({showConfirmModal: true});\r\n    };\r\n\r\n    handleSaveConfirmed = () => {\r\n        this.setState({showConfirmModal: false});\r\n\r\n        this.doSubmit();\r\n    };\r\n\r\n    handleSaveCanceled = () => {\r\n        this.setState({showConfirmModal: false});\r\n    };\r\n\r\n    renderConfirmModal() {\r\n        const title = (\r\n            <FormattedMessage\r\n                id='admin.data_retention.confirmChangesModal.title'\r\n                defaultMessage='Confirm data retention policy'\r\n            />\r\n        );\r\n\r\n        const messageList = [];\r\n\r\n        if (this.state.enableMessageDeletion === 'true') {\r\n            messageList.push(\r\n                <FormattedMessage\r\n                    id='admin.data_retention.confirmChangesModal.description.itemMessageDeletion'\r\n                    defaultMessage='All messages will be permanently deleted after {days} days.'\r\n                    values={{\r\n                        days: (\r\n                            <strong>\r\n                                {this.state.messageRetentionDays}\r\n                            </strong>\r\n                        ),\r\n                    }}\r\n                />\r\n            );\r\n        } else {\r\n            messageList.push(\r\n                <FormattedMessage\r\n                    id='admin.data_retention.confirmChangesModal.description.itemMessageIndefinite'\r\n                    defaultMessage='All messages will be retained indefinitely.'\r\n                />\r\n            );\r\n        }\r\n\r\n        if (this.state.enableFileDeletion === 'true') {\r\n            messageList.push(\r\n                <FormattedMessage\r\n                    id='admin.data_retention.confirmChangesModal.description.itemFileDeletion'\r\n                    defaultMessage='All files will be permanently deleted after {days} days.'\r\n                    values={{\r\n                        days: (\r\n                            <strong>\r\n                                {this.state.fileRetentionDays}\r\n                            </strong>\r\n                        ),\r\n                    }}\r\n                />\r\n            );\r\n        } else {\r\n            messageList.push(\r\n                <FormattedMessage\r\n                    id='admin.data_retention.confirmChangesModal.description.itemFileIndefinite'\r\n                    defaultMessage='All files will be retained indefinitely.'\r\n                />\r\n            );\r\n        }\r\n\r\n        const message = (\r\n            <div>\r\n                <p>\r\n                    <FormattedMessage\r\n                        id='admin.data_retention.confirmChangesModal.description'\r\n                        defaultMessage='Are you sure you want to apply the following data retention policy:'\r\n                    />\r\n                </p>\r\n                <ul>\r\n                    {messageList.map((item, index) => {\r\n                        return <li key={index}>{item}</li>;\r\n                    })}\r\n                </ul>\r\n                <p>\r\n                    <FormattedMessage\r\n                        id='admin.data_retention.confirmChangesModal.clarification'\r\n                        defaultMessage='Once deleted, messages and files cannot be retrieved.'\r\n                    />\r\n                </p>\r\n            </div>\r\n        );\r\n\r\n        const confirmButton = (\r\n            <FormattedMessage\r\n                id='admin.data_retention.confirmChangesModal.confirm'\r\n                defaultMessage='Confirm Settings'\r\n            />\r\n        );\r\n\r\n        return (\r\n            <ConfirmModal\r\n                show={this.state.showConfirmModal}\r\n                title={title}\r\n                message={message}\r\n                confirmButtonText={confirmButton}\r\n                onConfirm={this.handleSaveConfirmed}\r\n                onCancel={this.handleSaveCanceled}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderTitle() {\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.data_retention.title'\r\n                defaultMessage='Data Retention Policy'\r\n            />\r\n        );\r\n    }\r\n\r\n    renderSettings() {\r\n        const enableMessageDeletionOptions = [\r\n            {value: 'false', text: Utils.localizeMessage('admin.data_retention.keepMessagesIndefinitely', 'Keep all messages indefinitely')},\r\n            {value: 'true', text: Utils.localizeMessage('admin.data_retention.keepMessageForTime', 'Keep messages for a set amount of time')},\r\n        ];\r\n\r\n        const enableFileDeletionOptions = [\r\n            {value: 'false', text: Utils.localizeMessage('admin.data_retention.keepFilesIndefinitely', 'Keep all files indefinitely')},\r\n            {value: 'true', text: Utils.localizeMessage('admin.data_retention.keepFilesForTime', 'Keep files for a set amount of time')},\r\n        ];\r\n\r\n        let messageRetentionDaysSetting = '';\r\n        if (this.state.enableMessageDeletion === 'true') {\r\n            messageRetentionDaysSetting = (\r\n                <TextSetting\r\n                    id='messageRetentionDays'\r\n                    label={<span/>}\r\n                    placeholder={Utils.localizeMessage('admin.data_retention.messageRetentionDays.example', 'E.g.: \"60\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.data_retention.messageRetentionDays.description'\r\n                            defaultMessage='Set how many days messages are kept in Mattermost. Messages, including file attachments older than the duration you set will be deleted nightly. The minimum time is one day.'\r\n                        />\r\n                    }\r\n                    value={this.state.messageRetentionDays}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.MessageRetentionDays')}\r\n                />\r\n            );\r\n        }\r\n\r\n        let fileRetentionDaysSetting = '';\r\n        if (this.state.enableFileDeletion === 'true') {\r\n            fileRetentionDaysSetting = (\r\n                <TextSetting\r\n                    id='fileRetentionDays'\r\n                    label={<span/>}\r\n                    placeholder={Utils.localizeMessage('admin.data_retention.fileRetentionDays.example', 'E.g.: \"60\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.data_retention.fileRetentionDays.description'\r\n                            defaultMessage='Set how many days file uploads are kept in Mattermost. Files older than the duration you set will be deleted nightly. The minimum time is one day.'\r\n                        />\r\n                    }\r\n                    value={this.state.fileRetentionDays}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.FileRetentionDays')}\r\n                />\r\n            );\r\n        }\r\n\r\n        const confirmModal = this.renderConfirmModal();\r\n\r\n        return (\r\n            <SettingsGroup>\r\n                {confirmModal}\r\n                <div className='banner'>\r\n                    <div className='banner__content'>\r\n                        <FormattedMessage\r\n                            id='admin.data_retention.note.description'\r\n                            defaultMessage='Caution: Once a message or a file is deleted, the action is irreversible. Please be careful when setting up a custom data retention policy. See {documentationLink} to learn more.'\r\n                            values={{\r\n                                documentationLink: (\r\n                                    <a\r\n                                        href='https://about.mattermost.com/default-dataretention-documentation/'\r\n                                        rel='noopener noreferrer'\r\n                                        target='_blank'\r\n                                    >\r\n                                        <FormattedMessage\r\n                                            id='admin.data_retention.note.description.documentationLinkText'\r\n                                            defaultMessage='documentation'\r\n                                        />\r\n                                    </a>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <DropdownSetting\r\n                    id='enableMessageDeletion'\r\n                    values={enableMessageDeletionOptions}\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.data_retention.enableMessageDeletion.title'\r\n                            defaultMessage='Message Retention:'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.data_retention.enableMessageDeletion.description'\r\n                            defaultMessage='Set how long Mattermost keeps messages in channels and direct messages.'\r\n                        />\r\n                    }\r\n                    value={this.state.enableMessageDeletion}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.EnableMessageDeletion')}\r\n                />\r\n                {messageRetentionDaysSetting}\r\n                <DropdownSetting\r\n                    id='enableFileDeletion'\r\n                    values={enableFileDeletionOptions}\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.data_retention.enableFileDeletion.title'\r\n                            defaultMessage='File Retention:'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.data_retention.enableFileDeletion.description'\r\n                            defaultMessage='Set how long Mattermost keeps file uploads in channels and direct messages.'\r\n                        />\r\n                    }\r\n                    value={this.state.enableFileDeletion}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.EnableFileDeletion')}\r\n                />\r\n                {fileRetentionDaysSetting}\r\n                <TextSetting\r\n                    id='deletionJobStartTime'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.data_retention.deletionJobStartTime.title'\r\n                            defaultMessage='Data Deletion Time:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.data_retention.deletionJobStartTime.example', 'E.g.: \"02:00\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.data_retention.deletionJobStartTime.description'\r\n                            defaultMessage='Set the start time of the daily scheduled data retention job. Choose a time when fewer people are using your system. Must be a 24-hour time stamp in the form HH:MM.'\r\n                        />\r\n                    }\r\n                    value={this.state.deletionJobStartTime}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.DeletionJobStartTime')}\r\n                />\r\n                <JobsTable\r\n                    jobType={JobTypes.DATA_RETENTION}\r\n                    disabled={this.state.enableMessageDeletion !== 'true' && this.state.enableFileDeletion !== 'true'}\r\n                    createJobButtonText={\r\n                        <FormattedMessage\r\n                            id='admin.data_retention.createJob.title'\r\n                            defaultMessage='Run Deletion Job Now'\r\n                        />\r\n                    }\r\n                    createJobHelpText={\r\n                        <FormattedMessage\r\n                            id='admin.data_retention.createJob.help'\r\n                            defaultMessage='Initiates a Data Retention deletion job immediately.'\r\n                        />\r\n                    }\r\n                />\r\n            </SettingsGroup>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\nimport React from 'react';\r\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nimport {JobTypes} from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport {getSiteURL} from 'utils/url.jsx';\r\n\r\nimport AdminSettings from './admin_settings.jsx';\r\nimport BooleanSetting from './boolean_setting.jsx';\r\nimport DropdownSetting from './dropdown_setting.jsx';\r\nimport JobsTable from './jobs';\r\nimport SettingsGroup from './settings_group.jsx';\r\nimport TextSetting from './text_setting.jsx';\r\nimport RadioSetting from './radio_setting';\r\n\r\nconst exportFormats = {\r\n    EXPORT_FORMAT_CSV: 'csv',\r\n    EXPORT_FORMAT_ACTIANCE: 'actiance',\r\n    EXPORT_FORMAT_GLOBALRELAY: 'globalrelay',\r\n};\r\n\r\nexport default class MessageExportSettings extends AdminSettings {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getConfigFromState = this.getConfigFromState.bind(this);\r\n        this.renderSettings = this.renderSettings.bind(this);\r\n    }\r\n\r\n    getConfigFromState(config) {\r\n        config.MessageExportSettings.EnableExport = this.state.enableComplianceExport;\r\n        config.MessageExportSettings.ExportFormat = this.state.exportFormat;\r\n        config.MessageExportSettings.DailyRunTime = this.state.exportJobStartTime;\r\n\r\n        if (this.state.exportFormat === exportFormats.EXPORT_FORMAT_GLOBALRELAY) {\r\n            config.MessageExportSettings.GlobalRelaySettings = {\r\n                CustomerType: this.state.globalRelayCustomerType,\r\n                SmtpUsername: this.state.globalRelaySmtpUsername,\r\n                SmtpPassword: this.state.globalRelaySmtpPassword,\r\n                EmailAddress: this.state.globalRelayEmailAddress,\r\n\r\n            };\r\n        }\r\n        return config;\r\n    }\r\n\r\n    getStateFromConfig(config) {\r\n        const state = {\r\n            enableComplianceExport: config.MessageExportSettings.EnableExport,\r\n            exportFormat: config.MessageExportSettings.ExportFormat,\r\n            exportJobStartTime: config.MessageExportSettings.DailyRunTime,\r\n        };\r\n        if (config.MessageExportSettings.GlobalRelaySettings) {\r\n            state.globalRelayCustomerType = config.MessageExportSettings.GlobalRelaySettings.CustomerType;\r\n            state.globalRelaySmtpUsername = config.MessageExportSettings.GlobalRelaySettings.SmtpUsername;\r\n            state.globalRelaySmtpPassword = config.MessageExportSettings.GlobalRelaySettings.SmtpPassword;\r\n            state.globalRelayEmailAddress = config.MessageExportSettings.GlobalRelaySettings.EmailAddress;\r\n        }\r\n        return state;\r\n    }\r\n\r\n    getJobDetails = (job) => {\r\n        if (job.data && job.data.messages_exported) {\r\n            return (\r\n                <FormattedMessage\r\n                    id='admin.complianceExport.messagesExportedCount'\r\n                    defaultMessage='{count} messages exported.'\r\n                    values={{\r\n                        count: job.data.messages_exported,\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    renderTitle() {\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.complianceExport.title'\r\n                defaultMessage='Compliance Export (Beta)'\r\n            />\r\n        );\r\n    }\r\n\r\n    renderSettings() {\r\n        const exportFormatOptions = [\r\n            {value: exportFormats.EXPORT_FORMAT_ACTIANCE, text: Utils.localizeMessage('admin.complianceExport.exportFormat.actiance', 'Actiance XML')},\r\n            {value: exportFormats.EXPORT_FORMAT_CSV, text: Utils.localizeMessage('admin.complianceExport.exportFormat.csv', 'CSV')},\r\n            {value: exportFormats.EXPORT_FORMAT_GLOBALRELAY, text: Utils.localizeMessage('admin.complianceExport.exportFormat.globalrelay', 'GlobalRelay EML')},\r\n        ];\r\n\r\n        // if the export format is globalrelay, the user needs to set some additional parameters\r\n        let globalRelaySettings;\r\n        if (this.state.exportFormat === exportFormats.EXPORT_FORMAT_GLOBALRELAY) {\r\n            const globalRelayCustomerType = (\r\n                <RadioSetting\r\n                    id='globalRelayCustomerType'\r\n                    values={[\r\n                        {value: 'A9', text: Utils.localizeMessage('admin.complianceExport.globalRelayCustomerType.a9.description', 'A9/Type 9')},\r\n                        {value: 'A10', text: Utils.localizeMessage('admin.complianceExport.globalRelayCustomerType.a10.description', 'A10/Type 10')},\r\n                    ]}\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.complianceExport.globalRelayCustomerType.title'\r\n                            defaultMessage='Customer Type:'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.complianceExport.globalRelayCustomerType.description'\r\n                            defaultMessage='The type of GlobalRelay customer account that your organization has.'\r\n                        />\r\n                    }\r\n                    value={this.state.globalRelayCustomerType ? this.state.globalRelayCustomerType : ''}\r\n                    disabled={!this.state.enableComplianceExport}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.CustomerType')}\r\n                />\r\n            );\r\n\r\n            const globalRelaySmtpUsername = (\r\n                <TextSetting\r\n                    id='globalRelaySmtpUsername'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.complianceExport.globalRelaySmtpUsername.title'\r\n                            defaultMessage='SMTP Username:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.complianceExport.globalRelaySmtpUsername.example', 'E.g.: \"globalRelayUser\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.complianceExport.globalRelaySmtpUsername.description'\r\n                            defaultMessage='The username that is used to authenticate against the GlobalRelay SMTP server.'\r\n                        />\r\n                    }\r\n                    value={this.state.globalRelaySmtpUsername ? this.state.globalRelaySmtpUsername : ''}\r\n                    disabled={!this.state.enableComplianceExport}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.SmtpUsername')}\r\n                />\r\n            );\r\n\r\n            const globalRelaySmtpPassword = (\r\n                <TextSetting\r\n                    id='globalRelaySmtpPassword'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.complianceExport.globalRelaySmtpPassword.title'\r\n                            defaultMessage='SMTP Password:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.complianceExport.globalRelaySmtpPassword.example', 'E.g.: \"globalRelayPassword\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.complianceExport.globalRelaySmtpPassword.description'\r\n                            defaultMessage='The password that is used to authenticate against the GlobalRelay SMTP server.'\r\n                        />\r\n                    }\r\n                    value={this.state.globalRelaySmtpPassword ? this.state.globalRelaySmtpPassword : ''}\r\n                    disabled={!this.state.enableComplianceExport}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.SmtpPassword')}\r\n                />\r\n            );\r\n\r\n            const globalRelayEmail = (\r\n                <TextSetting\r\n                    id='globalRelayEmailAddress'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.complianceExport.globalRelayEmailAddress.title'\r\n                            defaultMessage='Email Address:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.complianceExport.globalRelayEmailAddress.example', 'E.g.: \"globalrelay@mattermost.com\"')}\r\n                    helpText={\r\n                        <FormattedHTMLMessage\r\n                            id='admin.complianceExport.globalRelayEmailAddress.description'\r\n                            defaultMessage='The email address that your GlobalRelay server monitors for incoming Compliance Exports.'\r\n                        />\r\n                    }\r\n                    value={this.state.globalRelayEmailAddress ? this.state.globalRelayEmailAddress : ''}\r\n                    disabled={!this.state.enableComplianceExport}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.EmailAddress')}\r\n                />\r\n            );\r\n\r\n            globalRelaySettings = (\r\n                <SettingsGroup id={'globalRelaySettings'} >\r\n                    {globalRelayCustomerType}\r\n                    {globalRelaySmtpUsername}\r\n                    {globalRelaySmtpPassword}\r\n                    {globalRelayEmail}\r\n                </SettingsGroup>\r\n            );\r\n        }\r\n\r\n        const dropdownHelpText = (\r\n            <FormattedMarkdownMessage\r\n                id='admin.complianceExport.exportFormat.description'\r\n                defaultMessage='Format of the compliance export. Corresponds to the system that you want to import the data into.\\n \\nFor Actiance XML, compliance export files are written to the \\\"exports\\\" subdirectory of the configured [Local Storage Directory]({siteURL}/admin_console/environment/file_storage). For Global Relay EML, they are emailed to the configured email address.'\r\n                values={{siteURL: getSiteURL()}}\r\n            />\r\n        );\r\n\r\n        return (\r\n            <SettingsGroup>\r\n                <BooleanSetting\r\n                    id='enableComplianceExport'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.service.complianceExportTitle'\r\n                            defaultMessage='Enable Compliance Export:'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMarkdownMessage\r\n                            id='admin.service.complianceExportDesc'\r\n                            defaultMessage='When true, Mattermost will export all messages that were posted in the last 24 hours. The export task is scheduled to run once per day. See [the documentation](!https://about.mattermost.com/default-compliance-export-documentation) to learn more.'\r\n                        />\r\n                    }\r\n                    value={this.state.enableComplianceExport}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.EnableExport')}\r\n                />\r\n\r\n                <TextSetting\r\n                    id='exportJobStartTime'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.complianceExport.exportJobStartTime.title'\r\n                            defaultMessage='Compliance Export Time:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.complianceExport.exportJobStartTime.example', 'E.g.: \"02:00\"')}\r\n                    helpText={\r\n                        <FormattedHTMLMessage\r\n                            id='admin.complianceExport.exportJobStartTime.description'\r\n                            defaultMessage='Set the start time of the daily scheduled compliance export job. Choose a time when fewer people are using your system. Must be a 24-hour time stamp in the form HH:MM.'\r\n                        />\r\n                    }\r\n                    value={this.state.exportJobStartTime}\r\n                    disabled={!this.state.enableComplianceExport}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.DailyRunTime')}\r\n                />\r\n\r\n                <DropdownSetting\r\n                    id='exportFormat'\r\n                    values={exportFormatOptions}\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.complianceExport.exportFormat.title'\r\n                            defaultMessage='Export Format:'\r\n                        />\r\n                    }\r\n                    helpText={dropdownHelpText}\r\n                    value={this.state.exportFormat}\r\n                    disabled={!this.state.enableComplianceExport}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.ExportFormat')}\r\n                />\r\n\r\n                {globalRelaySettings}\r\n\r\n                <JobsTable\r\n                    jobType={JobTypes.MESSAGE_EXPORT}\r\n                    disabled={!this.state.enableComplianceExport}\r\n                    createJobButtonText={\r\n                        <FormattedMessage\r\n                            id='admin.complianceExport.createJob.title'\r\n                            defaultMessage='Run Compliance Export Job Now'\r\n                        />\r\n                    }\r\n                    createJobHelpText={\r\n                        <FormattedMessage\r\n                            id='admin.complianceExport.createJob.help'\r\n                            defaultMessage='Initiates a Compliance Export job immediately.'\r\n                        />\r\n                    }\r\n                    getExtraInfoText={this.getJobDetails}\r\n                />\r\n            </SettingsGroup>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\r\nimport {recycleDatabaseConnection} from 'actions/admin_actions.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport {t} from 'utils/i18n';\r\n\r\nimport AdminSettings from './admin_settings.jsx';\r\nimport BooleanSetting from './boolean_setting.jsx';\r\nimport RequestButton from './request_button/request_button.jsx';\r\nimport SettingsGroup from './settings_group.jsx';\r\nimport TextSetting from './text_setting.jsx';\r\n\r\nexport default class DatabaseSettings extends AdminSettings {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getConfigFromState = this.getConfigFromState.bind(this);\r\n\r\n        this.renderSettings = this.renderSettings.bind(this);\r\n    }\r\n\r\n    getConfigFromState(config) {\r\n        // driverName and dataSource are read-only from the UI\r\n\r\n        config.SqlSettings.MaxIdleConns = this.parseIntNonZero(this.state.maxIdleConns);\r\n        config.SqlSettings.MaxOpenConns = this.parseIntNonZero(this.state.maxOpenConns);\r\n        config.SqlSettings.Trace = this.state.trace;\r\n        config.SqlSettings.QueryTimeout = this.parseIntNonZero(this.state.queryTimeout);\r\n        config.SqlSettings.ConnMaxLifetimeMilliseconds = this.parseIntNonNegative(this.state.connMaxLifetimeMilliseconds);\r\n        config.ServiceSettings.MinimumHashtagLength = this.parseIntNonZero(this.state.minimumHashtagLength, 3, 2);\r\n\r\n        return config;\r\n    }\r\n\r\n    getStateFromConfig(config) {\r\n        return {\r\n            driverName: config.SqlSettings.DriverName,\r\n            dataSource: config.SqlSettings.DataSource,\r\n            maxIdleConns: config.SqlSettings.MaxIdleConns,\r\n            maxOpenConns: config.SqlSettings.MaxOpenConns,\r\n            trace: config.SqlSettings.Trace,\r\n            queryTimeout: config.SqlSettings.QueryTimeout,\r\n            connMaxLifetimeMilliseconds: config.SqlSettings.ConnMaxLifetimeMilliseconds,\r\n            minimumHashtagLength: config.ServiceSettings.MinimumHashtagLength,\r\n        };\r\n    }\r\n\r\n    renderTitle() {\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.database.title'\r\n                defaultMessage='Database Settings'\r\n            />\r\n        );\r\n    }\r\n\r\n    renderSettings() {\r\n        const dataSource = '**********' + this.state.dataSource.substring(this.state.dataSource.indexOf('@'));\r\n\r\n        let recycleDbButton = <div/>;\r\n        if (this.props.license.IsLicensed === 'true') {\r\n            recycleDbButton = (\r\n                <RequestButton\r\n                    requestAction={recycleDatabaseConnection}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.recycle.recycleDescription'\r\n                            defaultMessage='Deployments using multiple databases can switch from one master database to another without restarting the Mattermost server by updating \"config.json\" to the new desired configuration and using the {reloadConfiguration} feature to load the new settings while the server is running. The administrator should then use {featureName} feature to recycle the database connections based on the new settings.'\r\n                            values={{\r\n                                featureName: (\r\n                                    <b>\r\n                                        <FormattedMessage\r\n                                            id='admin.recycle.recycleDescription.featureName'\r\n                                            defaultMessage='Recycle Database Connections'\r\n                                        />\r\n                                    </b>\r\n                                ),\r\n                                reloadConfiguration: (\r\n                                    <a href='../environment/web_server'>\r\n                                        <b>\r\n                                            <FormattedMessage\r\n                                                id='admin.recycle.recycleDescription.reloadConfiguration'\r\n                                                defaultMessage='Environment > Web Server > Reload Configuration from Disk'\r\n                                            />\r\n                                        </b>\r\n                                    </a>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    }\r\n                    buttonText={\r\n                        <FormattedMessage\r\n                            id='admin.recycle.button'\r\n                            defaultMessage='Recycle Database Connections'\r\n                        />\r\n                    }\r\n                    showSuccessMessage={false}\r\n                    errorMessage={{\r\n                        id: t('admin.recycle.reloadFail'),\r\n                        defaultMessage: 'Recycling unsuccessful: {error}',\r\n                    }}\r\n                    includeDetailedError={true}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <SettingsGroup>\r\n                <div className='banner'>\r\n                    <FormattedMessage\r\n                        id='admin.sql.noteDescription'\r\n                        defaultMessage='Changing properties in this section will require a server restart before taking effect.'\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label\r\n                        className='control-label col-sm-4'\r\n                        htmlFor='DriverName'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.sql.driverName'\r\n                            defaultMessage='Driver Name:'\r\n                        />\r\n                    </label>\r\n                    <div className='col-sm-8'>\r\n                        <input\r\n                            type='text'\r\n                            className='form-control'\r\n                            value={this.state.driverName}\r\n                            disabled={true}\r\n                        />\r\n                        <div className='help-text'>\r\n                            <FormattedMessage\r\n                                id='admin.sql.driverNameDescription'\r\n                                defaultMessage='Set the database driver in the config.json file.'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label\r\n                        className='control-label col-sm-4'\r\n                        htmlFor='DataSource'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.sql.dataSource'\r\n                            defaultMessage='Data Source:'\r\n                        />\r\n                    </label>\r\n                    <div className='col-sm-8'>\r\n                        <input\r\n                            type='text'\r\n                            className='form-control'\r\n                            value={dataSource}\r\n                            disabled={true}\r\n                        />\r\n                        <div className='help-text'>\r\n                            <FormattedMessage\r\n                                id='admin.sql.dataSourceDescription'\r\n                                defaultMessage='Set the database source in the config.json file.'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TextSetting\r\n                    id='maxIdleConns'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.sql.maxConnectionsTitle'\r\n                            defaultMessage='Maximum Idle Connections:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.sql.maxConnectionsExample', 'E.g.: \"10\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.sql.maxConnectionsDescription'\r\n                            defaultMessage='Maximum number of idle connections held open to the database.'\r\n                        />\r\n                    }\r\n                    value={this.state.maxIdleConns}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('SqlSettings.MaxIdleConns')}\r\n                />\r\n                <TextSetting\r\n                    id='maxOpenConns'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.sql.maxOpenTitle'\r\n                            defaultMessage='Maximum Open Connections:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.sql.maxOpenExample', 'E.g.: \"10\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.sql.maxOpenDescription'\r\n                            defaultMessage='Maximum number of open connections held open to the database.'\r\n                        />\r\n                    }\r\n                    value={this.state.maxOpenConns}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('SqlSettings.MaxOpenConns')}\r\n                />\r\n                <TextSetting\r\n                    id='queryTimeout'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.sql.queryTimeoutTitle'\r\n                            defaultMessage='Query Timeout:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.sql.queryTimeoutExample', 'E.g.: \"30\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.sql.queryTimeoutDescription'\r\n                            defaultMessage='The number of seconds to wait for a response from the database after opening a connection and sending the query. Errors that you see in the UI or in the logs as a result of a query timeout can vary depending on the type of query.'\r\n                        />\r\n                    }\r\n                    value={this.state.queryTimeout}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('SqlSettings.QueryTimeout')}\r\n                />\r\n                <TextSetting\r\n                    id='connMaxLifetimeMilliseconds'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.sql.connMaxLifetimeTitle'\r\n                            defaultMessage='Maximum Connection Lifetime:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.sql.connMaxLifetimeExample', 'E.g.: \"3600000\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.sql.connMaxLifetimeDescription'\r\n                            defaultMessage='Maximum lifetime for a connection to the database in milliseconds.'\r\n                        />\r\n                    }\r\n                    value={this.state.connMaxLifetimeMilliseconds}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('SqlSettings.ConnMaxLifetimeMilliseconds')}\r\n                />\r\n                <TextSetting\r\n                    id='minimumHashtagLength'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.service.minimumHashtagLengthTitle'\r\n                            defaultMessage='Minimum Hashtag Length:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.service.minimumHashtagLengthExample', 'E.g.: \"3\"')}\r\n                    helpText={\r\n                        <FormattedMarkdownMessage\r\n                            id='admin.service.minimumHashtagLengthDescription'\r\n                            defaultMessage='Minimum number of characters in a hashtag. This must be greater than or equal to 2. MySQL databases must be configured to support searching strings shorter than three characters, [see documentation](!https://dev.mysql.com/doc/refman/8.0/en/fulltext-fine-tuning.html).'\r\n                        />\r\n                    }\r\n                    value={this.state.minimumHashtagLength}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('ServiceSettings.MinimumHashtagLength')}\r\n                />\r\n                <BooleanSetting\r\n                    id='trace'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.sql.traceTitle'\r\n                            defaultMessage='SQL Statement Logging: '\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.sql.traceDescription'\r\n                            defaultMessage='(Development Mode) When true, executing SQL statements are written to the log.'\r\n                        />\r\n                    }\r\n                    value={this.state.trace}\r\n                    onChange={this.handleChange}\r\n                    setByEnv={this.isSetByEnv('SqlSettings.Trace')}\r\n                />\r\n                {recycleDbButton}\r\n            </SettingsGroup>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {elasticsearchPurgeIndexes, elasticsearchTest} from 'actions/admin_actions.jsx';\r\nimport {JobStatuses, JobTypes} from 'utils/constants.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport {t} from 'utils/i18n';\r\n\r\nimport AdminSettings from './admin_settings.jsx';\r\nimport BooleanSetting from './boolean_setting.jsx';\r\nimport JobsTable from './jobs';\r\nimport RequestButton from './request_button/request_button.jsx';\r\nimport SettingsGroup from './settings_group.jsx';\r\nimport TextSetting from './text_setting.jsx';\r\n\r\nexport default class ElasticsearchSettings extends AdminSettings {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getConfigFromState = this.getConfigFromState.bind(this);\r\n\r\n        this.doTestConfig = this.doTestConfig.bind(this);\r\n        this.handleSettingChanged = this.handleSettingChanged.bind(this);\r\n        this.handleSaved = this.handleSaved.bind(this);\r\n\r\n        this.renderSettings = this.renderSettings.bind(this);\r\n    }\r\n\r\n    getConfigFromState(config) {\r\n        config.ElasticsearchSettings.ConnectionUrl = this.state.connectionUrl;\r\n        config.ElasticsearchSettings.SkipTLSVerification = this.state.skipTLSVerification;\r\n        config.ElasticsearchSettings.Username = this.state.username;\r\n        config.ElasticsearchSettings.Password = this.state.password;\r\n        config.ElasticsearchSettings.Sniff = this.state.sniff;\r\n        config.ElasticsearchSettings.EnableIndexing = this.state.enableIndexing;\r\n        config.ElasticsearchSettings.EnableSearching = this.state.enableSearching;\r\n        config.ElasticsearchSettings.EnableAutocomplete = this.state.enableAutocomplete;\r\n\r\n        return config;\r\n    }\r\n\r\n    getStateFromConfig(config) {\r\n        return {\r\n            connectionUrl: config.ElasticsearchSettings.ConnectionUrl,\r\n            skipTLSVerification: config.ElasticsearchSettings.SkipTLSVerification,\r\n            username: config.ElasticsearchSettings.Username,\r\n            password: config.ElasticsearchSettings.Password,\r\n            sniff: config.ElasticsearchSettings.Sniff,\r\n            enableIndexing: config.ElasticsearchSettings.EnableIndexing,\r\n            enableSearching: config.ElasticsearchSettings.EnableSearching,\r\n            enableAutocomplete: config.ElasticsearchSettings.EnableAutocomplete,\r\n            configTested: true,\r\n            canSave: true,\r\n            canPurgeAndIndex: config.ElasticsearchSettings.EnableIndexing,\r\n        };\r\n    }\r\n\r\n    handleSettingChanged(id, value) {\r\n        if (id === 'enableIndexing') {\r\n            if (value === false) {\r\n                this.setState({\r\n                    enableSearching: false,\r\n                    enableAutocomplete: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    canSave: false,\r\n                    configTested: false,\r\n                });\r\n            }\r\n        }\r\n\r\n        if (id === 'connectionUrl' || id === 'skipTLSVerification' || id === 'username' || id === 'password' || id === 'sniff') {\r\n            this.setState({\r\n                configTested: false,\r\n                canSave: false,\r\n            });\r\n        }\r\n\r\n        if (id !== 'enableSearching' && id !== 'enableAutocomplete') {\r\n            this.setState({\r\n                canPurgeAndIndex: false,\r\n            });\r\n        }\r\n\r\n        this.handleChange(id, value);\r\n    }\r\n\r\n    handleSaved() {\r\n        this.setState({\r\n            canPurgeAndIndex: this.state.enableIndexing,\r\n        });\r\n    }\r\n\r\n    canSave() {\r\n        return this.state.canSave;\r\n    }\r\n\r\n    doTestConfig(success, error) {\r\n        const config = JSON.parse(JSON.stringify(this.props.config));\r\n        this.getConfigFromState(config);\r\n\r\n        elasticsearchTest(\r\n            config,\r\n            () => {\r\n                this.setState({\r\n                    configTested: true,\r\n                    canSave: true,\r\n                });\r\n                success();\r\n                this.doSubmit();\r\n            },\r\n            (err) => {\r\n                this.setState({\r\n                    configTested: false,\r\n                    canSave: false,\r\n                });\r\n                error(err);\r\n            }\r\n        );\r\n    }\r\n\r\n    getExtraInfo(job) {\r\n        if (job.status === JobStatuses.IN_PROGRESS) {\r\n            return (\r\n                <FormattedMessage\r\n                    id='admin.elasticsearch.percentComplete'\r\n                    defaultMessage='{percent}% Complete'\r\n                    values={{percent: Number(job.progress)}}\r\n                />\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderTitle() {\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.elasticsearch.title'\r\n                defaultMessage='Elasticsearch'\r\n            />\r\n        );\r\n    }\r\n\r\n    renderSettings() {\r\n        return (\r\n            <SettingsGroup>\r\n                <BooleanSetting\r\n                    id='enableIndexing'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.enableIndexingTitle'\r\n                            defaultMessage='Enable Elasticsearch Indexing:'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.enableIndexingDescription'\r\n                            defaultMessage='When true, indexing of new posts occurs automatically. Search queries will use database search until \"Enable Elasticsearch for search queries\" is enabled. {documentationLink}'\r\n                            values={{\r\n                                documentationLink: (\r\n                                    <a\r\n                                        href='https://about.mattermost.com/default-elasticsearch-documentation/'\r\n                                        rel='noopener noreferrer'\r\n                                        target='_blank'\r\n                                    >\r\n                                        <FormattedMessage\r\n                                            id='admin.elasticsearch.enableIndexingDescription.documentationLinkText'\r\n                                            defaultMessage='Learn more about Elasticsearch in our documentation.'\r\n                                        />\r\n                                    </a>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    }\r\n                    value={this.state.enableIndexing}\r\n                    onChange={this.handleSettingChanged}\r\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.EnableIndexing')}\r\n                />\r\n                <TextSetting\r\n                    id='connectionUrl'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.connectionUrlTitle'\r\n                            defaultMessage='Server Connection Address:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.elasticsearch.connectionUrlExample', 'E.g.: \"https://elasticsearch.example.org:9200\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.connectionUrlDescription'\r\n                            defaultMessage='The address of the Elasticsearch server. {documentationLink}'\r\n                            values={{\r\n                                documentationLink: (\r\n                                    <a\r\n                                        href='https://about.mattermost.com/default-elasticsearch-server-setup/'\r\n                                        rel='noopener noreferrer'\r\n                                        target='_blank'\r\n                                    >\r\n                                        <FormattedMessage\r\n                                            id='admin.elasticsearch.connectionUrlExample.documentationLinkText'\r\n                                            defaultMessage='Please see documentation with server setup instructions.'\r\n                                        />\r\n                                    </a>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    }\r\n                    value={this.state.connectionUrl}\r\n                    disabled={!this.state.enableIndexing}\r\n                    onChange={this.handleSettingChanged}\r\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.ConnectionUrl')}\r\n                />\r\n                <BooleanSetting\r\n                    id='skipTLSVerification'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.skipTLSVerificationTitle'\r\n                            defaultMessage='Skip TLS Verification:'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.skipTLSVerificationDescription'\r\n                            defaultMessage='When true, Mattermost will not require the Elasticsearch certificate to be signed by a trusted Certificate Authority.'\r\n                        />\r\n                    }\r\n                    value={this.state.skipTLSVerification}\r\n                    disabled={!this.state.enableIndexing}\r\n                    onChange={this.handleSettingChanged}\r\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.SkipTLSVerification')}\r\n                />\r\n                <TextSetting\r\n                    id='username'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.usernameTitle'\r\n                            defaultMessage='Server Username:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.elasticsearch.usernameExample', 'E.g.: \"elastic\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.usernameDescription'\r\n                            defaultMessage='(Optional) The username to authenticate to the Elasticsearch server.'\r\n                        />\r\n                    }\r\n                    value={this.state.username}\r\n                    disabled={!this.state.enableIndexing}\r\n                    onChange={this.handleSettingChanged}\r\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.Username')}\r\n                />\r\n                <TextSetting\r\n                    id='password'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.passwordTitle'\r\n                            defaultMessage='Server Password:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.elasticsearch.password', 'E.g.: \"yourpassword\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.passwordDescription'\r\n                            defaultMessage='(Optional) The password to authenticate to the Elasticsearch server.'\r\n                        />\r\n                    }\r\n                    value={this.state.password}\r\n                    disabled={!this.state.enableIndexing}\r\n                    onChange={this.handleSettingChanged}\r\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.Password')}\r\n                />\r\n                <BooleanSetting\r\n                    id='sniff'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.sniffTitle'\r\n                            defaultMessage='Enable Cluster Sniffing:'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.sniffDescription'\r\n                            defaultMessage='When true, sniffing finds and connects to all data nodes in your cluster automatically.'\r\n                        />\r\n                    }\r\n                    value={this.state.sniff}\r\n                    disabled={!this.state.enableIndexing}\r\n                    onChange={this.handleSettingChanged}\r\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.Sniff')}\r\n                />\r\n                <RequestButton\r\n                    requestAction={this.doTestConfig}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.testHelpText'\r\n                            defaultMessage='Tests if the Mattermost server can connect to the Elasticsearch server specified. Testing the connection only saves the configuration if the test is successful. See log file for more detailed error messages.'\r\n                        />\r\n                    }\r\n                    buttonText={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.elasticsearch_test_button'\r\n                            defaultMessage='Test Connection'\r\n                        />\r\n                    }\r\n                    successMessage={{\r\n                        id: t('admin.elasticsearch.testConfigSuccess'),\r\n                        defaultMessage: 'Test successful. Configuration saved.',\r\n                    }}\r\n                    disabled={!this.state.enableIndexing}\r\n                />\r\n                <div className='form-group'>\r\n                    <label\r\n                        className='control-label col-sm-4'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.bulkIndexingTitle'\r\n                            defaultMessage='Bulk Indexing:'\r\n                        />\r\n                    </label>\r\n                    <div className='col-sm-8'>\r\n                        <div className='job-table-setting'>\r\n                            <JobsTable\r\n                                jobType={JobTypes.ELASTICSEARCH_POST_INDEXING}\r\n                                disabled={!this.state.canPurgeAndIndex}\r\n                                createJobButtonText={\r\n                                    <FormattedMessage\r\n                                        id='admin.elasticsearch.createJob.title'\r\n                                        defaultMessage='Index Now'\r\n                                    />\r\n                                }\r\n                                createJobHelpText={\r\n                                    <FormattedMessage\r\n                                        id='admin.elasticsearch.createJob.help'\r\n                                        defaultMessage='All users, channels and posts in the database will be indexed from oldest to newest. Elasticsearch is available during indexing but search results may be incomplete until the indexing job is complete.'\r\n                                    />\r\n                                }\r\n                                getExtraInfoText={this.getExtraInfo}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <RequestButton\r\n                    requestAction={elasticsearchPurgeIndexes}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.purgeIndexesHelpText'\r\n                            defaultMessage='Purging will entirely remove the indexes on the Elasticsearch server. Search results may be incomplete until a bulk index of the existing database is rebuilt.'\r\n                        />\r\n                    }\r\n                    buttonText={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.purgeIndexesButton'\r\n                            defaultMessage='Purge Index'\r\n                        />\r\n                    }\r\n                    successMessage={{\r\n                        id: t('admin.elasticsearch.purgeIndexesButton.success'),\r\n                        defaultMessage: 'Indexes purged successfully.',\r\n                    }}\r\n                    errorMessage={{\r\n                        id: t('admin.elasticsearch.purgeIndexesButton.error'),\r\n                        defaultMessage: 'Failed to purge indexes: {error}',\r\n                    }}\r\n                    disabled={!this.state.canPurgeAndIndex}\r\n                    label={(\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.purgeIndexesButton.label'\r\n                            defaultMessage='Purge Indexes:'\r\n                        />\r\n                    )}\r\n                />\r\n                <BooleanSetting\r\n                    id='enableSearching'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.enableSearchingTitle'\r\n                            defaultMessage='Enable Elasticsearch for search queries:'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.enableSearchingDescription'\r\n                            defaultMessage='Requires a successful connection to the Elasticsearch server. When true, Elasticsearch will be used for all search queries using the latest index. Search results may be incomplete until a bulk index of the existing post database is finished. When false, database search is used.'\r\n                        />\r\n                    }\r\n                    value={this.state.enableSearching}\r\n                    disabled={!this.state.enableIndexing || !this.state.configTested}\r\n                    onChange={this.handleSettingChanged}\r\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.EnableSearching')}\r\n                />\r\n                <BooleanSetting\r\n                    id='enableAutocomplete'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.enableAutocompleteTitle'\r\n                            defaultMessage='Enable Elasticsearch for autocomplete queries:'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.elasticsearch.enableAutocompleteDescription'\r\n                            defaultMessage='Requires a successful connection to the Elasticsearch server. When true, Elasticsearch will be used for all autocompletion queries on users and channels using the latest index. Autocompletion results may be incomplete until a bulk index of the existing users and channels database is finished. When false, database autocomplete is used.'\r\n                        />\r\n                    }\r\n                    value={this.state.enableAutocomplete}\r\n                    disabled={!this.state.enableIndexing || !this.state.configTested}\r\n                    onChange={this.handleSettingChanged}\r\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.EnableAutocomplete')}\r\n                />\r\n            </SettingsGroup>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport statusGreen from 'images/status_green.png';\r\nimport statusYellow from 'images/status_yellow.png';\r\nimport ReloadIcon from 'components/icon/reload_icon';\r\n\r\nexport default class ClusterTable extends React.Component {\r\n    static propTypes = {\r\n        clusterInfos: PropTypes.array.isRequired,\r\n        reload: PropTypes.func.isRequired,\r\n    }\r\n\r\n    render() {\r\n        var versionMismatch = (\r\n            <img\r\n                alt='version mismatch'\r\n                className='cluster-status'\r\n                src={statusGreen}\r\n            />\r\n        );\r\n\r\n        var configMismatch = (\r\n            <img\r\n                alt='config mismatch'\r\n                className='cluster-status'\r\n                src={statusGreen}\r\n            />\r\n        );\r\n\r\n        var version = '';\r\n        var configHash = '';\r\n        var singleItem = false;\r\n\r\n        if (this.props.clusterInfos.length) {\r\n            version = this.props.clusterInfos[0].version;\r\n            configHash = this.props.clusterInfos[0].config_hash;\r\n            singleItem = this.props.clusterInfos.length === 1;\r\n        }\r\n\r\n        this.props.clusterInfos.map((clusterInfo) => {\r\n            if (clusterInfo.version !== version) {\r\n                versionMismatch = (\r\n                    <img\r\n                        alt='version mismatch'\r\n                        className='cluster-status'\r\n                        src={statusYellow}\r\n                    />\r\n                );\r\n            }\r\n\r\n            if (clusterInfo.config_hash !== configHash) {\r\n                configMismatch = (\r\n                    <img\r\n                        alt='config mismatch'\r\n                        className='cluster-status'\r\n                        src={statusYellow}\r\n                    />\r\n                );\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n        var items = this.props.clusterInfos.map((clusterInfo) => {\r\n            var status = null;\r\n\r\n            if (clusterInfo.hostname === '') {\r\n                clusterInfo.hostname = Utils.localizeMessage('admin.cluster.unknown', 'unknown');\r\n            }\r\n\r\n            if (clusterInfo.version === '') {\r\n                clusterInfo.version = Utils.localizeMessage('admin.cluster.unknown', 'unknown');\r\n            }\r\n\r\n            if (clusterInfo.config_hash === '') {\r\n                clusterInfo.config_hash = Utils.localizeMessage('admin.cluster.unknown', 'unknown');\r\n            }\r\n\r\n            if (singleItem) {\r\n                status = (\r\n                    <img\r\n                        alt='Cluster status'\r\n                        className='cluster-status'\r\n                        src={statusYellow}\r\n                    />\r\n                );\r\n            } else {\r\n                status = (\r\n                    <img\r\n                        alt='Cluster status'\r\n                        className='cluster-status'\r\n                        src={statusGreen}\r\n                    />\r\n                );\r\n            }\r\n\r\n            return (\r\n                <tr key={clusterInfo.ipaddress}>\r\n                    <td style={style.clusterCell}>{status}</td>\r\n                    <td style={style.clusterCell}>{clusterInfo.hostname}</td>\r\n                    <td style={style.clusterCell}>{versionMismatch} {clusterInfo.version}</td>\r\n                    <td style={style.clusterCell}><div className='config-hash'>{configMismatch} {clusterInfo.config_hash}</div></td>\r\n                    <td style={style.clusterCell}>{clusterInfo.ipaddress}</td>\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div\r\n                className='cluster-panel__table'\r\n                style={style.clusterTable}\r\n            >\r\n                <div className='text-right'>\r\n                    <button\r\n                        type='submit'\r\n                        className='btn btn-link'\r\n                        onClick={this.props.reload}\r\n                    >\r\n                        <ReloadIcon/>\r\n                        <FormattedMessage\r\n                            id='admin.cluster.status_table.reload'\r\n                            defaultMessage=' Reload Cluster Status'\r\n                        />\r\n                    </button>\r\n                </div>\r\n                <table className='table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <FormattedMessage\r\n                                    id='admin.cluster.status_table.status'\r\n                                    defaultMessage='Status'\r\n                                />\r\n                            </th>\r\n                            <th>\r\n                                <FormattedMessage\r\n                                    id='admin.cluster.status_table.hostname'\r\n                                    defaultMessage='Hostname'\r\n                                />\r\n                            </th>\r\n                            <th>\r\n                                <FormattedMessage\r\n                                    id='admin.cluster.status_table.version'\r\n                                    defaultMessage='Version'\r\n                                />\r\n                            </th>\r\n                            <th>\r\n                                <FormattedMessage\r\n                                    id='admin.cluster.status_table.config_hash'\r\n                                    defaultMessage='Config File MD5'\r\n                                />\r\n                            </th>\r\n                            <th>\r\n                                <FormattedMessage\r\n                                    id='admin.cluster.status_table.url'\r\n                                    defaultMessage='Gossip Address'\r\n                                />\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {items}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst style = {\r\n    clusterTable: {margin: 10, marginBottom: 30},\r\n    clusterCell: {whiteSpace: 'nowrap'},\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\n\r\nimport {getClusterStatus} from 'actions/admin_actions.jsx';\r\nimport LoadingScreen from '../loading_screen.jsx';\r\n\r\nimport ClusterTable from './cluster_table.jsx';\r\n\r\nexport default class ClusterTableContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.load = this.load.bind(this);\r\n        this.reload = this.reload.bind(this);\r\n\r\n        this.interval = null;\r\n\r\n        this.state = {\r\n            clusterInfos: null,\r\n        };\r\n    }\r\n\r\n    load() {\r\n        getClusterStatus(\r\n            (data) => {\r\n                this.setState({\r\n                    clusterInfos: data,\r\n                });\r\n            },\r\n            null\r\n        );\r\n    }\r\n\r\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\r\n        this.load();\r\n\r\n        // reload the cluster status every 15 seconds\r\n        this.interval = setInterval(this.load, 15000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n        }\r\n    }\r\n\r\n    reload(e) {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        this.setState({\r\n            clusterInfos: null,\r\n        });\r\n\r\n        this.load();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.clusterInfos == null) {\r\n            return (<LoadingScreen/>);\r\n        }\r\n\r\n        return (\r\n            <ClusterTable\r\n                clusterInfos={this.state.clusterInfos}\r\n                reload={this.reload}\r\n            />\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\r\nimport {Client4} from 'mattermost-redux/client';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\nimport WarningIcon from 'components/icon/warning_icon';\r\n\r\nimport AdminSettings from './admin_settings.jsx';\r\nimport BooleanSetting from './boolean_setting.jsx';\r\nimport ClusterTableContainer from './cluster_table_container.jsx';\r\nimport SettingsGroup from './settings_group.jsx';\r\nimport TextSetting from './text_setting.jsx';\r\n\r\nexport default class ClusterSettings extends AdminSettings {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getConfigFromState = this.getConfigFromState.bind(this);\r\n        this.renderSettings = this.renderSettings.bind(this);\r\n        this.overrideHandleChange = this.overrideHandleChange.bind(this);\r\n    }\r\n\r\n    getConfigFromState(config) {\r\n        config.ClusterSettings.Enable = this.state.Enable;\r\n        config.ClusterSettings.ClusterName = this.state.ClusterName;\r\n        config.ClusterSettings.OverrideHostname = this.state.OverrideHostname;\r\n        config.ClusterSettings.UseIpAddress = this.state.UseIpAddress;\r\n        config.ClusterSettings.UseExperimentalGossip = this.state.UseExperimentalGossip;\r\n        config.ClusterSettings.GossipPort = this.parseIntNonZero(this.state.GossipPort, 8074);\r\n        config.ClusterSettings.StreamingPort = this.parseIntNonZero(this.state.StreamingPort, 8075);\r\n        return config;\r\n    }\r\n\r\n    getStateFromConfig(config) {\r\n        const settings = config.ClusterSettings;\r\n\r\n        return {\r\n            Enable: settings.Enable,\r\n            ClusterName: settings.ClusterName,\r\n            OverrideHostname: settings.OverrideHostname,\r\n            UseIpAddress: settings.UseIpAddress,\r\n            UseExperimentalGossip: settings.UseExperimentalGossip,\r\n            GossipPort: settings.GossipPort,\r\n            StreamingPort: settings.StreamingPort,\r\n            showWarning: false,\r\n        };\r\n    }\r\n\r\n    renderTitle() {\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.advance.cluster'\r\n                defaultMessage='High Availability'\r\n            />\r\n        );\r\n    }\r\n\r\n    overrideHandleChange(id, value) {\r\n        this.setState({\r\n            showWarning: true,\r\n        });\r\n\r\n        this.handleChange(id, value);\r\n    }\r\n\r\n    renderSettings() {\r\n        const licenseEnabled = this.props.license.IsLicensed === 'true' && this.props.license.Cluster === 'true';\r\n        if (!licenseEnabled) {\r\n            return null;\r\n        }\r\n\r\n        var configLoadedFromCluster = null;\r\n\r\n        if (Client4.clusterId) {\r\n            configLoadedFromCluster = (\r\n                <div\r\n                    style={style.configLoadedFromCluster}\r\n                    className='alert alert-warning'\r\n                >\r\n                    <WarningIcon/>\r\n                    <FormattedMarkdownMessage\r\n                        id='admin.cluster.loadedFrom'\r\n                        defaultMessage='This configuration file was loaded from Node ID {clusterId}. Please see the Troubleshooting Guide in our [documentation](!http://docs.mattermost.com/deployment/cluster.html) if you are accessing the System Console through a load balancer and experiencing issues.'\r\n                        values={{\r\n                            clusterId: Client4.clusterId,\r\n                        }}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        var warning = null;\r\n\r\n        if (this.state.showWarning) {\r\n            warning = (\r\n                <div\r\n                    style={style.warning}\r\n                    className='alert alert-warning'\r\n                >\r\n                    <WarningIcon/>\r\n                    <FormattedMarkdownMessage\r\n                        id='admin.cluster.should_not_change'\r\n                        defaultMessage='WARNING: These settings may not sync with the other servers in the cluster. High Availability inter-node communication will not start until you modify the config.json to be identical on all servers and restart Mattermost. Please see the [documentation](!http://docs.mattermost.com/deployment/cluster.html) on how to add or remove a server from the cluster. If you are accessing the System Console through a load balancer and experiencing issues, please see the Troubleshooting Guide in our [documentation](!http://docs.mattermost.com/deployment/cluster.html).'\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        var clusterTableContainer = null;\r\n        if (this.state.Enable) {\r\n            clusterTableContainer = (<ClusterTableContainer/>);\r\n        }\r\n\r\n        return (\r\n            <SettingsGroup>\r\n                {configLoadedFromCluster}\r\n                {clusterTableContainer}\r\n                <div className='banner'>\r\n                    <FormattedMessage\r\n                        id='admin.cluster.noteDescription'\r\n                        defaultMessage='Changing properties in this section will require a server restart before taking effect.'\r\n                    />\r\n                </div>\r\n                {warning}\r\n                <BooleanSetting\r\n                    id='Enable'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.cluster.enableTitle'\r\n                            defaultMessage='Enable High Availability Mode:'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMarkdownMessage\r\n                            id='admin.cluster.enableDescription'\r\n                            defaultMessage='When true, Mattermost will run in High Availability mode. Please see [documentation](!http://docs.mattermost.com/deployment/cluster.html) to learn more about configuring High Availability for Mattermost.'\r\n                        />\r\n                    }\r\n                    value={this.state.Enable}\r\n                    onChange={this.overrideHandleChange}\r\n                    setByEnv={this.isSetByEnv('ClusterSettings.Enable')}\r\n                />\r\n                <TextSetting\r\n                    id='ClusterName'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.cluster.ClusterName'\r\n                            defaultMessage='Cluster Name:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.cluster.ClusterNameEx', 'E.g.: \"Production\" or \"Staging\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.cluster.ClusterNameDesc'\r\n                            defaultMessage='The cluster to join by name.  Only nodes with the same cluster name will join together.  This is to support Blue-Green deployments or staging pointing to the same database.'\r\n                        />\r\n                    }\r\n                    value={this.state.ClusterName}\r\n                    onChange={this.overrideHandleChange}\r\n                    setByEnv={this.isSetByEnv('ClusterSettings.ClusterName')}\r\n                />\r\n                <TextSetting\r\n                    id='OverrideHostname'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.cluster.OverrideHostname'\r\n                            defaultMessage='Override Hostname:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.cluster.OverrideHostnameEx', 'E.g.: \"app-server-01\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.cluster.OverrideHostnameDesc'\r\n                            defaultMessage='The default value of <blank> will attempt to get the Hostname from the OS or use the IP Address.  You can override the hostname of this server with this property.  It is not recommended to override the Hostname unless needed. This property can also be set to a specific IP Address if needed.'\r\n                        />\r\n                    }\r\n                    value={this.state.OverrideHostname}\r\n                    onChange={this.overrideHandleChange}\r\n                    setByEnv={this.isSetByEnv('ClusterSettings.OverrideHostname')}\r\n                />\r\n                <BooleanSetting\r\n                    id='UseIpAddress'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.cluster.UseIpAddress'\r\n                            defaultMessage='Use IP Address:'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedHTMLMessage\r\n                            id='admin.cluster.UseIpAddressDesc'\r\n                            defaultMessage='When true, the cluster will attempt to communicate via IP Address vs using the hostname.'\r\n                        />\r\n                    }\r\n                    value={this.state.UseIpAddress}\r\n                    onChange={this.overrideHandleChange}\r\n                    setByEnv={this.isSetByEnv('ClusterSettings.UseIpAddress')}\r\n                />\r\n                <BooleanSetting\r\n                    id='UseExperimentalGossip'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.cluster.UseExperimentalGossip'\r\n                            defaultMessage='Use Experimental Gossip:'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedHTMLMessage\r\n                            id='admin.cluster.UseExperimentalGossipDesc'\r\n                            defaultMessage='When true, the server will attempt to communicate via the gossip protocol over the gossip port.  When false the server will attempt to communicate over the streaming port. When false the gossip port and protocol are still used to determine cluster health.'\r\n                        />\r\n                    }\r\n                    value={this.state.UseExperimentalGossip}\r\n                    onChange={this.overrideHandleChange}\r\n                    setByEnv={this.isSetByEnv('ClusterSettings.UseExperimentalGossip')}\r\n                />\r\n                <TextSetting\r\n                    id='GossipPort'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.cluster.GossipPort'\r\n                            defaultMessage='Gossip Port:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.cluster.GossipPortEx', 'E.g.: \"8074\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.cluster.GossipPortDesc'\r\n                            defaultMessage='The port used for the gossip protocol.  Both UDP and TCP should be allowed on this port.'\r\n                        />\r\n                    }\r\n                    value={this.state.GossipPort}\r\n                    onChange={this.overrideHandleChange}\r\n                    setByEnv={this.isSetByEnv('ClusterSettings.GossipPort')}\r\n                />\r\n                <TextSetting\r\n                    id='StreamingPort'\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.cluster.StreamingPort'\r\n                            defaultMessage='Streaming Port:'\r\n                        />\r\n                    }\r\n                    placeholder={Utils.localizeMessage('admin.cluster.StreamingPortEx', 'E.g.: \"8075\"')}\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.cluster.StreamingPortDesc'\r\n                            defaultMessage='The port used for streaming data between servers.'\r\n                        />\r\n                    }\r\n                    value={this.state.StreamingPort}\r\n                    onChange={this.overrideHandleChange}\r\n                    setByEnv={this.isSetByEnv('ClusterSettings.StreamingPort')}\r\n                />\r\n            </SettingsGroup>\r\n        );\r\n    }\r\n}\r\n\r\nconst style = {\r\n    configLoadedFromCluster: {marginBottom: 10},\r\n    warning: {marginBottom: 10},\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {saveConfig} from 'actions/admin_actions.jsx';\r\nimport AdminSettings from 'components/admin_console/admin_settings.jsx';\r\n\r\nimport SettingsGroup from 'components/admin_console/settings_group.jsx';\r\nimport BooleanSetting from 'components/admin_console/boolean_setting.jsx';\r\nimport TextSetting from 'components/admin_console/text_setting.jsx';\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\nimport LoadingScreen from 'components/loading_screen.jsx';\r\n\r\nimport {Constants} from 'utils/constants';\r\n\r\nexport default class CustomTermsOfServiceSettings extends AdminSettings {\r\n    static propTypes = {\r\n        actions: PropTypes.shape({\r\n            getTermsOfService: PropTypes.func.isRequired,\r\n            createTermsOfService: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n        config: PropTypes.object,\r\n        license: PropTypes.object,\r\n        setNavigationBlocked: PropTypes.func,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            termsEnabled: props.config.SupportSettings.CustomTermsOfServiceEnabled,\r\n            reAcceptancePeriod: props.config.SupportSettings.CustomTermsOfServiceReAcceptancePeriod,\r\n            loadingTermsText: true,\r\n            receivedTermsText: '',\r\n            termsText: '',\r\n            saveNeeded: false,\r\n            saving: false,\r\n            serverError: null,\r\n            errorTooltip: false,\r\n        };\r\n    }\r\n\r\n    getStateFromConfig(config) {\r\n        return {\r\n            termsEnabled: config.SupportSettings.CustomTermsOfServiceEnabled,\r\n            reAcceptancePeriod: config.SupportSettings.CustomTermsOfServiceReAcceptancePeriod,\r\n        };\r\n    }\r\n\r\n    getConfigFromState = (config) => {\r\n        config.SupportSettings.CustomTermsOfServiceEnabled = this.state.termsEnabled;\r\n        config.SupportSettings.CustomTermsOfServiceReAcceptancePeriod = this.parseIntNonZero(this.state.reAcceptancePeriod, Constants.DEFAULT_TERMS_OF_SERVICE_RE_ACCEPTANCE_PERIOD);\r\n\r\n        return config;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTermsOfService();\r\n    }\r\n\r\n    doSubmit = async (callback) => {\r\n        this.setState({\r\n            saving: true,\r\n            serverError: null,\r\n        });\r\n\r\n        if (this.state.termsEnabled && (this.state.receivedTermsText !== this.state.termsText || !this.props.config.SupportSettings.CustomTermsOfServiceEnabled)) {\r\n            const result = await this.props.actions.createTermsOfService(this.state.termsText);\r\n            if (result.error) {\r\n                this.handleAPIError(result.error, callback);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // clone config so that we aren't modifying data in the stores\r\n        let config = JSON.parse(JSON.stringify(this.props.config));\r\n        config = this.getConfigFromState(config);\r\n\r\n        saveConfig(\r\n            config,\r\n            (savedConfig) => {\r\n                this.setState(this.getStateFromConfig(savedConfig));\r\n\r\n                this.setState({\r\n                    saveNeeded: false,\r\n                    saving: false,\r\n                });\r\n\r\n                this.props.setNavigationBlocked(false);\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n\r\n                if (this.handleSaved) {\r\n                    this.handleSaved(config);\r\n                }\r\n            },\r\n            (err) => {\r\n                this.handleAPIError(err, callback, config);\r\n            }\r\n        );\r\n    };\r\n\r\n    handleAPIError = (err, callback, config) => {\r\n        this.setState({\r\n            saving: false,\r\n            serverError: err.message,\r\n            serverErrorId: err.id,\r\n        });\r\n\r\n        if (callback) {\r\n            callback();\r\n        }\r\n\r\n        if (this.handleSaved && config) {\r\n            this.handleSaved(config);\r\n        }\r\n    };\r\n\r\n    getTermsOfService = async () => {\r\n        this.setState({loadingTermsText: true});\r\n\r\n        const res = await this.props.actions.getTermsOfService();\r\n        if (res.data) {\r\n            this.setState({\r\n                termsText: res.data.text,\r\n                receivedTermsText: res.data.text,\r\n            });\r\n        }\r\n\r\n        this.setState({loadingTermsText: false});\r\n    };\r\n\r\n    handleTermsTextChange = (id, value) => {\r\n        this.handleChange('termsText', value);\r\n    };\r\n\r\n    handleTermsEnabledChange = (id, value) => {\r\n        this.handleChange('termsEnabled', value);\r\n    };\r\n\r\n    handleReAcceptancePeriodChange = (id, value) => {\r\n        this.handleChange('reAcceptancePeriod', value);\r\n    };\r\n\r\n    renderTitle() {\r\n        return (\r\n            <FormattedMessage\r\n                id='admin.support.termsOfServiceTitle'\r\n                defaultMessage='Custom Terms of Service (Beta)'\r\n            />\r\n        );\r\n    }\r\n\r\n    renderSettings = () => {\r\n        if (this.state.loadingTermsText) {\r\n            return <LoadingScreen/>;\r\n        }\r\n\r\n        return (\r\n            <SettingsGroup>\r\n                <BooleanSetting\r\n                    key={'customTermsOfServiceEnabled'}\r\n                    id={'SupportSettings.CustomTermsOfServiceEnabled'}\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.support.enableTermsOfServiceTitle'\r\n                            defaultMessage='Enable Custom Terms of Service'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMarkdownMessage\r\n                            id='admin.support.enableTermsOfServiceHelp'\r\n                            defaultMessage='When true, new users must accept the terms of service before accessing any Mattermost teams on desktop, web or mobile. Existing users must accept them after login or a page refresh.\\n \\nTo update terms of service link displayed in account creation and login pages, go to [Site Configuration > Customization](../site_config/customization).'\r\n                        />\r\n                    }\r\n                    value={this.state.termsEnabled}\r\n                    disabled={!(this.props.license.IsLicensed && this.props.license.CustomTermsOfService === 'true')}\r\n                    onChange={this.handleTermsEnabledChange}\r\n                    setByEnv={this.isSetByEnv('SupportSettings.CustomTermsOfServiceEnabled')}\r\n                />\r\n                <TextSetting\r\n                    key={'customTermsOfServiceText'}\r\n                    id={'SupportSettings.CustomTermsOfServiceText'}\r\n                    type={'textarea'}\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.support.termsOfServiceTextTitle'\r\n                            defaultMessage='Custom Terms of Service Text'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.support.termsOfServiceTextHelp'\r\n                            defaultMessage='Text that will appear in your custom Terms of Service. Supports Markdown-formatted text.'\r\n                        />\r\n                    }\r\n                    disabled={!this.state.termsEnabled}\r\n                    onChange={this.handleTermsTextChange}\r\n                    setByEnv={this.isSetByEnv('SupportSettings.CustomTermsOfServiceText')}\r\n                    value={this.state.termsText}\r\n                    maxLength={Constants.MAX_TERMS_OF_SERVICE_TEXT_LENGTH}\r\n                />\r\n                <TextSetting\r\n                    key={'customTermsOfServiceReAcceptancePeriod'}\r\n                    id={'SupportSettings.CustomTermsOfServiceReAcceptancePeriod'}\r\n                    type={'number'}\r\n                    label={\r\n                        <FormattedMessage\r\n                            id='admin.support.termsOfServiceReAcceptanceTitle'\r\n                            defaultMessage='Re-Acceptance Period:'\r\n                        />\r\n                    }\r\n                    helpText={\r\n                        <FormattedMessage\r\n                            id='admin.support.termsOfServiceReAcceptanceHelp'\r\n                            defaultMessage='The number of days before Terms of Service acceptance expires, and the terms must be re-accepted.'\r\n                        />\r\n                    }\r\n                    disabled={!this.state.termsEnabled}\r\n                    value={this.state.reAcceptancePeriod}\r\n                    onChange={this.handleReAcceptancePeriodChange}\r\n                    setByEnv={this.isSetByEnv('SupportSettings.CustomTermsOfServiceReAcceptancePeriod')}\r\n                />\r\n            </SettingsGroup>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getTermsOfService, createTermsOfService} from 'mattermost-redux/actions/users';\r\n\r\nimport CustomTermsOfServiceSettings from './custom_terms_of_service_settings.jsx';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getTermsOfService,\r\n            createTermsOfService,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CustomTermsOfServiceSettings);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport request from \"utils/request\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {ProgressBar} from 'react-bootstrap';\nimport axios from 'axios'\n\nexport default class AdminDownload extends React.Component {\n    static propTypes = {\n        license: PropTypes.object.isRequired,\n        config: PropTypes.object,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            macInput:\"请选择Mac文件\",\n            inputTxt:\"3333\",\n            winInput:\"请选择win文件\",\n            filesWin:null,\n            filesMac:null,\n            percentmac:0,\n            percentwin:0,\n            showTxtmac:'',\n            showTxtwin:''\n        };\n        this.fileInput = React.createRef();\n    }\n    onChangeInput=(e)=>{\n        this.setState({inputTxt:this.fileInput.current.value});\n    }\n\n    onChangeMac=(e)=>{\n      this.setState({macInput:e.currentTarget.files[0].name,filesMac:e.currentTarget.files[0]});\n    }\n\n    onChangeWin=(e)=>{\n      this.setState({winInput:e.currentTarget.files[0].name,filesWin:e.currentTarget.files[0]});\n    }\n\n    onUpfileMac=(e)=>{\n        //file, type, version\n        if(!this.state.filesMac){\n            alert(\"请上传文件\");\n            return;\n        }\n        this.upFile({file:this.state.filesMac,type:'mac',version:this.state.inputTxt,loadProgress:(e)=>{\n            let percent = e.loaded / e.total * 100 | 0;\n            this.setState({percentmac:percent,showTxtmac:percent+\"%\"});\n        }}).then((res)=>{\n            if(res.data && res.data.file_infos && res.data.file_infos.length>0) this.setState({percentmac:100,showTxtmac:\"上传成功!\"});\n        });\n    }\n\n    onUpfileWin=(e)=>{\n        //file, type, version\n        if(!this.state.filesWin){\n            alert(\"请上传文件\");\n            return;\n        }\n        this.upFile({file:this.state.filesWin,type:'win',version:this.state.inputTxt,loadProgress:(e)=>{\n            let percent = e.loaded / e.total * 100 | 0;\n            this.setState({percentwin:percent,showTxtwin:percent+\"%\"});\n        }}).then((res)=>{\n            if(res.data && res.data.file_infos && res.data.file_infos.length>0) this.setState({percentwin:100,showTxtwin:\"上传成功!\"});\n        });\n    }\n\n\n    upFile ({ file, type, version,loadProgress }) {\n        const formData = new window.FormData()\n        formData.append('files', file);\n        return request({\n            url: `/api/v4/files/ao?file_type=${type}&version=${version}`,\n            method: \"POST\",\n            data:formData,\n            onUploadProgress:function(progressEvent){ //原生获取上传进度的事件\n            if(progressEvent.lengthComputable){\n                //属性lengthComputable主要表明总共需要完成的工作量和已经完成的工作是否可以被测量\n                //如果lengthComputable为false，就获取不到progressEvent.total和progressEvent.loaded\n                loadProgress(progressEvent);\n            }\n        },\n        });\n    };\n\n    render() {\n        return (\n          <div className=\"main-wrapper\">\n            <div className=\"header\">\n                <div className=\"logo-box\">\n                <div className=\"logo\"></div>\n                <span className=\"desc-version\">version 0.1.0</span>\n                </div>\n                <div className=\"subtitle\">Make your IT team collaboration, <span className=\"green\">O</span>nclound,<span className=\"green\">N</span>ogap,<span className=\"green\">E</span>fficient</div>\n            </div>\n            <div className=\"content\">\n                <ol className=\"form\">\n                <li className=\"form-item\">\n                    <label>Version:</label>\n                    <div className=\"input-box\">\n                        <input id=\"version\" type=\"text\" ref={this.fileInput} onChange={this.onChangeInput}/>\n                    </div>\n                </li>\n                <li className=\"form-item\">\n                    <label>Mac:</label>\n                    <div className=\"input-box file-fix\">\n                    <input placeholder={this.state.macInput} disabled type=\"text\" />\n                    <input id=\"mac-file-input\" className=\"file-input\" type=\"file\" onChange={this.onChangeMac}/>\n                    </div>\n                    <div className=\"suffix-btn\" type=\"windows\" onClick={this.onUpfileMac}>提交</div>\n                    {this.state.percentmac &&\n                    (\n                        <div>\n                            <ProgressBar\n                                className='post-image__progressBar'\n                                now={this.state.percentmac}\n                                active={this.state.percentmac === 100}\n                            />\n                            <div className='form-item-progressBar'>{this.state.showTxtmac}</div>\n                        </div>\n                    )}\n                </li>\n                <li className=\"form-item\">\n                    <label>Windows:</label>\n                    <div className=\"input-box file-fix\">\n                    <input placeholder={this.state.winInput} disabled type=\"text\" />\n                    <input id=\"windows-file-input\" className=\"file-input\" type=\"file\" onChange={this.onChangeWin}/>\n                    </div>\n                    <div className=\"suffix-btn\" type=\"windows\" onClick={this.onUpfileWin}>提交</div>\n                    {this.state.percentwin && \n                    (\n                        <div>\n                            <ProgressBar\n                                className='post-image__progressBar'\n                                now={this.state.percentwin}\n                                active={this.state.percentwin === 100}\n                            />\n                            <div className='form-item-progressBar'>{this.state.showTxtwin}</div>\n                        </div>\n                    )}\n                </li>\n                </ol>\n            </div>\n        </div>\n        );\n    }\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nconst SECTION_NONE = (\r\n    <tr>\r\n        <td>\r\n            <FormattedMessage\r\n                id='admin.connectionSecurityNone'\r\n                defaultMessage='None'\r\n            />\r\n        </td>\r\n        <td>\r\n            <FormattedMessage\r\n                id='admin.connectionSecurityNoneDescription'\r\n                defaultMessage='Mattermost will connect over an insecure connection.'\r\n            />\r\n        </td>\r\n    </tr>\r\n);\r\n\r\nconst SECTION_TLS = (\r\n    <tr>\r\n        <td>\r\n            <FormattedMessage\r\n                id='admin.connectionSecurityTls'\r\n                defaultMessage='TLS'\r\n            />\r\n        </td>\r\n        <td>\r\n            <FormattedMessage\r\n                id='admin.connectionSecurityTlsDescription'\r\n                defaultMessage='Encrypts the communication between Mattermost and your server.'\r\n            />\r\n        </td>\r\n    </tr>\r\n);\r\n\r\nconst SECTION_STARTTLS = (\r\n    <tr>\r\n        <td>\r\n            <FormattedMessage\r\n                id='admin.connectionSecurityStart'\r\n                defaultMessage='STARTTLS'\r\n            />\r\n        </td>\r\n        <td>\r\n            <FormattedMessage\r\n                id='admin.connectionSecurityStartDescription'\r\n                defaultMessage='Takes an existing insecure connection and attempts to upgrade it to a secure connection using TLS.'\r\n            />\r\n        </td>\r\n    </tr>\r\n);\r\n\r\nexport const CONNECTION_SECURITY_HELP_TEXT_EMAIL = (\r\n    <table\r\n        className='table table-bordered table-margin--none'\r\n        cellPadding='5'\r\n    >\r\n        <tbody>\r\n            {SECTION_NONE}\r\n            {SECTION_TLS}\r\n            {SECTION_STARTTLS}\r\n        </tbody>\r\n    </table>\r\n);\r\n\r\nexport const CONNECTION_SECURITY_HELP_TEXT_LDAP = (\r\n    <table\r\n        className='table table-bordered table-margin--none'\r\n        cellPadding='5'\r\n    >\r\n        <tbody>\r\n            {SECTION_NONE}\r\n            {SECTION_TLS}\r\n            {SECTION_STARTTLS}\r\n        </tbody>\r\n    </table>\r\n);\r\n\r\nexport const CONNECTION_SECURITY_HELP_TEXT_WEBSERVER = (\r\n    <table\r\n        className='table table-bordered table-margin--none'\r\n        cellPadding='5'\r\n    >\r\n        <tbody>\r\n            {SECTION_NONE}\r\n            {SECTION_TLS}\r\n        </tbody>\r\n    </table>\r\n);\r\n\r\nexport const WEBSERVER_MODE_HELP_TEXT = (\r\n    <div>\r\n        <table\r\n            className='table table-bordered table-margin--none'\r\n            cellPadding='5'\r\n        >\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <FormattedMessage\r\n                            id='admin.webserverModeGzip'\r\n                            defaultMessage='gzip'\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <FormattedMessage\r\n                            id='admin.webserverModeGzipDescription'\r\n                            defaultMessage='The Mattermost server will serve static files compressed with gzip.'\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <FormattedMessage\r\n                            id='admin.webserverModeUncompressed'\r\n                            defaultMessage='Uncompressed'\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <FormattedMessage\r\n                            id='admin.webserverModeUncompressedDescription'\r\n                            defaultMessage='The Mattermost server will serve static files uncompressed.'\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <FormattedMessage\r\n                            id='admin.webserverModeDisabled'\r\n                            defaultMessage='Disabled'\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <FormattedMessage\r\n                            id='admin.webserverModeDisabledDescription'\r\n                            defaultMessage='The Mattermost server will not serve static files.'\r\n                        />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <p className='help-text'>\r\n            <FormattedMessage\r\n                id='admin.webserverModeHelpText'\r\n                defaultMessage='gzip compression applies to static content files. It is recommended to enable gzip to improve performance unless your environment has specific restrictions, such as a web proxy that distributes gzip files poorly.'\r\n            />\r\n        </p>\r\n    </div>\r\n);\r\n\r\nexport const LOG_LEVEL_OPTIONS = [\r\n    {\r\n        value: 'DEBUG',\r\n        display_name: 'DEBUG',\r\n        display_name_default: 'DEBUG',\r\n    },\r\n    {\r\n        value: 'INFO',\r\n        display_name: 'INFO',\r\n        display_name_default: 'INFO',\r\n    },\r\n    {\r\n        value: 'ERROR',\r\n        display_name: 'ERROR',\r\n        display_name_default: 'ERROR',\r\n    },\r\n];\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Constants} from 'utils/constants';\nimport {getSiteURL} from 'utils/url';\nimport {t} from 'utils/i18n';\nimport {\n    ldapTest, invalidateAllCaches, reloadConfig, testS3Connection,\n    removeIdpSamlCertificate, uploadIdpSamlCertificate,\n    removePrivateSamlCertificate, uploadPrivateSamlCertificate,\n    removePublicSamlCertificate, uploadPublicSamlCertificate,\n    invalidateAllEmailInvites, testSmtp,\n} from 'actions/admin_actions';\nimport SystemAnalytics from 'components/analytics/system_analytics';\nimport TeamAnalytics from 'components/analytics/team_analytics';\nimport PluginManagement from 'components/admin_console/plugin_management';\nimport CustomPluginSettings from 'components/admin_console/custom_plugin_settings';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\n\nimport Audits from './audits';\nimport CustomUrlSchemesSetting from './custom_url_schemes_setting.jsx';\nimport LicenseSettings from './license_settings';\nimport PermissionSchemesSettings from './permission_schemes_settings';\nimport PermissionSystemSchemeSettings from './permission_schemes_settings/permission_system_scheme_settings';\nimport PermissionTeamSchemeSettings from './permission_schemes_settings/permission_team_scheme_settings';\nimport SystemUsers from './system_users';\nimport ServerLogs from './server_logs';\nimport BrandImageSetting from './brand_image_setting/brand_image_setting.jsx';\nimport GroupSettings from './group_settings/group_settings.jsx';\nimport GroupDetails from './group_settings/group_details';\nimport TeamSettings from './team_channel_settings/team';\nimport TeamDetails from './team_channel_settings/team/details';\nimport ChannelSettings from './team_channel_settings/channel';\nimport ChannelDetails from './team_channel_settings/channel/details';\nimport PasswordSettings from './password_settings.jsx';\nimport PushNotificationsSettings from './push_settings.jsx';\nimport DataRetentionSettings from './data_retention_settings.jsx';\nimport MessageExportSettings from './message_export_settings.jsx';\nimport DatabaseSettings from './database_settings.jsx';\nimport ElasticSearchSettings from './elasticsearch_settings.jsx';\nimport ClusterSettings from './cluster_settings.jsx';\nimport CustomTermsOfServiceSettings from './custom_terms_of_service_settings';\nimport AdminDownload from './upload/admin_download';\n\nimport * as DefinitionConstants from './admin_definition_constants';\n\nconst FILE_STORAGE_DRIVER_LOCAL = 'local';\nconst FILE_STORAGE_DRIVER_S3 = 'amazons3';\nconst MEBIBYTE = Math.pow(1024, 2);\nconst MINIMUM_IDLE_TIMEOUT = 5;\n\n// admin_definitions data structure define the autogenerated admin_console\n// section. It defines the structure of the menu based on sections, subsections\n// and pages. Each page contains an schema which defines a component to use for\n// render the entire section or the name of the section (name and\n// name_default), the section in the config file (id), and a list of options to\n// configure (settings).\n//\n// All text fiels contains a transation key, and the <field>_default string are the\n// default text when the translation is still not avaiable (the english version\n// of the text).\n//\n// We can define different types of settings configuration widgets:\n//\n// Widget:\n//   - type: which define the widget type.\n//   - label (and label_default): which define the main text of the setting.\n//   - isDisabled: a function which receive current config, the state of the page and the license.\n//   - isHidden: a function which receive current config, the state of the page and the license.\n//\n// Custom Widget (extends from Widget):\n//   - component: The component used to render the widget\n//\n// JobsTable Widget (extends from Widget):\n//   - job_type: The kind of job from Constants.JobTypes\n//   - render_job: Function to convert a job object into a react component.\n//\n// Banner Widget (extends from Widget):\n//   - banner_type: The type of banner (options: info or warning)\n//\n// Setting Widget (extends from Widget):\n//   - key: The key to store the configuration in the config file.\n//   - help_text (and help_text_default): Long description of the field.\n//   - help_text_markdown: True if the translation text contains markdown.\n//   - help_text_values: Values to fill the translation (if needed).\n//\n// Bool Widget (extends from Setting Widget)\n//\n// Number Widget (extends from Setting Widget)\n//\n// Color Widget (extends from Setting Widget)\n//\n// Text Widget (extends from Setting Widget)\n//   - placeholder (and placeholder_default): Placeholder text to show in the input.\n//   - dynamic_value: function that generate the value of the field based on the current value, the config, the state and the license.\n//   - default_value: function that generate the default value of the field based on the config, the state and the license.\n//   - max_length: The maximun length allowed\n//\n// Button Widget (extends from Setting Widget)\n//   - action: A redux action to execute on click.\n//   - error_message (and error_message_default): Error to show if action doesn't work.\n//   - success_message (and success_message_default): Success message to show if action doesn't work.\n//\n// Language Widget (extends from Setting Widget)\n//   - multiple: If you can select multiple languages.\n//   - no_result (and no_result_default): Text to show on not results found (only for multiple = true).\n//   - not_present (and not_present_default): Text to show when the default language is not present (only for multiple = true).\n//\n// Dropdown Widget (extends from Setting Widget)\n//   - options: List of options of the dropdown (each options has value, display_name, display_name_default and optionally help_text, help_text_default, help_text_values, help_text_markdown fields).\n//\n// Permissions Flag (extends from Setting Widget)\n//   - permissions_mapping_name: A permission name in the utils/policy_roles_adapter.js file.\n//\n// FileUpload (extends from Setting Widget)\n//   - remove_help_text (and remove_help_text_default):  Long description of the field when a file is uploaded.\n//   - remove_help_text_markdown: True if the translation text contains markdown.\n//   - remove_help_text_values: Values to fill the translation (if needed).\n//   - remove_button_text (and remove_button_text_default): Button text for remove when the file is uploaded.\n//   - removing_text (and removing_text_default): Text shown while the system is removing the file.\n//   - uploading_text (and uploading_text_default): Text shown while the system is uploading the file.\n//   - upload_action: An store action to upload the file.\n//   - remove_action: An store action to remove the file.\n//   - fileType: A list of extensions separated by \",\". E.g. \".jpg,.png,.gif\".\n\nexport const it = {\n    isnt: (func) => (config, state, license, enterpriseReady) => !func(config, state, license, enterpriseReady),\n    both: (...funcs) => (config, state, license) => {\n        for (const func of funcs) {\n            if (!func(config, state, license)) {\n                return false;\n            }\n        }\n        return true;\n    },\n    either: (...funcs) => (config, state, license, enterpriseReady) => {\n        for (const func of funcs) {\n            if (func(config, state, license, enterpriseReady)) {\n                return true;\n            }\n        }\n        return false;\n    },\n    stateMatches: (key, regex) => (config, state) => state[key].match(regex),\n    stateEquals: (key, value) => (config, state) => state[key] === value,\n    stateIsTrue: (key) => (config, state) => Boolean(state[key]),\n    stateIsFalse: (key) => (config, state) => !state[key],\n    configIsTrue: (group, setting) => (config) => Boolean(config[group][setting]),\n    configIsFalse: (group, setting) => (config) => !config[group][setting],\n    enterpriseReady: (config, state, license, enterpriseReady) => enterpriseReady,\n    licensed: (config, state, license) => license.IsLicensed === 'true',\n    licensedForFeature: (feature) => (config, state, license) => license.IsLicensed && license[feature] === 'true',\n};\n\nexport default {\n    about: {\n        icon: 'fa-info-circle',\n        sectionTitle: t('admin.sidebar.about'),\n        sectionTitleDefault: 'About',\n        license: {\n            url: 'about/license',\n            title: t('admin.sidebar.license'),\n            title_default: 'Edition and License',\n            isHidden: false,\n            searchableStrings: [\n                'admin.license.title',\n                'admin.license.uploadDesc',\n                'admin.license.keyRemove',\n                'admin.license.edition',\n                'admin.license.type',\n                'admin.license.key',\n                'Mattermost Enterprise Edition. Unlock enterprise features in this software through the purchase of a subscription from ',\n                'This software is offered under a commercial license.\\n\\nSee ENTERPRISE-EDITION-LICENSE.txt in your root install directory for details. See NOTICE.txt for information about open source software used in this system.',\n            ],\n            schema: {\n                id: 'LicenseSettings',\n                component: LicenseSettings,\n            },\n        },\n    },\n    reporting: {\n        icon: 'fa-bar-chart',\n        sectionTitle: t('admin.sidebar.reporting'),\n        sectionTitleDefault: 'Reporting',\n        system_analytics: {\n            url: 'reporting/system_analytics',\n            title: t('admin.sidebar.siteStatistics'),\n            title_default: 'Site Statistics',\n            searchableStrings: [\n                'analytics.system.title',\n                'analytics.system.totalPosts',\n                'analytics.system.activeUsers',\n                'analytics.system.totalSessions',\n                'analytics.system.totalCommands',\n                'analytics.system.totalIncomingWebhooks',\n                'analytics.system.totalOutgoingWebhooks',\n                'analytics.system.totalWebsockets',\n                'analytics.system.totalMasterDbConnections',\n                'analytics.system.totalReadDbConnections',\n                'analytics.system.postTypes',\n                'analytics.system.channelTypes',\n                'analytics.system.totalUsers',\n                'analytics.system.totalTeams',\n                'analytics.system.totalChannels',\n                'analytics.system.dailyActiveUsers',\n                'analytics.system.monthlyActiveUsers',\n            ],\n            schema: {\n                id: 'SystemAnalytics',\n                component: SystemAnalytics,\n            },\n        },\n        team_statistics: {\n            url: 'reporting/team_statistics',\n            title: t('admin.sidebar.teamStatistics'),\n            title_default: 'Team Statistics',\n            searchableStrings: [\n                ['analytics.team.title', {team: ''}],\n                'analytics.system.info',\n                'analytics.team.totalPosts',\n                'analytics.team.activeUsers',\n                'analytics.team.totalUsers',\n                'analytics.team.publicChannels',\n                'analytics.team.privateGroups',\n                'analytics.team.recentUsers',\n                'analytics.team.newlyCreated',\n            ],\n            schema: {\n                id: 'TeamAnalytics',\n                component: TeamAnalytics,\n            },\n        },\n        server_logs: {\n            url: 'reporting/server_logs',\n            title: t('admin.sidebar.logs'),\n            title_default: 'Server Logs',\n            searchableStrings: [\n                'admin.logs.bannerDesc',\n                'admin.logs.title',\n            ],\n            schema: {\n                id: 'ServerLogs',\n                component: ServerLogs,\n            },\n        },\n    },\n    user_management: {\n        icon: 'fa-users',\n        sectionTitle: t('admin.sidebar.userManagement'),\n        sectionTitleDefault: 'User Management',\n        system_users: {\n            url: 'user_management/users',\n            title: t('admin.sidebar.users'),\n            title_default: 'Users',\n            searchableStrings: [\n                ['admin.system_users.title', {siteName: ''}],\n            ],\n            schema: {\n                id: 'SystemUsers',\n                component: SystemUsers,\n            },\n        },\n        group_detail: {\n            url: 'user_management/groups/:group_id',\n            isHidden: it.configIsFalse('ServiceSettings', 'ExperimentalLdapGroupSync'),\n            schema: {\n                id: 'GroupDetail',\n                component: GroupDetails,\n            },\n        },\n        groups: {\n            url: 'user_management/groups',\n            title: t('admin.sidebar.groups'),\n            title_default: 'Groups',\n            isHidden: it.configIsFalse('ServiceSettings', 'ExperimentalLdapGroupSync'),\n            schema: {\n                id: 'Groups',\n                component: GroupSettings,\n            },\n        },\n        team_detail: {\n            url: 'user_management/teams/:team_id',\n            isHidden: it.configIsFalse('ServiceSettings', 'ExperimentalLdapGroupSync'),\n            schema: {\n                id: 'TeamDetail',\n                component: TeamDetails,\n            },\n        },\n        teams: {\n            url: 'user_management/teams',\n            title: t('admin.sidebar.teams'),\n            title_default: 'Teams',\n            isHidden: it.configIsFalse('ServiceSettings', 'ExperimentalLdapGroupSync'),\n            schema: {\n                id: 'Teams',\n                component: TeamSettings,\n            },\n        },\n        channel_detail: {\n            url: 'user_management/channels/:channel_id',\n            isHidden: it.configIsFalse('ServiceSettings', 'ExperimentalLdapGroupSync'),\n            schema: {\n                id: 'ChannelDetail',\n                component: ChannelDetails,\n            },\n        },\n        channel: {\n            url: 'user_management/channels',\n            title: t('admin.sidebar.channels'),\n            title_default: 'Channels',\n            isHidden: it.configIsFalse('ServiceSettings', 'ExperimentalLdapGroupSync'),\n            schema: {\n                id: 'Channels',\n                component: ChannelSettings,\n            },\n        },\n        systemScheme: {\n            url: 'user_management/permissions/system_scheme',\n            isHidden: false,\n            schema: {\n                id: 'PermissionSystemScheme',\n                component: PermissionSystemSchemeSettings,\n            },\n        },\n        teamSchemeDetail: {\n            url: 'user_management/permissions/team_override_scheme/:scheme_id',\n            isHidden: false,\n            schema: {\n                id: 'PermissionSystemScheme',\n                component: PermissionTeamSchemeSettings,\n            },\n        },\n        teamScheme: {\n            url: 'user_management/permissions/team_override_scheme',\n            isHidden: false,\n            schema: {\n                id: 'PermissionSystemScheme',\n                component: PermissionTeamSchemeSettings,\n            },\n        },\n        permissions: {\n            url: 'user_management/permissions/',\n            title: t('admin.sidebar.permissions'),\n            title_default: 'Permissions',\n            isHidden: false,\n            searchableStrings: [\n                'admin.permissions.documentationLinkText',\n                'admin.permissions.teamOverrideSchemesNoSchemes',\n                'admin.permissions.loadMoreSchemes',\n                'admin.permissions.introBanner',\n                'admin.permissions.systemSchemeBannerTitle',\n                'admin.permissions.systemSchemeBannerText',\n                'admin.permissions.systemSchemeBannerButton',\n                'admin.permissions.teamOverrideSchemesTitle',\n                'admin.permissions.teamOverrideSchemesBannerText',\n                'admin.permissions.teamOverrideSchemesNewButton',\n            ],\n            schema: {\n                id: 'PermissionSchemes',\n                component: PermissionSchemesSettings,\n            },\n        },\n    },\n    environment: {\n        icon: 'fa-server',\n        sectionTitle: t('admin.sidebar.environment'),\n        sectionTitleDefault: 'Environment',\n        web_server: {\n            url: 'environment/web_server',\n            title: t('admin.sidebar.webServer'),\n            title_default: 'Web Server',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.environment.webServer'),\n                name_default: 'Web Server',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.rate.noteDescription'),\n                        label_default: 'Changing properties in this section will require a server restart before taking effect.',\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.SiteURL',\n                        label: t('admin.service.siteURL'),\n                        label_default: 'Site URL:',\n                        help_text: t('admin.service.siteURLDescription'),\n                        help_text_default: 'The URL that users will use to access Mattermost. Standard ports, such as 80 and 443, can be omitted, but non-standard ports are required. For example: http://example.com:8065. This setting is required.\\n \\nMattermost may be hosted at a subpath. For example: http://example.com:8065/company/mattermost. A restart is required before the server will work correctly.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.service.siteURLExample'),\n                        placeholder_default: 'E.g.: \"http://example.com:8065\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.ListenAddress',\n                        label: t('admin.service.listenAddress'),\n                        label_default: 'Listen Address:',\n                        placeholder: t('admin.service.listenExample'),\n                        placeholder_default: 'E.g.: \":8065\"',\n                        help_text: t('admin.service.listenDescription'),\n                        help_text_default: 'The address and port to which to bind and listen. Specifying \":8065\" will bind to all network interfaces. Specifying \"127.0.0.1:8065\" will only bind to the network interface having that IP address. If you choose a port of a lower level (called \"system ports\" or \"well-known ports\", in the range of 0-1023), you must have permissions to bind to that port. On Linux you can use: \"sudo setcap cap_net_bind_service=+ep ./bin/mattermost\" to allow Mattermost to bind to well-known ports.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.Forward80To443',\n                        label: t('admin.service.forward80To443'),\n                        label_default: 'Forward port 80 to 443:',\n                        help_text: t('admin.service.forward80To443Description'),\n                        help_text_default: 'Forwards all insecure traffic from port 80 to secure port 443. Not recommended when using a proxy server.',\n                        disabled_help_text: t('admin.service.forward80To443Description.disabled'),\n                        disabled_help_text_default: 'Forwards all insecure traffic from port 80 to secure port 443. Not recommended when using a proxy server.\\n \\nThis setting cannot be enabled until your server is [listening](#ListenAddress) on port 443.',\n                        disabled_help_text_markdown: true,\n                        isDisabled: it.isnt(it.stateMatches('ServiceSettings.ListenAddress', /:443$/)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ServiceSettings.ConnectionSecurity',\n                        label: t('admin.connectionSecurityTitle'),\n                        label_default: 'Connection Security:',\n                        help_text: DefinitionConstants.CONNECTION_SECURITY_HELP_TEXT_WEBSERVER,\n                        options: [\n                            {\n                                value: '',\n                                display_name: t('admin.connectionSecurityNone'),\n                                display_name_default: 'None',\n                            },\n                            {\n                                value: 'TLS',\n                                display_name: t('admin.connectionSecurityTls'),\n                                display_name_default: 'TLS (Recommended)',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.TLSCertFile',\n                        label: t('admin.service.tlsCertFile'),\n                        label_default: 'TLS Certificate File:',\n                        help_text: t('admin.service.tlsCertFileDescription'),\n                        help_text_default: 'The certificate file to use.',\n                        isDisabled: it.stateIsTrue('ServiceSettings.UseLetsEncrypt'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.TLSKeyFile',\n                        label: t('admin.service.tlsKeyFile'),\n                        label_default: 'TLS Key File:',\n                        help_text: t('admin.service.tlsKeyFileDescription'),\n                        help_text_default: 'The private key file to use.',\n                        isDisabled: it.stateIsTrue('ServiceSettings.UseLetsEncrypt'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.UseLetsEncrypt',\n                        label: t('admin.service.useLetsEncrypt'),\n                        label_default: 'Use Let\\'s Encrypt:',\n                        help_text: t('admin.service.useLetsEncryptDescription'),\n                        help_text_default: 'Enable the automatic retrieval of certificates from Let\\'s Encrypt. The certificate will be retrieved when a client attempts to connect from a new domain. This will work with multiple domains.',\n                        disabled_help_text: t('admin.service.useLetsEncryptDescription.disabled'),\n                        disabled_help_text_default: 'Enable the automatic retrieval of certificates from Let\\'s Encrypt. The certificate will be retrieved when a client attempts to connect from a new domain. This will work with multiple domains.\\n \\nThis setting cannot be enabled unless the [Forward port 80 to 443](#Forward80To443) setting is set to true.',\n                        disabled_help_text_markdown: true,\n                        isDisabled: it.stateIsFalse('ServiceSettings.Forward80To443'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.LetsEncryptCertificateCacheFile',\n                        label: t('admin.service.letsEncryptCertificateCacheFile'),\n                        label_default: 'Let\\'s Encrypt Certificate Cache File:',\n                        help_text: t('admin.service.letsEncryptCertificateCacheFileDescription'),\n                        help_text_default: 'Certificates retrieved and other data about the Let\\'s Encrypt service will be stored in this file.',\n                        isDisabled: it.stateIsFalse('ServiceSettings.UseLetsEncrypt'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.ReadTimeout',\n                        label: t('admin.service.readTimeout'),\n                        label_default: 'Read Timeout:',\n                        help_text: t('admin.service.readTimeoutDescription'),\n                        help_text_default: 'Maximum time allowed from when the connection is accepted to when the request body is fully read.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.WriteTimeout',\n                        label: t('admin.service.writeTimeout'),\n                        label_default: 'Write Timeout:',\n                        help_text: t('admin.service.writeTimeoutDescription'),\n                        help_text_default: 'If using HTTP (insecure), this is the maximum time allowed from the end of reading the request headers until the response is written. If using HTTPS, it is the total time from when the connection is accepted until the response is written.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ServiceSettings.WebserverMode',\n                        label: t('admin.webserverModeTitle'),\n                        label_default: 'Webserver Mode:',\n                        help_text: DefinitionConstants.WEBSERVER_MODE_HELP_TEXT,\n                        options: [\n                            {\n                                value: 'gzip',\n                                display_name: t('admin.webserverModeGzip'),\n                                display_name_default: 'gzip',\n                            },\n                            {\n                                value: 'uncompressed',\n                                display_name: t('admin.webserverModeUncompressed'),\n                                display_name_default: 'Uncompressed',\n                            },\n                            {\n                                value: 'disabled',\n                                display_name: t('admin.webserverModeDisabled'),\n                                display_name_default: 'Disabled',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableInsecureOutgoingConnections',\n                        label: t('admin.service.insecureTlsTitle'),\n                        label_default: 'Enable Insecure Outgoing Connections: ',\n                        help_text: t('admin.service.insecureTlsDesc'),\n                        help_text_default: 'When true, any outgoing HTTPS requests will accept unverified, self-signed certificates. For example, outgoing webhooks to a server with a self-signed TLS certificate, using any domain, will be allowed. Note that this makes these connections susceptible to man-in-the-middle attacks.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: reloadConfig,\n                        key: 'ReloadConfigButton',\n                        label: t('admin.reload.button'),\n                        label_default: 'Reload Configuration From Disk',\n                        help_text: t('admin.reload.reloadDescription'),\n                        help_text_default: 'Deployments using multiple databases can switch from one master database to another without restarting the Mattermost server by updating \"config.json\" to the new desired configuration and using the {featureName} feature to load the new settings while the server is running. The administrator should then use the {recycleDatabaseConnections} feature to recycle the database connections based on the new settings.',\n                        help_text_values: {\n                            featureName: (\n                                <b>\n                                    <FormattedMessage\n                                        id='admin.reload.reloadDescription.featureName'\n                                        defaultMessage='Reload Configuration from Disk'\n                                    />\n                                </b>\n                            ),\n                            recycleDatabaseConnections: (\n                                <a href='../environment/database'>\n                                    <b>\n                                        <FormattedMessage\n                                            id='admin.reload.reloadDescription.recycleDatabaseConnections'\n                                            defaultMessage='Environment > Database > Recycle Database Connections'\n                                        />\n                                    </b>\n                                </a>\n                            ),\n                        },\n                        error_message: t('admin.reload.reloadFail'),\n                        error_message_default: 'Reload unsuccessful: {error}',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        key: 'PurgeButton',\n                        action: invalidateAllCaches,\n                        label: t('admin.purge.button'),\n                        label_default: 'Purge All Caches',\n                        help_text: t('admin.purge.purgeDescription'),\n                        help_text_default: 'This will purge all the in-memory caches for things like sessions, accounts, channels, etc. Deployments using High Availability will attempt to purge all the servers in the cluster.  Purging the caches may adversely impact performance.',\n                        error_message: t('admin.purge.purgeFail'),\n                        error_message_default: 'Purging unsuccessful: {error}',\n                    },\n                ],\n            },\n        },\n        database: {\n            url: 'environment/database',\n            title: t('admin.sidebar.database'),\n            title_default: 'Database',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            searchableStrings: [\n                'admin.database.title',\n                ['admin.recycle.recycleDescription', {featureName: '', reloadConfiguration: ''}],\n                'admin.recycle.recycleDescription.featureName',\n                'admin.recycle.recycleDescription.reloadConfiguration',\n                'admin.recycle.button',\n                'admin.sql.noteDescription',\n                'admin.sql.driverName',\n                'admin.sql.driverNameDescription',\n                'admin.sql.dataSource',\n                'admin.sql.dataSourceDescription',\n                'admin.sql.maxConnectionsTitle',\n                'admin.sql.maxConnectionsDescription',\n                'admin.sql.maxOpenTitle',\n                'admin.sql.maxOpenDescription',\n                'admin.sql.queryTimeoutTitle',\n                'admin.sql.queryTimeoutDescription',\n                'admin.sql.connMaxLifetimeTitle',\n                'admin.sql.connMaxLifetimeDescription',\n                'admin.sql.traceTitle',\n                'admin.sql.traceDescription',\n            ],\n            schema: {\n                id: 'DatabaseSettings',\n                component: DatabaseSettings,\n            },\n        },\n        elasticsearch: {\n            url: 'environment/elasticsearch',\n            title: t('admin.sidebar.elasticsearch'),\n            title_default: 'Elasticsearch',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            searchableStrings: [\n                'admin.elasticsearch.title',\n                'admin.elasticsearch.enableIndexingTitle',\n                ['admin.elasticsearch.enableIndexingDescription', {documentationLink: ''}],\n                'admin.elasticsearch.enableIndexingDescription.documentationLinkText',\n                'admin.elasticsearch.connectionUrlTitle',\n                ['admin.elasticsearch.connectionUrlDescription', {documentationLink: ''}],\n                'admin.elasticsearch.connectionUrlExample.documentationLinkText',\n                'admin.elasticsearch.skipTLSVerificationTitle',\n                'admin.elasticsearch.skipTLSVerificationDescription',\n                'admin.elasticsearch.usernameTitle',\n                'admin.elasticsearch.usernameDescription',\n                'admin.elasticsearch.passwordTitle',\n                'admin.elasticsearch.passwordDescription',\n                'admin.elasticsearch.sniffTitle',\n                'admin.elasticsearch.sniffDescription',\n                'admin.elasticsearch.testHelpText',\n                'admin.elasticsearch.elasticsearch_test_button',\n                'admin.elasticsearch.bulkIndexingTitle',\n                'admin.elasticsearch.createJob.help',\n                'admin.elasticsearch.purgeIndexesHelpText',\n                'admin.elasticsearch.purgeIndexesButton',\n                'admin.elasticsearch.purgeIndexesButton.label',\n                'admin.elasticsearch.enableSearchingTitle',\n                'admin.elasticsearch.enableSearchingDescription',\n            ],\n            schema: {\n                id: 'ElasticSearchSettings',\n                component: ElasticSearchSettings,\n            },\n        },\n        storage: {\n            url: 'environment/file_storage',\n            title: t('admin.sidebar.fileStorage'),\n            title_default: 'File Storage',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'FileSettings',\n                name: t('admin.environment.fileStorage'),\n                name_default: 'File Storage',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'FileSettings.DriverName',\n                        label: t('admin.image.storeTitle'),\n                        label_default: 'File Storage System:',\n                        help_text: t('admin.image.storeDescription'),\n                        help_text_default: 'Storage system where files and image attachments are saved.\\n \\nSelecting \"Amazon S3\" enables fields to enter your Amazon credentials and bucket details.\\n \\nSelecting \"Local File System\" enables the field to specify a local file directory.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: FILE_STORAGE_DRIVER_LOCAL,\n                                display_name: t('admin.image.storeLocal'),\n                                display_name_default: 'Local File System',\n                            },\n                            {\n                                value: FILE_STORAGE_DRIVER_S3,\n                                display_name: t('admin.image.storeAmazonS3'),\n                                display_name_default: 'Amazon S3',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.Directory',\n                        label: t('admin.image.localTitle'),\n                        label_default: 'Local Storage Directory:',\n                        help_text: t('admin.image.localDescription'),\n                        help_text_default: 'Directory to which files and images are written. If blank, defaults to ./data/.',\n                        placeholder: t('admin.image.localExample'),\n                        placeholder_default: 'E.g.: \"./data/\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_LOCAL)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'FileSettings.MaxFileSize',\n                        label: t('admin.image.maxFileSizeTitle'),\n                        label_default: 'Maximum File Size:',\n                        help_text: t('admin.image.maxFileSizeDescription'),\n                        help_text_default: 'Maximum file size for message attachments in megabytes. Caution: Verify server memory can support your setting choice. Large file sizes increase the risk of server crashes and failed uploads due to network interruptions.',\n                        placeholder: t('admin.image.maxFileSizeExample'),\n                        placeholder_default: '50',\n                        onConfigLoad: (configVal) => configVal / MEBIBYTE,\n                        onConfigSave: (displayVal) => displayVal * MEBIBYTE,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3Bucket',\n                        label: t('admin.image.amazonS3BucketTitle'),\n                        label_default: 'Amazon S3 Bucket:',\n                        help_text: t('admin.image.amazonS3BucketDescription'),\n                        help_text_default: 'Name you selected for your S3 bucket in AWS.',\n                        placeholder: t('admin.image.amazonS3BucketExample'),\n                        placeholder_default: 'E.g.: \"aboutone-media\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3Region',\n                        label: t('admin.image.amazonS3RegionTitle'),\n                        label_default: 'Amazon S3 Region:',\n                        help_text: t('admin.image.amazonS3RegionDescription'),\n                        help_text_default: 'AWS region you selected when creating your S3 bucket. If no region is set, Mattermost attempts to get the appropriate region from AWS, or sets it to \"us-east-1\" if none found.',\n                        placeholder: t('admin.image.amazonS3RegionExample'),\n                        placeholder_default: 'E.g.: \"us-east-1\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3AccessKeyId',\n                        label: t('admin.image.amazonS3IdTitle'),\n                        label_default: 'Amazon S3 Access Key ID:',\n                        help_text: t('admin.image.amazonS3IdDescription'),\n                        help_text_markdown: true,\n                        help_text_default: '(Optional) Only required if you do not want to authenticate to S3 using an [IAM role](!https://about.mattermost.com/default-iam-role). Enter the Access Key ID provided by your Amazon EC2 administrator.',\n                        placeholder: t('admin.image.amazonS3IdExample'),\n                        placeholder_default: 'E.g.: \"AKIADTOVBGERKLCBV\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3Endpoint',\n                        label: t('admin.image.amazonS3EndpointTitle'),\n                        label_default: 'Amazon S3 Endpoint:',\n                        help_text: t('admin.image.amazonS3EndpointDescription'),\n                        help_text_default: 'Hostname of your S3 Compatible Storage provider. Defaults to \"s3.amazonaws.com\".',\n                        placeholder: t('admin.image.amazonS3EndpointExample'),\n                        placeholder_default: 'E.g.: \"s3.amazonaws.com\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3SecretAccessKey',\n                        label: t('admin.image.amazonS3SecretTitle'),\n                        label_default: 'Amazon S3 Secret Access Key:',\n                        help_text: t('admin.image.amazonS3SecretDescription'),\n                        help_text_default: '(Optional) The secret access key associated with your Amazon S3 Access Key ID.',\n                        placeholder: t('admin.image.amazonS3SecretExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.AmazonS3SSL',\n                        label: t('admin.image.amazonS3SSLTitle'),\n                        label_default: 'Enable Secure Amazon S3 Connections:',\n                        help_text: t('admin.image.amazonS3SSLDescription'),\n                        help_text_default: 'When false, allow insecure connections to Amazon S3. Defaults to secure connections only.',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.AmazonS3SSE',\n                        label: t('admin.image.amazonS3SSETitle'),\n                        label_default: 'Enable Server-Side Encryption for Amazon S3:',\n                        help_text: t('admin.image.amazonS3SSEDescription'),\n                        help_text_markdown: true,\n                        help_text_default: 'When true, encrypt files in Amazon S3 using server-side encryption with Amazon S3-managed keys. See [documentation](!https://about.mattermost.com/default-server-side-encryption) to learn more.',\n                        isHidden: false,\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.AmazonS3Trace',\n                        label: t('admin.image.amazonS3TraceTitle'),\n                        label_default: 'Enable Amazon S3 Debugging:',\n                        help_text: t('admin.image.amazonS3TraceDescription'),\n                        help_text_default: '(Development Mode) When true, log additional debugging information to the system logs.',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: testS3Connection,\n                        key: 'TestS3Connection',\n                        label: t('admin.s3.connectionS3Test'),\n                        label_default: 'Test Connection',\n                        loading: t('admin.s3.testing'),\n                        loading_default: 'Testing...',\n                        error_message: t('admin.s3.s3Fail'),\n                        error_message_default: 'Connection unsuccessful: {error}',\n                        success_message: t('admin.s3.s3Success'),\n                        success_message_default: 'Connection was successful',\n                    },\n                ],\n            },\n        },\n        image_proxy: {\n            url: 'environment/image_proxy',\n            title: t('admin.sidebar.imageProxy'),\n            title_default: 'Image Proxy',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ImageProxy',\n                name: t('admin.environment.imageProxy'),\n                name_default: 'Image Proxy',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ImageProxySettings.Enable',\n                        label: t('admin.image.enableProxy'),\n                        label_default: 'Enable Image Proxy:',\n                        help_text: t('admin.image.enableProxyDescription'),\n                        help_text_default: 'When true, enables an image proxy for loading all Markdown images.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ImageProxySettings.ImageProxyType',\n                        label: t('admin.image.proxyType'),\n                        label_default: 'Image Proxy Type:',\n                        help_text: t('admin.image.proxyTypeDescription'),\n                        help_text_default: 'Configure an image proxy to load all Markdown images through a proxy. The image proxy prevents users from making insecure image requests, provides caching for increased performance, and automates image adjustments such as resizing. See [documentation](!https://about.mattermost.com/default-image-proxy-documentation) to learn more.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'atmos/camo',\n                                display_name: t('atmos/camo'),\n                                display_name_default: 'atmos/camo',\n                            },\n                            {\n                                value: 'local',\n                                display_name: t('local'),\n                                display_name_default: 'local',\n                            },\n                        ],\n                        isDisabled: it.stateIsFalse('ImageProxySettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ImageProxySettings.RemoteImageProxyURL',\n                        label: t('admin.image.proxyURL'),\n                        label_default: 'Remote Image Proxy URL:',\n                        help_text: t('admin.image.proxyURLDescription'),\n                        help_text_default: 'URL of your remote image proxy server.',\n                        isDisabled: it.either(\n                            it.stateIsFalse('ImageProxySettings.Enable'),\n                            it.stateEquals('ImageProxySettings.ImageProxyType', 'local'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ImageProxySettings.RemoteImageProxyOptions',\n                        label: t('admin.image.proxyOptions'),\n                        label_default: 'Remote Image Proxy Options:',\n                        help_text: t('admin.image.proxyOptionsDescription'),\n                        help_text_default: 'Additional options such as the URL signing key. Refer to your image proxy documentation to learn more about what options are supported.',\n                        isDisabled: it.either(\n                            it.stateIsFalse('ImageProxySettings.Enable'),\n                            it.stateEquals('ImageProxySettings.ImageProxyType', 'local'),\n                        ),\n                    },\n                ],\n            },\n        },\n        smtp: {\n            url: 'environment/smtp',\n            title: t('admin.sidebar.smtp'),\n            title_default: 'SMTP',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'SMTP',\n                name: t('admin.environment.smtp'),\n                name_default: 'SMTP',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPServer',\n                        label: t('admin.environment.smtp.smtpServer.title'),\n                        label_default: 'SMTP Server:',\n                        placeholder: t('admin.environment.smtp.smtpServer.placeholder'),\n                        placeholder_default: 'Ex: \"smtp.yourcompany.com\", \"email-smtp.us-east-1.amazonaws.com\"',\n                        help_text: t('admin.environment.smtp.smtpServer.description'),\n                        help_text_default: 'Location of SMTP email server.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPPort',\n                        label: t('admin.environment.smtp.smtpPort.title'),\n                        label_default: 'SMTP Server Port:',\n                        placeholder: t('admin.environment.smtp.smtpPort.placeholder'),\n                        placeholder_default: 'Ex: \"25\", \"465\", \"587\"',\n                        help_text: t('admin.environment.smtp.smtpPort.description'),\n                        help_text_default: 'Port of SMTP email server.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSMTPAuth',\n                        label: t('admin.environment.smtp.smtpAuth.title'),\n                        label_default: 'Enable SMTP Authentication:',\n                        help_text: t('admin.environment.smtp.smtpAuth.description'),\n                        help_text_default: 'When true, SMTP Authentication is enabled.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPUsername',\n                        label: t('admin.environment.smtp.smtpUsername.title'),\n                        label_default: 'SMTP Server Username:',\n                        placeholder: t('admin.environment.smtp.smtpUsername.placeholder'),\n                        placeholder_default: 'Ex: \"admin@yourcompany.com\", \"AKIADTOVBGERKLCBV\"',\n                        help_text: t('admin.environment.smtp.smtpUsername.description'),\n                        help_text_default: 'Obtain this credential from administrator setting up your email server.',\n                        isDisabled: it.stateIsFalse('EmailSettings.EnableSMTPAuth'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPPassword',\n                        label: t('admin.environment.smtp.smtpPassword.title'),\n                        label_default: 'SMTP Server Password:',\n                        placeholder: t('admin.environment.smtp.smtpPassword.placeholder'),\n                        placeholder_default: 'Ex: \"yourpassword\", \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        help_text: t('admin.environment.smtp.smtpPassword.description'),\n                        help_text_default: 'Obtain this credential from administrator setting up your email server.',\n                        isDisabled: it.stateIsFalse('EmailSettings.EnableSMTPAuth'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.ConnectionSecurity',\n                        label: t('admin.environment.smtp.connectionSecurity.title'),\n                        label_default: 'Connection Security:',\n                        help_text: DefinitionConstants.CONNECTION_SECURITY_HELP_TEXT_EMAIL,\n                        options: [\n                            {\n                                value: '',\n                                display_name: t('admin.environment.smtp.connectionSecurity.option.none'),\n                                display_name_default: 'None',\n                            },\n                            {\n                                value: 'TLS',\n                                display_name: t('admin.environment.smtp.connectionSecurity.option.tls'),\n                                display_name_default: 'TLS (Recommended)',\n                            },\n                            {\n                                value: 'STARTTLS',\n                                display_name: t('admin.environment.smtp.connectionSecurity.option.starttls'),\n                                display_name_default: 'STARTTLS',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: testSmtp,\n                        key: 'TestSmtpConnection',\n                        label: t('admin.environment.smtp.connectionSmtpTest'),\n                        label_default: 'Test Connection',\n                        loading: t('admin.environment.smtp.testing'),\n                        loading_default: 'Testing...',\n                        error_message: t('admin.environment.smtp.smtpFail'),\n                        error_message_default: 'Connection unsuccessful: {error}',\n                        success_message: t('admin.environment.smtp.smtpSuccess'),\n                        success_message_default: 'No errors were reported while sending an email. Please check your inbox to make sure.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.SkipServerCertificateVerification',\n                        label: t('admin.environment.smtp.skipServerCertificateVerification.title'),\n                        label_default: 'Skip Server Certificate Verification:',\n                        help_text: t('admin.environment.smtp.skipServerCertificateVerification.description'),\n                        help_text_default: 'When true, Mattermost will not verify the email server certificate.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableSecurityFixAlert',\n                        label: t('admin.environment.smtp.enableSecurityFixAlert.title'),\n                        label_default: 'Enable Security Alerts:',\n                        help_text: t('admin.environment.smtp.enableSecurityFixAlert.description'),\n                        help_text_default: 'When true, System Administrators are notified by email if a relevant security fix alert has been announced in the last 12 hours. Requires email to be enabled.',\n                    },\n                ],\n            },\n        },\n        push_notification_server: {\n            url: 'environment/push_notification_server',\n            title: t('admin.sidebar.pushNotificationServer'),\n            title_default: 'Push Notification Server',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            searchableStrings: [\n                'admin.environment.pushNotificationServer',\n                'admin.email.pushTitle',\n                'admin.email.pushServerTitle',\n                'admin.email.pushContentTitle',\n                'admin.email.pushContentDesc',\n            ],\n            schema: {\n                id: 'PushNotificationsSettings',\n                component: PushNotificationsSettings,\n            },\n        },\n        high_availability: {\n            url: 'environment/high_availability',\n            title: t('admin.sidebar.highAvailability'),\n            title_default: 'High Availability',\n            isHidden: false,\n            searchableStrings: [\n                'admin.advance.cluster',\n                'admin.cluster.noteDescription',\n                'admin.cluster.enableTitle',\n                'admin.cluster.enableDescription',\n                'admin.cluster.ClusterName',\n                'admin.cluster.ClusterNameDesc',\n                'admin.cluster.OverrideHostname',\n                'admin.cluster.OverrideHostnameDesc',\n                'admin.cluster.UseIpAddress',\n                'admin.cluster.UseIpAddressDesc',\n                'admin.cluster.UseExperimentalGossip',\n                'admin.cluster.UseExperimentalGossipDesc',\n                'admin.cluster.GossipPort',\n                'admin.cluster.GossipPortDesc',\n                'admin.cluster.StreamingPort',\n                'admin.cluster.StreamingPortDesc',\n            ],\n            schema: {\n                id: 'ClusterSettings',\n                component: ClusterSettings,\n            },\n        },\n        rate_limiting: {\n            url: 'environment/rate_limiting',\n            title: t('admin.sidebar.rateLimiting'),\n            title_default: 'Rate Limiting',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.rate.title'),\n                name_default: 'Rate Limiting',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.rate.noteDescription'),\n                        label_default: 'Changing properties other than Site URL in this section will require a server restart before taking effect.',\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'RateLimitSettings.Enable',\n                        label: t('admin.rate.enableLimiterTitle'),\n                        label_default: 'Enable Rate Limiting:',\n                        help_text: t('admin.rate.enableLimiterDescription'),\n                        help_text_default: 'When true, APIs are throttled at rates specified below.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'RateLimitSettings.PerSec',\n                        label: t('admin.rate.queriesTitle'),\n                        label_default: 'Maximum Queries per Second:',\n                        placeholder: t('admin.rate.queriesExample'),\n                        placeholder_default: 'E.g.: \"10\"',\n                        help_text: t('admin.rate.queriesDescription'),\n                        help_text_default: 'Throttles API at this number of requests per second.',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'RateLimitSettings.MaxBurst',\n                        label: t('admin.rate.maxBurst'),\n                        label_default: 'Maximum Burst Size:',\n                        placeholder: t('admin.rate.maxBurstExample'),\n                        placeholder_default: 'E.g.: \"100\"',\n                        help_text: t('admin.rate.maxBurstDescription'),\n                        help_text_default: 'Maximum number of requests allowed beyond the per second query limit.',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'RateLimitSettings.MemoryStoreSize',\n                        label: t('admin.rate.memoryTitle'),\n                        label_default: 'Memory Store Size:',\n                        placeholder: t('admin.rate.memoryExample'),\n                        placeholder_default: 'E.g.: \"10000\"',\n                        help_text: t('admin.rate.memoryDescription'),\n                        help_text_default: 'Maximum number of users sessions connected to the system as determined by \"Vary rate limit by remote address\" and \"Vary rate limit by HTTP header\".',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'RateLimitSettings.VaryByRemoteAddr',\n                        label: t('admin.rate.remoteTitle'),\n                        label_default: 'Vary rate limit by remote address:',\n                        help_text: t('admin.rate.remoteDescription'),\n                        help_text_default: 'When true, rate limit API access by IP address.',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'RateLimitSettings.VaryByUser',\n                        label: t('admin.rate.varyByUser'),\n                        label_default: 'Vary rate limit by user:',\n                        help_text: t('admin.rate.varyByUserDescription'),\n                        help_text_default: 'When true, rate limit API access by user athentication token.',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'RateLimitSettings.VaryByHeader',\n                        label: t('admin.rate.httpHeaderTitle'),\n                        label_default: 'Vary rate limit by HTTP header:',\n                        placeholder: t('admin.rate.httpHeaderExample'),\n                        placeholder_default: 'E.g.: \"X-Real-IP\", \"X-Forwarded-For\"',\n                        help_text: t('admin.rate.httpHeaderDescription'),\n                        help_text_default: 'When filled in, vary rate limiting by HTTP header field specified (e.g. when configuring NGINX set to \"X-Real-IP\", when configuring AmazonELB set to \"X-Forwarded-For\").',\n                        isDisabled: it.either(\n                            it.stateEquals('RateLimitSettings.Enable', false),\n                            it.stateEquals('RateLimitSettings.VaryByRemoteAddr', true),\n                        ),\n                    },\n                ],\n            },\n        },\n        logging: {\n            url: 'environment/logging',\n            title: t('admin.sidebar.logging'),\n            title_default: 'Logging',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'LogSettings',\n                name: t('admin.general.log'),\n                name_default: 'Logging',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableConsole',\n                        label: t('admin.log.consoleTitle'),\n                        label_default: 'Output logs to console: ',\n                        help_text: t('admin.log.consoleDescription'),\n                        help_text_default: 'Typically set to false in production. Developers may set this field to true to output log messages to console based on the console level option.  If true, server writes messages to the standard output stream (stdout). Changing this setting requires a server restart before taking effect.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'LogSettings.ConsoleLevel',\n                        label: t('admin.log.levelTitle'),\n                        label_default: 'Console Log Level:',\n                        help_text: t('admin.log.levelDescription'),\n                        help_text_default: 'This setting determines the level of detail at which log events are written to the console. ERROR: Outputs only error messages. INFO: Outputs error messages and information around startup and initialization. DEBUG: Prints high detail for developers working on debugging issues.',\n                        options: DefinitionConstants.LOG_LEVEL_OPTIONS,\n                        isDisabled: it.stateIsFalse('LogSettings.EnableConsole'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.ConsoleJson',\n                        label: t('admin.log.consoleJsonTitle'),\n                        label_default: 'Output console logs as JSON:',\n                        help_text: t('admin.log.jsonDescription'),\n                        help_text_default: 'When true, logged events are written in a machine readable JSON format. Otherwise they are printed as plain text. Changing this setting requires a server restart before taking effect.',\n                        isDisabled: it.stateIsFalse('LogSettings.EnableConsole'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableFile',\n                        label: t('admin.log.fileTitle'),\n                        label_default: 'Output logs to file: ',\n                        help_text: t('admin.log.fileDescription'),\n                        help_text_default: 'Typically set to true in production. When true, logged events are written to the mattermost.log file in the directory specified in the File Log Directory field. The logs are rotated at 10,000 lines and archived to a file in the same directory, and given a name with a datestamp and serial number. For example, mattermost.2017-03-31.001. Changing this setting requires a server restart before taking effect.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'LogSettings.FileLevel',\n                        label: t('admin.log.fileLevelTitle'),\n                        label_default: 'File Log Level:',\n                        help_text: t('admin.log.fileLevelDescription'),\n                        help_text_default: 'This setting determines the level of detail at which log events are written to the log file. ERROR: Outputs only error messages. INFO: Outputs error messages and information around startup and initialization. DEBUG: Prints high detail for developers working on debugging issues.',\n                        options: DefinitionConstants.LOG_LEVEL_OPTIONS,\n                        isDisabled: it.stateIsFalse('LogSettings.EnableFile'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.FileJson',\n                        label: t('admin.log.fileJsonTitle'),\n                        label_default: 'Output file logs as JSON:',\n                        help_text: t('admin.log.jsonDescription'),\n                        help_text_default: 'When true, logged events are written in a machine readable JSON format. Otherwise they are printed as plain text. Changing this setting requires a server restart before taking effect.',\n                        isDisabled: it.stateIsFalse('LogSettings.EnableFile'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LogSettings.FileLocation',\n                        label: t('admin.log.locationTitle'),\n                        label_default: 'File Log Directory:',\n                        help_text: t('admin.log.locationDescription'),\n                        help_text_default: 'The location of the log files. If blank, they are stored in the ./logs directory. The path that you set must exist and Mattermost must have write permissions in it. Changing this setting requires a server restart before taking effect.',\n                        placeholder: t('admin.log.locationPlaceholder'),\n                        placeholder_default: 'Enter your file location',\n                        isDisabled: it.stateIsFalse('LogSettings.EnableFile'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableWebhookDebugging',\n                        label: t('admin.log.enableWebhookDebugging'),\n                        label_default: 'Enable Webhook Debugging:',\n                        help_text: t('admin.log.enableWebhookDebuggingDescription'),\n                        help_text_default: 'When true, sends webhook debug messages to the server logs. To also output the request body of incoming webhooks, set {boldedLogLevel} to \"DEBUG\".',\n                        help_text_values: {\n                            boldedLogLevel: (\n                                <strong>\n                                    <FormattedMessage\n                                        id='admin.log.logLevel'\n                                        defaultMessage='Log Level'\n                                    />\n                                </strong>\n                            ),\n                        },\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableDiagnostics',\n                        label: t('admin.log.enableDiagnostics'),\n                        label_default: 'Enable Diagnostics and Error Reporting:',\n                        help_text: t('admin.log.enableDiagnosticsDescription'),\n                        help_text_default: 'Enable this feature to improve the quality and performance of Mattermost by sending error reporting and diagnostic information to Mattermost, Inc. Read our [privacy policy](!https://about.mattermost.com/default-privacy-policy/) to learn more.',\n                        help_text_markdown: true,\n                        onConfigSave: (displayVal, previousVal) => {\n                            if (previousVal && previousVal !== displayVal) {\n                                trackEvent('ui', 'diagnostics_disabled');\n                            }\n                            return displayVal;\n                        },\n                    },\n                ],\n            },\n        },\n        session_lengths: {\n            url: 'environment/session_lengths',\n            title: t('admin.sidebar.sessionLengths'),\n            title_default: 'Session Lengths',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'SessionLengths',\n                name: t('admin.environment.sessionLengths'),\n                name_default: 'Session Lengths',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.SessionLengthWebInDays',\n                        label: t('admin.service.webSessionDays'),\n                        label_default: 'Session Length AD/LDAP and Email (days):',\n                        help_text: t('admin.service.webSessionDaysDesc'),\n                        help_text_default: 'The number of days from the last time a user entered their credentials to the expiry of the users session. After changing this setting, the new session length will take effect after the next time the user enters their credentials.',\n                        placeholder: t('admin.service.sessionDaysEx'),\n                        placeholder_default: 'E.g.: \"30\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.SessionLengthMobileInDays',\n                        label: t('admin.service.mobileSessionDays'),\n                        label_default: 'Session Length Mobile (days):',\n                        help_text: t('admin.service.mobileSessionDaysDesc'),\n                        help_text_default: 'The number of days from the last time a user entered their credentials to the expiry of the users session. After changing this setting, the new session length will take effect after the next time the user enters their credentials.',\n                        placeholder: t('admin.service.sessionDaysEx'),\n                        placeholder_default: 'E.g.: \"30\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.SessionLengthSSOInDays',\n                        label: t('admin.service.ssoSessionDays'),\n                        label_default: 'Session Length SSO (days):',\n                        help_text: t('admin.service.ssoSessionDaysDesc'),\n                        help_text_default: 'The number of days from the last time a user entered their credentials to the expiry of the users session. If the authentication method is SAML or GitLab, the user may automatically be logged back in to Mattermost if they are already logged in to SAML or GitLab. After changing this setting, the setting will take effect after the next time the user enters their credentials.',\n                        placeholder: t('admin.service.sessionDaysEx'),\n                        placeholder_default: 'E.g.: \"30\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.SessionCacheInMinutes',\n                        label: t('admin.service.sessionCache'),\n                        label_default: 'Session Cache (minutes):',\n                        help_text: t('admin.service.sessionCacheDesc'),\n                        help_text_default: 'The number of minutes to cache a session in memory.',\n                        placeholder: t('admin.service.sessionDaysEx'),\n                        placeholder_default: 'E.g.: \"30\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.SessionIdleTimeoutInMinutes',\n                        label: t('admin.service.sessionIdleTimeout'),\n                        label_default: 'Session Idle Timeout (minutes):',\n                        help_text: t('admin.service.sessionIdleTimeoutDesc'),\n                        help_text_default: 'The number of minutes from the last time a user was active on the system to the expiry of the user\\'s session. Once expired, the user will need to log in to continue. Minimum is 5 minutes, and 0 is unlimited.\\n \\nApplies to the desktop app and browsers. For mobile apps, use an EMM provider to lock the app when not in use. In High Availability mode, enable IP hash load balancing for reliable timeout measurement.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.service.sessionIdleTimeoutEx'),\n                        placeholder_default: 'E.g.: \"60\"',\n                        isHidden: false,\n                        onConfigSave: (value) => {\n                            if (value !== 0 && value < MINIMUM_IDLE_TIMEOUT) {\n                                return MINIMUM_IDLE_TIMEOUT;\n                            }\n                            return value;\n                        },\n                    },\n                ],\n            },\n        },\n        metrics: {\n            url: 'environment/performance_monitoring',\n            title: t('admin.sidebar.metrics'),\n            title_default: 'Performance Monitoring',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'MetricsSettings',\n                name: t('admin.advance.metrics'),\n                name_default: 'Performance Monitoring',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'MetricsSettings.Enable',\n                        label: t('admin.metrics.enableTitle'),\n                        label_default: 'Enable Performance Monitoring:',\n                        help_text: t('admin.metrics.enableDescription'),\n                        help_text_default: 'When true, Mattermost will enable performance monitoring collection and profiling. Please see [documentation](!http://docs.mattermost.com/deployment/metrics.html) to learn more about configuring performance monitoring for Mattermost.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'MetricsSettings.ListenAddress',\n                        label: t('admin.metrics.listenAddressTitle'),\n                        label_default: 'Listen Address:',\n                        placeholder: t('admin.metrics.listenAddressEx'),\n                        placeholder_default: 'E.g.: \":8067\"',\n                        help_text: t('admin.metrics.listenAddressDesc'),\n                        help_text_default: 'The address the server will listen on to expose performance metrics.',\n                    },\n                ],\n            },\n        },\n        developer: {\n            url: 'environment/developer',\n            title: t('admin.sidebar.developer'),\n            title_default: 'Developer',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.developer.title'),\n                name_default: 'Developer Settings',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableTesting',\n                        label: t('admin.service.testingTitle'),\n                        label_default: 'Enable Testing Commands:',\n                        help_text: t('admin.service.testingDescription'),\n                        help_text_default: 'When true, /test slash command is enabled to load test accounts, data and text formatting. Changing this requires a server restart before taking effect.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableDeveloper',\n                        label: t('admin.service.developerTitle'),\n                        label_default: 'Enable Developer Mode: ',\n                        help_text: t('admin.service.developerDesc'),\n                        help_text_default: 'When true, JavaScript errors are shown in a purple bar at the top of the user interface. Not recommended for use in production.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.AllowedUntrustedInternalConnections',\n                        label: t('admin.service.internalConnectionsTitle'),\n                        label_default: 'Allow untrusted internal connections to: ',\n                        placeholder: t('admin.service.internalConnectionsEx'),\n                        placeholder_default: 'webhooks.internal.example.com 127.0.0.1 10.0.16.0/28',\n                        help_text: t('admin.service.internalConnectionsDesc'),\n                        help_text_default: 'A whitelist of local network addresses that can be requested by the Mattermost server on behalf of a client. Care should be used when configuring this setting to prevent unintended access to your local network. See [documentation](https://mattermost.com/pl/default-allow-untrusted-internal-connections) to learn more.',\n                        help_text_markdown: true,\n                    },\n                ],\n            },\n        },\n    },\n    site: {\n        icon: 'fa-cogs',\n        sectionTitle: t('admin.sidebar.site'),\n        sectionTitleDefault: 'Site Configuration',\n        customization: {\n            url: 'site_config/customization',\n            title: t('admin.sidebar.customization'),\n            title_default: 'Customization',\n            schema: {\n                id: 'Customization',\n                name: t('admin.site.customization'),\n                name_default: 'Customization',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.SiteName',\n                        label: t('admin.team.siteNameTitle'),\n                        label_default: 'Site Name:',\n                        help_text: t('admin.team.siteNameDescription'),\n                        help_text_default: 'Name of service shown in login screens and UI. When not specified, it defaults to \"Aboutone\".',\n                        placeholder: t('admin.team.siteNameExample'),\n                        placeholder_default: 'E.g.: \"Aboutone\"',\n                        max_length: Constants.MAX_SITENAME_LENGTH,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.CustomDescriptionText',\n                        label: t('admin.team.brandDescriptionTitle'),\n                        label_default: 'Site Description: ',\n                        help_text: t('admin.team.brandDescriptionHelp'),\n                        help_text_default: 'Description of service shown in login screens and UI. When not specified, \"All team communication in one place, searchable and accessible anywhere\" is displayed.',\n                        placeholder: t('web.root.signup_info'),\n                        placeholder_default: 'All team communication in one place, searchable and accessible anywhere',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableCustomBrand',\n                        label: t('admin.team.brandTitle'),\n                        label_default: 'Enable Custom Branding: ',\n                        help_text: t('admin.team.brandDesc'),\n                        help_text_default: 'Enable custom branding to show an image of your choice, uploaded below, and some help text, written below, on the login page.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: BrandImageSetting,\n                        isDisabled: it.stateIsFalse('TeamSettings.EnableCustomBrand'),\n                        key: 'CustomBrandImage',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_LONG_TEXT,\n                        key: 'TeamSettings.CustomBrandText',\n                        label: t('admin.team.brandTextTitle'),\n                        label_default: 'Custom Brand Text:',\n                        help_text: t('admin.team.brandTextDescription'),\n                        help_text_default: 'Text that will appear below your custom brand image on your login screen. Supports Markdown-formatted text. Maximum 500 characters allowed.',\n                        isDisabled: it.stateIsFalse('TeamSettings.EnableCustomBrand'),\n                        max_length: Constants.MAX_CUSTOM_BRAND_TEXT_LENGTH,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.HelpLink',\n                        label: t('admin.support.helpTitle'),\n                        label_default: 'Help Link:',\n                        help_text: t('admin.support.helpDesc'),\n                        help_text_default: 'The URL for the Help link on the Mattermost login page, sign-up pages, and Main Menu. If this field is empty, the Help link is hidden from users.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.SupportEmail',\n                        label: t('admin.support.emailTitle'),\n                        label_default: 'Support Email:',\n                        help_text: t('admin.support.emailHelp'),\n                        help_text_default: 'Email address displayed on email notifications and during tutorial for end users to ask support questions.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.TermsOfServiceLink',\n                        label: t('admin.support.termsTitle'),\n                        label_default: 'Terms of Service Link:',\n                        help_text: t('admin.support.termsDesc'),\n                        help_text_default: 'Link to the terms under which users may use your online service. By default, this includes the \"Aboutone Conditions of Use (End Users)\" explaining the terms under which Mattermost software is provided to end users. If you change the default link to add your own terms for using the service you provide, your new terms must include a link to the default terms so end users are aware of the Mattermost Conditions of Use (End User) for Mattermost software.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.PrivacyPolicyLink',\n                        label: t('admin.support.privacyTitle'),\n                        label_default: 'Privacy Policy Link:',\n                        help_text: t('admin.support.privacyDesc'),\n                        help_text_default: 'The URL for the Privacy link on the login and sign-up pages. If this field is empty, the Privacy link is hidden from users.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.AboutLink',\n                        label: t('admin.support.aboutTitle'),\n                        label_default: 'About Link:',\n                        help_text: t('admin.support.aboutDesc'),\n                        help_text_default: 'The URL for the About link on the Mattermost login and sign-up pages. If this field is empty, the About link is hidden from users.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.ReportAProblemLink',\n                        label: t('admin.support.problemTitle'),\n                        label_default: 'Report a Problem Link:',\n                        help_text: t('admin.support.problemDesc'),\n                        help_text_default: 'The URL for the Report a Problem link in the Main Menu. If this field is empty, the link is removed from the Main Menu.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'NativeAppSettings.AppDownloadLink',\n                        label: t('admin.customization.appDownloadLinkTitle'),\n                        label_default: 'Mattermost Apps Download Page Link:',\n                        help_text: t('admin.customization.appDownloadLinkDesc'),\n                        help_text_default: 'Add a link to a download page for the Mattermost apps. When a link is present, an option to \"Download Mattermost Apps\" will be added in the Main Menu so users can find the download page. Leave this field blank to hide the option from the Main Menu.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'NativeAppSettings.AndroidAppDownloadLink',\n                        label: t('admin.customization.androidAppDownloadLinkTitle'),\n                        label_default: 'Android App Download Link:',\n                        help_text: t('admin.customization.androidAppDownloadLinkDesc'),\n                        help_text_default: 'Add a link to download the Android app. Users who access the site on a mobile web browser will be prompted with a page giving them the option to download the app. Leave this field blank to prevent the page from appearing.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'NativeAppSettings.IosAppDownloadLink',\n                        label: t('admin.customization.iosAppDownloadLinkTitle'),\n                        label_default: 'iOS App Download Link:',\n                        help_text: t('admin.customization.iosAppDownloadLinkDesc'),\n                        help_text_default: 'Add a link to download the iOS app. Users who access the site on a mobile web browser will be prompted with a page giving them the option to download the app. Leave this field blank to prevent the page from appearing.',\n                    },\n                ],\n            },\n        },\n        localization: {\n            url: 'site_config/localization',\n            title: t('admin.sidebar.localization'),\n            title_default: 'Localization',\n            schema: {\n                id: 'LocalizationSettings',\n                name: t('admin.site.localization'),\n                name_default: 'Localization',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_LANGUAGE,\n                        key: 'LocalizationSettings.DefaultServerLocale',\n                        label: t('admin.general.localization.serverLocaleTitle'),\n                        label_default: 'Default Server Language:',\n                        help_text: t('admin.general.localization.serverLocaleDescription'),\n                        help_text_default: 'Default language for system messages. Changing this will require a server restart before taking effect.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_LANGUAGE,\n                        key: 'LocalizationSettings.DefaultClientLocale',\n                        label: t('admin.general.localization.clientLocaleTitle'),\n                        label_default: 'Default Client Language:',\n                        help_text: t('admin.general.localization.clientLocaleDescription'),\n                        help_text_default: 'Default language for newly created users and pages where the user hasn\\'t logged in.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_LANGUAGE,\n                        key: 'LocalizationSettings.AvailableLocales',\n                        label: t('admin.general.localization.availableLocalesTitle'),\n                        label_default: 'Available Languages:',\n                        help_text: t('admin.general.localization.availableLocalesDescription'),\n                        help_text_markdown: true,\n                        help_text_default: 'Set which languages are available for users in Account Settings (leave this field blank to have all supported languages available). If you\\'re manually adding new languages, the **Default Client Language** must be added before saving this setting.\\n \\nWould like to help with translations? Join the [Mattermost Translation Server](!http://translate.mattermost.com/) to contribute.',\n                        multiple: true,\n                        no_result: t('admin.general.localization.availableLocalesNoResults'),\n                        no_result_default: 'No results found',\n                        not_present: t('admin.general.localization.availableLocalesNotPresent'),\n                        not_present_default: 'The default client language must be included in the available list',\n                    },\n                ],\n            },\n        },\n        users_and_teams: {\n            url: 'site_config/users_and_teams',\n            title: t('admin.sidebar.usersAndTeams'),\n            title_default: 'Users and Teams',\n            schema: {\n                id: 'UserAndTeamsSettings',\n                name: t('admin.site.usersAndTeams'),\n                name_default: 'Users and Teams',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_PERMISSION,\n                        key: 'TeamSettings.EnableTeamCreation',\n                        label: t('admin.team.teamCreationTitle'),\n                        label_default: 'Enable Team Creation: ',\n                        help_text: t('admin.team.teamCreationDescription'),\n                        help_text_default: 'When false, only System Administrators can create teams.',\n                        permissions_mapping_name: 'enableTeamCreation',\n                        isHidden: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'TeamSettings.MaxUsersPerTeam',\n                        label: t('admin.team.maxUsersTitle'),\n                        label_default: 'Max Users Per Team:',\n                        help_text: t('admin.team.maxUsersDescription'),\n                        help_text_default: 'Maximum total number of users per team, including both active and inactive users.',\n                        placeholder: t('admin.team.maxUsersExample'),\n                        placeholder_default: 'E.g.: \"25\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'TeamSettings.MaxChannelsPerTeam',\n                        label: t('admin.team.maxChannelsTitle'),\n                        label_default: 'Max Channels Per Team:',\n                        help_text: t('admin.team.maxChannelsDescription'),\n                        help_text_default: 'Maximum total number of channels per team, including both active and archived channels.',\n                        placeholder: t('admin.team.maxChannelsExample'),\n                        placeholder_default: 'E.g.: \"100\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'TeamSettings.RestrictDirectMessage',\n                        label: t('admin.team.restrictDirectMessage'),\n                        label_default: 'Enable users to open Direct Message channels with:',\n                        help_text: t('admin.team.restrictDirectMessageDesc'),\n                        help_text_default: '\"Any user on the Mattermost server\" enables users to open a Direct Message channel with any user on the server, even if they are not on any teams together. \"Any member of the team\" limits the ability in the Direct Messages \"More\" menu to only open Direct Message channels with users who are in the same team.\\n \\nNote: This setting only affects the UI, not permissions on the server.',\n                        options: [\n                            {\n                                value: 'any',\n                                display_name: t('admin.team.restrict_direct_message_any'),\n                                display_name_default: 'Any user on the Mattermost server',\n                            },\n                            {\n                                value: 'team',\n                                display_name: t('admin.team.restrict_direct_message_team'),\n                                display_name_default: 'Any member of the team',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'TeamSettings.TeammateNameDisplay',\n                        label: t('admin.team.teammateNameDisplay'),\n                        label_default: 'Teammate Name Display:',\n                        help_text: t('admin.team.teammateNameDisplayDesc'),\n                        help_text_default: 'Set how to display users\\' names in posts and the Direct Messages list.',\n                        options: [\n                            {\n                                value: Constants.TEAMMATE_NAME_DISPLAY.SHOW_USERNAME,\n                                display_name: t('admin.team.showUsername'),\n                                display_name_default: 'Show username (default)',\n                            },\n                            {\n                                value: Constants.TEAMMATE_NAME_DISPLAY.SHOW_NICKNAME_FULLNAME,\n                                display_name: t('admin.team.showNickname'),\n                                display_name_default: 'Show nickname if one exists, otherwise show first and last name',\n                            },\n                            {\n                                value: Constants.TEAMMATE_NAME_DISPLAY.SHOW_FULLNAME,\n                                display_name: t('admin.team.showFullname'),\n                                display_name_default: 'Show first and last name',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_PERMISSION,\n                        key: 'TeamSettings.EditOthersPosts',\n                        label: t('admin.team.editOthersPostsTitle'),\n                        label_default: 'Allow Team Administrators to edit others posts:',\n                        help_text: t('admin.team.editOthersPostsDesc'),\n                        help_text_default: 'When true, Team Administrators and System Administrators can edit other user\\'s posts.  When false, only System Administrators can edit other user\\'s posts.',\n                        permissions_mapping_name: 'editOthersPosts',\n                        isHidden: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalViewArchivedChannels',\n                        label: t('admin.viewArchivedChannelsTitle'),\n                        label_default: 'Allow users to view archived channels: ',\n                        help_text: t('admin.viewArchivedChannelsHelpText'),\n                        help_text_default: '(Experimental) When true, allows users to share permalinks and search for content of channels that have been archived. Users can only view the content in channels of which they were a member before the channel was archived.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'PrivacySettings.ShowEmailAddress',\n                        label: t('admin.privacy.showEmailTitle'),\n                        label_default: 'Show Email Address:',\n                        help_text: t('admin.privacy.showEmailDescription'),\n                        help_text_default: 'When false, hides the email address of members from everyone except System Administrators.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'PrivacySettings.ShowFullName',\n                        label: t('admin.privacy.showFullNameTitle'),\n                        label_default: 'Show Full Name:',\n                        help_text: t('admin.privacy.showFullNameDescription'),\n                        help_text_default: 'When false, hides the full name of members from everyone except System Administrators. Username is shown in place of full name.',\n                    },\n                ],\n            },\n        },\n        notifications: {\n            url: 'environment/notifications',\n            title: t('admin.sidebar.notifications'),\n            title_default: 'Notifications',\n            schema: {\n                id: 'notifications',\n                name: t('admin.environment.notifications'),\n                name_default: 'Notifications',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableConfirmNotificationsToChannel',\n                        label: t('admin.environment.notifications.enableConfirmNotificationsToChannel.label'),\n                        label_default: 'Show @channel and @all confirmation dialog:',\n                        help_text: t('admin.environment.notifications.enableConfirmNotificationsToChannel.help'),\n                        help_text_default: 'When true, users will be prompted to confirm when posting @channel and @all in channels with over five members. When false, no confirmation is required.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.SendEmailNotifications',\n                        label: t('admin.environment.notifications.enable.label'),\n                        label_default: 'Enable Email Notifications:',\n                        help_text: t('admin.environment.notifications.enable.help'),\n                        help_text_default: 'Typically set to true in production. When true, Mattermost attempts to send email notifications. Developers may set this field to false to skip email setup for faster development.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnablePreviewModeBanner',\n                        label: t('admin.environment.notifications.enablePreviewModeBanner.label'),\n                        label_default: 'Enable Preview Mode Banner:',\n                        help_text: t('admin.environment.notifications.enablePreviewModeBanner.help'),\n                        help_text_default: 'When true, the Preview Mode banner is displayed so users are aware that email notifications are disabled. When false, the Preview Mode banner is not displayed to users.',\n                        isDisabled: it.either(\n                            it.stateIsTrue('EmailSettings.SendEmailNotifications'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableEmailBatching',\n                        label: t('admin.environment.notifications.enableEmailBatching.label'),\n                        label_default: 'Enable Email Batching:',\n                        help_text: t('admin.environment.notifications.enableEmailBatching.help'),\n                        help_text_default: 'When true, users will have email notifications for multiple direct messages and mentions combined into a single email. Batching will occur at a default interval of 15 minutes, configurable in Account Settings > Notifications.',\n                        isDisabled: it.either(\n                            it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                            it.configIsTrue('ClusterSettings', 'Enable'),\n                            it.configIsFalse('ServiceSettings', 'SiteURL'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.EmailNotificationContentsType',\n                        label: t('admin.environment.notifications.contents.label'),\n                        label_default: 'Email Notification Contents:',\n                        help_text: t('admin.environment.notifications.contents.help'),\n                        help_text_default: '**Send full message contents** - Sender name and channel are included in email notifications. Typically used for compliance reasons if Mattermost contains confidential information and policy dictates it cannot be stored in email.\\n  **Send generic description with only sender name** - Only the name of the person who sent the message, with no information about channel name or message contents are included in email notifications. Typically used for compliance reasons if Mattermost contains confidential information and policy dictates it cannot be stored in email.',\n                        help_text_markdown: true,\n                        isHidden: false,\n                        options: [\n                            {\n                                value: 'full',\n                                display_name: t('admin.environment.notifications.contents.full'),\n                                display_name_default: 'Send full message contents',\n                            },\n                            {\n                                value: 'generic',\n                                display_name: t('admin.environment.notifications.contents.generic'),\n                                display_name_default: 'Send generic description with only sender name',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.FeedbackName',\n                        label: t('admin.environment.notifications.notificationDisplay.label'),\n                        label_default: 'Notification Display Name:',\n                        placeholder: t('admin.environment.notifications.notificationDisplay.placeholder'),\n                        placeholder_default: 'Ex: \"Aboutone Notification\", \"System\", \"No-Reply\"',\n                        help_text: t('admin.environment.notifications.notificationDisplay.help'),\n                        help_text_default: 'Display name on email account used when sending notification emails from Mattermost.',\n                        isDisabled: it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.FeedbackEmail',\n                        label: t('admin.environment.notifications.feedbackEmail.label'),\n                        label_default: 'Notification From Address:',\n                        placeholder: t('admin.environment.notifications.feedbackEmail.placeholder'),\n                        placeholder_default: 'Ex: \"aboutone@yourcompany.com\", \"admin@yourcompany.com\"',\n                        help_text: t('admin.environment.notifications.feedbackEmail.help'),\n                        help_text_default: 'Email address displayed on email account used when sending notification emails from Mattermost.',\n                        isDisabled: it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.ReplyToAddress',\n                        label: t('admin.environment.notifications.replyToAddress.label'),\n                        label_default: 'Notification Reply-To Address:',\n                        placeholder: t('admin.environment.notifications.replyToAddress.placeholder'),\n                        placeholder_default: 'Ex: \"aboutone@yourcompany.com\", \"admin@yourcompany.com\"',\n                        help_text: t('admin.environment.notifications.replyToAddress.help'),\n                        help_text_default: 'Email address used in the Reply-To header when sending notification emails from Mattermost.',\n                        isDisabled: it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.FeedbackOrganization',\n                        label: t('admin.environment.notifications.feedbackOrganization.label'),\n                        label_default: 'Notification Footer Mailing Address:',\n                        placeholder: t('admin.environment.notifications.feedbackOrganization.placeholder'),\n                        placeholder_default: 'Ex: \"© ABC Corporation, 565 Knight Way, Palo Alto, California, 94305, USA\"',\n                        help_text: t('admin.environment.notifications.feedbackOrganization.help'),\n                        help_text_default: 'Organization name and address displayed on email notifications from Mattermost, such as \"© ABC Corporation, 565 Knight Way, Palo Alto, California, 94305, USA\". If the field is left empty, the organization name and address will not be displayed.',\n                        isDisabled: it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.PushNotificationContents',\n                        label: t('admin.environment.notifications.pushContents.label'),\n                        label_default: 'Push Notification Contents:',\n                        help_text: t('admin.environment.notifications.pushContents.help'),\n                        help_text_default: '**Send generic description with only sender name** - Includes only the name of the person who sent the message in push notifications, with no information about channel name or message contents.\\n **Send generic description with sender and channel names** - Includes the name of the person who sent the message and the channel it was sent in, but not the message text.\\n **Send full message snippet** - Includes a message excerpt in push notifications, which may contain confidential information sent in messages. If your Push Notification Service is outside your firewall, it is *highly recommended* this option only be used with an \"https\" protocol to encrypt the connection.',\n                        help_text_markdown: true,\n                        isHidden: false,\n                        options: [\n                            {\n                                value: 'generic_no_channel',\n                                display_name: t('admin.environment.notifications.pushContents.genericNoChannel'),\n                                display_name_default: 'Send generic description with only sender name',\n                            },\n                            {\n                                value: 'generic',\n                                display_name: t('admin.environment.notifications.pushContents.generic'),\n                                display_name_default: 'Send generic description with sender and channel names',\n                            },\n                            {\n                                value: 'full',\n                                display_name: t('admin.environment.notifications.pushContents.full'),\n                                display_name_default: 'Send full message snippet',\n                            },\n                        ],\n                    },\n                ],\n            },\n        },\n        announcement_banner: {\n            url: 'site_config/announcement_banner',\n            title: t('admin.sidebar.announcement'),\n            title_default: 'Announcement Banner',\n            isHidden: false,\n            schema: {\n                id: 'AnnouncementSettings',\n                name: t('admin.site.announcementBanner'),\n                name_default: 'Announcement Banner',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'AnnouncementSettings.EnableBanner',\n                        label: t('admin.customization.announcement.enableBannerTitle'),\n                        label_default: 'Enable Announcement Banner:',\n                        help_text: t('admin.customization.announcement.enableBannerDesc'),\n                        help_text_default: 'Enable an announcement banner across all teams.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'AnnouncementSettings.BannerText',\n                        label: t('admin.customization.announcement.bannerTextTitle'),\n                        label_default: 'Banner Text:',\n                        help_text: t('admin.customization.announcement.bannerTextDesc'),\n                        help_text_default: 'Text that will appear in the announcement banner.',\n                        isDisabled: it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'AnnouncementSettings.BannerColor',\n                        label: t('admin.customization.announcement.bannerColorTitle'),\n                        label_default: 'Banner Color:',\n                        isDisabled: it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'AnnouncementSettings.BannerTextColor',\n                        label: t('admin.customization.announcement.bannerTextColorTitle'),\n                        label_default: 'Banner Text Color:',\n                        isDisabled: it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'AnnouncementSettings.AllowBannerDismissal',\n                        label: t('admin.customization.announcement.allowBannerDismissalTitle'),\n                        label_default: 'Allow Banner Dismissal:',\n                        help_text: t('admin.customization.announcement.allowBannerDismissalDesc'),\n                        help_text_default: 'When true, users can dismiss the banner until its next update. When false, the banner is permanently visible until it is turned off by the System Admin.',\n                        isDisabled: it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                    },\n                ],\n            },\n        },\n        emoji: {\n            url: 'site_config/emoji',\n            title: t('admin.sidebar.emoji'),\n            title_default: 'Emoji',\n            schema: {\n                id: 'EmojiSettings',\n                name: t('admin.site.emoji'),\n                name_default: 'Emoji',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableEmojiPicker',\n                        label: t('admin.customization.enableEmojiPickerTitle'),\n                        label_default: 'Enable Emoji Picker:',\n                        help_text: t('admin.customization.enableEmojiPickerDesc'),\n                        help_text_default: 'The emoji picker allows users to select emoji to add as reactions or use in messages. Enabling the emoji picker with a large number of custom emoji may slow down performance.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableCustomEmoji',\n                        label: t('admin.customization.enableCustomEmojiTitle'),\n                        label_default: 'Enable Custom Emoji:',\n                        help_text: t('admin.customization.enableCustomEmojiDesc'),\n                        help_text_default: 'Enable users to create custom emoji for use in messages. When enabled, Custom Emoji settings can be accessed by switching to a team and clicking the three dots above the channel sidebar, and selecting \"Custom Emoji\".',\n                    },\n                ],\n            },\n        },\n        posts: {\n            url: 'site_config/posts',\n            title: t('admin.sidebar.posts'),\n            title_default: 'Posts',\n            schema: {\n                id: 'PostSettings',\n                name: t('admin.site.posts'),\n                name_default: 'Posts',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableLinkPreviews',\n                        label: t('admin.customization.enableLinkPreviewsTitle'),\n                        label_default: 'Enable Link Previews:',\n                        help_text: t('admin.customization.enableLinkPreviewsDesc'),\n                        help_text_default: 'Display a preview of website content below messages, when available. Users can disable these previews from Account Settings > Display > Website Link Previews. This setting only applies to websites with OpenGraph metadata and not for image links or YouTube previews.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: CustomUrlSchemesSetting,\n                        key: 'DisplaySettings.CustomUrlSchemes',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.GoogleDeveloperKey',\n                        label: t('admin.service.googleTitle'),\n                        label_default: 'Google API Key:',\n                        placeholder: t('admin.service.googleExample'),\n                        placeholder_default: 'E.g.: \"7rAh6iwQCkV4cA1Gsg3fgGOXJAQ43QV\"',\n                        help_text: t('admin.service.googleDescription'),\n                        help_text_default: 'Set this key to enable the display of titles for embedded YouTube video previews. Without the key, YouTube previews will still be created based on hyperlinks appearing in messages or comments but they will not show the video title. View a [Google Developers Tutorial](!https://www.youtube.com/watch?v=Im69kzhpR3I) for instructions on how to obtain a key and add YouTube Data API v3 as a service to your key.',\n                        help_text_markdown: true,\n                        isHidden: false,\n                    },\n                ],\n            },\n        },\n        file_sharing_downloads: {\n            url: 'site_config/file_sharing_downloads',\n            title: t('admin.sidebar.fileSharingDownloads'),\n            title_default: 'File Sharing and Downloads',\n            schema: {\n                id: 'FileSharingDownloads',\n                name: t('admin.site.fileSharingDownloads'),\n                name_default: 'File Sharing and Downloads',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnableFileAttachments',\n                        label: t('admin.file.enableFileAttachments'),\n                        label_default: 'Allow File Sharing:',\n                        help_text: t('admin.file.enableFileAttachmentsDesc'),\n                        help_text_default: 'When false, disables file sharing on the server. All file and image uploads on messages are forbidden across clients and devices, including mobile.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnableMobileUpload',\n                        label: t('admin.file.enableMobileUploadTitle'),\n                        label_default: 'Allow File Uploads on Mobile:',\n                        help_text: t('admin.file.enableMobileUploadDesc'),\n                        help_text_default: 'When false, disables file uploads on mobile apps. If Allow File Sharing is set to true, users can still upload files from a mobile web browser.',\n                        isHidden: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnableMobileDownload',\n                        label: t('admin.file.enableMobileDownloadTitle'),\n                        label_default: 'Allow File Downloads on Mobile:',\n                        help_text: t('admin.file.enableMobileDownloadDesc'),\n                        help_text_default: 'When false, disables file downloads on mobile apps. Users can still download files from a mobile web browser.',\n                        isHidden: false,\n                    },\n                ],\n            },\n        },\n        public_links: {\n            url: 'site_config/public_links',\n            title: t('admin.sidebar.publicLinks'),\n            title_default: 'Public Links',\n            schema: {\n                id: 'PublicLinkSettings',\n                name: t('admin.site.public_links'),\n                name_default: 'Public Links',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnablePublicLink',\n                        label: t('admin.image.shareTitle'),\n                        label_default: 'Enable Public File Links: ',\n                        help_text: t('admin.image.shareDescription'),\n                        help_text_default: 'Allow users to share public links to files and images.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_GENERATED,\n                        key: 'FileSettings.PublicLinkSalt',\n                        label: t('admin.image.publicLinkTitle'),\n                        label_default: 'Public Link Salt:',\n                        help_text: t('admin.image.publicLinkDescription'),\n                        help_text_default: '32-character salt added to signing of public image links. Randomly generated on install. Click \"Regenerate\" to create new salt.',\n                    },\n                ],\n            },\n        },\n    },\n    authentication: {\n        icon: 'fa-shield',\n        sectionTitle: t('admin.sidebar.authentication'),\n        sectionTitleDefault: 'Authentication',\n        signup: {\n            url: 'authentication/signup',\n            title: t('admin.sidebar.signup'),\n            title_default: 'Signup',\n            schema: {\n                id: 'SignupSettings',\n                name: t('admin.authentication.signup'),\n                name_default: 'Signup',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableUserCreation',\n                        label: t('admin.team.userCreationTitle'),\n                        label_default: 'Enable Account Creation: ',\n                        help_text: t('admin.team.userCreationDescription'),\n                        help_text_default: 'When false, the ability to create accounts is disabled. The create account button displays error when pressed.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.RestrictCreationToDomains',\n                        label: t('admin.team.restrictTitle'),\n                        label_default: 'Restrict account creation to specified email domains:',\n                        help_text: t('admin.team.restrictDescription'),\n                        help_text_default: 'User accounts can only be created from a specific domain (e.g. \"aboutone.org\") or list of comma-separated domains (e.g. \"corp.mattermost.com, mattermost.org\"). This setting only affects email login.',\n                        placeholder: t('admin.team.restrictExample'),\n                        placeholder_default: 'E.g.: \"corp.mattermost.com, mattermost.org\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableOpenServer',\n                        label: t('admin.team.openServerTitle'),\n                        label_default: 'Enable Open Server: ',\n                        help_text: t('admin.team.openServerDescription'),\n                        help_text_default: 'When true, anyone can signup for a user account on this server without the need to be invited.',\n                        isHidden: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableEmailInvitations',\n                        label: t('admin.team.emailInvitationsTitle'),\n                        label_default: 'Enable Email Invitations: ',\n                        help_text: t('admin.team.emailInvitationsDescription'),\n                        help_text_default: 'When true users can invite others to the system using email.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        key: 'InvalidateEmailInvitesButton',\n                        action: invalidateAllEmailInvites,\n                        label: t('admin.team.invalidateEmailInvitesTitle'),\n                        label_default: 'Invalidate pending email invites',\n                        help_text: t('admin.team.invalidateEmailInvitesDescription'),\n                        help_text_default: 'This will invalidate active email invitations that have not been accepted by the user.  By default email invitations expire after 48 hours.',\n                        error_message: t('admin.team.invalidateEmailInvitesFail'),\n                        error_message_default: 'Unable to invalidate pending email invites: {error}',\n                        success_message: t('admin.team.invalidateEmailInvitesSuccess'),\n                        success_message_default: 'Pending email invitations invalidated successfully',\n                    },\n                ],\n            },\n        },\n        email: {\n            url: 'authentication/email',\n            title: t('admin.sidebar.email'),\n            title_default: 'Email',\n            schema: {\n                id: 'EmailSettings',\n                name: t('admin.authentication.email'),\n                name_default: 'Email',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSignUpWithEmail',\n                        label: t('admin.email.allowSignupTitle'),\n                        label_default: 'Enable account creation with email:',\n                        help_text: t('admin.email.allowSignupDescription'),\n                        help_text_default: 'When true, Mattermost allows account creation using email and password. This value should be false only when you want to limit sign up to a single sign-on service like AD/LDAP, SAML or GitLab.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.RequireEmailVerification',\n                        label: t('admin.email.requireVerificationTitle'),\n                        label_default: 'Require Email Verification: ',\n                        help_text: t('admin.email.requireVerificationDescription'),\n                        help_text_default: 'Typically set to true in production. When true, Mattermost requires email verification after account creation prior to allowing login. Developers may set this field to false to skip sending verification emails for faster development.',\n                        disabled_help_text: t('admin.security.requireEmailVerification.disabled'),\n                        disabled_help_text_default: 'Email verification cannot be changed while sending emails is disabled.',\n                        isDisabled: (config) => !config.EmailSettings.SendEmailNotifications,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSignInWithEmail',\n                        label: t('admin.email.allowEmailSignInTitle'),\n                        label_default: 'Enable sign-in with email:',\n                        help_text: t('admin.email.allowEmailSignInDescription'),\n                        help_text_default: 'When true, Mattermost allows users to sign in using their email and password.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSignInWithUsername',\n                        label: t('admin.email.allowUsernameSignInTitle'),\n                        label_default: 'Enable sign-in with username:',\n                        help_text: t('admin.email.allowUsernameSignInDescription'),\n                        help_text_default: 'When true, users with email login can sign in using their username and password. This setting does not affect AD/LDAP login.',\n                    },\n                ],\n            },\n        },\n        password: {\n            url: 'authentication/password',\n            title: t('admin.sidebar.password'),\n            title_default: 'Password',\n            searchableStrings: [\n                'user.settings.security.passwordMinLength',\n                'admin.security.password',\n                ['admin.password.minimumLength', {max: '', min: ''}],\n                ['admin.password.minimumLengthDescription', {max: '', min: ''}],\n                'passwordRequirements',\n                'admin.password.lowercase',\n                'admin.password.uppercase',\n                'admin.password.number',\n                'admin.password.symbol',\n                'admin.password.preview',\n                'admin.service.attemptTitle',\n                'admin.service.attemptDescription',\n            ],\n            schema: {\n                id: 'PasswordSettings',\n                component: PasswordSettings,\n            },\n        },\n        mfa: {\n            url: 'authentication/mfa',\n            title: t('admin.sidebar.mfa'),\n            title_default: 'MFA',\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.authentication.mfa'),\n                name_default: 'Multi-factor Authentication',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.mfa.bannerDesc'),\n                        label_default: '[Multi-factor authentication](!https://docs.mattermost.com/deployment/auth.html) is available for accounts with AD/LDAP or email login. If other login methods are used, MFA should be configured with the authentication provider.',\n                        label_markdown: true,\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableMultifactorAuthentication',\n                        label: t('admin.service.mfaTitle'),\n                        label_default: 'Enable Multi-factor Authentication:',\n                        help_text: t('admin.service.mfaDesc'),\n                        help_text_default: 'When true, users with AD/LDAP or email login can add multi-factor authentication to their account using Google Authenticator.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnforceMultifactorAuthentication',\n                        label: t('admin.service.enforceMfaTitle'),\n                        label_default: 'Enforce Multi-factor Authentication:',\n                        help_text: t('admin.service.enforceMfaDesc'),\n                        help_text_markdown: true,\n                        help_text_default: 'When true, [multi-factor authentication](!https://docs.mattermost.com/deployment/auth.html) is required for login. New users will be required to configure MFA on signup. Logged in users without MFA configured are redirected to the MFA setup page until configuration is complete.\\n \\nIf your system has users with login methods other than AD/LDAP and email, MFA must be enforced with the authentication provider outside of Mattermost.',\n                        isDisabled: it.stateIsFalse('ServiceSettings.EnableMultifactorAuthentication'),\n                        isHidden: false,\n                    },\n                ],\n            },\n        },\n        ldap: {\n            url: 'authentication/ldap',\n            title: t('admin.sidebar.ldap'),\n            title_default: 'AD/LDAP',\n            isHidden: false,\n            schema: {\n                id: 'LdapSettings',\n                name: t('admin.authentication.ldap'),\n                name_default: 'AD/LDAP',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LdapSettings.Enable',\n                        label: t('admin.ldap.enableTitle'),\n                        label_default: 'Enable sign-in with AD/LDAP:',\n                        help_text: t('admin.ldap.enableDesc'),\n                        help_text_default: 'When true, Mattermost allows login using AD/LDAP',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LdapSettings.EnableSync',\n                        label: t('admin.ldap.enableSyncTitle'),\n                        label_default: 'Enable Synchronization with AD/LDAP:',\n                        help_text: t('admin.ldap.enableSyncDesc'),\n                        help_text_default: 'When true, Mattermost periodically synchronizes users from AD/LDAP. When false, user attributes are updated from AD/LDAP during user login only.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LdapServer',\n                        label: t('admin.ldap.serverTitle'),\n                        label_default: 'AD/LDAP Server:',\n                        help_text: t('admin.ldap.serverDesc'),\n                        help_text_default: 'The domain or IP address of AD/LDAP server.',\n                        placeholder: t('admin.ldap.serverEx'),\n                        placeholder_default: 'E.g.: \"10.0.0.23\"',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.LdapPort',\n                        label: t('admin.ldap.portTitle'),\n                        label_default: 'AD/LDAP Port:',\n                        help_text: t('admin.ldap.portDesc'),\n                        help_text_default: 'The port Mattermost will use to connect to the AD/LDAP server. Default is 389.',\n                        placeholder: t('admin.ldap.portEx'),\n                        placeholder_default: 'E.g.: \"389\"',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'LdapSettings.ConnectionSecurity',\n                        label: t('admin.connectionSecurityTitle'),\n                        label_default: 'Connection Security:',\n                        help_text: DefinitionConstants.CONNECTION_SECURITY_HELP_TEXT_LDAP,\n                        options: [\n                            {\n                                value: '',\n                                display_name: t('admin.connectionSecurityNone'),\n                                display_name_default: 'None',\n                            },\n                            {\n                                value: 'TLS',\n                                display_name: t('admin.connectionSecurityTls'),\n                                display_name_default: 'TLS (Recommended)',\n                            },\n                            {\n                                value: 'STARTTLS',\n                                display_name: t('admin.connectionSecurityStart'),\n                                display_name_default: 'STARTTLS',\n                            },\n                        ],\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LdapSettings.SkipCertificateVerification',\n                        label: t('admin.ldap.skipCertificateVerification'),\n                        label_default: 'Skip Certificate Verification:',\n                        help_text: t('admin.ldap.skipCertificateVerificationDesc'),\n                        help_text_default: 'Skips the certificate verification step for TLS or STARTTLS connections. Not recommended for production environments where TLS is required. For testing only.',\n                        isDisabled: it.stateIsFalse('LdapSettings.ConnectionSecurity'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.BaseDN',\n                        label: t('admin.ldap.baseTitle'),\n                        label_default: 'BaseDN:',\n                        help_text: t('admin.ldap.baseDesc'),\n                        help_text_default: 'The Base DN is the Distinguished Name of the location where Mattermost should start its search for users in the AD/LDAP tree.',\n                        placeholder: t('admin.ldap.baseEx'),\n                        placeholder_default: 'E.g.: \"ou=Unit Name,dc=corp,dc=example,dc=com\"',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.BindUsername',\n                        label: t('admin.ldap.bindUserTitle'),\n                        label_default: 'Bind Username:',\n                        help_text: t('admin.ldap.bindUserDesc'),\n                        help_text_default: 'The username used to perform the AD/LDAP search. This should typically be an account created specifically for use with Mattermost. It should have access limited to read the portion of the AD/LDAP tree specified in the BaseDN field.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.BindPassword',\n                        label: t('admin.ldap.bindPwdTitle'),\n                        label_default: 'Bind Password:',\n                        help_text: t('admin.ldap.bindPwdDesc'),\n                        help_text_default: 'Password of the user given in \"Bind Username\".',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.UserFilter',\n                        label: t('admin.ldap.userFilterTitle'),\n                        label_default: 'User Filter:',\n                        help_text: t('admin.ldap.userFilterDisc'),\n                        help_text_default: '(Optional) Enter an AD/LDAP filter to use when searching for user objects. Only the users selected by the query will be able to access Mattermost. For Active Directory, the query to filter out disabled users is (&(objectCategory=Person)(!(UserAccountControl:1.2.840.113556.1.4.803:=2))).',\n                        placeholder: t('admin.ldap.userFilterEx'),\n                        placeholder_default: 'Ex. \"(objectClass=user)\"',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GroupFilter',\n                        label: t('admin.ldap.groupFilterTitle'),\n                        label_default: 'Group Filter:',\n                        help_text: t('admin.ldap.groupFilterFilterDesc'),\n                        help_text_markdown: true,\n                        help_text_default: '(Optional) Enter an AD/LDAP filter to use when searching for group objects. Only the groups selected by the query will be available to Mattermost. From [User Management > Groups](/admin_console/user_management/groups), select which AD/LDAP groups should be linked and configured.',\n                        placeholder: t('admin.ldap.groupFilterEx'),\n                        placeholder_default: 'E.g.: \"(objectClass=group)\"',\n                        isDisabled: it.stateIsFalse('LdapSettings.EnableSync'),\n                        isHidden: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GroupDisplayNameAttribute',\n                        label: t('admin.ldap.groupDisplayNameAttributeTitle'),\n                        label_default: 'Group Display Name Attribute:',\n                        help_text: t('admin.ldap.groupDisplayNameAttributeDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used to populate the group display names.',\n                        placeholder: t('admin.ldap.groupDisplayNameAttributeEx'),\n                        placeholder_default: 'E.g.: \"cn\"',\n                        isDisabled: it.stateIsFalse('LdapSettings.EnableSync'),\n                        isHidden: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GroupIdAttribute',\n                        label: t('admin.ldap.groupIdAttributeTitle'),\n                        label_default: 'Group ID Attribute:',\n                        help_text: t('admin.ldap.groupIdAttributeDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used as unique identifier for Groups. This should be a AD/LDAP attribute with a value that does not change.',\n                        placeholder: t('admin.ldap.groupIdAttributeEx'),\n                        placeholder_default: 'E.g.: \"entryUUID\"',\n                        isDisabled: it.stateIsFalse('LdapSettings.EnableSync'),\n                        isHidden: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.FirstNameAttribute',\n                        label: t('admin.ldap.firstnameAttrTitle'),\n                        label_default: 'First Name Attribute:',\n                        placeholder: t('admin.ldap.firstnameAttrEx'),\n                        placeholder_default: 'E.g.: \"givenName\"',\n                        help_text: t('admin.ldap.firstnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the first name of users in Mattermost. When set, users cannot edit their first name, since it is synchronized with the LDAP server. When left blank, users can set their first name in Account Settings.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LastNameAttribute',\n                        label: t('admin.ldap.lastnameAttrTitle'),\n                        label_default: 'Last Name Attribute:',\n                        placeholder: t('admin.ldap.lastnameAttrEx'),\n                        placeholder_default: 'E.g.: \"sn\"',\n                        help_text: t('admin.ldap.lastnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the last name of users in Mattermost. When set, users cannot edit their last name, since it is synchronized with the LDAP server. When left blank, users can set their last name in Account Settings.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.NicknameAttribute',\n                        label: t('admin.ldap.nicknameAttrTitle'),\n                        label_default: 'Nickname Attribute:',\n                        placeholder: t('admin.ldap.nicknameAttrEx'),\n                        placeholder_default: 'E.g.: \"nickname\"',\n                        help_text: t('admin.ldap.nicknameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the nickname of users in Mattermost. When set, users cannot edit their nickname, since it is synchronized with the LDAP server. When left blank, users can set their nickname in Account Settings.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.PositionAttribute',\n                        label: t('admin.ldap.positionAttrTitle'),\n                        label_default: 'Position Attribute:',\n                        placeholder: t('admin.ldap.positionAttrEx'),\n                        placeholder_default: 'E.g.: \"title\"',\n                        help_text: t('admin.ldap.positionAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the position field in Mattermost. When set, users cannot edit their position, since it is synchronized with the LDAP server. When left blank, users can set their position in Account Settings.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.EmailAttribute',\n                        label: t('admin.ldap.emailAttrTitle'),\n                        label_default: 'Email Attribute:',\n                        placeholder: t('admin.ldap.emailAttrEx'),\n                        placeholder_default: 'E.g.: \"mail\" or \"userPrincipalName\"',\n                        help_text: t('admin.ldap.emailAttrDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used to populate the email address field in Mattermost.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.UsernameAttribute',\n                        label: t('admin.ldap.usernameAttrTitle'),\n                        label_default: 'Username Attribute:',\n                        placeholder: t('admin.ldap.usernameAttrEx'),\n                        placeholder_default: 'E.g.: \"sAMAccountName\"',\n                        help_text: t('admin.ldap.usernameAttrDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used to populate the username field in Mattermost. This may be the same as the Login ID Attribute.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.IdAttribute',\n                        label: t('admin.ldap.idAttrTitle'),\n                        label_default: 'ID Attribute: ',\n                        placeholder: t('admin.ldap.idAttrEx'),\n                        placeholder_default: 'E.g.: \"objectGUID\"',\n                        help_text: t('admin.ldap.idAttrDesc'),\n                        help_text_markdown: true,\n                        help_text_default: 'The attribute in the AD/LDAP server used as a unique identifier in Mattermost. It should be an AD/LDAP attribute with a value that does not change. If a user\\'s ID Attribute changes, it will create a new Mattermost account unassociated with their old one.\\n \\nIf you need to change this field after users have already logged in, use the [mattermost ldap idmigrate](!https://about.mattermost.com/default-mattermost-ldap-idmigrate) CLI tool.',\n                        isDisabled: it.both(\n                            it.stateEquals('LdapSettings.Enable', false),\n                            it.stateEquals('LdapSettings.EnableSync', false),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginIdAttribute',\n                        label: t('admin.ldap.loginAttrTitle'),\n                        label_default: 'Login ID Attribute: ',\n                        placeholder: t('admin.ldap.loginIdAttrEx'),\n                        placeholder_default: 'E.g.: \"sAMAccountName\"',\n                        help_text: t('admin.ldap.loginAttrDesc'),\n                        help_text_markdown: true,\n                        help_text_default: 'The attribute in the AD/LDAP server used to log in to Mattermost. Normally this attribute is the same as the \"Username Attribute\" field above.\\n \\nIf your team typically uses domain/username to log in to other services with AD/LDAP, you may enter domain/username in this field to maintain consistency between sites.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginFieldName',\n                        label: t('admin.ldap.loginNameTitle'),\n                        label_default: 'Sign-in Field Default Text:',\n                        placeholder: t('admin.ldap.loginNameEx'),\n                        placeholder_default: 'E.g.: \"AD/LDAP Username\"',\n                        help_text: t('admin.ldap.loginNameDesc'),\n                        help_text_default: 'The placeholder text that appears in the login field on the login page. Defaults to \"AD/LDAP Username\".',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.SyncIntervalMinutes',\n                        label: t('admin.ldap.syncIntervalTitle'),\n                        label_default: 'Synchronization Interval (minutes):',\n                        help_text: t('admin.ldap.syncIntervalHelpText'),\n                        help_text_default: 'AD/LDAP Synchronization updates Mattermost user information to reflect updates on the AD/LDAP server. For example, when a user\\'s name changes on the AD/LDAP server, the change updates in Mattermost when synchronization is performed. Accounts removed from or disabled in the AD/LDAP server have their Mattermost accounts set to \"Inactive\" and have their account sessions revoked. Mattermost performs synchronization on the interval entered. For example, if 60 is entered, Mattermost synchronizes every 60 minutes.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.MaxPageSize',\n                        label: t('admin.ldap.maxPageSizeTitle'),\n                        label_default: 'Maximum Page Size:',\n                        placeholder: t('admin.ldap.maxPageSizeEx'),\n                        placeholder_default: 'E.g.: \"2000\"',\n                        help_text: t('admin.ldap.maxPageSizeHelpText'),\n                        help_text_default: 'The maximum number of users the Mattermost server will request from the AD/LDAP server at one time. 0 is unlimited.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.QueryTimeout',\n                        label: t('admin.ldap.queryTitle'),\n                        label_default: 'Query Timeout (seconds):',\n                        placeholder: t('admin.ldap.queryEx'),\n                        placeholder_default: 'E.g.: \"60\"',\n                        help_text: t('admin.ldap.queryDesc'),\n                        help_text_default: 'The timeout value for queries to the AD/LDAP server. Increase if you are getting timeout errors caused by a slow AD/LDAP server.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: ldapTest,\n                        key: 'LdapSettings.LdapTest',\n                        label: t('admin.ldap.ldap_test_button'),\n                        label_default: 'AD/LDAP Test',\n                        help_text: t('admin.ldap.testHelpText'),\n                        help_text_markdown: true,\n                        help_text_default: 'Tests if the Mattemost server can connect to the AD/LDAP server specified. Please review \"System Console > Logs\" and [documentation](!https://mattermost.com/default-ldap-docs) to troubleshoot errors.',\n                        error_message: t('admin.ldap.testFailure'),\n                        error_message_default: 'AD/LDAP Test Failure: {error}',\n                        success_message: t('admin.ldap.testSuccess'),\n                        success_message_default: 'AD/LDAP Test Successful',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_JOBSTABLE,\n                        job_type: Constants.JobTypes.LDAP_SYNC,\n                        label: t('admin.ldap.sync_button'),\n                        label_default: 'AD/LDAP Synchronize Now',\n                        help_text: t('admin.ldap.syncNowHelpText'),\n                        help_text_markdown: true,\n                        help_text_default: 'Initiates an AD/LDAP synchronization immediately. See the table below for status of each synchronization. Please review \"System Console > Logs\" and [documentation](!https://mattermost.com/default-ldap-docs) to troubleshoot errors.',\n                        isDisabled: it.stateIsFalse('LdapSettings.EnableSync'),\n                        render_job: (job) => {\n                            let ldapUsers = 0;\n                            let deleteCount = 0;\n                            let updateCount = 0;\n                            let linkedLdapGroupsCount; // Deprecated.\n                            let totalLdapGroupsCount = 0;\n                            let groupDeleteCount = 0;\n                            let groupMemberDeleteCount = 0;\n                            let groupMemberAddCount = 0;\n\n                            if (job && job.data) {\n                                if (job.data.ldap_users_count && job.data.ldap_users_count.length > 0) {\n                                    ldapUsers = job.data.ldap_users_count;\n                                }\n\n                                if (job.data.delete_count && job.data.delete_count.length > 0) {\n                                    deleteCount = job.data.delete_count;\n                                }\n\n                                if (job.data.update_count && job.data.update_count.length > 0) {\n                                    updateCount = job.data.update_count;\n                                }\n\n                                // Deprecated groups count representing the number of linked LDAP groups.\n                                if (job.data.ldap_groups_count) {\n                                    linkedLdapGroupsCount = job.data.ldap_groups_count;\n                                }\n\n                                // Groups count representing the total number of LDAP groups available based on\n                                // the configured based DN and groups filter.\n                                if (job.data.total_ldap_groups_count) {\n                                    totalLdapGroupsCount = job.data.total_ldap_groups_count;\n                                }\n\n                                if (job.data.group_delete_count) {\n                                    groupDeleteCount = job.data.group_delete_count;\n                                }\n\n                                if (job.data.group_member_delete_count) {\n                                    groupMemberDeleteCount = job.data.group_member_delete_count;\n                                }\n\n                                if (job.data.group_member_add_count) {\n                                    groupMemberAddCount = job.data.group_member_add_count;\n                                }\n                            }\n\n                            return (\n                                <span>\n                                    <FormattedMessage\n                                        id={linkedLdapGroupsCount ? 'admin.ldap.jobExtraInfo' : 'admin.ldap.jobExtraInfoTotal'}\n                                        defaultMessage={linkedLdapGroupsCount ? 'Scanned {ldapUsers, number} LDAP users and {ldapGroups, number} linked groups.' : 'Scanned {ldapUsers, number} LDAP users and {ldapGroups, number} groups.'}\n                                        values={{\n                                            ldapUsers,\n                                            ldapGroups: linkedLdapGroupsCount || totalLdapGroupsCount, // Show the old count for jobs records containing the old JSON key.\n                                        }}\n                                    />\n                                    <ul>\n                                        {updateCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.updatedUsers'\n                                                    defaultMessage='Updated {updateCount, number} users.'\n                                                    values={{\n                                                        updateCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {deleteCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.deactivatedUsers'\n                                                    defaultMessage='Deactivated {deleteCount, number} users.'\n                                                    values={{\n                                                        deleteCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {groupDeleteCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.deletedGroups'\n                                                    defaultMessage='Deleted {groupDeleteCount, number} groups.'\n                                                    values={{\n                                                        groupDeleteCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {groupMemberDeleteCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.deletedGroupMembers'\n                                                    defaultMessage='Deleted {groupMemberDeleteCount, number} group members.'\n                                                    values={{\n                                                        groupMemberDeleteCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {groupMemberAddCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.addedGroupMembers'\n                                                    defaultMessage='Added {groupMemberAddCount, number} group members.'\n                                                    values={{\n                                                        groupMemberAddCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                    </ul>\n                                </span>\n                            );\n                        },\n                    },\n                ],\n            },\n        },\n        saml: {\n            url: 'authentication/saml',\n            title: t('admin.sidebar.saml'),\n            title_default: 'SAML 2.0',\n            isHidden: it.isnt(it.licensedForFeature('SAML')),\n            schema: {\n                id: 'SamlSettings',\n                name: t('admin.authentication.saml'),\n                name_default: 'SAML 2.0',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.Enable',\n                        label: t('admin.saml.enableTitle'),\n                        label_default: 'Enable Login With SAML 2.0:',\n                        help_text: t('admin.saml.enableDescription'),\n                        help_text_default: 'When true, Mattermost allows login using SAML 2.0. Please see [documentation](!http://docs.mattermost.com/deployment/sso-saml.html) to learn more about configuring SAML for Mattermost.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.EnableSyncWithLdap',\n                        label: t('admin.saml.enableSyncWithLdapTitle'),\n                        label_default: 'Enable Synchronizing SAML Accounts With AD/LDAP:',\n                        help_text: t('admin.saml.enableSyncWithLdapDescription'),\n                        help_text_default: 'When true, Mattermost periodically synchronizes SAML user attributes, including user deactivation and removal, from AD/LDAP. Enable and configure synchronization settings at **Authentication > AD/LDAP**. When false, user attributes are updated from SAML during user login. See [documentation](!https://about.mattermost.com/default-saml-ldap-sync) to learn more.',\n                        help_text_markdown: true,\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.EnableSyncWithLdapIncludeAuth',\n                        label: t('admin.saml.enableSyncWithLdapIncludeAuthTitle'),\n                        label_default: 'Override SAML bind data with AD/LDAP information:',\n                        help_text: t('admin.saml.enableSyncWithLdapIncludeAuthDescription'),\n                        help_text_default: 'When true, Mattermost will override the SAML ID attribute with the AD/LDAP ID attribute if configured or override the SAML Email attribute with the AD/LDAP Email attribute if SAML ID attribute is not present.  This will allow you automatically migrate users from Email binding to ID binding to prevent creation of new users when an email address changes for a user. Moving from true to false, will remove the override from happening.\\n \\n**Note:** SAML IDs must match the LDAP IDs to prevent disabling of user accounts.  Please review [documentation](!https://docs.mattermost.com/deployment/sso-saml-ldapsync.html) for more information.',\n                        help_text_markdown: true,\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.EnableSyncWithLdap'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.IdpUrl',\n                        label: t('admin.saml.idpUrlTitle'),\n                        label_default: 'SAML SSO URL:',\n                        help_text: t('admin.saml.idpUrlDesc'),\n                        help_text_default: 'The URL where Mattermost sends a SAML request to start login sequence.',\n                        placeholder: t('admin.saml.idpUrlEx'),\n                        placeholder_default: 'E.g.: \"https://idp.example.org/SAML2/SSO/Login\"',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.IdpDescriptorUrl',\n                        label: t('admin.saml.idpDescriptorUrlTitle'),\n                        label_default: 'Identity Provider Issuer URL:',\n                        help_text: t('admin.saml.idpDescriptorUrlDesc'),\n                        help_text_default: 'The issuer URL for the Identity Provider you use for SAML requests.',\n                        placeholder: t('admin.saml.idpDescriptorUrlEx'),\n                        placeholder_default: 'E.g.: \"https://idp.example.org/SAML2/issuer\"',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_FILE_UPLOAD,\n                        key: 'SamlSettings.IdpCertificateFile',\n                        label: t('admin.saml.idpCertificateFileTitle'),\n                        label_default: 'Identity Provider Public Certificate:',\n                        help_text: t('admin.saml.idpCertificateFileDesc'),\n                        help_text_default: 'The public authentication certificate issued by your Identity Provider.',\n                        remove_help_text: t('admin.saml.idpCertificateFileRemoveDesc'),\n                        remove_help_text_default: 'Remove the public authentication certificate issued by your Identity Provider.',\n                        remove_button_text: t('admin.saml.remove.idp_certificate'),\n                        remove_button_text_default: 'Remove Identity Provider Certificate',\n                        removing_text: t('admin.saml.removing.certificate'),\n                        removing_text_default: 'Removing Certificate...',\n                        uploading_text: t('admin.saml.uploading.certificate'),\n                        uploading_text_default: 'Uploading Certificate...',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                        fileType: '.crt,.cer,.cert,.pem',\n                        upload_action: uploadIdpSamlCertificate,\n                        remove_action: removeIdpSamlCertificate,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.Verify',\n                        label: t('admin.saml.verifyTitle'),\n                        label_default: 'Verify Signature:',\n                        help_text: t('admin.saml.verifyDescription'),\n                        help_text_default: 'When false, Mattermost will not verify that the signature sent from a SAML Response matches the Service Provider Login URL. Not recommended for production environments. For testing only.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.AssertionConsumerServiceURL',\n                        label: t('admin.saml.assertionConsumerServiceURLTitle'),\n                        label_default: 'Service Provider Login URL:',\n                        help_text: t('admin.saml.assertionConsumerServiceURLPopulatedDesc'),\n                        help_text_default: 'This field is also known as the Assertion Consumer Service URL.',\n                        placeholder: t('admin.saml.assertionConsumerServiceURLEx'),\n                        placeholder_default: 'E.g.: \"https://<your-mattermost-url>/login/sso/saml\"',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.Verify'),\n                        ),\n                        onConfigLoad: (value, config) => {\n                            const siteUrl = config.ServiceSettings.SiteURL;\n                            if (siteUrl.length > 0 && value.length === 0) {\n                                const addSlashIfNeeded = siteUrl[siteUrl.length - 1] === '/' ? '' : '/';\n                                return `${siteUrl}${addSlashIfNeeded}login/sso/saml`;\n                            }\n                            return value;\n                        },\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.Encrypt',\n                        label: t('admin.saml.encryptTitle'),\n                        label_default: 'Enable Encryption:',\n                        help_text: t('admin.saml.encryptDescription'),\n                        help_text_default: 'When false, Mattermost will not decrypt SAML Assertions encrypted with your Service Provider Public Certificate. Not recommended for production environments. For testing only.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_FILE_UPLOAD,\n                        key: 'SamlSettings.PrivateKeyFile',\n                        label: t('admin.saml.privateKeyFileTitle'),\n                        label_default: 'Service Provider Private Key:',\n                        help_text: t('admin.saml.privateKeyFileFileDesc'),\n                        help_text_default: 'The private key used to decrypt SAML Assertions from the Identity Provider.',\n                        remove_help_text: t('admin.saml.privateKeyFileFileRemoveDesc'),\n                        remove_help_text_default: 'Remove the private key used to decrypt SAML Assertions from the Identity Provider.',\n                        remove_button_text: t('admin.saml.remove.privKey'),\n                        remove_button_text_default: 'Remove Service Provider Private Key',\n                        removing_text: t('admin.saml.removing.privKey'),\n                        removing_text_default: 'Removing Private Key...',\n                        uploading_text: t('admin.saml.uploading.privateKey'),\n                        uploading_text_default: 'Uploading Private Key...',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                        ),\n                        fileType: '.key',\n                        upload_action: uploadPrivateSamlCertificate,\n                        remove_action: removePrivateSamlCertificate,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_FILE_UPLOAD,\n                        key: 'SamlSettings.PublicCertificateFile',\n                        label: t('admin.saml.publicCertificateFileTitle'),\n                        label_default: 'Service Provider Public Certificate:',\n                        help_text: t('admin.saml.publicCertificateFileDesc'),\n                        help_text_default: 'The certificate used to generate the signature on a SAML request to the Identity Provider for a service provider initiated SAML login, when Mattermost is the Service Provider.',\n                        remove_help_text: t('admin.saml.publicCertificateFileRemoveDesc'),\n                        remove_help_text_default: 'Remove the certificate used to generate the signature on a SAML request to the Identity Provider for a service provider initiated SAML login, when Mattermost is the Service Provider.',\n                        remove_button_text: t('admin.saml.remove.sp_certificate'),\n                        remove_button_text_default: 'Remove Service Provider Certificate',\n                        removing_text: t('admin.saml.removing.certificate'),\n                        removing_text_default: 'Removing Certificate...',\n                        uploading_text: t('admin.saml.uploading.certificate'),\n                        uploading_text_default: 'Uploading Certificate...',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                        ),\n                        fileType: '.crt,.cer',\n                        upload_action: uploadPublicSamlCertificate,\n                        remove_action: removePublicSamlCertificate,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.SignRequest',\n                        label: t('admin.saml.signRequestTitle'),\n                        label_default: 'Sign Request:',\n                        help_text: t('admin.saml.signRequestDescription'),\n                        help_text_default: 'When true, Mattermost will sign the SAML request using your private key. When false, Mattermost will not sign the SAML request.',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                            it.stateIsFalse('SamlSettings.PrivateKeyFile'),\n                            it.stateIsFalse('SamlSettings.PublicCertificateFile')\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.EmailAttribute',\n                        label: t('admin.saml.emailAttrTitle'),\n                        label_default: 'Email Attribute:',\n                        placeholder: t('admin.saml.emailAttrEx'),\n                        placeholder_default: 'E.g.: \"Email\" or \"PrimaryEmail\"',\n                        help_text: t('admin.saml.emailAttrDesc'),\n                        help_text_default: 'The attribute in the SAML Assertion that will be used to populate the email addresses of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.UsernameAttribute',\n                        label: t('admin.saml.usernameAttrTitle'),\n                        label_default: 'Username Attribute:',\n                        placeholder: t('admin.saml.usernameAttrEx'),\n                        placeholder_default: 'E.g.: \"Username\"',\n                        help_text: t('admin.saml.usernameAttrDesc'),\n                        help_text_default: 'The attribute in the SAML Assertion that will be used to populate the username field in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.IdAttribute',\n                        label: t('admin.saml.idAttrTitle'),\n                        label_default: 'Id Attribute:',\n                        placeholder: t('admin.saml.idAttrEx'),\n                        placeholder_default: 'E.g.: \"Id\"',\n                        help_text: t('admin.saml.idAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to bind users from SAML to users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.FirstNameAttribute',\n                        label: t('admin.saml.firstnameAttrTitle'),\n                        label_default: 'First Name Attribute:',\n                        placeholder: t('admin.saml.firstnameAttrEx'),\n                        placeholder_default: 'E.g.: \"FirstName\"',\n                        help_text: t('admin.saml.firstnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the first name of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LastNameAttribute',\n                        label: t('admin.saml.lastnameAttrTitle'),\n                        label_default: 'Last Name Attribute:',\n                        placeholder: t('admin.saml.lastnameAttrEx'),\n                        placeholder_default: 'E.g.: \"LastName\"',\n                        help_text: t('admin.saml.lastnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the last name of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.NicknameAttribute',\n                        label: t('admin.saml.nicknameAttrTitle'),\n                        label_default: 'Nickname Attribute:',\n                        placeholder: t('admin.saml.nicknameAttrEx'),\n                        placeholder_default: 'E.g.: \"Nickname\"',\n                        help_text: t('admin.saml.nicknameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the nickname of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.PositionAttribute',\n                        label: t('admin.saml.positionAttrTitle'),\n                        label_default: 'Position Attribute:',\n                        placeholder: t('admin.saml.positionAttrEx'),\n                        placeholder_default: 'E.g.: \"Role\"',\n                        help_text: t('admin.saml.positionAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the position of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LocaleAttribute',\n                        label: t('admin.saml.localeAttrTitle'),\n                        label_default: 'Preferred Language Attribute:',\n                        placeholder: t('admin.saml.localeAttrEx'),\n                        placeholder_default: 'E.g.: \"Locale\" or \"PrimaryLanguage\"',\n                        help_text: t('admin.saml.localeAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the language of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LoginButtonText',\n                        label: t('admin.saml.loginButtonTextTitle'),\n                        label_default: 'Login Button Text:',\n                        placeholder: t('admin.saml.loginButtonTextEx'),\n                        placeholder_default: 'E.g.: \"OKTA\"',\n                        help_text: t('admin.saml.loginButtonTextDesc'),\n                        help_text_default: '(Optional) The text that appears in the login button on the login page. Defaults to \"SAML\".',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                ],\n            },\n        },\n        gitlab: {\n            url: 'authentication/gitlab',\n            title: t('admin.sidebar.gitlab'),\n            title_default: 'GitLab',\n            isHidden: it.licensed,\n            schema: {\n                id: 'GitLabSettings',\n                name: t('admin.authentication.gitlab'),\n                name_default: 'GitLab',\n                onConfigLoad: (config) => {\n                    const newState = {};\n                    newState['GitLabSettings.Url'] = config.GitLabSettings.UserApiEndpoint.replace('/api/v4/user', '');\n                    return newState;\n                },\n                onConfigSave: (config) => {\n                    const newConfig = {...config};\n                    newConfig.GitLabSettings.UserApiEndpoint = config.GitLabSettings.Url.replace(/\\/$/, '') + '/api/v4/user';\n                    return newConfig;\n                },\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'GitLabSettings.Enable',\n                        label: t('admin.gitlab.enableTitle'),\n                        label_default: 'Enable authentication with GitLab: ',\n                        help_text: t('admin.gitlab.enableDescription'),\n                        help_text_default: 'When true, Mattermost allows team creation and account signup using GitLab OAuth.\\n \\n1. Log in to your GitLab account and go to Profile Settings -> Applications.\\n2. Enter Redirect URIs \"<your-mattermost-url>/login/gitlab/complete\" (example: http://localhost:8065/login/gitlab/complete) and \"<your-mattermost-url>/signup/gitlab/complete\".\\n3. Then use \"Application Secret Key\" and \"Application ID\" fields from GitLab to complete the options below.\\n4. Complete the Endpoint URLs below.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Id',\n                        label: t('admin.gitlab.clientIdTitle'),\n                        label_default: 'Application ID:',\n                        help_text: t('admin.gitlab.clientIdDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientIdExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isDisabled: it.stateIsFalse('GitLabSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Secret',\n                        label: t('admin.gitlab.clientSecretTitle'),\n                        label_default: 'Application Secret Key:',\n                        help_text: t('admin.gitlab.clientSecretDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isDisabled: it.stateIsFalse('GitLabSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Url',\n                        label: t('admin.gitlab.siteUrl'),\n                        label_default: 'GitLab Site URL:',\n                        help_text: t('admin.gitlab.siteUrlDescription'),\n                        help_text_default: 'Enter the URL of your GitLab instance, e.g. https://example.com:3000. If your GitLab instance is not set up with SSL, start the URL with http:// instead of https://.',\n                        placeholder: t('admin.gitlab.siteUrlExample'),\n                        placeholder_default: 'E.g.: https://',\n                        isDisabled: it.stateIsFalse('GitLabSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.UserApiEndpoint',\n                        label: t('admin.gitlab.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/api/v4/user';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.AuthEndpoint',\n                        label: t('admin.gitlab.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/authorize';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.TokenEndpoint',\n                        label: t('admin.gitlab.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/token';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                    },\n                ],\n            },\n        },\n        oauth: {\n            url: 'authentication/oauth',\n            title: t('admin.sidebar.oauth'),\n            title_default: 'OAuth 2.0',\n            isHidden: it.isnt(it.licensed),\n            schema: {\n                id: 'OAuthSettings',\n                name: t('admin.authentication.oauth'),\n                name_default: 'OAuth 2.0',\n                onConfigLoad: (config) => {\n                    const newState = {};\n                    if (config.GitLabSettings && config.GitLabSettings.Enable) {\n                        newState.oauthType = Constants.GITLAB_SERVICE;\n                    }\n                    if (config.Office365Settings && config.Office365Settings.Enable) {\n                        newState.oauthType = Constants.OFFICE365_SERVICE;\n                    }\n                    if (config.GoogleSettings && config.GoogleSettings.Enable) {\n                        newState.oauthType = Constants.GOOGLE_SERVICE;\n                    }\n\n                    newState['GitLabSettings.Url'] = config.GitLabSettings.UserApiEndpoint.replace('/api/v4/user', '');\n\n                    return newState;\n                },\n                onConfigSave: (config) => {\n                    const newConfig = {...config};\n                    newConfig.GitLabSettings = config.GitLabSettings || {};\n                    newConfig.Office365Settings = config.Office365Settings || {};\n                    newConfig.GoogleSettings = config.GoogleSettings || {};\n\n                    newConfig.GitLabSettings.Enable = false;\n                    newConfig.Office365Settings.Enable = false;\n                    newConfig.GoogleSettings.Enable = false;\n                    newConfig.GitLabSettings.UserApiEndpoint = config.GitLabSettings.Url.replace(/\\/$/, '') + '/api/v4/user';\n\n                    if (config.oauthType === Constants.GITLAB_SERVICE) {\n                        newConfig.GitLabSettings.Enable = true;\n                    }\n                    if (config.oauthType === Constants.OFFICE365_SERVICE) {\n                        newConfig.Office365Settings.Enable = true;\n                    }\n                    if (config.oauthType === Constants.GOOGLE_SERVICE) {\n                        newConfig.GoogleSettings.Enable = true;\n                    }\n                    delete newConfig.oauthType;\n                    return newConfig;\n                },\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'oauthType',\n                        label: t('admin.oauth.select'),\n                        label_default: 'Select OAuth 2.0 Service Provider:',\n                        options: [\n                            {\n                                value: 'off',\n                                display_name: t('admin.oauth.off'),\n                                display_name_default: 'Do not allow sign-in via an OAuth 2.0 provider.',\n                            },\n                            {\n                                value: Constants.GITLAB_SERVICE,\n                                display_name: t('admin.oauth.gitlab'),\n                                display_name_default: 'GitLab',\n                                help_text: t('admin.gitlab.EnableMarkdownDesc'),\n                                help_text_default: '1. Log in to your GitLab account and go to Profile Settings -> Applications.\\n2. Enter Redirect URIs \"<your-mattermost-url>/login/gitlab/complete\" (example: http://localhost:8065/login/gitlab/complete) and \"<your-mattermost-url>/signup/gitlab/complete\".\\n3. Then use \"Application Secret Key\" and \"Application ID\" fields from GitLab to complete the options below.\\n4. Complete the Endpoint URLs below.',\n                                help_text_markdown: true,\n                            },\n                            {\n                                value: Constants.GOOGLE_SERVICE,\n                                display_name: t('admin.oauth.google'),\n                                display_name_default: 'Google Apps',\n                                isHidden: it.isnt(it.licensedForFeature('GoogleOAuth')),\n                                help_text: t('admin.google.EnableMarkdownDesc'),\n                                help_text_default: '1. [Log in](!https://accounts.google.com/login) to your Google account.\\n2. Go to [https://console.developers.google.com](!https://console.developers.google.com), click **Credentials** in the left hand sidebar and enter \"aboutone - your-company-name\" as the **Project Name**, then click **Create**.\\n3. Click the **OAuth consent screen** header and enter \"Aboutone\" as the **Product name shown to users**, then click **Save**.\\n4. Under the **Credentials** header, click **Create credentials**, choose **OAuth client ID** and select **Web Application**.\\n5. Under **Restrictions** and **Authorized redirect URIs** enter **your-mattermost-url/signup/google/complete** (example: http://localhost:8065/signup/google/complete). Click **Create**.\\n6. Paste the **Client ID** and **Client Secret** to the fields below, then click **Save**.\\n7. Finally, go to [Google+ API](!https://console.developers.google.com/apis/api/plus/overview\") and click *Enable*. This might take a few minutes to propagate through Google`s systems.',\n                                help_text_markdown: true,\n                            },\n                            {\n                                value: Constants.OFFICE365_SERVICE,\n                                display_name: t('admin.oauth.office365'),\n                                display_name_default: 'Office 365 (Beta)',\n                                isHidden: it.isnt(it.licensedForFeature('Office365OAuth')),\n                                help_text: t('admin.office365.EnableMarkdownDesc'),\n                                help_text_default: '1. [Log in](!https://login.microsoftonline.com/) to your Microsoft or Office 365 account. Make sure it`s the account on the same [tenant](!https://msdn.microsoft.com/en-us/library/azure/jj573650.aspx#Anchor_0) that you would like users to log in with.\\n2. Go to [https://apps.dev.microsoft.com](!https://apps.dev.microsoft.com), click **Go to app list** > **Add an app** and use \"aboutone - your-company-name\" as the **Application Name**.\\n3. Under **Application Secrets**, click **Generate New Password** and paste it to the **Application Secret Password** field below.\\n4. Under **Platforms**, click **Add Platform**, choose **Web** and enter **your-mattermost-url/signup/office365/complete** (example: http://localhost:8065/signup/office365/complete) under **Redirect URIs**. Also uncheck **Allow Implicit Flow**.\\n5. Finally, click **Save** and then paste the **Application ID** below.',\n                                help_text_markdown: true,\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Id',\n                        label: t('admin.gitlab.clientIdTitle'),\n                        label_default: 'Application ID:',\n                        help_text: t('admin.gitlab.clientIdDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientIdExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Secret',\n                        label: t('admin.gitlab.clientSecretTitle'),\n                        label_default: 'Application Secret Key:',\n                        help_text: t('admin.gitlab.clientSecretDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Url',\n                        label: t('admin.gitlab.siteUrl'),\n                        label_default: 'GitLab Site URL:',\n                        help_text: t('admin.gitlab.siteUrlDescription'),\n                        help_text_default: 'Enter the URL of your GitLab instance, e.g. https://example.com:3000. If your GitLab instance is not set up with SSL, start the URL with http:// instead of https://.',\n                        placeholder: t('admin.gitlab.siteUrlExample'),\n                        placeholder_default: 'E.g.: https://',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.UserApiEndpoint',\n                        label: t('admin.gitlab.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/api/v4/user';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.AuthEndpoint',\n                        label: t('admin.gitlab.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/authorize';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.TokenEndpoint',\n                        label: t('admin.gitlab.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/token';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.Id',\n                        label: t('admin.google.clientIdTitle'),\n                        label_default: 'Client ID:',\n                        help_text: t('admin.google.clientIdDescription'),\n                        help_text_default: 'The Client ID you received when registering your application with Google.',\n                        placeholder: t('admin.google.clientIdExample'),\n                        placeholder_default: 'E.g.: \"7602141235235-url0fhs1mayfasbmop5qlfns8dh4.apps.googleusercontent.com\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.Secret',\n                        label: t('admin.google.clientSecretTitle'),\n                        label_default: 'Client Secret:',\n                        help_text: t('admin.google.clientSecretDescription'),\n                        help_text_default: 'The Client Secret you received when registering your application with Google.',\n                        placeholder: t('admin.google.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"H8sz0Az-dDs2p15-7QzD231\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.UserApiEndpoint',\n                        label: t('admin.google.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: () => 'https://www.googleapis.com/plus/v1/people/me',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.AuthEndpoint',\n                        label: t('admin.google.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: () => 'https://accounts.google.com/o/oauth2/v2/auth',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.TokenEndpoint',\n                        label: t('admin.google.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: () => 'https://www.googleapis.com/oauth2/v4/token',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.Id',\n                        label: t('admin.office365.clientIdTitle'),\n                        label_default: 'Application ID:',\n                        help_text: t('admin.office365.clientIdDescription'),\n                        help_text_default: 'The Application/Client ID you received when registering your application with Microsoft.',\n                        placeholder: t('admin.office365.clientIdExample'),\n                        placeholder_default: 'E.g.: \"adf3sfa2-ag3f-sn4n-ids0-sh1hdax192qq\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.Secret',\n                        label: t('admin.office365.clientSecretTitle'),\n                        label_default: 'Application Secret Password:',\n                        help_text: t('admin.office365.clientSecretDescription'),\n                        help_text_default: 'The Application Secret Password you generated when registering your application with Microsoft.',\n                        placeholder: t('admin.office365.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"shAieM47sNBfgl20f8ci294\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.UserApiEndpoint',\n                        label: t('admin.office365.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: () => 'https://graph.microsoft.com/v1.0/me',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.AuthEndpoint',\n                        label: t('admin.office365.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: () => 'https://login.microsoftonline.com/common/oauth2/v2.0/authorize',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.TokenEndpoint',\n                        label: t('admin.office365.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: () => 'https://login.microsoftonline.com/common/oauth2/v2.0/token',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                ],\n            },\n        },\n    },\n    plugins: {\n        icon: 'fa-plug',\n        sectionTitle: t('admin.sidebar.plugins'),\n        sectionTitleDefault: 'Plugins (Beta)',\n        id: 'plugins',\n        plugin_management: {\n            url: 'plugins/plugin_management',\n            title: t('admin.plugins.pluginManagement'),\n            title_default: 'Plugin Management',\n            searchableStrings: [\n                'admin.plugin.management.title',\n                'admin.plugins.settings.enable',\n                'admin.plugins.settings.enableDesc',\n                'admin.plugin.uploadTitle',\n                'admin.plugin.installedTitle',\n                'admin.plugin.installedDesc',\n                'admin.plugin.uploadDesc',\n                'admin.plugin.uploadDisabledDesc',\n            ],\n            schema: {\n                id: 'PluginManagementSettings',\n                component: PluginManagement,\n            },\n        },\n        custom: {\n            url: 'plugins/plugin_:plugin_id',\n            schema: {\n                id: 'CustomPluginSettings',\n                component: CustomPluginSettings,\n            },\n        },\n    },\n    integrations: {\n        icon: 'fa-sitemap',\n        sectionTitle: t('admin.sidebar.integrations'),\n        sectionTitleDefault: 'Integrations',\n        id: 'integrations',\n        integration_management: {\n            url: 'integrations/integration_management',\n            title: t('admin.integrations.integrationManagement'),\n            title_default: 'Integration Management',\n            schema: {\n                id: 'CustomIntegrationSettings',\n                name: t('admin.integrations.integrationManagement.title'),\n                name_default: 'Integration Management',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableIncomingWebhooks',\n                        label: t('admin.service.webhooksTitle'),\n                        label_default: 'Enable Incoming Webhooks: ',\n                        help_text: t('admin.service.webhooksDescription'),\n                        help_text_default: 'When true, incoming webhooks will be allowed. To help combat phishing attacks, all posts from webhooks will be labelled by a BOT tag. See [documentation](!http://docs.mattermost.com/developer/webhooks-incoming.html) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableOutgoingWebhooks',\n                        label: t('admin.service.outWebhooksTitle'),\n                        label_default: 'Enable Outgoing Webhooks: ',\n                        help_text: t('admin.service.outWebhooksDesc'),\n                        help_text_default: 'When true, outgoing webhooks will be allowed. See [documentation](!http://docs.mattermost.com/developer/webhooks-outgoing.html) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableCommands',\n                        label: t('admin.service.cmdsTitle'),\n                        label_default: 'Enable Custom Slash Commands: ',\n                        help_text: t('admin.service.cmdsDesc'),\n                        help_text_default: 'When true, custom slash commands will be allowed. See [documentation](!http://docs.mattermost.com/developer/slash-commands.html) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableOAuthServiceProvider',\n                        label: t('admin.oauth.providerTitle'),\n                        label_default: 'Enable OAuth 2.0 Service Provider: ',\n                        help_text: t('admin.oauth.providerDescription'),\n                        help_text_default: 'When true, Mattermost can act as an OAuth 2.0 service provider allowing Mattermost to authorize API requests from external applications. See [documentation](!https://docs.mattermost.com/developer/oauth-2-0-applications.html) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_PERMISSION,\n                        key: 'ServiceSettings.EnableOnlyAdminIntegrations',\n                        label: t('admin.service.integrationAdmin'),\n                        label_default: 'Restrict managing integrations to Admins:',\n                        help_text: t('admin.service.integrationAdminDesc'),\n                        help_text_default: 'When true, webhooks and slash commands can only be created, edited and viewed by Team and System Admins, and OAuth 2.0 applications by System Admins. Integrations are available to all users after they have been created by the Admin.',\n                        permissions_mapping_name: 'enableOnlyAdminIntegrations',\n                        isHidden: it.licensed,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnablePostUsernameOverride',\n                        label: t('admin.service.overrideTitle'),\n                        label_default: 'Enable integrations to override usernames:',\n                        help_text: t('admin.service.overrideDescription'),\n                        help_text_default: 'When true, webhooks, slash commands and other integrations, such as [Zapier](!https://docs.mattermost.com/integrations/zapier.html), will be allowed to change the username they are posting as. Note: Combined with allowing integrations to override profile picture icons, users may be able to perform phishing attacks by attempting to impersonate other users.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnablePostIconOverride',\n                        label: t('admin.service.iconTitle'),\n                        label_default: 'Enable integrations to override profile picture icons:',\n                        help_text: t('admin.service.iconDescription'),\n                        help_text_default: 'When true, webhooks, slash commands and other integrations, such as [Zapier](!https://docs.mattermost.com/integrations/zapier.html), will be allowed to change the profile picture they post with. Note: Combined with allowing integrations to override usernames, users may be able to perform phishing attacks by attempting to impersonate other users.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableUserAccessTokens',\n                        label: t('admin.service.userAccessTokensTitle'),\n                        label_default: 'Enable User Access Tokens: ',\n                        help_text: t('admin.service.userAccessTokensDescription'),\n                        help_text_default: 'When true, users can create [user access tokens](!https://about.mattermost.com/default-user-access-tokens) for integrations in **Account Settings > Security**. They can be used to authenticate against the API and give full access to the account.\\n\\n To manage who can create personal access tokens or to search users by token ID, go to the **User Management > Users** page.',\n                        help_text_markdown: true,\n                    },\n                ],\n            },\n        },\n        bot_accounts: {\n            url: 'integrations/bot_accounts',\n            title: t('admin.integrations.botAccounts'),\n            title_default: 'Bot Accounts',\n            schema: {\n                id: 'BotAccountSettings',\n                name: t('admin.integrations.botAccounts.title'),\n                name_default: 'Bot Accounts',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableBotAccountCreation',\n                        label: t('admin.service.enableBotTitle'),\n                        label_default: 'Enable Bot Account Creation: ',\n                        help_text: t('admin.service.enableBotAccountCreation'),\n                        help_text_default: 'When true, users can create bot accounts for integrations in **Integrations > Bot Accounts**. Bot accounts are similar to user accounts except they cannot be used to log in. See [documentation](https://mattermost.com/pl/default-bot-accounts) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.DisableBotsWhenOwnerIsDeactivated',\n                        label: t('admin.service.disableBotOwnerDeactivatedTitle'),\n                        label_default: 'Disable bot accounts when owner is deactivated:',\n                        help_text: t('admin.service.disableBotWhenOwnerIsDeactivated'),\n                        help_text_default: 'When a user is deactivated, disables all bot accounts managed by the user. To re-enable bot accounts, go to **Integrations > Bot Accounts**.',\n                        help_text_markdown: true,\n                    },\n                ],\n            },\n        },\n        gif: {\n            url: 'integrations/gif',\n            title: t('admin.sidebar.gif'),\n            title_default: 'GIF (Beta)',\n            schema: {\n                id: 'GifSettings',\n                name: t('admin.integrations.gif'),\n                name_default: 'GIF (Beta)',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableGifPicker',\n                        label: t('admin.customization.enableGifPickerTitle'),\n                        label_default: 'Enable GIF Picker:',\n                        help_text: t('admin.customization.enableGifPickerDesc'),\n                        help_text_default: 'Allow users to select GIFs from the emoji picker via a Gfycat integration.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.GfycatApiKey',\n                        label: t('admin.customization.gfycatApiKey'),\n                        label_default: 'Gfycat API Key:',\n                        help_text: t('admin.customization.gfycatApiKeyDescription'),\n                        help_text_default: 'Request an API key at [https://developers.gfycat.com/signup/#](!https://developers.gfycat.com/signup/#). Enter the client ID you receive via email to this field. When blank, uses the default API key provided by Gfycat.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.GfycatApiSecret',\n                        label: t('admin.customization.gfycatApiSecret'),\n                        label_default: 'Gfycat API Secret:',\n                        help_text: t('admin.customization.gfycatApiSecretDescription'),\n                        help_text_default: 'The API secret generated by Gfycat for your API key. When blank, uses the default API secret provided by Gfycat.',\n                    },\n                ],\n            },\n        },\n        cors: {\n            url: 'integrations/cors',\n            title: t('admin.sidebar.cors'),\n            title_default: 'CORS',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'CORS',\n                name: t('admin.integrations.cors'),\n                name_default: 'CORS',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.AllowCorsFrom',\n                        label: t('admin.service.corsTitle'),\n                        label_default: 'Enable cross-origin requests from:',\n                        placeholder: t('admin.service.corsEx'),\n                        placeholder_default: 'http://example.com',\n                        help_text: t('admin.service.corsDescription'),\n                        help_text_default: 'Enable HTTP Cross origin request from a specific domain. Use \"*\" if you want to allow CORS from any domain or leave it blank to disable it. Should not be set to \"*\" in production.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.CorsExposedHeaders',\n                        label: t('admin.service.corsExposedHeadersTitle'),\n                        label_default: 'CORS Exposed Headers:',\n                        placeholder: t('admin.service.corsHeadersEx'),\n                        placeholder_default: 'X-My-Header',\n                        help_text: t('admin.service.corsExposedHeadersDescription'),\n                        help_text_default: 'Whitelist of headers that will be accessible to the requester.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.CorsAllowCredentials',\n                        label: t('admin.service.corsAllowCredentialsLabel'),\n                        label_default: 'CORS Allow Credentials:',\n                        help_text: t('admin.service.corsAllowCredentialsDescription'),\n                        help_text_default: 'When true, requests that pass validation will include the Access-Control-Allow-Credentials header.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.CorsDebug',\n                        label: t('admin.service.CorsDebugLabel'),\n                        label_default: 'CORS Debug:',\n                        help_text: t('admin.service.corsDebugDescription'),\n                        help_text_default: 'When true, prints messages to the logs to help when developing an integration that uses CORS. These messages will include the structured key value pair \"source\":\"cors\".',\n                    },\n                ],\n            },\n        },\n    },\n    compliance: {\n        icon: 'fa-list',\n        sectionTitle: t('admin.sidebar.compliance'),\n        sectionTitleDefault: 'Compliance',\n        data_retention: {\n            url: 'compliance/data_retention',\n            title: t('admin.sidebar.dataRetentionPolicy'),\n            title_default: 'Data Retention Policy',\n            isHidden: it.isnt(it.licensedForFeature('DataRetention')),\n            searchableStrings: [\n                'admin.data_retention.title',\n                'admin.data_retention.messageRetentionDays.description',\n                'admin.data_retention.fileRetentionDays.description',\n                ['admin.data_retention.note.description', {documentationLink: ''}],\n                'admin.data_retention.enableMessageDeletion.title',\n                'admin.data_retention.enableMessageDeletion.description',\n                'admin.data_retention.enableFileDeletion.title',\n                'admin.data_retention.enableFileDeletion.description',\n                'admin.data_retention.deletionJobStartTime.title',\n                'admin.data_retention.deletionJobStartTime.description',\n                'admin.data_retention.createJob.title',\n                'admin.data_retention.createJob.help',\n            ],\n            schema: {\n                id: 'DataRetentionSettings',\n                component: DataRetentionSettings,\n            },\n        },\n        message_export: {\n            url: 'compliance/export',\n            title: t('admin.sidebar.complianceExport'),\n            title_default: 'Compliance Export (Beta)',\n            isHidden: it.isnt(it.licensedForFeature('MessageExport')),\n            searchableStrings: [\n                'admin.service.complianceExportTitle',\n                'admin.service.complianceExportDesc',\n                'admin.complianceExport.exportJobStartTime.title',\n                'admin.complianceExport.exportJobStartTime.description',\n                'admin.complianceExport.exportFormat.title',\n                ['admin.complianceExport.exportFormat.description', {siteURL: ''}],\n                'admin.complianceExport.createJob.title',\n                'admin.complianceExport.createJob.help',\n                'admin.complianceExport.globalRelayCustomerType.title',\n                'admin.complianceExport.globalRelayCustomerType.description',\n                'admin.complianceExport.globalRelaySmtpUsername.title',\n                'admin.complianceExport.globalRelaySmtpUsername.description',\n                'admin.complianceExport.globalRelaySmtpPassword.title',\n                'admin.complianceExport.globalRelaySmtpPassword.description',\n                'admin.complianceExport.globalRelayEmailAddress.title',\n                'admin.complianceExport.globalRelayEmailAddress.description',\n            ],\n            schema: {\n                id: 'MessageExportSettings',\n                component: MessageExportSettings,\n            },\n        },\n        audits: {\n            url: 'compliance/monitoring',\n            title: t('admin.sidebar.complianceMonitoring'),\n            title_default: 'Compliance Monitoring',\n            isHidden: it.isnt(it.licensed),\n            searchableStrings: [\n                'admin.audits.title',\n                'admin.audits.reload',\n            ],\n            schema: {\n                id: 'Audits',\n                name: t('admin.compliance.complianceMonitoring'),\n                name_default: 'Compliance Monitoring',\n                component: Audits,\n                isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.compliance.newComplianceExportBanner'),\n                        label_markdown: true,\n                        label_default: 'This feature is replaced by a new [Compliance Export]({siteURL}/admin_console/compliance/export) feature, and will be removed in a future release. We recommend migrating to the new system.',\n                        label_values: {siteURL: getSiteURL()},\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ComplianceSettings.Enable',\n                        label: t('admin.compliance.enableTitle'),\n                        label_default: 'Enable Compliance Reporting:',\n                        help_text: t('admin.compliance.enableDesc'),\n                        help_text_default: 'When true, Mattermost allows compliance reporting from the **Compliance and Auditing** tab. See [documentation](!https://docs.mattermost.com/administration/compliance.html) to learn more.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ComplianceSettings.Directory',\n                        label: t('admin.compliance.directoryTitle'),\n                        label_default: 'Compliance Report Directory:',\n                        help_text: t('admin.compliance.directoryDescription'),\n                        help_text_default: 'Directory to which compliance reports are written. If blank, will be set to ./data/.',\n                        placeholder: t('admin.compliance.directoryExample'),\n                        placeholder_default: 'E.g.: \"./data/\"',\n                        isDisabled: it.stateIsFalse('ComplianceSettings.Enable'),\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ComplianceSettings.EnableDaily',\n                        label: t('admin.compliance.enableDailyTitle'),\n                        label_default: 'Enable Daily Report:',\n                        help_text: t('admin.compliance.enableDailyDesc'),\n                        help_text_default: 'When true, Mattermost will generate a daily compliance report.',\n                        isDisabled: it.stateIsFalse('ComplianceSettings.Enable'),\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                    },\n                ],\n            },\n        },\n        custom_terms_of_service: {\n            url: 'compliance/custom_terms_of_service',\n            title: t('admin.sidebar.customTermsOfService'),\n            title_default: 'Custom Terms of Service (Beta)',\n            isHidden: it.isnt(it.licensedForFeature('CustomTermsOfService')),\n            searchableStrings: [\n                'admin.support.termsOfServiceTitle',\n                'admin.support.enableTermsOfServiceTitle',\n                'admin.support.enableTermsOfServiceHelp',\n                'admin.support.termsOfServiceTextTitle',\n                'admin.support.termsOfServiceTextHelp',\n                'admin.support.termsOfServiceReAcceptanceTitle',\n                'admin.support.termsOfServiceReAcceptanceHelp',\n            ],\n            schema: {\n                id: 'TermsOfServiceSettings',\n                component: CustomTermsOfServiceSettings,\n            },\n        },\n    },\n    experimental: {\n        icon: 'fa-flask',\n        sectionTitle: t('admin.sidebar.experimental'),\n        sectionTitleDefault: 'Experimental',\n        experimental_features: {\n            url: 'experimental/features',\n            title: t('admin.sidebar.experimentalFeatures'),\n            title_default: 'Features',\n            schema: {\n                id: 'ExperimentalSettings',\n                name: t('admin.experimental.experimentalFeatures'),\n                name_default: 'Experimental Features',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginButtonColor',\n                        label: t('admin.experimental.ldapSettingsLoginButtonColor.title'),\n                        label_default: 'AD/LDAP Login Button Color:',\n                        help_text: t('admin.experimental.ldapSettingsLoginButtonColor.desc'),\n                        help_text_default: 'Specify the color of the AD/LDAP login button for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('LDAP')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginButtonBorderColor',\n                        label: t('admin.experimental.ldapSettingsLoginButtonBorderColor.title'),\n                        label_default: 'AD/LDAP Login Button Border Color:',\n                        help_text: t('admin.experimental.ldapSettingsLoginButtonBorderColor.desc'),\n                        help_text_default: 'Specify the color of the AD/LDAP login button border for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('LDAP')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginButtonTextColor',\n                        label: t('admin.experimental.ldapSettingsLoginButtonTextColor.title'),\n                        label_default: 'AD/LDAP Login Button Text Color:',\n                        help_text: t('admin.experimental.ldapSettingsLoginButtonTextColor.desc'),\n                        help_text_default: 'Specify the color of the AD/LDAP login button text for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('LDAP')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalEnableAuthenticationTransfer',\n                        label: t('admin.experimental.experimentalEnableAuthenticationTransfer.title'),\n                        label_default: 'Allow Authentication Transfer:',\n                        help_text: t('admin.experimental.experimentalEnableAuthenticationTransfer.desc'),\n                        help_text_default: 'When true, users can change their sign-in method to any that is enabled on the server, either via Account Settings or the APIs. When false, Users cannot change their sign-in method, regardless of which authentication options are enabled.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensed), // documented as E20 and higher, but only E10 in the code\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.CloseUnusedDirectMessages',\n                        label: t('admin.experimental.closeUnusedDirectMessages.title'),\n                        label_default: 'Autoclose Direct Messages in Sidebar:',\n                        help_text: t('admin.experimental.closeUnusedDirectMessages.desc'),\n                        help_text_default: 'When true, direct message conversations with no activity for 7 days will be hidden from the sidebar. When false, conversations remain in the sidebar until they are manually closed.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ExperimentalSettings.LinkMetadataTimeoutMilliseconds',\n                        label: t('admin.experimental.linkMetadataTimeoutMilliseconds.title'),\n                        label_default: 'Link Metadata Timeout:',\n                        help_text: t('admin.experimental.linkMetadataTimeoutMilliseconds.desc'),\n                        help_text_default: 'The number of milliseconds to wait for metadata from a third-party link. Used with Post Metadata.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.linkMetadataTimeoutMilliseconds.example'),\n                        placeholder_default: 'E.g.: \"5000\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'EmailSettings.EmailBatchingBufferSize',\n                        label: t('admin.experimental.emailBatchingBufferSize.title'),\n                        label_default: 'Email Batching Buffer Size:',\n                        help_text: t('admin.experimental.emailBatchingBufferSize.desc'),\n                        help_text_default: 'Specify the maximum number of notifications batched into a single email.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.emailBatchingBufferSize.example'),\n                        placeholder_default: 'E.g.: \"256\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'EmailSettings.EmailBatchingInterval',\n                        label: t('admin.experimental.emailBatchingInterval.title'),\n                        label_default: 'Email Batching Interval:',\n                        help_text: t('admin.experimental.emailBatchingInterval.desc'),\n                        help_text_default: 'Specify the maximum frequency, in seconds, which the batching job checks for new notifications. Longer batching intervals will increase performance.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.emailBatchingInterval.example'),\n                        placeholder_default: 'E.g.: \"30\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.LoginButtonColor',\n                        label: t('admin.experimental.emailSettingsLoginButtonColor.title'),\n                        label_default: 'Email Login Button Color:',\n                        help_text: t('admin.experimental.emailSettingsLoginButtonColor.desc'),\n                        help_text_default: 'Specify the color of the email login button for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.LoginButtonBorderColor',\n                        label: t('admin.experimental.emailSettingsLoginButtonBorderColor.title'),\n                        label_default: 'Email Login Button Border Color:',\n                        help_text: t('admin.experimental.emailSettingsLoginButtonBorderColor.desc'),\n                        help_text_default: 'Specify the color of the email login button border for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.LoginButtonTextColor',\n                        label: t('admin.experimental.emailSettingsLoginButtonTextColor.title'),\n                        label_default: 'Email Login Button Text Color:',\n                        help_text: t('admin.experimental.emailSettingsLoginButtonTextColor.desc'),\n                        help_text_default: 'Specify the color of the email login button text for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableUserDeactivation',\n                        label: t('admin.experimental.enableUserDeactivation.title'),\n                        label_default: 'Enable Account Deactivation:',\n                        help_text: t('admin.experimental.enableUserDeactivation.desc'),\n                        help_text_default: 'When true, users may deactivate their own account from **Account Settings > Advanced**. If a user deactivates their own account, they will get an email notification confirming they were deactivated. When false, users may not deactivate their own account.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalEnableAutomaticReplies',\n                        label: t('admin.experimental.experimentalEnableAutomaticReplies.title'),\n                        label_default: 'Enable Automatic Replies:',\n                        help_text: t('admin.experimental.experimentalEnableAutomaticReplies.desc'),\n                        help_text_default: 'When true, users can enable Automatic Replies in **Account Settings > Notifications**. Users set a custom message that will be automatically sent in response to Direct Messages. When false, disables the Automatic Direct Message Replies feature and hides it from Account Settings.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableChannelViewedMessages',\n                        label: t('admin.experimental.enableChannelViewedMessages.title'),\n                        label_default: 'Enable Channel Viewed WebSocket Messages:',\n                        help_text: t('admin.experimental.enableChannelViewedMessages.desc'),\n                        help_text_default: 'This setting determines whether `channel_viewed` WebSocket events are sent, which synchronize unread notifications across clients and devices. Disabling the setting in larger deployments may improve server performance.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ExperimentalSettings.ClientSideCertEnable',\n                        label: t('admin.experimental.clientSideCertEnable.title'),\n                        label_default: 'Enable Client-Side Certification:',\n                        help_text: t('admin.experimental.clientSideCertEnable.desc'),\n                        help_text_default: 'Enables client-side certification for your Mattermost server. See [documentation](!https://docs.mattermost.com/deployment/certificate-based-authentication.html) to learn more.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ExperimentalSettings.ClientSideCertCheck',\n                        label: t('admin.experimental.clientSideCertCheck.title'),\n                        label_default: 'Client-Side Certification Login Method:',\n                        help_text: t('admin.experimental.clientSideCertCheck.desc'),\n                        help_text_default: 'When **primary**, after the client side certificate is verified, user’s email is retrieved from the certificate and is used to log in without a password. When **secondary**, after the client side certificate is verified, user’s email is retrieved from the certificate and matched against the one supplied by the user. If they match, the user logs in with regular email/password credentials.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'primary',\n                                display_name: 'primary',\n                                display_name_default: 'primary',\n                            },\n                            {\n                                value: 'secondary',\n                                display_name: 'secondary',\n                                display_name_default: 'secondary',\n                            },\n                        ],\n                        isDisabled: it.stateIsFalse('ExperimentalSettings.ClientSideCertEnable'),\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalEnableDefaultChannelLeaveJoinMessages',\n                        label: t('admin.experimental.experimentalEnableDefaultChannelLeaveJoinMessages.title'),\n                        label_default: 'Enable Default Channel Leave/Join System Messages:',\n                        help_text: t('admin.experimental.experimentalEnableDefaultChannelLeaveJoinMessages.desc'),\n                        help_text_default: 'This setting determines whether team leave/join system messages are posted in the default town-square channel.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalEnableHardenedMode',\n                        label: t('admin.experimental.experimentalEnableHardenedMode.title'),\n                        label_default: 'Enable Hardened Mode:',\n                        help_text: t('admin.experimental.experimentalEnableHardenedMode.desc'),\n                        help_text_default: 'Enables a hardened mode for Mattermost that makes user experience trade-offs in the interest of security. See [documentation](!https://docs.mattermost.com/administration/config-settings.html#enable-hardened-mode-experimental) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalLdapGroupSync',\n                        label: t('admin.experimental.experimentalLdapGroupSync.title'),\n                        label_default: 'Enable AD/LDAP Group Sync:',\n                        help_text: t('admin.experimental.experimentalLdapGroupSync.desc'),\n                        help_text_default: 'When true, enables **AD/LDAP Group Sync** configurable under **User Management > Groups**. See [documentation](!https://mattermost.com/pl/default-ldap-group-sync) to learn more.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensedForFeature('LDAPGroups')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnablePreviewFeatures',\n                        label: t('admin.experimental.enablePreviewFeatures.title'),\n                        label_default: 'Enable Preview Features:',\n                        help_text: t('admin.experimental.enablePreviewFeatures.desc'),\n                        help_text_default: 'When true, preview features can be enabled from **Account Settings > Advanced > Preview pre-release features**. When false, disables and hides preview features from **Account Settings > Advanced > Preview pre-release features**.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ThemeSettings.EnableThemeSelection',\n                        label: t('admin.experimental.enableThemeSelection.title'),\n                        label_default: 'Enable Theme Selection:',\n                        help_text: t('admin.experimental.enableThemeSelection.desc'),\n                        help_text_default: 'Enables the **Display > Theme** tab in Account Settings so users can select their theme.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ThemeSettings.AllowCustomThemes',\n                        label: t('admin.experimental.allowCustomThemes.title'),\n                        label_default: 'Allow Custom Themes:',\n                        help_text: t('admin.experimental.allowCustomThemes.desc'),\n                        help_text_default: 'Enables the **Display > Theme > Custom Theme** section in Account Settings.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                        isDisabled: it.stateIsFalse('ThemeSettings.EnableThemeSelection'),\n                    },\n\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_LIST,\n                    //     key: 'ThemeSettings.AllowedThemes',\n                    //     label: t('admin.experimental.allowedThemes.title'),\n                    //     label_default: 'Allowed Themes:',\n                    //     help_text: t('admin.experimental.allowedThemes.desc'),\n                    //     help_text_default: 'A comma-separated list of themes that can be chosen by users when \"EnableThemeSelection\" is set to true.',\n                    //     help_text_markdown: true,\n                    //     placeholder: t('admin.experimental.allowedThemes.example'),\n                    //     placeholder_default: 'E.g.: \"default, organization, mattermostDark, windows10\"',\n                    //     isHidden: it.isnt(it.licensed), // E10 and higher\n                    //     isDisabled: it.stateIsTrue('ThemeSettings.EnableThemeSelection'),\n                    // },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ThemeSettings.DefaultTheme',\n                        label: t('admin.experimental.defaultTheme.title'),\n                        label_default: 'Default Theme:',\n                        help_text: t('admin.experimental.defaultTheme.desc'),\n                        help_text_default: 'Set a default theme that applies to all new users on the system.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'default',\n                                display_name: 'default',\n                                display_name_default: 'default',\n                            },\n                            {\n                                value: 'organization',\n                                display_name: 'organization',\n                                display_name_default: 'organization',\n                            },\n                            {\n                                value: 'mattermostDark',\n                                display_name: 'mattermostDark',\n                                display_name_default: 'mattermostDark',\n                            },\n                            {\n                                value: 'windows10',\n                                display_name: 'windows10',\n                                display_name_default: 'windows10',\n                            },\n                        ],\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableTutorial',\n                        label: t('admin.experimental.enableTutorial.title'),\n                        label_default: 'Enable Tutorial:',\n                        help_text: t('admin.experimental.enableTutorial.desc'),\n                        help_text_default: 'When true, users are prompted with a tutorial when they open Mattermost for the first time after account creation. When false, the tutorial is disabled, and users are placed in Town Square when they open Mattermost for the first time after account creation.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableUserTypingMessages',\n                        label: t('admin.experimental.enableUserTypingMessages.title'),\n                        label_default: 'Enable User Typing Messages:',\n                        help_text: t('admin.experimental.enableUserTypingMessages.desc'),\n                        help_text_default: 'This setting determines whether \"user is typing...\" messages are displayed below the message box. Disabling the setting in larger deployments may improve server performance.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.TimeBetweenUserTypingUpdatesMilliseconds',\n                        label: t('admin.experimental.timeBetweenUserTypingUpdatesMilliseconds.title'),\n                        label_default: 'User Typing Timeout:',\n                        help_text: t('admin.experimental.timeBetweenUserTypingUpdatesMilliseconds.desc'),\n                        help_text_default: 'The number of milliseconds to wait between emitting user typing websocket events.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.timeBetweenUserTypingUpdatesMilliseconds.example'),\n                        placeholder_default: 'E.g.: \"5000\"',\n                        isDisabled: it.stateIsFalse('ServiceSettings.EnableUserTypingMessages'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableXToLeaveChannelsFromLHS',\n                        label: t('admin.experimental.enableXToLeaveChannelsFromLHS.title'),\n                        label_default: 'Enable X to Leave Channels from Left-Hand Sidebar:',\n                        help_text: t('admin.experimental.enableXToLeaveChannelsFromLHS.desc'),\n                        help_text_default: 'When true, users can leave Public and Private Channels by clicking the “x” beside the channel name. When false, users must use the **Leave Channel** option from the channel menu to leave channels.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.ExperimentalPrimaryTeam',\n                        label: t('admin.experimental.experimentalPrimaryTeam.title'),\n                        label_default: 'Primary Team:',\n                        help_text: t('admin.experimental.experimentalPrimaryTeam.desc'),\n                        help_text_default: 'The primary team of which users on the server are members. When a primary team is set, the options to join other teams or leave the primary team are disabled.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.experimental.experimentalPrimaryTeam.example'),\n                        placeholder_default: 'E.g.: \"teamname\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LoginButtonColor',\n                        label: t('admin.experimental.samlSettingsLoginButtonColor.title'),\n                        label_default: 'SAML Login Button Color:',\n                        help_text: t('admin.experimental.samlSettingsLoginButtonColor.desc'),\n                        help_text_default: 'Specify the color of the SAML login button for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LoginButtonBorderColor',\n                        label: t('admin.experimental.samlSettingsLoginButtonBorderColor.title'),\n                        label_default: 'SAML Login Button Border Color:',\n                        help_text: t('admin.experimental.samlSettingsLoginButtonBorderColor.desc'),\n                        help_text_default: 'Specify the color of the SAML login button border for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LoginButtonTextColor',\n                        label: t('admin.experimental.samlSettingsLoginButtonTextColor.title'),\n                        label_default: 'SAML Login Button Text Color:',\n                        help_text: t('admin.experimental.samlSettingsLoginButtonTextColor.desc'),\n                        help_text_default: 'Specify the color of the SAML login button text for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalChannelOrganization',\n                        label: t('admin.experimental.experimentalChannelOrganization.title'),\n                        label_default: 'Sidebar Organization:',\n                        help_text: t('admin.experimental.experimentalChannelOrganization.desc'),\n                        help_text_default: 'Enables channel sidebar organization options in **Account Settings > Sidebar > Channel grouping and sorting** including options for grouping unread channels, sorting channels by most recent post and combining all channel types into a single list.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'DisplaySettings.ExperimentalTimezone',\n                        label: t('admin.experimental.experimentalTimezone.title'),\n                        label_default: 'Timezone:',\n                        help_text: t('admin.experimental.experimentalTimezone.desc'),\n                        help_text_default: 'Select the timezone used for timestamps in the user interface and email notifications. When true, the Timezone setting is visible in the Account Settings and a time zone is automatically assigned in the next active session. When false, the Timezone setting is hidden in the Account Settings.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalHideTownSquareinLHS',\n                        label: t('admin.experimental.experimentalHideTownSquareinLHS.title'),\n                        label_default: 'Town Square is Hidden in Left-Hand Sidebar:',\n                        help_text: t('admin.experimental.experimentalHideTownSquareinLHS.desc'),\n                        help_text_default: 'When true, hides Town Square in the left-hand sidebar if there are no unread messages in the channel. When false, Town Square is always visible in the left-hand sidebar even if all messages have been read.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalTownSquareIsReadOnly',\n                        label: t('admin.experimental.experimentalTownSquareIsReadOnly.title'),\n                        label_default: 'Town Square is Read-Only:',\n                        help_text: t('admin.experimental.experimentalTownSquareIsReadOnly.desc'),\n                        help_text_default: 'When true, only System Admins can post in Town Square. Other members are not able to post, reply, upload files, emoji react or pin messages to Town Square, nor are they able to change the channel name, header or purpose. When false, anyone can post in Town Square.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.UseChannelInEmailNotifications',\n                        label: t('admin.experimental.useChannelInEmailNotifications.title'),\n                        label_default: 'Use Channel Name in Email Notifications:',\n                        help_text: t('admin.experimental.useChannelInEmailNotifications.desc'),\n                        help_text_default: 'When true, channel and team name appears in email notification subject lines. Useful for servers using only one team. When false, only team name appears in email notification subject line.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'TeamSettings.UserStatusAwayTimeout',\n                        label: t('admin.experimental.userStatusAwayTimeout.title'),\n                        label_default: 'User Status Away Timeout:',\n                        help_text: t('admin.experimental.userStatusAwayTimeout.desc'),\n                        help_text_default: 'This setting defines the number of seconds after which the user’s status indicator changes to \"Away\", when they are away from Mattermost.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.userStatusAwayTimeout.example'),\n                        placeholder_default: 'E.g.: \"300\"',\n                    }, // eslint-disable-next-line lines-around-comment\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_BOOL,\n                    //     key: 'ServiceSettings.ExperimentalStrictCSRFEnforcement',\n                    //     label: t('admin.experimental.experimentalStrictCSRFEnforcement.title'),\n                    //     label_default: 'TODO:',\n                    //     help_text: t('admin.experimental.experimentalStrictCSRFEnforcement.desc'),\n                    //     help_text_default: 'TODO',\n                    //     help_text_markdown: false,\n                    // },\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_LIST,\n                    //     key: 'TeamSettings.ExperimentalDefaultChannels',\n                    //     label: t('admin.experimental.experimentalDefaultChannels.title'),\n                    //     label_default: 'Default Channels:',\n                    //     help_text: t('admin.experimental.experimentalDefaultChannels.desc'),\n                    //     help_text_default: 'A comma-separated list of default channels every user is added to automatically after joining a new team. Only applies to public channels, but affects all teams on the server. When not set, every user is added to `off-topic` and `town-square` channel by default. Note that even if `town-square` is not listed, every user is added to that channel after joining a new team.',\n                    //     help_text_markdown: true,\n                    //     placeholder: t('admin.experimental.experimentalDefaultChannels.example'),\n                    //     placeholder_default: 'E.g.: \"channel1, channel2, off-topic\"',\n                    // },\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_TEXT,\n                    //     key: 'EmailSettings.ReplyToAddress',\n                    //     label: t('admin.experimental.replyToAddress.title'),\n                    //     label_default: 'Reply To Address:',\n                    //     help_text: t('admin.experimental.replyToAddress.desc'),\n                    //     help_text_default: 'TODO',\n                    //     help_text_markdown: true,\n                    //     placeholder: t('admin.experimental.replyToAddress.example'),\n                    //     placeholder_default: 'E.g.: \"reply-to@example.com\"',\n                    // },\n                ],\n            },\n        },\n    },\n    download: {\n        icon: 'fa-info-circle',\n        sectionTitle: t('admin.sidebar.download'),\n        sectionTitleDefault: 'Download',\n        license: {\n            url: 'down/license',\n            title: t('admin.sidebar.download'),\n            title_default: 'Download',\n            isHidden: false,\n            //搜索关键字配置\n            searchableStrings: [\n                'admin.sidebar.download',],\n            schema: {\n                id: 'AdminDownload',\n                component: AdminDownload,\n            },\n        },\n    },\n};\n\nt('admin.field_names.allowBannerDismissal');\nt('admin.field_names.bannerColor');\nt('admin.field_names.bannerText');\nt('admin.field_names.bannerTextColor');\nt('admin.field_names.enableBanner');\nt('admin.field_names.enableCommands');\nt('admin.field_names.enableConfirmNotificationsToChannel');\nt('admin.field_names.enableIncomingWebhooks');\nt('admin.field_names.enableOAuthServiceProvider');\nt('admin.field_names.enableOutgoingWebhooks');\nt('admin.field_names.enablePostIconOverride');\nt('admin.field_names.enablePostUsernameOverride');\nt('admin.field_names.enableUserAccessTokens');\nt('admin.field_names.enableUserCreation');\nt('admin.field_names.maxChannelsPerTeam');\nt('admin.field_names.maxNotificationsPerChannel');\nt('admin.field_names.maxUsersPerTeam');\nt('admin.field_names.postEditTimeLimit');\nt('admin.field_names.restrictCreationToDomains');\nt('admin.field_names.restrictDirectMessage');\nt('admin.field_names.teammateNameDisplay');\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport FlexSearch from 'flexsearch/dist/flexsearch.es5';\r\n\r\nimport AdminDefinition from 'components/admin_console/admin_definition.jsx';\r\n\r\nfunction extractTextsFromSection(section, intl) {\r\n    const texts = [];\r\n    if (section.title) {\r\n        texts.push(intl.formatMessage({id: section.title, defaultMessage: section.title_default}));\r\n    }\r\n    if (section.schema && section.schema.name) {\r\n        texts.push(section.schema.name);\r\n    }\r\n    if (section.searchableStrings) {\r\n        for (const searchableString of section.searchableStrings) {\r\n            if (typeof searchableString === 'string') {\r\n                texts.push(intl.formatMessage({id: searchableString, defaultMessage: searchableString}));\r\n            } else {\r\n                texts.push(intl.formatMessage({id: searchableString[0], defaultMessage: ''}, searchableString[1]));\r\n            }\r\n        }\r\n    }\r\n\r\n    if (section.schema && section.schema.settings) {\r\n        for (const setting of Object.values(section.schema.settings)) {\r\n            if (setting.label) {\r\n                texts.push(intl.formatMessage({id: setting.label, defaultMessage: setting.label_default}, setting.label_values));\r\n            }\r\n            if (setting.help_text && typeof setting.help_text === 'string') {\r\n                texts.push(intl.formatMessage({id: setting.help_text, defaultMessage: setting.help_text_default}, setting.help_text_values));\r\n            }\r\n            if (setting.remove_help_text) {\r\n                texts.push(intl.formatMessage({id: setting.remove_help_text, defaultMessage: setting.remove_help_text_default}));\r\n            }\r\n            if (setting.remove_button_text) {\r\n                texts.push(intl.formatMessage({id: setting.remove_button_text, defaultMessage: setting.remove_button_text_default}));\r\n            }\r\n        }\r\n    }\r\n    return texts;\r\n}\r\n\r\nexport function adminDefinitionsToUrlsAndTexts(adminDefinition, intl) {\r\n    const entries = {};\r\n    for (const item of Object.values(adminDefinition.about)) {\r\n        entries[item.url] = extractTextsFromSection(item, intl);\r\n    }\r\n    for (const item of Object.values(adminDefinition.reporting)) {\r\n        entries[item.url] = extractTextsFromSection(item, intl);\r\n    }\r\n    for (const item of Object.values(adminDefinition.user_management)) {\r\n        entries[item.url] = extractTextsFromSection(item, intl);\r\n    }\r\n    for (const item of Object.values(adminDefinition.environment)) {\r\n        entries[item.url] = extractTextsFromSection(item, intl);\r\n    }\r\n    for (const item of Object.values(adminDefinition.site)) {\r\n        entries[item.url] = extractTextsFromSection(item, intl);\r\n    }\r\n    for (const item of Object.values(adminDefinition.authentication)) {\r\n        entries[item.url] = extractTextsFromSection(item, intl);\r\n    }\r\n    for (const item of Object.values(adminDefinition.plugins)) {\r\n        entries[item.url] = extractTextsFromSection(item, intl);\r\n    }\r\n    for (const item of Object.values(adminDefinition.integrations)) {\r\n        entries[item.url] = extractTextsFromSection(item, intl);\r\n    }\r\n    for (const item of Object.values(adminDefinition.compliance)) {\r\n        entries[item.url] = extractTextsFromSection(item, intl);\r\n    }\r\n    for (const item of Object.values(adminDefinition.experimental)) {\r\n        entries[item.url] = extractTextsFromSection(item, intl);\r\n    }\r\n    return entries;\r\n}\r\n\r\nexport function generateIndex(intl) {\r\n    const idx = new FlexSearch();\r\n    const mappingSectionsToTexts = adminDefinitionsToUrlsAndTexts(AdminDefinition, intl);\r\n    for (const key of Object.keys(mappingSectionsToTexts)) {\r\n        let text = '';\r\n        for (const str of mappingSectionsToTexts[key]) {\r\n            text += ' ' + str;\r\n        }\r\n        idx.add(key, text);\r\n    }\r\n    return idx;\r\n}\r\n\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {NavLink, Route} from 'react-router-dom';\r\n\r\nexport default class AdminSidebarCategory extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            name: PropTypes.string,\r\n            title: PropTypes.node.isRequired,\r\n            icon: PropTypes.string.isRequired,\r\n            sectionClass: PropTypes.string,\r\n            parentLink: PropTypes.string,\r\n            children: PropTypes.node,\r\n            action: PropTypes.node,\r\n        };\r\n    }\r\n\r\n    static get defaultProps() {\r\n        return {\r\n            parentLink: '',\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let link = this.props.parentLink;\r\n        let title = (\r\n            <div className='category-title category-title--active'>\r\n                <i className={'category-icon fa ' + this.props.icon}/>\r\n                <span className='category-title__text'>\r\n                    {this.props.title}\r\n                </span>\r\n                {this.props.action}\r\n            </div>\r\n        );\r\n\r\n        if (this.props.name) {\r\n            link += '/' + name;\r\n            title = (\r\n                <NavLink\r\n                    to={link}\r\n                    className='category-title'\r\n                    activeClassName='category-title category-title--active'\r\n                >\r\n                    {title}\r\n                </NavLink>\r\n            );\r\n        }\r\n\r\n        let clonedChildren = null;\r\n        if (this.props.children) {\r\n            clonedChildren = (\r\n                <Route\r\n                    path={link}\r\n                    render={() => (\r\n                        <ul className={'sections ' + this.props.sectionClass}>\r\n                            {\r\n                                React.Children.map(this.props.children, (child) => {\r\n                                    if (child === null) {\r\n                                        return null;\r\n                                    }\r\n\r\n                                    return React.cloneElement(child, {\r\n                                        parentLink: link,\r\n                                    });\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    )}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <li className='sidebar-category'>\r\n                {title}\r\n                {clonedChildren}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BlockableLink from 'components/admin_console/blockable_link';\r\nimport menuItem from 'components/widgets/menu/menu_items/menu_item';\r\n\r\nexport const MenuItemBlockableLinkImpl = ({to, text}) => <BlockableLink to={to}>{text}</BlockableLink>;\r\nMenuItemBlockableLinkImpl.propTypes = {\r\n    to: PropTypes.string.isRequired,\r\n    text: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\r\n};\r\n\r\nconst MenuItemBlockableLink = menuItem(MenuItemBlockableLinkImpl);\r\nMenuItemBlockableLink.displayName = 'MenuItemBlockableLinkImpl';\r\n\r\nexport default MenuItemBlockableLink;\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage, intlShape} from 'react-intl';\r\n\r\nimport * as GlobalActions from 'actions/global_actions.jsx';\r\n\r\nimport {filterAndSortTeamsByDisplayName} from 'utils/team_utils.jsx';\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport {ModalIdentifiers} from 'utils/constants.jsx';\r\n\r\nimport AboutBuildModal from 'components/about_build_modal';\r\n\r\nimport Menu from 'components/widgets/menu/menu';\r\nimport MenuGroup from 'components/widgets/menu/menu_group';\r\nimport MenuItemAction from 'components/widgets/menu/menu_items/menu_item_action';\r\nimport MenuItemExternalLink from 'components/widgets/menu/menu_items/menu_item_external_link';\r\nimport MenuItemToggleModalRedux from 'components/widgets/menu/menu_items/menu_item_toggle_modal_redux';\r\nimport MenuItemBlockableLink from 'components/widgets/menu/menu_items/menu_item_blockable_link';\r\n\r\nexport default class AdminNavbarDropdown extends React.Component {\r\n    static propTypes = {\r\n        locale: PropTypes.string.isRequired,\r\n        siteName: PropTypes.string,\r\n        navigationBlocked: PropTypes.bool,\r\n        teams: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n        actions: PropTypes.shape({\r\n            deferNavigation: PropTypes.func,\r\n        }).isRequired,\r\n    }\r\n\r\n    static contextTypes = {\r\n        intl: intlShape.isRequired,\r\n    };\r\n\r\n    handleLogout = (e) => {\r\n        if (this.props.navigationBlocked) {\r\n            e.preventDefault();\r\n            this.props.actions.deferNavigation(GlobalActions.emitUserLoggedOutEvent);\r\n        } else {\r\n            GlobalActions.emitUserLoggedOutEvent();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {locale, teams, siteName} = this.props;\r\n        const {formatMessage} = this.context.intl;\r\n        const teamToRender = []; // Array of team components\r\n        let switchTeams;\r\n\r\n        if (teams && teams.length > 0) {\r\n            const teamsArray = filterAndSortTeamsByDisplayName(teams, locale);\r\n\r\n            for (const team of teamsArray) {\r\n                teamToRender.push(\r\n                    <MenuItemBlockableLink\r\n                        key={'team_' + team.name}\r\n                        to={'/' + team.name}\r\n                        text={Utils.localizeMessage('navbar_dropdown.switchTo', 'Switch to ') + ' ' + team.display_name}\r\n                    />\r\n                );\r\n            }\r\n        } else {\r\n            switchTeams = (\r\n                <MenuItemBlockableLink\r\n                    to={'/select_team'}\r\n                    icon={\r\n                        <FormattedMessage\r\n                            id='select_team.icon'\r\n                            defaultMessage='Select Team Icon'\r\n                        >\r\n                            {(title) => (\r\n                                <i\r\n                                    className='fa fa-exchange'\r\n                                    title={title}\r\n                                />\r\n                            )}\r\n                        </FormattedMessage>\r\n                    }\r\n                    text={Utils.localizeMessage('admin.nav.switch', 'Team Selection')}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Menu ariaLabel={Utils.localizeMessage('admin.nav.menuAriaLabel', 'Admin Console Menu')}>\r\n                <MenuGroup>\r\n                    {teamToRender}\r\n                    {switchTeams}\r\n                </MenuGroup>\r\n                <MenuGroup>\r\n                    <MenuItemExternalLink\r\n                        url='https://about.mattermost.com/administrators-guide/'\r\n                        text={Utils.localizeMessage('admin.nav.administratorsGuide', 'Administrator Guide')}\r\n                    />\r\n                    <MenuItemExternalLink\r\n                        url='https://about.mattermost.com/troubleshooting-forum/'\r\n                        text={Utils.localizeMessage('admin.nav.troubleshootingForum', 'Troubleshooting Forum')}\r\n                    />\r\n                    <MenuItemExternalLink\r\n                        url='https://about.mattermost.com/commercial-support/'\r\n                        text={Utils.localizeMessage('admin.nav.commercialSupport', 'Commercial Support')}\r\n                    />\r\n                    <MenuItemToggleModalRedux\r\n                        modalId={ModalIdentifiers.ABOUT}\r\n                        dialogType={AboutBuildModal}\r\n                        text={formatMessage({id: 'navbar_dropdown.about', defaultMessage: 'About {appTitle}'}, {appTitle: siteName || 'Aboutone'})}\r\n                    />\r\n                </MenuGroup>\r\n                <MenuGroup>\r\n                    <MenuItemAction\r\n                        onClick={this.handleLogout}\r\n                        text={Utils.localizeMessage('navbar_dropdown.logout', 'Logout')}\r\n                    />\r\n                </MenuGroup>\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getMyTeams} from 'mattermost-redux/selectors/entities/teams';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport {deferNavigation} from 'actions/admin_actions.jsx';\r\nimport {getCurrentLocale} from 'selectors/i18n';\r\nimport {getNavigationBlocked} from 'selectors/views/admin';\r\n\r\nimport AdminNavbarDropdown from './admin_navbar_dropdown.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        locale: getCurrentLocale(state),\r\n        teams: getMyTeams(state),\r\n        siteName: getConfig(state).SiteName,\r\n        navigationBlocked: getNavigationBlocked(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            deferNavigation,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminNavbarDropdown);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Client4} from 'mattermost-redux/client';\r\n\r\nimport MenuIcon from 'components/svg/menu_icon';\r\n\r\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\r\n\r\nimport AdminNavbarDropdown from 'components/admin_console/admin_navbar_dropdown';\r\n\r\nexport default class SidebarHeader extends React.Component {\r\n    static propTypes = {\r\n        currentUser: PropTypes.object,\r\n    }\r\n\r\n    render() {\r\n        const me = this.props.currentUser;\r\n        let profilePicture = null;\r\n\r\n        if (!me) {\r\n            return null;\r\n        }\r\n\r\n        if (me.last_picture_update) {\r\n            profilePicture = (\r\n                <img\r\n                    alt={''}\r\n                    className='user__picture'\r\n                    src={Client4.getProfilePictureUrl(me.id, me.last_picture_update)}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <MenuWrapper className='AdminSidebarHeader'>\r\n                <div>\r\n                    {profilePicture}\r\n                    <div className='header__info'>\r\n                        <div className='team__name'>\r\n                            <FormattedMessage\r\n                                id='admin.sidebarHeader.systemConsole'\r\n                                defaultMessage='System Console'\r\n                            />\r\n                        </div>\r\n                        <div className='user__name overflow--ellipsis whitespace--nowrap'>{'@' + me.username}</div>\r\n                    </div>\r\n                    <button className='style--none'>\r\n                        <MenuIcon className='menu-icon'/>\r\n                    </button>\r\n                </div>\r\n                <AdminNavbarDropdown/>\r\n            </MenuWrapper>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\r\n\r\nimport AdminSidebarHeader from './admin_sidebar_header.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        currentUser: getCurrentUser(state),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AdminSidebarHeader);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport BlockableLink from 'components/admin_console/blockable_link';\r\nimport * as Utils from 'utils/utils.jsx';\r\n\r\nexport default class AdminSidebarSection extends React.Component {\r\n    static get propTypes() {\r\n        return {\r\n            name: PropTypes.string.isRequired,\r\n            title: PropTypes.node.isRequired,\r\n            type: PropTypes.string,\r\n            parentLink: PropTypes.string,\r\n            subsection: PropTypes.bool,\r\n            children: PropTypes.node,\r\n            action: PropTypes.node,\r\n        };\r\n    }\r\n\r\n    static get defaultProps() {\r\n        return {\r\n            parentLink: '',\r\n            subsection: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    getLink() {\r\n        return this.props.parentLink + '/' + this.props.name;\r\n    }\r\n\r\n    render() {\r\n        const link = this.getLink();\r\n\r\n        let clonedChildren = null;\r\n        if (this.props.children) {\r\n            clonedChildren = (\r\n                <ul className='nav nav__sub-menu subsections'>\r\n                    {\r\n                        React.Children.map(this.props.children, (child) => {\r\n                            if (child === null) {\r\n                                return null;\r\n                            }\r\n\r\n                            return React.cloneElement(child, {\r\n                                parentLink: link,\r\n                                subsection: true,\r\n                            });\r\n                        })\r\n                    }\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        let className = 'sidebar-section';\r\n        if (this.props.subsection) {\r\n            className += ' sidebar-subsection';\r\n        }\r\n\r\n        let sidebarItem = (\r\n            <BlockableLink\r\n                id={Utils.createSafeId(this.props.name)}\r\n                className={`${className}-title`}\r\n                activeClassName={`${className}-title ${className}-title--active`}\r\n                to={link}\r\n            >\r\n                <span className={`${className}-title__text`}>\r\n                    {this.props.title}\r\n                </span>\r\n                {this.props.action}\r\n            </BlockableLink>\r\n        );\r\n\r\n        if (this.props.type === 'text') {\r\n            sidebarItem = (\r\n                <div\r\n                    className={`${className}-title`}\r\n                >\r\n                    <span className={`${className}-title__text`}>\r\n                        {this.props.title}\r\n                    </span>\r\n                    {this.props.action}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <li className={className}>\r\n                {sidebarItem}\r\n                {clonedChildren}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Mark from 'mark.js';\r\nimport debounce from 'lodash/debounce';\r\n\r\nexport default class Highlight extends React.Component {\r\n    static propTypes = {\r\n        filter: PropTypes.string.isRequired,\r\n        children: PropTypes.node.isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.markInstance = null;\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    redrawHighlight = debounce(() => {\r\n        if (this.markInstance !== null) {\r\n            this.markInstance.unmark();\r\n        }\r\n\r\n        if (!this.props.filter) {\r\n            return;\r\n        }\r\n\r\n        if (!this.ref.current) {\r\n            return;\r\n        }\r\n\r\n        // Is necesary to recreate the instances to get again the DOM elements after the re-render\r\n        this.markInstance = new Mark(this.ref.current);\r\n        this.markInstance.mark(this.props.filter, {accuracy: 'complementary'});\r\n    }, 100, {leading: true, trailing: true});\r\n\r\n    render() {\r\n        // Run on next frame\r\n        setTimeout(this.redrawHighlight, 0);\r\n        return (\r\n            <div ref={this.ref}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage, intlShape} from 'react-intl';\nimport {Tooltip, OverlayTrigger} from 'react-bootstrap';\n\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {generateIndex} from 'utils/admin_console_index.jsx';\nimport {browserHistory} from 'utils/browser_history';\n\nimport AdminSidebarCategory from 'components/admin_console/admin_sidebar_category.jsx';\nimport AdminSidebarHeader from 'components/admin_console/admin_sidebar_header';\nimport AdminSidebarSection from 'components/admin_console/admin_sidebar_section.jsx';\nimport AdminDefinition from 'components/admin_console/admin_definition.jsx';\nimport Highlight from 'components/admin_console/highlight.jsx';\nimport SearchIcon from 'components/svg/search_icon.jsx';\n\nexport default class AdminSidebar extends React.Component {\n    static get contextTypes() {\n        return {\n            intl: intlShape.isRequired,\n        };\n    }\n\n    static propTypes = {\n        license: PropTypes.object.isRequired,\n        config: PropTypes.object,\n        plugins: PropTypes.object,\n        buildEnterpriseReady: PropTypes.bool,\n        siteName: PropTypes.string,\n        onFilterChange: PropTypes.func.isRequired,\n        navigationBlocked: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n\n            /*\n             * Function to get installed plugins\n             */\n            getPlugins: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        plugins: {},\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            sections: null,\n            filter: '',\n        };\n        this.idx = null;\n        this.searchRef = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.config.PluginSettings.Enable) {\n            this.props.actions.getPlugins();\n        }\n\n        if (this.searchRef.current) {\n            this.searchRef.current.focus();\n        }\n\n        this.updateTitle();\n\n        if (!Utils.isMobile()) {\n            $('.admin-sidebar .nav-pills__container').perfectScrollbar({\n                suppressScrollX: true,\n            });\n        }\n    }\n\n    componentDidUpdate() {\n        if (!Utils.isMobile()) {\n            $('.admin-sidebar .nav-pills__container').perfectScrollbar({\n                suppressScrollX: true,\n            });\n        }\n    }\n\n    onFilterChange = (e) => {\n        const filter = e.target.value;\n        if (filter === '') {\n            this.setState({sections: null, filter});\n            this.props.onFilterChange(filter);\n            return;\n        }\n\n        if (this.idx === null) {\n            this.idx = generateIndex(this.context.intl);\n        }\n        let query = '';\n        for (const term of filter.split(' ')) {\n            term.trim();\n            if (term !== '') {\n                query += term + ' ';\n                query += term + '* ';\n            }\n        }\n        const sections = this.idx.search(query);\n        this.setState({sections, filter});\n        this.props.onFilterChange(filter);\n\n        if (this.props.navigationBlocked) {\n            return;\n        }\n\n        const validSection = sections.indexOf(browserHistory.location.pathname.replace('/admin_console/', '')) !== -1;\n        if (!validSection) {\n            const visibleSections = this.visibleSections();\n            for (const section of sections) {\n                if (visibleSections.has(section)) {\n                    browserHistory.replace('/admin_console/' + section);\n                    break;\n                }\n            }\n        }\n    }\n\n    updateTitle = () => {\n        let currentSiteName = '';\n        if (this.props.siteName) {\n            currentSiteName = ' - ' + this.props.siteName;\n        }\n\n        document.title = Utils.localizeMessage('sidebar_right_menu.console', 'System Console') + currentSiteName;\n    }\n\n    visibleSections = () => {\n        const isVisible = (item) => {\n            if (!item.schema) {\n                return false;\n            }\n\n            if (!item.title) {\n                return false;\n            }\n\n            /*if (item.isHidden && item.isHidden(this.props.config, {}, this.props.license, this.props.buildEnterpriseReady)) {\n                return false;\n            }*/\n            return true;\n        };\n        const result = new Set();\n        for (const section of Object.values(AdminDefinition)) {\n            for (const item of Object.values(section)) {\n                if (isVisible(item)) {\n                    result.add(item.url);\n                }\n            }\n        }\n        return result;\n    }\n\n    renderRootMenu = (definition) => {\n        const sidebarSections = [];\n        Object.values(definition).forEach((section, sectionIndex) => {\n            const sidebarItems = [];\n            Object.values(section).forEach((item, itemIndex) => {\n                if (!item.title) {\n                    return;\n                }\n\n               /* if (item.isHidden && item.isHidden(this.props.config, {}, this.props.license, this.props.buildEnterpriseReady)) {\n                    return;\n                }*/\n\n                if (this.state.sections !== null) {\n                    let active = false;\n                    for (const url of this.state.sections) {\n                        if (url === item.url) {\n                            active = true;\n                        }\n                    }\n                    if (!active) {\n                        return;\n                    }\n                }\n\n                sidebarItems.push((\n                    <AdminSidebarSection\n                        key={itemIndex}\n                        name={item.url}\n                        title={\n                            <FormattedMessage\n                                id={item.title}\n                                defaultMessage={item.title_default}\n                            />\n                        }\n                    />\n                ));\n            });\n\n            // If no visible items, don't display this section\n            if (sidebarItems.length === 0) {\n                return null;\n            }\n\n            // Special case for plugins entries\n            let moreSidebarItems;\n            if (section.id === 'plugins') {\n                moreSidebarItems = this.renderPluginsMenu();\n            }\n\n            if (sidebarItems.length) {\n                sidebarSections.push((\n                    <AdminSidebarCategory\n                        key={sectionIndex}\n                        parentLink='/admin_console'\n                        icon={section.icon}\n                        sectionClass=''\n                        title={\n                            <FormattedMessage\n                                id={section.sectionTitle}\n                                defaultMessage={section.sectionTitleDefault}\n                            />\n                        }\n                    >\n                        {sidebarItems}\n                        {moreSidebarItems}\n                    </AdminSidebarCategory>\n                ));\n            }\n            return null;\n        });\n        return sidebarSections;\n    }\n\n    renderPluginsMenu = () => {\n        const customPlugins = [];\n        if (this.props.config.PluginSettings.Enable) {\n            Object.values(this.props.plugins).sort((a, b) => {\n                const nameCompare = a.name.localeCompare(b.name);\n                if (nameCompare !== 0) {\n                    return nameCompare;\n                }\n\n                return a.id.localeCompare(b.id);\n            }).forEach((p) => {\n                const hasSettings = p.settings_schema && (p.settings_schema.header || p.settings_schema.footer || p.settings_schema.settings);\n                if (!hasSettings) {\n                    return;\n                }\n\n                if (p.settings_schema.settings && (!p.settings_schema.header && !p.settings_schema.footer)) {\n                    if (p.settings_schema.settings.hasOwnProperty('length')) {\n                        if (p.settings_schema.settings.length === 0) {\n                            return;\n                        }\n                    }\n                }\n\n                customPlugins.push(\n                    <AdminSidebarSection\n                        key={'customplugin' + p.id}\n                        name={'plugins/plugin_' + p.id}\n                        title={p.name}\n                    />\n                );\n            });\n        }\n        return customPlugins;\n    }\n\n    handleClearFilter = () => {\n        this.setState({sections: null, filter: ''});\n        this.props.onFilterChange('');\n    }\n\n    render() {\n        const filterClearTooltip = (\n            <Tooltip id='admin-sidebar-fitler-clear'>\n                <FormattedMessage\n                    id='admin.sidebar.filter-clear'\n                    defaultMessage='Clear search'\n                />\n            </Tooltip>\n        );\n        return (\n            <div className='admin-sidebar'>\n                <AdminSidebarHeader/>\n                <div className='nav-pills__container'>\n                    <Highlight filter={this.state.filter}>\n                        <ul className='nav nav-pills nav-stacked'>\n                            <li className='filter-container'>\n                                <SearchIcon\n                                    id='searchIcon'\n                                    className='search__icon'\n                                    aria-hidden='true'\n                                />\n                                <input\n                                    className={'filter ' + (this.state.filter ? 'active' : '')}\n                                    type='text'\n                                    onChange={this.onFilterChange}\n                                    value={this.state.filter}\n                                    placeholder={Utils.localizeMessage('admin.sidebar.filter', 'Find settings')}\n                                    ref={this.searchRef}\n                                />\n                                {this.state.filter &&\n                                    <div\n                                        className='sidebar__search-clear visible'\n                                        onClick={this.handleClearFilter}\n                                    >\n                                        <OverlayTrigger\n                                            trigger={['hover', 'focus']}\n                                            delayShow={Constants.OVERLAY_TIME_DELAY}\n                                            placement='bottom'\n                                            overlay={filterClearTooltip}\n                                        >\n                                            <span\n                                                className='sidebar__search-clear-x'\n                                                aria-hidden='true'\n                                            >\n                                                {'×'}\n                                            </span>\n                                        </OverlayTrigger>\n                                    </div>}\n                            </li>\n                            {this.renderRootMenu(AdminDefinition)}\n                        </ul>\n                    </Highlight>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getPlugins} from 'mattermost-redux/actions/admin';\r\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport {getNavigationBlocked} from 'selectors/views/admin';\r\n\r\nimport AdminSidebar from './admin_sidebar.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const license = getLicense(state);\r\n    const config = getConfig(state);\r\n    const buildEnterpriseReady = config.BuildEnterpriseReady === 'true';\r\n    const siteName = config.SiteName;\r\n\r\n    return {\r\n        license,\r\n        config: state.entities.admin.config,\r\n        plugins: state.entities.admin.plugins,\r\n        navigationBlocked: getNavigationBlocked(state),\r\n        buildEnterpriseReady,\r\n        siteName,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getPlugins,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(AdminSidebar);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport 'bootstrap';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport SystemNotice from 'components/system_notice';\nimport ModalController from 'components/modal_controller';\n\nimport SchemaAdminSettings from 'components/admin_console/schema_admin_settings';\nimport DiscardChangesModal from 'components/discard_changes_modal.jsx';\n\nimport AdminSidebar from './admin_sidebar';\nimport AdminDefinition from './admin_definition';\nimport Highlight from './highlight';\n\nexport default class AdminConsole extends React.Component {\n    static propTypes = {\n        config: PropTypes.object.isRequired,\n        environmentConfig: PropTypes.object,\n        license: PropTypes.object.isRequired,\n        buildEnterpriseReady: PropTypes.bool,\n        roles: PropTypes.object.isRequired,\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n        showNavigationPrompt: PropTypes.bool.isRequired,\n        isCurrentUserSystemAdmin: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n            getConfig: PropTypes.func.isRequired,\n            getEnvironmentConfig: PropTypes.func.isRequired,\n            setNavigationBlocked: PropTypes.func.isRequired,\n            confirmNavigation: PropTypes.func.isRequired,\n            cancelNavigation: PropTypes.func.isRequired,\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n            editRole: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            filter: '',\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getConfig();\n        this.props.actions.getEnvironmentConfig();\n        this.props.actions.loadRolesIfNeeded(['channel_user', 'team_user', 'system_user', 'channel_admin', 'team_admin', 'system_admin']);\n    }\n\n    onFilterChange = (filter) => {\n        this.setState({filter});\n    }\n\n    mainRolesLoaded(roles) {\n        return (\n            roles &&\n            roles.channel_admin &&\n            roles.channel_user &&\n            roles.team_admin &&\n            roles.team_user &&\n            roles.system_admin &&\n            roles.system_user\n        );\n    }\n\n    renderRoutes = (extraProps) => {\n        const schemas = Object.values(AdminDefinition).reduce((acc, section) => {\n            const items = Object.values(section).filter((item) => {\n                /*if (item.isHidden && item.isHidden(this.props.config)) {\n                    return false;\n                }\n                if (!item.schema) {\n                    return false;\n                }*/\n                return true;\n            });\n            return acc.concat(items);\n        }, []);\n        const schemaRoutes = schemas.map((item) => {\n            return (\n                <Route\n                    key={item.url+\"1\"}\n                    path={`${this.props.match.url}/${item.url}`}\n                    render={(props) => (\n                        <SchemaAdminSettings\n                            {...extraProps}\n                            {...props}\n                            schema={item.schema}\n                        />\n                    )}\n                />\n            );\n        });\n        const defaultUrl = schemas[0].url;\n\n        return (\n            <Switch>\n                {schemaRoutes}\n                {<Redirect to={`${this.props.match.url}/${defaultUrl}`}/>}\n            </Switch>\n        );\n    }\n\n    render() {\n        const {\n            license,\n            config,\n            environmentConfig,\n            showNavigationPrompt,\n            roles,\n        } = this.props;\n        const {setNavigationBlocked, cancelNavigation, confirmNavigation, editRole} = this.props.actions;\n\n        if (!this.props.isCurrentUserSystemAdmin) {\n            return (\n                <Redirect to='/'/>\n            );\n        }\n\n        if (!this.mainRolesLoaded(this.props.roles)) {\n            return null;\n        }\n\n        if (Object.keys(config).length === 0) {\n            return <div/>;\n        }\n        if (config && Object.keys(config).length === 0 && config.constructor === 'Object') {\n            return (\n                <div className='admin-console__wrapper'>\n                    <AnnouncementBar/>\n                    <div className='admin-console'/>\n                </div>\n            );\n        }\n\n        const discardChangesModal = (\n            <DiscardChangesModal\n                show={showNavigationPrompt}\n                onConfirm={confirmNavigation}\n                onCancel={cancelNavigation}\n            />\n        );\n\n        // not every page in the system console will need the license and config, but the vast majority will\n        const extraProps = {\n            license,\n            config,\n            environmentConfig,\n            setNavigationBlocked,\n            roles,\n            editRole,\n        };\n        return (\n            <div\n                className='admin-console__wrapper'\n                id='adminConsoleWrapper'\n            >\n                <AnnouncementBar/>\n                <SystemNotice/>\n                <AdminSidebar onFilterChange={this.onFilterChange}/>\n                <div className='admin-console'>\n                    <Highlight filter={this.state.filter}>\n                        {this.renderRoutes(extraProps)}\n                    </Highlight>\n                </div>\n                {discardChangesModal}\n                <ModalController/>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {getConfig, getEnvironmentConfig} from 'mattermost-redux/actions/admin';\r\nimport {loadRolesIfNeeded, editRole} from 'mattermost-redux/actions/roles';\r\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {getConfig as getGeneralConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\r\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\r\nimport {isCurrentUserSystemAdmin} from 'mattermost-redux/selectors/entities/users';\r\n\r\nimport {setNavigationBlocked, deferNavigation, cancelNavigation, confirmNavigation} from 'actions/admin_actions.jsx';\r\nimport {getNavigationBlocked, showNavigationPrompt} from 'selectors/views/admin';\r\n\r\nimport AdminConsole from './admin_console.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const generalConfig = getGeneralConfig(state);\r\n    const buildEnterpriseReady = generalConfig.BuildEnterpriseReady === 'true';\r\n\r\n    return {\r\n        config: Selectors.getConfig(state),\r\n        environmentConfig: Selectors.getEnvironmentConfig(state),\r\n        license: getLicense(state),\r\n        buildEnterpriseReady,\r\n        navigationBlocked: getNavigationBlocked(state),\r\n        showNavigationPrompt: showNavigationPrompt(state),\r\n        isCurrentUserSystemAdmin: isCurrentUserSystemAdmin(state),\r\n        roles: getRoles(state),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            getConfig,\r\n            getEnvironmentConfig,\r\n            setNavigationBlocked,\r\n            deferNavigation,\r\n            cancelNavigation,\r\n            confirmNavigation,\r\n            loadRolesIfNeeded,\r\n            editRole,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AdminConsole));\r\n"],"sourceRoot":""}