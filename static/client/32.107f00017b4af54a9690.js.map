{"version":3,"sources":["webpack:///./components/pdf_preview.jsx"],"names":["MAX_PDF_PAGES","PDFPreview","React","PureComponent","constructor","props","updateStateFromProps","bind","onDocumentLoad","onDocumentLoadError","onPageLoad","renderPDFPage","pdfPagesRendered","state","pdf","pdfPages","pdfPagesLoaded","numPages","loading","success","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","fileUrl","componentDidUpdate","i","pageIndex","canvas","refs","context","getContext","viewport","getViewport","height","width","renderContext","canvasContext","render","setState","PDFJS","getDocument","then","getPage","reason","console","log","page","Object","assign","fileInfo","pdfCanvases","push","PropTypes","object","isRequired","string"],"mappings":"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","file":"32.107f00017b4af54a9690.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PDFJS from 'pdfjs-dist';\n\nimport LoadingBars from 'components/widgets/loading/loading_bars.jsx';\nimport FileInfoPreview from 'components/file_info_preview';\n\nconst MAX_PDF_PAGES = 500;\n\nexport default class PDFPreview extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Compare file types\n        */\n        fileInfo: PropTypes.object.isRequired,\n\n        /**\n        *  URL of pdf file to output and compare to update props url\n        */\n        fileUrl: PropTypes.string.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.updateStateFromProps = this.updateStateFromProps.bind(this);\n        this.onDocumentLoad = this.onDocumentLoad.bind(this);\n        this.onDocumentLoadError = this.onDocumentLoadError.bind(this);\n        this.onPageLoad = this.onPageLoad.bind(this);\n        this.renderPDFPage = this.renderPDFPage.bind(this);\n\n        this.pdfPagesRendered = {};\n\n        this.state = {\n            pdf: null,\n            pdfPages: {},\n            pdfPagesLoaded: {},\n            numPages: 0,\n            loading: true,\n            success: false,\n        };\n    }\n\n    componentDidMount() {\n        this.updateStateFromProps(this.props);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.fileUrl !== nextProps.fileUrl) {\n            this.updateStateFromProps(nextProps);\n            this.pdfPagesRendered = {};\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.state.success) {\n            for (let i = 0; i < this.state.numPages; i++) {\n                this.renderPDFPage(i);\n            }\n        }\n    }\n\n    renderPDFPage(pageIndex) {\n        if (this.pdfPagesRendered[pageIndex] || !this.state.pdfPagesLoaded[pageIndex]) {\n            return;\n        }\n\n        const canvas = this.refs['pdfCanvas' + pageIndex];\n        const context = canvas.getContext('2d');\n        const viewport = this.state.pdfPages[pageIndex].getViewport(1);\n\n        canvas.height = viewport.height;\n        canvas.width = viewport.width;\n\n        const renderContext = {\n            canvasContext: context,\n            viewport,\n        };\n\n        this.state.pdfPages[pageIndex].render(renderContext);\n        this.pdfPagesRendered[pageIndex] = true;\n    }\n\n    updateStateFromProps(props) {\n        this.setState({\n            pdf: null,\n            pdfPages: {},\n            pdfPagesLoaded: {},\n            numPages: 0,\n            loading: true,\n            success: false,\n        });\n\n        PDFJS.getDocument(props.fileUrl).then(this.onDocumentLoad, this.onDocumentLoadError);\n    }\n\n    onDocumentLoad(pdf) {\n        const numPages = pdf.numPages <= MAX_PDF_PAGES ? pdf.numPages : MAX_PDF_PAGES;\n        this.setState({pdf, numPages});\n        for (let i = 1; i <= pdf.numPages; i++) {\n            pdf.getPage(i).then(this.onPageLoad);\n        }\n    }\n\n    onDocumentLoadError(reason) {\n        console.log('Unable to load PDF preview: ' + reason); //eslint-disable-line no-console\n        this.setState({loading: true, success: true});// 有改动，暂时改成 true  true\n    }\n\n    onPageLoad(page) {\n        const pdfPages = Object.assign({}, this.state.pdfPages);\n        pdfPages[page.pageIndex] = page;\n\n        const pdfPagesLoaded = Object.assign({}, this.state.pdfPagesLoaded);\n        pdfPagesLoaded[page.pageIndex] = true;\n\n        this.setState({pdfPages, pdfPagesLoaded});\n\n        if (page.pageIndex === 0) {\n            this.setState({success: true, loading: false});\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <div className='view-image__loading'>\n                    <LoadingBars/>\n                </div>\n            );\n        }\n\n        if (!this.state.success) {\n            return (\n                <FileInfoPreview\n                    fileInfo={this.props.fileInfo}\n                    fileUrl={this.props.fileUrl}\n                />\n            );\n        }\n\n        const pdfCanvases = [];\n        for (let i = 0; i < this.state.numPages; i++) {\n            pdfCanvases.push(\n                <canvas\n                    ref={'pdfCanvas' + i}\n                    key={'previewpdfcanvas' + i}\n                />\n            );\n\n            if (i < this.state.numPages - 1 && this.state.numPages > 1) {\n                pdfCanvases.push(\n                    <div\n                        key={'previewpdfspacer' + i}\n                        className='pdf-preview-spacer'\n                    />\n                );\n            }\n        }\n\n        if (this.state.pdf.numPages > MAX_PDF_PAGES) {\n            pdfCanvases.push(\n                <a\n                    key='previewpdfmorepages'\n                    href={this.props.fileUrl}\n                    className='pdf-max-pages'\n                >\n                    <FormattedMessage\n                        id='pdf_preview.max_pages'\n                        defaultMessage='Download to read more pages'\n                    />\n                </a>\n            );\n        }\n\n        return (\n            <div className='post-code'>\n                {pdfCanvases}\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}