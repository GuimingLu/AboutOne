{"version":3,"sources":["webpack:///./components/password_reset_form/password_reset_form.js","webpack:///./components/password_reset_form/index.js"],"names":["PasswordResetForm","React","PureComponent","constructor","props","e","preventDefault","password","ReactDOM","findDOMNode","refs","value","length","Constants","MIN_PASSWORD_LENGTH","setState","error","chars","token","URLSearchParams","location","search","get","data","actions","resetUserPassword","browserHistory","push","PASSWORD_CHANGE","message","state","render","formClass","handlePasswordReset","siteName","id","t","defaultMessage","PropTypes","object","isRequired","string","shape","func","mapStateToProps","SiteName","getConfig","mapDispatchToProps","dispatch","bindActionCreators","connect"],"mappings":"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","file":"31.f19cf1fd3b51aecfe8d8.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport {browserHistory} from 'utils/browser_history';\r\nimport Constants from 'utils/constants.jsx';\r\nimport LocalizedInput from 'components/localized_input/localized_input';\r\n\r\nimport {t} from 'utils/i18n.jsx';\r\n\r\nexport default class PasswordResetForm extends React.PureComponent {\r\n    static propTypes = {\r\n        location: PropTypes.object.isRequired,\r\n        siteName: PropTypes.string,\r\n        actions: PropTypes.shape({\r\n            resetUserPassword: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {error: null};\r\n    }\r\n\r\n    handlePasswordReset = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const password = ReactDOM.findDOMNode(this.refs.password).value;\r\n        if (!password || password.length < Constants.MIN_PASSWORD_LENGTH) {\r\n            this.setState({\r\n                error: (\r\n                    <FormattedMessage\r\n                        id='password_form.error'\r\n                        defaultMessage='Please enter at least {chars} characters.'\r\n                        values={{\r\n                            chars: Constants.MIN_PASSWORD_LENGTH,\r\n                        }}\r\n                    />\r\n                ),\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({error: null});\r\n\r\n        const token = (new URLSearchParams(this.props.location.search)).get('token');\r\n        const {data, error} = await this.props.actions.resetUserPassword(token, password);\r\n        if (data) {\r\n            browserHistory.push('/login?extra=' + Constants.PASSWORD_CHANGE);\r\n            this.setState({error: null});\r\n        } else if (error) {\r\n            this.setState({error: error.message});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let error = null;\r\n        if (this.state.error) {\r\n            error = (\r\n                <div className='form-group has-error'>\r\n                    <label className='control-label'>\r\n                        {this.state.error}\r\n                    </label>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let formClass = 'form-group';\r\n        if (error) {\r\n            formClass += ' has-error';\r\n        }\r\n\r\n        return (\r\n            <div className='col-sm-12'>\r\n                <div className='signup-team__container'>\r\n                    <h3>\r\n                        <FormattedMessage\r\n                            id='password_form.title'\r\n                            defaultMessage='Password Reset'\r\n                        />\r\n                    </h3>\r\n                    <form onSubmit={this.handlePasswordReset}>\r\n                        <p>\r\n                            <FormattedMessage\r\n                                id='password_form.enter'\r\n                                defaultMessage='Enter a new password for your {siteName} account.'\r\n                                values={{\r\n                                    siteName: this.props.siteName,\r\n                                }}\r\n                            />\r\n                        </p>\r\n                        <div className={formClass}>\r\n                            <LocalizedInput\r\n                                id='resetPasswordInput'\r\n                                type='password'\r\n                                className='form-control'\r\n                                name='password'\r\n                                ref='password'\r\n                                placeholder={{id: t('password_form.pwd'), defaultMessage: 'Password'}}\r\n                                spellCheck='false'\r\n                                autoFocus={true}\r\n                            />\r\n                        </div>\r\n                        {error}\r\n                        <button\r\n                            id='resetPasswordButton'\r\n                            type='submit'\r\n                            className='btn btn-primary'\r\n                        >\r\n                            <FormattedMessage\r\n                                id='password_form.change'\r\n                                defaultMessage='Change my password'\r\n                            />\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {resetUserPassword} from 'mattermost-redux/actions/users';\r\n\r\nimport PasswordResetForm from './password_reset_form';\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {SiteName: siteName} = getConfig(state);\r\n    return {siteName};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    actions: bindActionCreators({\r\n        resetUserPassword,\r\n    }, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PasswordResetForm);\r\n"],"sourceRoot":""}