{"version":3,"sources":["webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png","webpack:///./components/icon/logout_icon.jsx","webpack:///./actions/views/mfa.js","webpack:///./components/mfa/setup/setup.jsx","webpack:///./components/mfa/setup/index.js","webpack:///./components/mfa/confirm.jsx","webpack:///./components/mfa/mfa_controller/mfa_controller.jsx","webpack:///./components/mfa/mfa_controller/index.js"],"names":["BackButton","React","PureComponent","render","props","onClick","url","title","PropTypes","string","func","LogoutIcon","activateMfa","code","dispatch","getState","currentUserId","getCurrentUserId","UserActions","deactivateMfa","generateMfaSecret","Setup","Component","constructor","e","preventDefault","refs","value","replace","length","setState","error","Utils","actions","then","server_error_id","message","history","push","state","secret","qrCode","componentDidMount","user","currentUser","mfa_active","data","serverError","qr_code","formClass","errorContent","mfaRequired","enforceMultifactorAuthentication","siteName","submit","style","id","t","defaultMessage","object","bool","isRequired","shape","maxHeight","mapStateToProps","config","getConfig","SiteName","EnforceMultifactorAuthentication","getCurrentUser","mapDispatchToProps","bindActionCreators","connect","KeyCodes","Constants","Confirm","redirectUserToDefaultTeam","isKeyPressed","ENTER","document","body","addEventListener","onKeyPress","componentWillUnmount","removeEventListener","MFAController","emitUserLoggedOutEvent","classList","add","getElementById","enableMultifactorAuthentication","remove","backButton","mfa","handleOnClick","logoImage","match","updateParent","propTypes","location","children","node","license","getLicense","MFA","EnableMultifactorAuthentication"],"mappings":"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","file":"13.25ce591dbd2bad214fc0.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class BackButton extends React.PureComponent {\r\n    static propTypes = {\r\n\r\n        /**\r\n         * URL to return to\r\n         */\r\n        url: PropTypes.string,\r\n\r\n        /**\r\n         * An optional click handler that will trigger when the user clicks on the back button\r\n         */\r\n        onClick: PropTypes.func,\r\n    };\r\n\r\n    static defaultProps = {\r\n        url: '/',\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                id='back_button'\r\n                className='signup-header'\r\n            >\r\n                <Link\r\n                    onClick={this.props.onClick}\r\n                    to={this.props.url}\r\n                >\r\n                    <FormattedMessage\r\n                        id='generic_icons.back'\r\n                        defaultMessage='Back Icon'\r\n                    >\r\n                        {(title) => (\r\n                            <span\r\n                                id='back_button_icon'\r\n                                className='fa fa-1x fa-angle-left'\r\n                                title={title}\r\n                            />\r\n                        )}\r\n                    </FormattedMessage>\r\n                    <FormattedMessage\r\n                        id='web.header.back'\r\n                        defaultMessage='Back'\r\n                    />\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"files/87b80d01a017833f1357800bfca49cea.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\n\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nexport default class LogoutIcon extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <FormattedMessage\r\n                id='generic_icons.logout'\r\n                defaultMessage='Logout Icon'\r\n            >\r\n                {(title) => (\r\n                    <i\r\n                        className='fa fa-1x fa-angle-left'\r\n                        title={title}\r\n                    />\r\n                )}\r\n            </FormattedMessage>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport * as UserActions from 'mattermost-redux/actions/users';\r\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\r\n\r\nexport function activateMfa(code) {\r\n    return (dispatch, getState) => {\r\n        const currentUserId = getCurrentUserId(getState());\r\n\r\n        return dispatch(UserActions.updateUserMfa(currentUserId, true, code));\r\n    };\r\n}\r\n\r\nexport function deactivateMfa() {\r\n    return (dispatch, getState) => {\r\n        const currentUserId = getCurrentUserId(getState());\r\n\r\n        return dispatch(UserActions.updateUserMfa(currentUserId, false));\r\n    };\r\n}\r\n\r\nexport function generateMfaSecret() {\r\n    return (dispatch, getState) => {\r\n        const currentUserId = getCurrentUserId(getState());\r\n\r\n        return dispatch(UserActions.generateMfaSecret(currentUserId));\r\n    };\r\n}\r\n\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as Utils from 'utils/utils.jsx';\r\nimport {t} from 'utils/i18n.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\nimport LocalizedInput from 'components/localized_input/localized_input';\r\n\r\nexport default class Setup extends React.Component {\r\n    static propTypes = {\r\n        currentUser: PropTypes.object,\r\n        siteName: PropTypes.string,\r\n        enforceMultifactorAuthentication: PropTypes.bool.isRequired,\r\n        actions: PropTypes.shape({\r\n            activateMfa: PropTypes.func.isRequired,\r\n            generateMfaSecret: PropTypes.func.isRequired,\r\n        }).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {secret: '', qrCode: ''};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const user = this.props.currentUser;\r\n        if (!user || user.mfa_active) {\r\n            this.props.history.push('/');\r\n            return;\r\n        }\r\n\r\n        this.props.actions.generateMfaSecret().then(({data, error}) => {\r\n            if (error) {\r\n                this.setState({\r\n                    serverError: error.message,\r\n                });\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                secret: data.secret,\r\n                qrCode: data.qr_code,\r\n            });\r\n        });\r\n    }\r\n\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        const code = this.refs.code.value.replace(/\\s/g, '');\r\n        if (!code || code.length === 0) {\r\n            this.setState({error: Utils.localizeMessage('mfa.setup.codeError', 'Please enter the code from Google Authenticator.')});\r\n            return;\r\n        }\r\n\r\n        this.setState({error: null});\r\n\r\n        this.props.actions.activateMfa(code).then(({error}) => {\r\n            if (error) {\r\n                if (error.server_error_id === 'ent.mfa.activate.authenticate.app_error') {\r\n                    this.setState({\r\n                        error: Utils.localizeMessage('mfa.setup.badCode', 'Invalid code. If this issue persists, contact your System Administrator.'),\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        error: error.message,\r\n                    });\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            this.props.history.push('/mfa/confirm');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let formClass = 'form-group';\r\n        let errorContent;\r\n        if (this.state.error) {\r\n            errorContent = <div className='form-group has-error'><label className='control-label'>{this.state.error}</label></div>;\r\n            formClass += ' has-error';\r\n        }\r\n\r\n        let mfaRequired;\r\n        if (this.props.enforceMultifactorAuthentication) {\r\n            mfaRequired = (\r\n                <p>\r\n                    <FormattedMarkdownMessage\r\n                        id='mfa.setup.required'\r\n                        defaultMessage='**Multi-factor authentication is required on {siteName}.**'\r\n                        values={{\r\n                            siteName: this.props.siteName,\r\n                        }}\r\n                    />\r\n                </p>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <form\r\n                    onSubmit={this.submit}\r\n                    className={formClass}\r\n                >\r\n                    {mfaRequired}\r\n                    <p>\r\n                        <FormattedMarkdownMessage\r\n                            id='mfa.setup.step1'\r\n                            defaultMessage=\"**Step 1: **On your phone, download Google Authenticator from [iTunes](!https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8') or [Google Play](!https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl=en)\"\r\n                        />\r\n                    </p>\r\n                    <p>\r\n                        <FormattedMarkdownMessage\r\n                            id='mfa.setup.step2'\r\n                            defaultMessage='**Step 2: **Use Google Authenticator to scan this QR code, or manually type in the secret key'\r\n                        />\r\n                    </p>\r\n                    <div className='form-group'>\r\n                        <div className='col-sm-12'>\r\n                            <img\r\n                                alt={'qr code image'}\r\n                                style={style.qrCode}\r\n                                src={'data:image/png;base64,' + this.state.qrCode}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div className='form-group'>\r\n                        <p className='col-sm-12'>\r\n                            <FormattedMessage\r\n                                id='mfa.setup.secret'\r\n                                defaultMessage='Secret: {secret}'\r\n                                values={{\r\n                                    secret: this.state.secret,\r\n                                }}\r\n                            />\r\n                        </p>\r\n                    </div>\r\n                    <p>\r\n                        <FormattedMarkdownMessage\r\n                            id='mfa.setup.step3'\r\n                            defaultMessage='**Step 3: **Enter the code generated by Google Authenticator'\r\n                        />\r\n                    </p>\r\n                    <p>\r\n                        <LocalizedInput\r\n                            ref='code'\r\n                            className='form-control'\r\n                            placeholder={{id: t('mfa.setup.code'), defaultMessage: 'MFA Code'}}\r\n                            autoFocus={true}\r\n                        />\r\n                    </p>\r\n                    {errorContent}\r\n                    <button\r\n                        type='submit'\r\n                        className='btn btn-primary'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='mfa.setup.save'\r\n                            defaultMessage='Save'\r\n                        />\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst style = {\r\n    qrCode: {maxHeight: 170},\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\r\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\r\n\r\nimport {activateMfa, generateMfaSecret} from 'actions/views/mfa';\r\n\r\nimport Setup from './setup.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const config = getConfig(state);\r\n\r\n    const siteName = config.SiteName;\r\n    const enforceMultifactorAuthentication = config.EnforceMultifactorAuthentication === 'true';\r\n\r\n    return {\r\n        currentUser: getCurrentUser(state),\r\n        siteName,\r\n        enforceMultifactorAuthentication,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({\r\n            activateMfa,\r\n            generateMfaSecret,\r\n        }, dispatch),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Setup);\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nimport Constants from 'utils/constants.jsx';\r\nimport {isKeyPressed} from 'utils/utils.jsx';\r\n\r\nimport {redirectUserToDefaultTeam} from 'actions/global_actions.jsx';\r\n\r\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\r\n\r\nconst KeyCodes = Constants.KeyCodes;\r\n\r\nexport default class Confirm extends React.Component {\r\n    componentDidMount() {\r\n        document.body.addEventListener('keydown', this.onKeyPress);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.body.removeEventListener('keydown', this.onKeyPress);\r\n    }\r\n\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        redirectUserToDefaultTeam();\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        if (isKeyPressed(e, KeyCodes.ENTER)) {\r\n            this.submit(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form\r\n                    onSubmit={this.submit}\r\n                    onKeyPress={this.onKeyPress}\r\n                    className='form-group'\r\n                >\r\n                    <p>\r\n                        <FormattedMarkdownMessage\r\n                            id='mfa.confirm.complete'\r\n                            defaultMessage='**Set up complete!**'\r\n                        />\r\n                    </p>\r\n                    <p>\r\n                        <FormattedMessage\r\n                            id='mfa.confirm.secure'\r\n                            defaultMessage='Your account is now secure. Next time you sign in, you will be asked to enter a code from the Google Authenticator app on your phone.'\r\n                        />\r\n                    </p>\r\n                    <button\r\n                        type='submit'\r\n                        className='btn btn-primary'\r\n                    >\r\n                        <FormattedMessage\r\n                            id='mfa.confirm.okay'\r\n                            defaultMessage='Okay'\r\n                        />\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\r\nimport logoImage from 'images/logo.png';\r\nimport BackButton from 'components/common/back_button.jsx';\r\nimport LogoutIcon from 'components/icon/logout_icon';\r\n\r\nimport Setup from '../setup';\r\nimport Confirm from '../confirm';\r\n\r\nexport default class MFAController extends React.Component {\r\n    componentDidMount() {\r\n        document.body.classList.add('sticky');\r\n        document.getElementById('root').classList.add('container-fluid');\r\n\r\n        if (!this.props.enableMultifactorAuthentication) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.body.classList.remove('sticky');\r\n        document.getElementById('root').classList.remove('container-fluid');\r\n    }\r\n\r\n    handleOnClick = (e) => {\r\n        e.preventDefault();\r\n        emitUserLoggedOutEvent('/login');\r\n    }\r\n\r\n    render() {\r\n        let backButton;\r\n        if (this.props.mfa && this.props.enforceMultifactorAuthentication) {\r\n            backButton = (\r\n                <div className='signup-header'>\r\n                    <button\r\n                        className='style--none color--link'\r\n                        onClick={this.handleOnClick}\r\n                    >\r\n                        <LogoutIcon/>\r\n                        <FormattedMessage\r\n                            id='web.header.logout'\r\n                            defaultMessage='Logout'\r\n                        />\r\n                    </button>\r\n                </div>\r\n            );\r\n        } else {\r\n            backButton = (<BackButton/>);\r\n        }\r\n\r\n        return (\r\n            <div className='inner-wrap'>\r\n                <div className='row content'>\r\n                    <div>\r\n                        {backButton}\r\n                        <div className='col-sm-12'>\r\n                            <div className='signup-team__container'>\r\n                                <h3>\r\n                                    <FormattedMessage\r\n                                        id='mfa.setupTitle'\r\n                                        defaultMessage='Multi-factor Authentication Setup'\r\n                                    />\r\n                                </h3>\r\n                                <img\r\n                                    alt={'signup team logo'}\r\n                                    className='signup-team-logo'\r\n                                    src={logoImage}\r\n                                />\r\n                                <div id='mfa'>\r\n                                    <Switch>\r\n                                        <Route\r\n                                            path={`${this.props.match.url}/setup`}\r\n                                            render={(props) => (\r\n                                                <Setup\r\n                                                    state={this.state}\r\n                                                    updateParent={this.updateParent}\r\n                                                    {...props}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                        <Route\r\n                                            path={`${this.props.match.url}/confirm`}\r\n                                            render={(props) => (\r\n                                                <Confirm\r\n                                                    state={this.state}\r\n                                                    updateParent={this.updateParent}\r\n                                                    {...props}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Switch>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMFAController.propTypes = {\r\n    location: PropTypes.object.isRequired,\r\n    children: PropTypes.node,\r\n    mfa: PropTypes.bool.isRequired,\r\n    enableMultifactorAuthentication: PropTypes.bool.isRequired,\r\n    enforceMultifactorAuthentication: PropTypes.bool.isRequired,\r\n\r\n    /*\r\n     * Object from react-router\r\n     */\r\n    match: PropTypes.shape({\r\n        url: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n};\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\r\n\r\nimport MFAController from './mfa_controller.jsx';\r\n\r\nfunction mapStateToProps(state) {\r\n    const license = getLicense(state);\r\n    const config = getConfig(state);\r\n\r\n    const mfa = license.MFA === 'true';\r\n    const enableMultifactorAuthentication = config.EnableMultifactorAuthentication === 'true';\r\n    const enforceMultifactorAuthentication = config.EnforceMultifactorAuthentication === 'true';\r\n\r\n    return {\r\n        mfa,\r\n        enableMultifactorAuthentication,\r\n        enforceMultifactorAuthentication,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(MFAController);\r\n"],"sourceRoot":""}